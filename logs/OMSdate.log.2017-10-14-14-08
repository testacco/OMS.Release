[2017-10-14 14:08:00,028]DEBUG 25620[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists Dimensions
[2017-10-14 14:08:00,103]DEBUG 25695[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists OrderItems
[2017-10-14 14:08:00,144]DEBUG 25736[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: alter table Users drop foreign key FK4E39DE89AEF426F
[2017-10-14 14:08:00,145]DEBUG 25737[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - Error on rename of './test1/Users' to './test1/#sql2-5f8-8' (errno: 152)
[2017-10-14 14:08:00,145]DEBUG 25737[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Users drop foreign key FK4E39DE8FEAD4DCF
[2017-10-14 14:08:00,187]DEBUG 25779[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists OrderStatuses
[2017-10-14 14:08:00,271]DEBUG 25863[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists Orders
[2017-10-14 14:08:00,354]DEBUG 25946[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists Products
[2017-10-14 14:08:00,395]DEBUG 25987[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: alter table Users drop foreign key FK4E39DE8FEAD4DCF
[2017-10-14 14:08:00,395]DEBUG 25987[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - Error on rename of './test1/Users' to './test1/#sql2-5f8-8' (errno: 152)
[2017-10-14 14:08:00,395]DEBUG 25987[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists CardType
[2017-10-14 14:08:00,396]DEBUG 25988[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists CustomerTypes
[2017-10-14 14:08:00,397]DEBUG 25989[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists Dimensions
[2017-10-14 14:08:00,398]DEBUG 25990[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists OrderItems
[2017-10-14 14:08:00,399]DEBUG 25991[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists OrderStatuses
[2017-10-14 14:08:00,400]DEBUG 25992[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists Orders
[2017-10-14 14:08:00,401]DEBUG 25993[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists Products
[2017-10-14 14:08:00,438]DEBUG 26030[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists Regions
[2017-10-14 14:08:00,438]DEBUG 26030[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists Regions
[2017-10-14 14:08:00,479]DEBUG 26071[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists Roles
[2017-10-14 14:08:00,479]DEBUG 26071[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists Roles
[2017-10-14 14:08:00,521]DEBUG 26113[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists Users
[2017-10-14 14:08:00,521]DEBUG 26113[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists Users
[2017-10-14 14:08:00,554] INFO 26146[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:281) - schema export complete
[2017-10-14 14:08:00,554] INFO 26146[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:281) - schema export complete
[2017-10-14 14:08:00,554] INFO 26146[Thread-1] - org.hibernate.connection.DriverManagerConnectionProvider.close(DriverManagerConnectionProvider.java:170) - cleaning up connection pool: jdbc:mysql://localhost:3306/test1
[2017-10-14 14:08:00,555] INFO 26147[Thread-0] - org.hibernate.connection.DriverManagerConnectionProvider.close(DriverManagerConnectionProvider.java:170) - cleaning up connection pool: jdbc:mysql://localhost:3306/test1
[2017-10-14 14:08:42,213]DEBUG     0[main] - org.springframework.test.context.junit4.SpringJUnit4ClassRunner.<init>(SpringJUnit4ClassRunner.java:106) - SpringJUnit4ClassRunner constructor called with [class com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest].
[2017-10-14 14:08:42,240] INFO    27[main] - org.springframework.test.context.TestContextManager.retrieveTestExecutionListeners(TestContextManager.java:185) - @TestExecutionListeners is not present for class [class com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]: using defaults.
[2017-10-14 14:08:42,266]DEBUG    53[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2017-10-14 14:08:42,266]DEBUG    53[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2017-10-14 14:08:42,271]DEBUG    58[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2017-10-14 14:08:42,271]DEBUG    58[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2017-10-14 14:08:42,272]DEBUG    59[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2017-10-14 14:08:42,273]DEBUG    60[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2017-10-14 14:08:42,277]DEBUG    64[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2017-10-14 14:08:42,277]DEBUG    64[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2017-10-14 14:08:42,282]DEBUG    69[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@4418f61b testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@42c5898a, testMethod = [null], testException = [null]]].
[2017-10-14 14:08:42,282]DEBUG    69[main] - org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:75) - Loading ApplicationContext for locations [classpath:testApplicationContex.xml].
[2017-10-14 14:08:42,329] INFO   116[main] - org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:315) - Loading XML bean definitions from class path resource [testApplicationContex.xml]
[2017-10-14 14:08:42,344]DEBUG   131[main] - org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:72) - Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
[2017-10-14 14:08:42,372]DEBUG   159[main] - org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:140) - Loading schema mappings from [META-INF/spring.schemas]
[2017-10-14 14:08:42,376]DEBUG   163[main] - org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:146) - Loaded schema mappings: {http://www.springframework.org/schema/security/spring-security-3.0.4.xsd=org/springframework/security/config/spring-security-3.0.4.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/security/spring-security-2.0.2.xsd=org/springframework/security/config/spring-security-2.0.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/security/spring-security-3.0.3.xsd=org/springframework/security/config/spring-security-3.0.3.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/security/spring-security-2.0.1.xsd=org/springframework/security/config/spring-security-2.0.1.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/security/spring-security-2.0.xsd=org/springframework/security/config/spring-security-2.0.xsd, http://www.springframework.org/schema/security/spring-security-3.0.xsd=org/springframework/security/config/spring-security-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/security/spring-security-2.0.4.xsd=org/springframework/security/config/spring-security-2.0.4.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/security/spring-security.xsd=org/springframework/security/config/spring-security-3.0.4.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd}
[2017-10-14 14:08:42,377]DEBUG   164[main] - org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:118) - Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
[2017-10-14 14:08:42,419]DEBUG   206[main] - org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:118) - Found XML schema [http://www.springframework.org/schema/tx/spring-tx-2.5.xsd] in classpath: org/springframework/transaction/config/spring-tx-2.5.xsd
[2017-10-14 14:08:42,425]DEBUG   212[main] - org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:118) - Found XML schema [http://www.springframework.org/schema/tool/spring-tool-2.5.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-2.5.xsd
[2017-10-14 14:08:42,431]DEBUG   218[main] - org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:118) - Found XML schema [http://www.springframework.org/schema/context/spring-context.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd
[2017-10-14 14:08:42,457]DEBUG   244[main] - org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:87) - Loading bean definitions
[2017-10-14 14:08:42,478]DEBUG   265[main] - org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(DefaultNamespaceHandlerResolver.java:156) - Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/security=org.springframework.security.config.SecurityNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
[2017-10-14 14:08:42,537] INFO   324[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.registerDefaultFilters(ClassPathScanningCandidateComponentProvider.java:186) - JSR-330 'javax.inject.Named' annotation found and supported for component scanning
[2017-10-14 14:08:42,541]DEBUG   328[main] - org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:552) - Looking for matching resources in directory tree [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/domain/entities]
[2017-10-14 14:08:42,542]DEBUG   329[main] - org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:614) - Searching directory [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/domain/entities] for files matching pattern [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/domain/entities/**/*.class]
[2017-10-14 14:08:42,553]DEBUG   340[main] - org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:353) - Resolved location pattern [classpath*:com/softserveinc/edu/oms/domain/entities/**/*.class] to resources [file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/domain/entities/Region.class], file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/domain/entities/OrderItem.class], file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/domain/entities/CreditCardType.class], file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/domain/entities/Order.class], file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/domain/entities/CustomerType.class], file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/domain/entities/Role.class], file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/domain/entities/Dimension.class], file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/domain/entities/Product.class], file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/domain/entities/OrderStatus.class], file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/domain/entities/User.class]]
[2017-10-14 14:08:42,589] INFO   376[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.registerDefaultFilters(ClassPathScanningCandidateComponentProvider.java:186) - JSR-330 'javax.inject.Named' annotation found and supported for component scanning
[2017-10-14 14:08:42,590]DEBUG   377[main] - org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:552) - Looking for matching resources in directory tree [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/persistence/dao/concrete]
[2017-10-14 14:08:42,591]DEBUG   378[main] - org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:614) - Searching directory [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/persistence/dao/concrete] for files matching pattern [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/persistence/dao/concrete/**/*.class]
[2017-10-14 14:08:42,598]DEBUG   385[main] - org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:353) - Resolved location pattern [classpath*:com/softserveinc/edu/oms/persistence/dao/concrete/**/*.class] to resources [file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/persistence/dao/concrete/OrderStatusDao.class], file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/persistence/dao/concrete/DimensionDao.class], file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/persistence/dao/concrete/CreditCardTypeDao.class], file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/persistence/dao/concrete/UserDao.class], file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/persistence/dao/concrete/OrderDao.class], file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/persistence/dao/concrete/OrderItemDao.class], file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/persistence/dao/concrete/ProductDao.class], file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/persistence/dao/concrete/RoleDao.class], file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/persistence/dao/concrete/RegionDao.class], file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/persistence/dao/concrete/CustomerTypeDao.class], file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/persistence/dao/concrete/UserDao$1.class]]
[2017-10-14 14:08:42,601]DEBUG   388[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:220) - Identified candidate component class: file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/persistence/dao/concrete/OrderStatusDao.class]
[2017-10-14 14:08:42,601]DEBUG   388[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:220) - Identified candidate component class: file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/persistence/dao/concrete/DimensionDao.class]
[2017-10-14 14:08:42,602]DEBUG   389[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:220) - Identified candidate component class: file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/persistence/dao/concrete/CreditCardTypeDao.class]
[2017-10-14 14:08:42,603]DEBUG   390[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:220) - Identified candidate component class: file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/persistence/dao/concrete/UserDao.class]
[2017-10-14 14:08:42,607]DEBUG   394[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:220) - Identified candidate component class: file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/persistence/dao/concrete/OrderDao.class]
[2017-10-14 14:08:42,608]DEBUG   395[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:220) - Identified candidate component class: file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/persistence/dao/concrete/OrderItemDao.class]
[2017-10-14 14:08:42,609]DEBUG   396[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:220) - Identified candidate component class: file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/persistence/dao/concrete/ProductDao.class]
[2017-10-14 14:08:42,610]DEBUG   397[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:220) - Identified candidate component class: file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/persistence/dao/concrete/RoleDao.class]
[2017-10-14 14:08:42,610]DEBUG   397[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:220) - Identified candidate component class: file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/persistence/dao/concrete/RegionDao.class]
[2017-10-14 14:08:42,611]DEBUG   398[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:220) - Identified candidate component class: file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/persistence/dao/concrete/CustomerTypeDao.class]
[2017-10-14 14:08:42,614]DEBUG   401[main] - org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:185) - Loaded 21 bean definitions from location pattern [classpath:testApplicationContex.xml]
[2017-10-14 14:08:42,617] INFO   404[main] - org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:456) - Refreshing org.springframework.context.support.GenericApplicationContext@1966d19d: startup date [Sat Oct 14 14:08:42 EEST 2017]; root of context hierarchy
[2017-10-14 14:08:42,617]DEBUG   404[main] - org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:470) - Bean factory for org.springframework.context.support.GenericApplicationContext@1966d19d: org.springframework.beans.factory.support.DefaultListableBeanFactory@174bd69: defining beans [transactionManager,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,orderStatusDao,dimensionDao,creditCardTypeDao,userDao,orderDao,orderItemDao,productDao,roleDao,regionDao,customerTypeDao,sessionFactory]; root of factory hierarchy
[2017-10-14 14:08:42,636]DEBUG   423[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
[2017-10-14 14:08:42,637]DEBUG   424[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
[2017-10-14 14:08:42,651]DEBUG   438[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
[2017-10-14 14:08:42,652]DEBUG   439[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
[2017-10-14 14:08:42,684]DEBUG   471[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
[2017-10-14 14:08:42,685]DEBUG   472[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
[2017-10-14 14:08:42,685] INFO   472[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:137) - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2017-10-14 14:08:42,686]DEBUG   473[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
[2017-10-14 14:08:42,686]DEBUG   473[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
[2017-10-14 14:08:42,687]DEBUG   474[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
[2017-10-14 14:08:42,687]DEBUG   474[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
[2017-10-14 14:08:42,688]DEBUG   475[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
[2017-10-14 14:08:42,688]DEBUG   475[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
[2017-10-14 14:08:42,688]DEBUG   475[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
[2017-10-14 14:08:42,689]DEBUG   476[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
[2017-10-14 14:08:42,692]DEBUG   479[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
[2017-10-14 14:08:42,692]DEBUG   479[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
[2017-10-14 14:08:42,693]DEBUG   480[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
[2017-10-14 14:08:42,699]DEBUG   486[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
[2017-10-14 14:08:42,700]DEBUG   487[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' to allow for resolving potential circular references
[2017-10-14 14:08:42,700]DEBUG   487[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
[2017-10-14 14:08:42,700]DEBUG   487[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
[2017-10-14 14:08:42,701]DEBUG   488[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
[2017-10-14 14:08:42,707]DEBUG   494[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
[2017-10-14 14:08:42,725]DEBUG   512[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
[2017-10-14 14:08:42,728]DEBUG   515[main] - org.springframework.context.support.AbstractApplicationContext.initMessageSource(AbstractApplicationContext.java:776) - Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@c3c6143]
[2017-10-14 14:08:42,730]DEBUG   517[main] - org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(AbstractApplicationContext.java:800) - Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@6c62e20b]
[2017-10-14 14:08:42,732] INFO   519[main] - org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:555) - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@174bd69: defining beans [transactionManager,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,orderStatusDao,dimensionDao,creditCardTypeDao,userDao,orderDao,orderItemDao,productDao,roleDao,regionDao,customerTypeDao,sessionFactory]; root of factory hierarchy
[2017-10-14 14:08:42,733]DEBUG   520[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'transactionManager'
[2017-10-14 14:08:42,733]DEBUG   520[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'transactionManager'
[2017-10-14 14:08:42,744]DEBUG   531[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
[2017-10-14 14:08:42,757]DEBUG   544[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'sessionFactory'
[2017-10-14 14:08:42,758]DEBUG   545[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'sessionFactory'
[2017-10-14 14:08:42,766]DEBUG   553[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'sessionFactory' to allow for resolving potential circular references
[2017-10-14 14:08:42,774]DEBUG   561[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1461) - Invoking afterPropertiesSet() on bean with name 'sessionFactory'
[2017-10-14 14:08:42,797]DEBUG   584[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration boolean -> org.hibernate.type.BooleanType@6e6c50aa
[2017-10-14 14:08:42,797]DEBUG   584[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration boolean -> org.hibernate.type.BooleanType@6e6c50aa
[2017-10-14 14:08:42,798]DEBUG   585[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6e6c50aa
[2017-10-14 14:08:42,799]DEBUG   586[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@35fea088
[2017-10-14 14:08:42,800]DEBUG   587[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@a42b882
[2017-10-14 14:08:42,801]DEBUG   588[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration yes_no -> org.hibernate.type.YesNoType@51a95c64
[2017-10-14 14:08:42,802]DEBUG   589[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration byte -> org.hibernate.type.ByteType@2e802eff
[2017-10-14 14:08:42,803]DEBUG   590[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration byte -> org.hibernate.type.ByteType@2e802eff
[2017-10-14 14:08:42,803]DEBUG   590[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2e802eff
[2017-10-14 14:08:42,805]DEBUG   592[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration character -> org.hibernate.type.CharacterType@4511f60f
[2017-10-14 14:08:42,805]DEBUG   592[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration char -> org.hibernate.type.CharacterType@4511f60f
[2017-10-14 14:08:42,805]DEBUG   592[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4511f60f
[2017-10-14 14:08:42,807]DEBUG   594[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration short -> org.hibernate.type.ShortType@2c852ce7
[2017-10-14 14:08:42,808]DEBUG   595[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration short -> org.hibernate.type.ShortType@2c852ce7
[2017-10-14 14:08:42,808]DEBUG   595[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2c852ce7
[2017-10-14 14:08:42,809]DEBUG   596[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration integer -> org.hibernate.type.IntegerType@244e0d38
[2017-10-14 14:08:42,810]DEBUG   597[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration int -> org.hibernate.type.IntegerType@244e0d38
[2017-10-14 14:08:42,810]DEBUG   597[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@244e0d38
[2017-10-14 14:08:42,811]DEBUG   598[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration long -> org.hibernate.type.LongType@ef45815
[2017-10-14 14:08:42,812]DEBUG   599[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration long -> org.hibernate.type.LongType@ef45815
[2017-10-14 14:08:42,812]DEBUG   599[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@ef45815
[2017-10-14 14:08:42,814]DEBUG   601[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration float -> org.hibernate.type.FloatType@969f4cd
[2017-10-14 14:08:42,814]DEBUG   601[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration float -> org.hibernate.type.FloatType@969f4cd
[2017-10-14 14:08:42,815]DEBUG   602[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@969f4cd
[2017-10-14 14:08:42,816]DEBUG   603[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration double -> org.hibernate.type.DoubleType@5434050
[2017-10-14 14:08:42,816]DEBUG   603[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration double -> org.hibernate.type.DoubleType@5434050
[2017-10-14 14:08:42,817]DEBUG   604[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5434050
[2017-10-14 14:08:42,818]DEBUG   605[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@79ef1245
[2017-10-14 14:08:42,819]DEBUG   606[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@79ef1245
[2017-10-14 14:08:42,820]DEBUG   607[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@11427db
[2017-10-14 14:08:42,821]DEBUG   608[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@11427db
[2017-10-14 14:08:42,828]DEBUG   615[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration string -> org.hibernate.type.StringType@3525c6
[2017-10-14 14:08:42,829]DEBUG   616[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.String -> org.hibernate.type.StringType@3525c6
[2017-10-14 14:08:42,830]DEBUG   617[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration url -> org.hibernate.type.UrlType@5d0d6868
[2017-10-14 14:08:42,830]DEBUG   617[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5d0d6868
[2017-10-14 14:08:42,832]DEBUG   619[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration date -> org.hibernate.type.DateType@6404aca7
[2017-10-14 14:08:42,833]DEBUG   620[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6404aca7
[2017-10-14 14:08:42,835]DEBUG   622[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration time -> org.hibernate.type.TimeType@3baa0bf5
[2017-10-14 14:08:42,836]DEBUG   623[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3baa0bf5
[2017-10-14 14:08:42,837]DEBUG   624[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration timestamp -> org.hibernate.type.TimestampType@784b7c29
[2017-10-14 14:08:42,838]DEBUG   625[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@784b7c29
[2017-10-14 14:08:42,838]DEBUG   625[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@784b7c29
[2017-10-14 14:08:42,839]DEBUG   626[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@28b6f947
[2017-10-14 14:08:42,840]DEBUG   627[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration calendar -> org.hibernate.type.CalendarType@3ef221ad
[2017-10-14 14:08:42,841]DEBUG   628[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3ef221ad
[2017-10-14 14:08:42,841]DEBUG   628[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3ef221ad
[2017-10-14 14:08:42,842]DEBUG   629[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@24517540
[2017-10-14 14:08:42,843]DEBUG   630[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration locale -> org.hibernate.type.LocaleType@692f95ad
[2017-10-14 14:08:42,843]DEBUG   630[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@692f95ad
[2017-10-14 14:08:42,844]DEBUG   631[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration currency -> org.hibernate.type.CurrencyType@146f1ad0
[2017-10-14 14:08:42,845]DEBUG   632[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@146f1ad0
[2017-10-14 14:08:42,846]DEBUG   633[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@bb6962e
[2017-10-14 14:08:42,846]DEBUG   633[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@bb6962e
[2017-10-14 14:08:42,847]DEBUG   634[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration class -> org.hibernate.type.ClassType@78a0bc79
[2017-10-14 14:08:42,848]DEBUG   635[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@78a0bc79
[2017-10-14 14:08:42,850]DEBUG   637[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@16de9eea
[2017-10-14 14:08:42,850]DEBUG   637[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@16de9eea
[2017-10-14 14:08:42,851]DEBUG   638[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5f179316
[2017-10-14 14:08:42,852]DEBUG   639[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@6354743
[2017-10-14 14:08:42,853]DEBUG   640[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration binary -> org.hibernate.type.BinaryType@737d54dd
[2017-10-14 14:08:42,854]DEBUG   641[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration byte[] -> org.hibernate.type.BinaryType@737d54dd
[2017-10-14 14:08:42,854]DEBUG   641[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration [B -> org.hibernate.type.BinaryType@737d54dd
[2017-10-14 14:08:42,856]DEBUG   643[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@55071871
[2017-10-14 14:08:42,856]DEBUG   643[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@55071871
[2017-10-14 14:08:42,856]DEBUG   643[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@55071871
[2017-10-14 14:08:42,857]DEBUG   644[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration image -> org.hibernate.type.ImageType@38c8c792
[2017-10-14 14:08:42,859]DEBUG   646[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration characters -> org.hibernate.type.CharArrayType@4ae5c9e2
[2017-10-14 14:08:42,859]DEBUG   646[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration char[] -> org.hibernate.type.CharArrayType@4ae5c9e2
[2017-10-14 14:08:42,859]DEBUG   646[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration [C -> org.hibernate.type.CharArrayType@4ae5c9e2
[2017-10-14 14:08:42,861]DEBUG   648[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@28e67788
[2017-10-14 14:08:42,861]DEBUG   648[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@28e67788
[2017-10-14 14:08:42,862]DEBUG   649[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@28e67788
[2017-10-14 14:08:42,863]DEBUG   650[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration text -> org.hibernate.type.TextType@70d586bc
[2017-10-14 14:08:42,868]DEBUG   655[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration blob -> org.hibernate.type.BlobType@7520d2a
[2017-10-14 14:08:42,868]DEBUG   655[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7520d2a
[2017-10-14 14:08:42,869]DEBUG   656[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@77a2473e
[2017-10-14 14:08:42,870]DEBUG   657[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@6a768fd2
[2017-10-14 14:08:42,873]DEBUG   660[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration clob -> org.hibernate.type.ClobType@42593848
[2017-10-14 14:08:42,874]DEBUG   661[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@42593848
[2017-10-14 14:08:42,874]DEBUG   661[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1ddb0486
[2017-10-14 14:08:42,875]DEBUG   662[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@69a0a8ec
[2017-10-14 14:08:42,876]DEBUG   663[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@bd42944
[2017-10-14 14:08:42,877]DEBUG   664[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration serializable -> org.hibernate.type.SerializableType@3d03d2c8
[2017-10-14 14:08:42,879]DEBUG   666[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration object -> org.hibernate.type.ObjectType@7a8fc519
[2017-10-14 14:08:42,880]DEBUG   667[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7a8fc519
[2017-10-14 14:08:42,880]DEBUG   667[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@a8a8b1e
[2017-10-14 14:08:42,881]DEBUG   668[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7c68b91c
[2017-10-14 14:08:42,881]DEBUG   668[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@664beade
[2017-10-14 14:08:42,881]DEBUG   668[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@43b71a61
[2017-10-14 14:08:42,881]DEBUG   668[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@615807eb
[2017-10-14 14:08:42,882]DEBUG   669[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@70ea9f38
[2017-10-14 14:08:42,882]DEBUG   669[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1c9ce3e0
[2017-10-14 14:08:42,882]DEBUG   669[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7c56c5d5
[2017-10-14 14:08:42,896] INFO   683[main] - org.hibernate.annotations.common.Version.<clinit>(Version.java:37) - Hibernate Commons Annotations 3.2.0.Final
[2017-10-14 14:08:42,900] INFO   687[main] - org.hibernate.cfg.Environment.<clinit>(Environment.java:603) - Hibernate 3.6.5.Final
[2017-10-14 14:08:42,901] INFO   688[main] - org.hibernate.cfg.Environment.<clinit>(Environment.java:636) - hibernate.properties not found
[2017-10-14 14:08:42,903] INFO   690[main] - org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:814) - Bytecode provider name : javassist
[2017-10-14 14:08:42,906] INFO   693[main] - org.hibernate.cfg.Environment.<clinit>(Environment.java:695) - using JDK 1.4 java.sql.Timestamp handling
[2017-10-14 14:08:42,946]DEBUG   733[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]
[2017-10-14 14:08:42,947]DEBUG   734[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]
[2017-10-14 14:08:42,948]DEBUG   735[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]
[2017-10-14 14:08:42,948]DEBUG   735[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]
[2017-10-14 14:08:42,949]DEBUG   736[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]
[2017-10-14 14:08:42,950]DEBUG   737[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]
[2017-10-14 14:08:42,951]DEBUG   738[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]
[2017-10-14 14:08:42,952]DEBUG   739[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]
[2017-10-14 14:08:42,952]DEBUG   739[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]
[2017-10-14 14:08:42,953]DEBUG   740[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]
[2017-10-14 14:08:42,954]DEBUG   741[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]
[2017-10-14 14:08:42,955]DEBUG   742[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]
[2017-10-14 14:08:42,957]DEBUG   744[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]
[2017-10-14 14:08:42,959]DEBUG   746[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]
[2017-10-14 14:08:42,961]DEBUG   748[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]
[2017-10-14 14:08:42,965] INFO   752[main] - org.hibernate.cfg.Configuration.configure(Configuration.java:2192) - configuring from url: file:/home/tomcat/Documents/backup/OMS.Release/target/test-classes/hibernate_test.cfg.xml
[2017-10-14 14:08:43,017]DEBUG   804[main] - org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:67) - trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
[2017-10-14 14:08:43,017] WARN   804[main] - org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:73) - recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!
[2017-10-14 14:08:43,017]DEBUG   804[main] - org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:77) - attempting to resolve on classpath under org/hibernate/
[2017-10-14 14:08:43,018]DEBUG   805[main] - org.hibernate.util.DTDEntityResolver.resolveOnClassPath(DTDEntityResolver.java:109) - located [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd] in classpath
[2017-10-14 14:08:43,056]DEBUG   843[main] - org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) - hibernate.connection.driver_class=com.mysql.jdbc.Driver
[2017-10-14 14:08:43,057]DEBUG   844[main] - org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) - dialect=org.hibernate.dialect.MySQL5Dialect
[2017-10-14 14:08:43,057]DEBUG   844[main] - org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) - hibernate.connection.url=jdbc:mysql://localhost:3306/test1
[2017-10-14 14:08:43,057]DEBUG   844[main] - org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) - hibernate.connection.username=maria
[2017-10-14 14:08:43,057]DEBUG   844[main] - org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) - hibernate.connection.password=333qwerb
[2017-10-14 14:08:43,058]DEBUG   845[main] - org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) - hibernate.hbm2ddl.auto=create-drop
[2017-10-14 14:08:43,058]DEBUG   845[main] - org.hibernate.cfg.Configuration.parseMappingElement(Configuration.java:2363) - session-factory config [null] named class [com.softserveinc.edu.oms.domain.entities.Role] for mapping
[2017-10-14 14:08:43,064]DEBUG   851[main] - org.hibernate.cfg.Configuration.parseMappingElement(Configuration.java:2363) - session-factory config [null] named class [com.softserveinc.edu.oms.domain.entities.Region] for mapping
[2017-10-14 14:08:43,064]DEBUG   851[main] - org.hibernate.cfg.Configuration.parseMappingElement(Configuration.java:2363) - session-factory config [null] named class [com.softserveinc.edu.oms.domain.entities.CustomerType] for mapping
[2017-10-14 14:08:43,064]DEBUG   851[main] - org.hibernate.cfg.Configuration.parseMappingElement(Configuration.java:2363) - session-factory config [null] named class [com.softserveinc.edu.oms.domain.entities.User] for mapping
[2017-10-14 14:08:43,065]DEBUG   852[main] - org.hibernate.cfg.Configuration.parseMappingElement(Configuration.java:2363) - session-factory config [null] named class [com.softserveinc.edu.oms.domain.entities.OrderStatus] for mapping
[2017-10-14 14:08:43,065]DEBUG   852[main] - org.hibernate.cfg.Configuration.parseMappingElement(Configuration.java:2363) - session-factory config [null] named class [com.softserveinc.edu.oms.domain.entities.Order] for mapping
[2017-10-14 14:08:43,065]DEBUG   852[main] - org.hibernate.cfg.Configuration.parseMappingElement(Configuration.java:2363) - session-factory config [null] named class [com.softserveinc.edu.oms.domain.entities.Product] for mapping
[2017-10-14 14:08:43,065]DEBUG   852[main] - org.hibernate.cfg.Configuration.parseMappingElement(Configuration.java:2363) - session-factory config [null] named class [com.softserveinc.edu.oms.domain.entities.Dimension] for mapping
[2017-10-14 14:08:43,066]DEBUG   853[main] - org.hibernate.cfg.Configuration.parseMappingElement(Configuration.java:2363) - session-factory config [null] named class [com.softserveinc.edu.oms.domain.entities.OrderItem] for mapping
[2017-10-14 14:08:43,066]DEBUG   853[main] - org.hibernate.cfg.Configuration.parseMappingElement(Configuration.java:2363) - session-factory config [null] named class [com.softserveinc.edu.oms.domain.entities.CreditCardType] for mapping
[2017-10-14 14:08:43,066] INFO   853[main] - org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2297) - Configured SessionFactory: null
[2017-10-14 14:08:43,067]DEBUG   854[main] - org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2298) - properties: {hibernate.connection.password=333qwerb, java.runtime.name=OpenJDK Runtime Environment, sun.boot.library.path=/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre/lib/amd64, java.vm.version=24.151-b00, hibernate.connection.username=maria, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=OpenJDK 64-Bit Server VM, file.encoding.pkg=sun.io, user.country=US, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=unknown, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/tomcat/Documents/backup/OMS.Release, java.runtime.version=1.7.0_151-mockbuild_2017_08_23_16_26-b00, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, basedir=/home/tomcat/Documents/backup/OMS.Release, hibernate.current_session_context_class=org.springframework.orm.hibernate3.SpringSessionContext, java.endorsed.dirs=/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre/lib/endorsed, os.arch=amd64, surefire.real.class.path=/home/tomcat/Documents/backup/OMS.Release/target/surefire/surefirebooter1350476830626056606.jar, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, surefire.test.class.path=/home/tomcat/Documents/backup/OMS.Release/target/test-classes:/home/tomcat/Documents/backup/OMS.Release/target/classes:/home/tomcat/.m2/repository/org/springframework/spring-context/3.0.5.RELEASE/spring-context-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-aop/3.0.5.RELEASE/spring-aop-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/home/tomcat/.m2/repository/org/springframework/spring-beans/3.0.5.RELEASE/spring-beans-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-core/3.0.5.RELEASE/spring-core-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-expression/3.0.5.RELEASE/spring-expression-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-asm/3.0.5.RELEASE/spring-asm-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-webmvc/3.0.5.RELEASE/spring-webmvc-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-context-support/3.0.5.RELEASE/spring-context-support-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-web/3.0.5.RELEASE/spring-web-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/roo/org.springframework.roo.annotations/1.0.2.RELEASE/org.springframework.roo.annotations-1.0.2.RELEASE.jar:/home/tomcat/.m2/repository/org/aspectj/aspectjrt/1.6.9/aspectjrt-1.6.9.jar:/home/tomcat/.m2/repository/org/slf4j/slf4j-api/1.5.10/slf4j-api-1.5.10.jar:/home/tomcat/.m2/repository/org/slf4j/jcl-over-slf4j/1.5.10/jcl-over-slf4j-1.5.10.jar:/home/tomcat/.m2/repository/org/slf4j/slf4j-log4j12/1.5.10/slf4j-log4j12-1.5.10.jar:/home/tomcat/.m2/repository/log4j/log4j/1.2.15/log4j-1.2.15.jar:/home/tomcat/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar:/home/tomcat/.m2/repository/javax/servlet/jstl/1.2/jstl-1.2.jar:/home/tomcat/.m2/repository/junit/junit/4.7/junit-4.7.jar:/home/tomcat/.m2/repository/org/hibernate/hibernate-core/3.6.5.Final/hibernate-core-3.6.5.Final.jar:/home/tomcat/.m2/repository/antlr/antlr/2.7.6/antlr-2.7.6.jar:/home/tomcat/.m2/repository/commons-collections/commons-collections/3.1/commons-collections-3.1.jar:/home/tomcat/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/home/tomcat/.m2/repository/org/hibernate/hibernate-commons-annotations/3.2.0.Final/hibernate-commons-annotations-3.2.0.Final.jar:/home/tomcat/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.0-api/1.0.0.Final/hibernate-jpa-2.0-api-1.0.0.Final.jar:/home/tomcat/.m2/repository/javax/transaction/jta/1.1/jta-1.1.jar:/home/tomcat/.m2/repository/net/sourceforge/jtds/jtds/1.2.4/jtds-1.2.4.jar:/home/tomcat/.m2/repository/javassist/javassist/3.12.1.GA/javassist-3.12.1.GA.jar:/home/tomcat/.m2/repository/org/springframework/spring-orm/3.0.5.RELEASE/spring-orm-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-jdbc/3.0.5.RELEASE/spring-jdbc-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-tx/3.0.5.RELEASE/spring-tx-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar:/home/tomcat/.m2/repository/org/springframework/spring-test/3.0.5.RELEASE/spring-test-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/security/spring-security-core/3.0.5.RELEASE/spring-security-core-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/aspectj/aspectjweaver/1.6.8/aspectjweaver-1.6.8.jar:/home/tomcat/.m2/repository/org/springframework/security/spring-security-config/3.0.5.RELEASE/spring-security-config-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/security/spring-security-web/3.0.5.RELEASE/spring-security-web-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/cglib/cglib/2.2.2/cglib-2.2.2.jar:/home/tomcat/.m2/repository/asm/asm/3.3.1/asm-3.3.1.jar:/home/tomcat/.m2/repository/mysql/mysql-connector-java/5.1.17/mysql-connector-java-5.1.17.jar:/home/tomcat/.m2/repository/org/hibernate/hibernate-validator/4.2.0.Final/hibernate-validator-4.2.0.Final.jar:/home/tomcat/.m2/repository/javax/validation/validation-api/1.0.0.GA/validation-api-1.0.0.GA.jar:/home/tomcat/.m2/repository/org/apache/tiles/tiles-jsp/2.2.2/tiles-jsp-2.2.2.jar:/home/tomcat/.m2/repository/org/apache/tiles/tiles-servlet/2.2.2/tiles-servlet-2.2.2.jar:/home/tomcat/.m2/repository/org/apache/tiles/tiles-core/2.2.2/tiles-core-2.2.2.jar:/home/tomcat/.m2/repository/org/apache/tiles/tiles-template/2.2.2/tiles-template-2.2.2.jar:/home/tomcat/.m2/repository/org/apache/tiles/tiles-api/2.2.2/tiles-api-2.2.2.jar:/home/tomcat/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.8.3/jackson-mapper-asl-1.8.3.jar:/home/tomcat/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.8.3/jackson-core-asl-1.8.3.jar:/home/tomcat/.m2/repository/net/sf/jasperreports/jasperreports/4.0.1/jasperreports-4.0.1.jar:/home/tomcat/.m2/repository/commons-beanutils/commons-beanutils/1.8.0/commons-beanutils-1.8.0.jar:/home/tomcat/.m2/repository/commons-digester/commons-digester/1.7/commons-digester-1.7.jar:/home/tomcat/.m2/repository/commons-logging/commons-logging/1.0.2/commons-logging-1.0.2.jar:/home/tomcat/.m2/repository/com/lowagie/itext/2.1.7/itext-2.1.7.jar:/home/tomcat/.m2/repository/bouncycastle/bcmail-jdk14/138/bcmail-jdk14-138.jar:/home/tomcat/.m2/repository/bouncycastle/bcprov-jdk14/138/bcprov-jdk14-138.jar:/home/tomcat/.m2/repository/org/bouncycastle/bctsp-jdk14/1.38/bctsp-jdk14-1.38.jar:/home/tomcat/.m2/repository/org/bouncycastle/bcprov-jdk14/1.38/bcprov-jdk14-1.38.jar:/home/tomcat/.m2/repository/org/bouncycastle/bcmail-jdk14/1.38/bcmail-jdk14-1.38.jar:/home/tomcat/.m2/repository/jfree/jcommon/1.0.15/jcommon-1.0.15.jar:/home/tomcat/.m2/repository/jfree/jfreechart/1.0.12/jfreechart-1.0.12.jar:/home/tomcat/.m2/repository/xml-apis/xml-apis/1.3.02/xml-apis-1.3.02.jar:/home/tomcat/.m2/repository/eclipse/jdtcore/3.1.0/jdtcore-3.1.0.jar:/home/tomcat/.m2/repository/org/springframework/security/spring-security-taglibs/3.0.5.RELEASE/spring-security-taglibs-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/security/spring-security-acl/3.0.5.RELEASE/spring-security-acl-3.0.5.RELEASE.jar:, java.specification.name=Java Platform API Specification, java.class.version=51.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.transaction.factory_class=org.springframework.orm.hibernate3.SpringTransactionFactory, os.version=3.10.0-693.el7.x86_64, user.home=/home/tomcat, user.timezone=Europe/Kiev, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.7, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.class.path=/home/tomcat/Documents/backup/OMS.Release/target/test-classes:/home/tomcat/Documents/backup/OMS.Release/target/classes:/home/tomcat/.m2/repository/org/springframework/spring-context/3.0.5.RELEASE/spring-context-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-aop/3.0.5.RELEASE/spring-aop-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/home/tomcat/.m2/repository/org/springframework/spring-beans/3.0.5.RELEASE/spring-beans-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-core/3.0.5.RELEASE/spring-core-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-expression/3.0.5.RELEASE/spring-expression-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-asm/3.0.5.RELEASE/spring-asm-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-webmvc/3.0.5.RELEASE/spring-webmvc-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-context-support/3.0.5.RELEASE/spring-context-support-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-web/3.0.5.RELEASE/spring-web-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/roo/org.springframework.roo.annotations/1.0.2.RELEASE/org.springframework.roo.annotations-1.0.2.RELEASE.jar:/home/tomcat/.m2/repository/org/aspectj/aspectjrt/1.6.9/aspectjrt-1.6.9.jar:/home/tomcat/.m2/repository/org/slf4j/slf4j-api/1.5.10/slf4j-api-1.5.10.jar:/home/tomcat/.m2/repository/org/slf4j/jcl-over-slf4j/1.5.10/jcl-over-slf4j-1.5.10.jar:/home/tomcat/.m2/repository/org/slf4j/slf4j-log4j12/1.5.10/slf4j-log4j12-1.5.10.jar:/home/tomcat/.m2/repository/log4j/log4j/1.2.15/log4j-1.2.15.jar:/home/tomcat/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar:/home/tomcat/.m2/repository/javax/servlet/jstl/1.2/jstl-1.2.jar:/home/tomcat/.m2/repository/junit/junit/4.7/junit-4.7.jar:/home/tomcat/.m2/repository/org/hibernate/hibernate-core/3.6.5.Final/hibernate-core-3.6.5.Final.jar:/home/tomcat/.m2/repository/antlr/antlr/2.7.6/antlr-2.7.6.jar:/home/tomcat/.m2/repository/commons-collections/commons-collections/3.1/commons-collections-3.1.jar:/home/tomcat/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/home/tomcat/.m2/repository/org/hibernate/hibernate-commons-annotations/3.2.0.Final/hibernate-commons-annotations-3.2.0.Final.jar:/home/tomcat/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.0-api/1.0.0.Final/hibernate-jpa-2.0-api-1.0.0.Final.jar:/home/tomcat/.m2/repository/javax/transaction/jta/1.1/jta-1.1.jar:/home/tomcat/.m2/repository/net/sourceforge/jtds/jtds/1.2.4/jtds-1.2.4.jar:/home/tomcat/.m2/repository/javassist/javassist/3.12.1.GA/javassist-3.12.1.GA.jar:/home/tomcat/.m2/repository/org/springframework/spring-orm/3.0.5.RELEASE/spring-orm-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-jdbc/3.0.5.RELEASE/spring-jdbc-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-tx/3.0.5.RELEASE/spring-tx-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar:/home/tomcat/.m2/repository/org/springframework/spring-test/3.0.5.RELEASE/spring-test-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/security/spring-security-core/3.0.5.RELEASE/spring-security-core-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/aspectj/aspectjweaver/1.6.8/aspectjweaver-1.6.8.jar:/home/tomcat/.m2/repository/org/springframework/security/spring-security-config/3.0.5.RELEASE/spring-security-config-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/security/spring-security-web/3.0.5.RELEASE/spring-security-web-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/cglib/cglib/2.2.2/cglib-2.2.2.jar:/home/tomcat/.m2/repository/asm/asm/3.3.1/asm-3.3.1.jar:/home/tomcat/.m2/repository/mysql/mysql-connector-java/5.1.17/mysql-connector-java-5.1.17.jar:/home/tomcat/.m2/repository/org/hibernate/hibernate-validator/4.2.0.Final/hibernate-validator-4.2.0.Final.jar:/home/tomcat/.m2/repository/javax/validation/validation-api/1.0.0.GA/validation-api-1.0.0.GA.jar:/home/tomcat/.m2/repository/org/apache/tiles/tiles-jsp/2.2.2/tiles-jsp-2.2.2.jar:/home/tomcat/.m2/repository/org/apache/tiles/tiles-servlet/2.2.2/tiles-servlet-2.2.2.jar:/home/tomcat/.m2/repository/org/apache/tiles/tiles-core/2.2.2/tiles-core-2.2.2.jar:/home/tomcat/.m2/repository/org/apache/tiles/tiles-template/2.2.2/tiles-template-2.2.2.jar:/home/tomcat/.m2/repository/org/apache/tiles/tiles-api/2.2.2/tiles-api-2.2.2.jar:/home/tomcat/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.8.3/jackson-mapper-asl-1.8.3.jar:/home/tomcat/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.8.3/jackson-core-asl-1.8.3.jar:/home/tomcat/.m2/repository/net/sf/jasperreports/jasperreports/4.0.1/jasperreports-4.0.1.jar:/home/tomcat/.m2/repository/commons-beanutils/commons-beanutils/1.8.0/commons-beanutils-1.8.0.jar:/home/tomcat/.m2/repository/commons-digester/commons-digester/1.7/commons-digester-1.7.jar:/home/tomcat/.m2/repository/commons-logging/commons-logging/1.0.2/commons-logging-1.0.2.jar:/home/tomcat/.m2/repository/com/lowagie/itext/2.1.7/itext-2.1.7.jar:/home/tomcat/.m2/repository/bouncycastle/bcmail-jdk14/138/bcmail-jdk14-138.jar:/home/tomcat/.m2/repository/bouncycastle/bcprov-jdk14/138/bcprov-jdk14-138.jar:/home/tomcat/.m2/repository/org/bouncycastle/bctsp-jdk14/1.38/bctsp-jdk14-1.38.jar:/home/tomcat/.m2/repository/org/bouncycastle/bcprov-jdk14/1.38/bcprov-jdk14-1.38.jar:/home/tomcat/.m2/repository/org/bouncycastle/bcmail-jdk14/1.38/bcmail-jdk14-1.38.jar:/home/tomcat/.m2/repository/jfree/jcommon/1.0.15/jcommon-1.0.15.jar:/home/tomcat/.m2/repository/jfree/jfreechart/1.0.12/jfreechart-1.0.12.jar:/home/tomcat/.m2/repository/xml-apis/xml-apis/1.3.02/xml-apis-1.3.02.jar:/home/tomcat/.m2/repository/eclipse/jdtcore/3.1.0/jdtcore-3.1.0.jar:/home/tomcat/.m2/repository/org/springframework/security/spring-security-taglibs/3.0.5.RELEASE/spring-security-taglibs-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/security/spring-security-acl/3.0.5.RELEASE/spring-security-acl-3.0.5.RELEASE.jar:, user.name=tomcat, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.version=1.7, sun.java.command=/home/tomcat/Documents/backup/OMS.Release/target/surefire/surefirebooter1350476830626056606.jar /home/tomcat/Documents/backup/OMS.Release/target/surefire 2017-10-14T14-08-41_029-jvmRun1 surefire1747481213800879750tmp surefire_0887568231430146800tmp, java.home=/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre, sun.arch.data.model=64, hibernate.connection.url=jdbc:mysql://localhost:3306/test1, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.7.0_151, java.ext.dirs=/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre/lib/resources.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre/lib/rt.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre/lib/jsse.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre/lib/jce.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre/lib/charsets.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre/lib/rhino.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre/lib/jfr.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre/classes, java.vendor=Oracle Corporation, localRepository=/home/tomcat/.m2/repository, file.separator=/, hibernate.hbm2ddl.auto=create-drop, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=gnome, dialect=org.hibernate.dialect.MySQL5Dialect, sun.cpu.isalist=}
[2017-10-14 14:08:43,092]DEBUG   879[main] - org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) - Processing hbm.xml files
[2017-10-14 14:08:43,092]DEBUG   879[main] - org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) - Process annotated classes
[2017-10-14 14:08:43,097] INFO   884[main] - org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:532) - Binding entity from annotated class: com.softserveinc.edu.oms.domain.entities.Role
[2017-10-14 14:08:43,126]DEBUG   913[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2017-10-14 14:08:43,128]DEBUG   915[main] - org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1019) - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2017-10-14 14:08:43,133]DEBUG   920[main] - org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name Role
[2017-10-14 14:08:43,135] INFO   922[main] - org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:530) - Bind entity com.softserveinc.edu.oms.domain.entities.Role on table Roles
[2017-10-14 14:08:43,155]DEBUG   942[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Roles), mappingColumn=ID, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:43,159]DEBUG   946[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property id with lazy=false
[2017-10-14 14:08:43,161]DEBUG   948[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for id
[2017-10-14 14:08:43,162]DEBUG   949[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property id
[2017-10-14 14:08:43,165]DEBUG   952[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Roles), mappingColumn=RoleName, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:43,165]DEBUG   952[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property roleName with lazy=false
[2017-10-14 14:08:43,166]DEBUG   953[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for roleName
[2017-10-14 14:08:43,166]DEBUG   953[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property roleName
[2017-10-14 14:08:43,167] INFO   954[main] - org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:532) - Binding entity from annotated class: com.softserveinc.edu.oms.domain.entities.Region
[2017-10-14 14:08:43,168]DEBUG   955[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2017-10-14 14:08:43,168]DEBUG   955[main] - org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1019) - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2017-10-14 14:08:43,168]DEBUG   955[main] - org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name Region
[2017-10-14 14:08:43,168] INFO   955[main] - org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:530) - Bind entity com.softserveinc.edu.oms.domain.entities.Region on table Regions
[2017-10-14 14:08:43,169]DEBUG   956[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Regions), mappingColumn=ID, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:43,170]DEBUG   957[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property id with lazy=false
[2017-10-14 14:08:43,170]DEBUG   957[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for id
[2017-10-14 14:08:43,170]DEBUG   957[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property id
[2017-10-14 14:08:43,170]DEBUG   957[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Regions), mappingColumn=RegionName, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:43,171]DEBUG   958[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property regionName with lazy=false
[2017-10-14 14:08:43,171]DEBUG   958[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for regionName
[2017-10-14 14:08:43,171]DEBUG   958[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property regionName
[2017-10-14 14:08:43,171] INFO   958[main] - org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:532) - Binding entity from annotated class: com.softserveinc.edu.oms.domain.entities.CustomerType
[2017-10-14 14:08:43,171]DEBUG   958[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2017-10-14 14:08:43,172]DEBUG   959[main] - org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1019) - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2017-10-14 14:08:43,172]DEBUG   959[main] - org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name CustomerType
[2017-10-14 14:08:43,172] INFO   959[main] - org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:530) - Bind entity com.softserveinc.edu.oms.domain.entities.CustomerType on table CustomerTypes
[2017-10-14 14:08:43,174]DEBUG   961[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerTypes), mappingColumn=ID, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:43,174]DEBUG   961[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property id with lazy=false
[2017-10-14 14:08:43,174]DEBUG   961[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for id
[2017-10-14 14:08:43,174]DEBUG   961[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property id
[2017-10-14 14:08:43,175]DEBUG   962[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerTypes), mappingColumn=Discount, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:43,175]DEBUG   962[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property discount with lazy=false
[2017-10-14 14:08:43,175]DEBUG   962[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for discount
[2017-10-14 14:08:43,175]DEBUG   962[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property discount
[2017-10-14 14:08:43,176]DEBUG   963[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerTypes), mappingColumn=MaxRange, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:43,176]DEBUG   963[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property maxRange with lazy=false
[2017-10-14 14:08:43,176]DEBUG   963[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for maxRange
[2017-10-14 14:08:43,176]DEBUG   963[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property maxRange
[2017-10-14 14:08:43,177]DEBUG   964[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerTypes), mappingColumn=MinRange, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:43,177]DEBUG   964[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property minRange with lazy=false
[2017-10-14 14:08:43,177]DEBUG   964[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for minRange
[2017-10-14 14:08:43,177]DEBUG   964[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property minRange
[2017-10-14 14:08:43,178]DEBUG   965[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerTypes), mappingColumn=TypeName, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:43,178]DEBUG   965[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property typeName with lazy=false
[2017-10-14 14:08:43,178]DEBUG   965[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for typeName
[2017-10-14 14:08:43,178]DEBUG   965[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property typeName
[2017-10-14 14:08:43,178] INFO   965[main] - org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:532) - Binding entity from annotated class: com.softserveinc.edu.oms.domain.entities.User
[2017-10-14 14:08:43,179]DEBUG   966[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2017-10-14 14:08:43,179]DEBUG   966[main] - org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1019) - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2017-10-14 14:08:43,179]DEBUG   966[main] - org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name User
[2017-10-14 14:08:43,179] INFO   966[main] - org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:530) - Bind entity com.softserveinc.edu.oms.domain.entities.User on table Users
[2017-10-14 14:08:43,199]DEBUG   986[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=ID, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:43,199]DEBUG   986[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property id with lazy=false
[2017-10-14 14:08:43,200]DEBUG   987[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for id
[2017-10-14 14:08:43,200]DEBUG   987[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property id
[2017-10-14 14:08:43,200]DEBUG   987[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=IsUserActive, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:43,200]DEBUG   987[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property active with lazy=false
[2017-10-14 14:08:43,201]DEBUG   988[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for active
[2017-10-14 14:08:43,201]DEBUG   988[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property active
[2017-10-14 14:08:43,201]DEBUG   988[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=Balance, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:43,201]DEBUG   988[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property balance with lazy=false
[2017-10-14 14:08:43,202]DEBUG   989[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for balance
[2017-10-14 14:08:43,202]DEBUG   989[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property balance
[2017-10-14 14:08:43,203]DEBUG   990[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3JoinColumn{logicalColumnName='CustomerTypeRef', referencedColumn='', mappedBy=''}
[2017-10-14 14:08:43,203]DEBUG   990[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=customerType, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:43,221]DEBUG  1008[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property customerType
[2017-10-14 14:08:43,221]DEBUG  1008[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=Email, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:43,221]DEBUG  1008[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property email with lazy=false
[2017-10-14 14:08:43,222]DEBUG  1009[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for email
[2017-10-14 14:08:43,222]DEBUG  1009[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property email
[2017-10-14 14:08:43,222]DEBUG  1009[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=FirstName, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:43,222]DEBUG  1009[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property firstName with lazy=false
[2017-10-14 14:08:43,223]DEBUG  1010[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for firstName
[2017-10-14 14:08:43,223]DEBUG  1010[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property firstName
[2017-10-14 14:08:43,223]DEBUG  1010[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=LastName, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:43,223]DEBUG  1010[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property lastName with lazy=false
[2017-10-14 14:08:43,223]DEBUG  1010[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for lastName
[2017-10-14 14:08:43,224]DEBUG  1011[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property lastName
[2017-10-14 14:08:43,224]DEBUG  1011[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=Login, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:43,224]DEBUG  1011[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property login with lazy=false
[2017-10-14 14:08:43,224]DEBUG  1011[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for login
[2017-10-14 14:08:43,225]DEBUG  1012[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property login
[2017-10-14 14:08:43,225]DEBUG  1012[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=Password, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:43,225]DEBUG  1012[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property password with lazy=false
[2017-10-14 14:08:43,225]DEBUG  1012[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for password
[2017-10-14 14:08:43,226]DEBUG  1013[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property password
[2017-10-14 14:08:43,226]DEBUG  1013[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3JoinColumn{logicalColumnName='RegionRef', referencedColumn='', mappedBy=''}
[2017-10-14 14:08:43,226]DEBUG  1013[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=region, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:43,231]DEBUG  1018[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property region
[2017-10-14 14:08:43,231]DEBUG  1018[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3JoinColumn{logicalColumnName='RoleRef', referencedColumn='', mappedBy=''}
[2017-10-14 14:08:43,231]DEBUG  1018[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=role, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:43,232]DEBUG  1019[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property role
[2017-10-14 14:08:43,232] INFO  1019[main] - org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:532) - Binding entity from annotated class: com.softserveinc.edu.oms.domain.entities.OrderStatus
[2017-10-14 14:08:43,232]DEBUG  1019[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2017-10-14 14:08:43,232]DEBUG  1019[main] - org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1019) - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2017-10-14 14:08:43,233]DEBUG  1020[main] - org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name OrderStatus
[2017-10-14 14:08:43,233] INFO  1020[main] - org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:530) - Bind entity com.softserveinc.edu.oms.domain.entities.OrderStatus on table OrderStatuses
[2017-10-14 14:08:43,234]DEBUG  1021[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderStatuses), mappingColumn=ID, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:43,234]DEBUG  1021[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property id with lazy=false
[2017-10-14 14:08:43,234]DEBUG  1021[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for id
[2017-10-14 14:08:43,234]DEBUG  1021[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property id
[2017-10-14 14:08:43,235]DEBUG  1022[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderStatuses), mappingColumn=OrederStatusName, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:43,235]DEBUG  1022[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property orderStatusName with lazy=false
[2017-10-14 14:08:43,235]DEBUG  1022[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for orderStatusName
[2017-10-14 14:08:43,235]DEBUG  1022[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property orderStatusName
[2017-10-14 14:08:43,236] INFO  1023[main] - org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:532) - Binding entity from annotated class: com.softserveinc.edu.oms.domain.entities.Order
[2017-10-14 14:08:43,236]DEBUG  1023[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2017-10-14 14:08:43,236]DEBUG  1023[main] - org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1019) - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2017-10-14 14:08:43,236]DEBUG  1023[main] - org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name Order
[2017-10-14 14:08:43,236] INFO  1023[main] - org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:530) - Bind entity com.softserveinc.edu.oms.domain.entities.Order on table Orders
[2017-10-14 14:08:43,239]DEBUG  1026[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=ID, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:43,239]DEBUG  1026[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property id with lazy=false
[2017-10-14 14:08:43,240]DEBUG  1027[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for id
[2017-10-14 14:08:43,240]DEBUG  1027[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property id
[2017-10-14 14:08:43,240]DEBUG  1027[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3JoinColumn{logicalColumnName='Assigne', referencedColumn='', mappedBy=''}
[2017-10-14 14:08:43,240]DEBUG  1027[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=assigne, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:43,241]DEBUG  1028[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property assigne
[2017-10-14 14:08:43,241]DEBUG  1028[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3JoinColumn{logicalColumnName='Customer', referencedColumn='', mappedBy=''}
[2017-10-14 14:08:43,241]DEBUG  1028[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=customer, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:43,241]DEBUG  1028[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property customer
[2017-10-14 14:08:43,242]DEBUG  1029[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=DeliveryDate, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:43,242]DEBUG  1029[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property deliveryDate with lazy=false
[2017-10-14 14:08:43,242]DEBUG  1029[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for deliveryDate
[2017-10-14 14:08:43,242]DEBUG  1029[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property deliveryDate
[2017-10-14 14:08:43,243]DEBUG  1030[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=IsGift, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:43,243]DEBUG  1030[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property isGift with lazy=false
[2017-10-14 14:08:43,243]DEBUG  1030[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for isGift
[2017-10-14 14:08:43,243]DEBUG  1030[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property isGift
[2017-10-14 14:08:43,244]DEBUG  1031[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=MaxDiscount, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:43,244]DEBUG  1031[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property maxDiscount with lazy=false
[2017-10-14 14:08:43,244]DEBUG  1031[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for maxDiscount
[2017-10-14 14:08:43,244]DEBUG  1031[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property maxDiscount
[2017-10-14 14:08:43,244]DEBUG  1031[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=OrderDate, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:43,245]DEBUG  1032[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property orderDate with lazy=false
[2017-10-14 14:08:43,245]DEBUG  1032[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for orderDate
[2017-10-14 14:08:43,245]DEBUG  1032[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property orderDate
[2017-10-14 14:08:43,245]DEBUG  1032[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=OrderName, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:43,245]DEBUG  1032[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property orderName with lazy=false
[2017-10-14 14:08:43,246]DEBUG  1033[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for orderName
[2017-10-14 14:08:43,246]DEBUG  1033[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property orderName
[2017-10-14 14:08:43,246]DEBUG  1033[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=OrderNumber, insertable=true, updatable=true, unique=true}
[2017-10-14 14:08:43,246]DEBUG  1033[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property orderNumber with lazy=false
[2017-10-14 14:08:43,247]DEBUG  1034[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for orderNumber
[2017-10-14 14:08:43,247]DEBUG  1034[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property orderNumber
[2017-10-14 14:08:43,247]DEBUG  1034[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3JoinColumn{logicalColumnName='OrderStatusRef', referencedColumn='', mappedBy=''}
[2017-10-14 14:08:43,247]DEBUG  1034[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=orderStatus, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:43,248]DEBUG  1035[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property orderStatus
[2017-10-14 14:08:43,248]DEBUG  1035[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=PreferableDeliveryDate, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:43,248]DEBUG  1035[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property preferableDeliveryDate with lazy=false
[2017-10-14 14:08:43,248]DEBUG  1035[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for preferableDeliveryDate
[2017-10-14 14:08:43,248]DEBUG  1035[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property preferableDeliveryDate
[2017-10-14 14:08:43,249]DEBUG  1036[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=TotalPrice, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:43,249]DEBUG  1036[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property totalPrice with lazy=false
[2017-10-14 14:08:43,249]DEBUG  1036[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for totalPrice
[2017-10-14 14:08:43,249]DEBUG  1036[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property totalPrice
[2017-10-14 14:08:43,249] INFO  1036[main] - org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:532) - Binding entity from annotated class: com.softserveinc.edu.oms.domain.entities.Product
[2017-10-14 14:08:43,250]DEBUG  1037[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2017-10-14 14:08:43,250]DEBUG  1037[main] - org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1019) - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2017-10-14 14:08:43,250]DEBUG  1037[main] - org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name Product
[2017-10-14 14:08:43,251] INFO  1038[main] - org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:530) - Bind entity com.softserveinc.edu.oms.domain.entities.Product on table Products
[2017-10-14 14:08:43,252]DEBUG  1039[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Products), mappingColumn=ID, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:43,252]DEBUG  1039[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property id with lazy=false
[2017-10-14 14:08:43,252]DEBUG  1039[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for id
[2017-10-14 14:08:43,253]DEBUG  1040[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property id
[2017-10-14 14:08:43,253]DEBUG  1040[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Products), mappingColumn=IsProductActive, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:43,253]DEBUG  1040[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property active with lazy=false
[2017-10-14 14:08:43,253]DEBUG  1040[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for active
[2017-10-14 14:08:43,254]DEBUG  1041[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property active
[2017-10-14 14:08:43,254]DEBUG  1041[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Products), mappingColumn=ProductDescription, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:43,254]DEBUG  1041[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property productDescription with lazy=false
[2017-10-14 14:08:43,254]DEBUG  1041[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for productDescription
[2017-10-14 14:08:43,254]DEBUG  1041[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property productDescription
[2017-10-14 14:08:43,255]DEBUG  1042[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Products), mappingColumn=ProductName, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:43,255]DEBUG  1042[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property productName with lazy=false
[2017-10-14 14:08:43,255]DEBUG  1042[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for productName
[2017-10-14 14:08:43,255]DEBUG  1042[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property productName
[2017-10-14 14:08:43,256]DEBUG  1043[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Products), mappingColumn=ProductPrice, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:43,256]DEBUG  1043[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property productPrice with lazy=false
[2017-10-14 14:08:43,256]DEBUG  1043[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for productPrice
[2017-10-14 14:08:43,256]DEBUG  1043[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property productPrice
[2017-10-14 14:08:43,256] INFO  1043[main] - org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:532) - Binding entity from annotated class: com.softserveinc.edu.oms.domain.entities.Dimension
[2017-10-14 14:08:43,257]DEBUG  1044[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2017-10-14 14:08:43,257]DEBUG  1044[main] - org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1019) - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2017-10-14 14:08:43,257]DEBUG  1044[main] - org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name Dimension
[2017-10-14 14:08:43,257] INFO  1044[main] - org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:530) - Bind entity com.softserveinc.edu.oms.domain.entities.Dimension on table Dimensions
[2017-10-14 14:08:43,258]DEBUG  1045[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Dimensions), mappingColumn=ID, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:43,259]DEBUG  1046[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property id with lazy=false
[2017-10-14 14:08:43,259]DEBUG  1046[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for id
[2017-10-14 14:08:43,259]DEBUG  1046[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property id
[2017-10-14 14:08:43,259]DEBUG  1046[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Dimensions), mappingColumn=DimensionName, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:43,260]DEBUG  1047[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property dimensionName with lazy=false
[2017-10-14 14:08:43,260]DEBUG  1047[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for dimensionName
[2017-10-14 14:08:43,260]DEBUG  1047[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property dimensionName
[2017-10-14 14:08:43,260]DEBUG  1047[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Dimensions), mappingColumn=NumberOfProducts, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:43,261]DEBUG  1048[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property numberOfProduct with lazy=false
[2017-10-14 14:08:43,261]DEBUG  1048[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for numberOfProduct
[2017-10-14 14:08:43,261]DEBUG  1048[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property numberOfProduct
[2017-10-14 14:08:43,261] INFO  1048[main] - org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:532) - Binding entity from annotated class: com.softserveinc.edu.oms.domain.entities.OrderItem
[2017-10-14 14:08:43,261]DEBUG  1048[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2017-10-14 14:08:43,262]DEBUG  1049[main] - org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1019) - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2017-10-14 14:08:43,262]DEBUG  1049[main] - org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name OrderItem
[2017-10-14 14:08:43,262] INFO  1049[main] - org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:530) - Bind entity com.softserveinc.edu.oms.domain.entities.OrderItem on table OrderItems
[2017-10-14 14:08:43,264]DEBUG  1051[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderItems), mappingColumn=ID, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:43,264]DEBUG  1051[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property id with lazy=false
[2017-10-14 14:08:43,264]DEBUG  1051[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for id
[2017-10-14 14:08:43,264]DEBUG  1051[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property id
[2017-10-14 14:08:43,265]DEBUG  1052[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderItems), mappingColumn=Cost, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:43,265]DEBUG  1052[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property cost with lazy=false
[2017-10-14 14:08:43,274]DEBUG  1061[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for cost
[2017-10-14 14:08:43,275]DEBUG  1062[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property cost
[2017-10-14 14:08:43,275]DEBUG  1062[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3JoinColumn{logicalColumnName='DimensionRef', referencedColumn='', mappedBy=''}
[2017-10-14 14:08:43,275]DEBUG  1062[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderItems), mappingColumn=dimension, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:43,276]DEBUG  1063[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property dimension
[2017-10-14 14:08:43,276]DEBUG  1063[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderItems), mappingColumn=ItemPrice, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:43,276]DEBUG  1063[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property itemPrice with lazy=false
[2017-10-14 14:08:43,276]DEBUG  1063[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for itemPrice
[2017-10-14 14:08:43,276]DEBUG  1063[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property itemPrice
[2017-10-14 14:08:43,277]DEBUG  1064[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3JoinColumn{logicalColumnName='OrderRef', referencedColumn='', mappedBy=''}
[2017-10-14 14:08:43,277]DEBUG  1064[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderItems), mappingColumn=order, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:43,277]DEBUG  1064[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property order
[2017-10-14 14:08:43,277]DEBUG  1064[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3JoinColumn{logicalColumnName='ProductRef', referencedColumn='', mappedBy=''}
[2017-10-14 14:08:43,278]DEBUG  1065[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderItems), mappingColumn=product, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:43,278]DEBUG  1065[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property product
[2017-10-14 14:08:43,278]DEBUG  1065[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderItems), mappingColumn=Quantity, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:43,278]DEBUG  1065[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property quantity with lazy=false
[2017-10-14 14:08:43,279]DEBUG  1066[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for quantity
[2017-10-14 14:08:43,279]DEBUG  1066[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property quantity
[2017-10-14 14:08:43,279] INFO  1066[main] - org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:532) - Binding entity from annotated class: com.softserveinc.edu.oms.domain.entities.CreditCardType
[2017-10-14 14:08:43,279]DEBUG  1066[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2017-10-14 14:08:43,280]DEBUG  1067[main] - org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1019) - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2017-10-14 14:08:43,280]DEBUG  1067[main] - org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name CreditCardType
[2017-10-14 14:08:43,280] INFO  1067[main] - org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:530) - Bind entity com.softserveinc.edu.oms.domain.entities.CreditCardType on table CardType
[2017-10-14 14:08:43,282]DEBUG  1069[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CardType), mappingColumn=ID, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:43,282]DEBUG  1069[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property id with lazy=false
[2017-10-14 14:08:43,283]DEBUG  1070[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for id
[2017-10-14 14:08:43,283]DEBUG  1070[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property id
[2017-10-14 14:08:43,283]DEBUG  1070[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CardType), mappingColumn=CardType, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:43,284]DEBUG  1071[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property cardType with lazy=false
[2017-10-14 14:08:43,284]DEBUG  1071[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for cardType
[2017-10-14 14:08:43,284]DEBUG  1071[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property cardType
[2017-10-14 14:08:43,284]DEBUG  1071[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CardType), mappingColumn=CardNumber, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:43,285]DEBUG  1072[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property creditCardNumber with lazy=false
[2017-10-14 14:08:43,285]DEBUG  1072[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for creditCardNumber
[2017-10-14 14:08:43,285]DEBUG  1072[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property creditCardNumber
[2017-10-14 14:08:43,285]DEBUG  1072[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CardType), mappingColumn=CardCvv2, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:43,286]DEBUG  1073[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property cvv2 with lazy=false
[2017-10-14 14:08:43,286]DEBUG  1073[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for cvv2
[2017-10-14 14:08:43,286]DEBUG  1073[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property cvv2
[2017-10-14 14:08:43,286]DEBUG  1073[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CardType), mappingColumn=Expiration_Date, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:43,287]DEBUG  1074[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property expDate with lazy=false
[2017-10-14 14:08:43,287]DEBUG  1074[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for expDate
[2017-10-14 14:08:43,287]DEBUG  1074[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property expDate
[2017-10-14 14:08:43,287]DEBUG  1074[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CardType), mappingColumn=IssueDate, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:43,288]DEBUG  1075[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property issueDate with lazy=false
[2017-10-14 14:08:43,288]DEBUG  1075[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for issueDate
[2017-10-14 14:08:43,288]DEBUG  1075[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property issueDate
[2017-10-14 14:08:43,288]DEBUG  1075[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CardType), mappingColumn=IssueNumber, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:43,289]DEBUG  1076[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property issueNumber with lazy=false
[2017-10-14 14:08:43,289]DEBUG  1076[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for issueNumber
[2017-10-14 14:08:43,289]DEBUG  1076[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property issueNumber
[2017-10-14 14:08:43,290]DEBUG  1077[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for id
[2017-10-14 14:08:43,290]DEBUG  1077[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for roleName
[2017-10-14 14:08:43,290]DEBUG  1077[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for id
[2017-10-14 14:08:43,291]DEBUG  1078[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for regionName
[2017-10-14 14:08:43,291]DEBUG  1078[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for id
[2017-10-14 14:08:43,291]DEBUG  1078[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for discount
[2017-10-14 14:08:43,291]DEBUG  1078[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for maxRange
[2017-10-14 14:08:43,292]DEBUG  1079[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for minRange
[2017-10-14 14:08:43,292]DEBUG  1079[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for typeName
[2017-10-14 14:08:43,292]DEBUG  1079[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for id
[2017-10-14 14:08:43,292]DEBUG  1079[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for active
[2017-10-14 14:08:43,292]DEBUG  1079[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for balance
[2017-10-14 14:08:43,293]DEBUG  1080[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for email
[2017-10-14 14:08:43,293]DEBUG  1080[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for firstName
[2017-10-14 14:08:43,293]DEBUG  1080[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for lastName
[2017-10-14 14:08:43,293]DEBUG  1080[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for login
[2017-10-14 14:08:43,293]DEBUG  1080[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for password
[2017-10-14 14:08:43,294]DEBUG  1081[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for id
[2017-10-14 14:08:43,294]DEBUG  1081[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for orderStatusName
[2017-10-14 14:08:43,294]DEBUG  1081[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for id
[2017-10-14 14:08:43,294]DEBUG  1081[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for deliveryDate
[2017-10-14 14:08:43,294]DEBUG  1081[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for isGift
[2017-10-14 14:08:43,295]DEBUG  1082[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for maxDiscount
[2017-10-14 14:08:43,295]DEBUG  1082[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for orderDate
[2017-10-14 14:08:43,295]DEBUG  1082[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for orderName
[2017-10-14 14:08:43,295]DEBUG  1082[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for orderNumber
[2017-10-14 14:08:43,295]DEBUG  1082[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for preferableDeliveryDate
[2017-10-14 14:08:43,296]DEBUG  1083[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for totalPrice
[2017-10-14 14:08:43,296]DEBUG  1083[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for id
[2017-10-14 14:08:43,296]DEBUG  1083[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for active
[2017-10-14 14:08:43,296]DEBUG  1083[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for productDescription
[2017-10-14 14:08:43,296]DEBUG  1083[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for productName
[2017-10-14 14:08:43,297]DEBUG  1084[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for productPrice
[2017-10-14 14:08:43,297]DEBUG  1084[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for id
[2017-10-14 14:08:43,297]DEBUG  1084[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for dimensionName
[2017-10-14 14:08:43,297]DEBUG  1084[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for numberOfProduct
[2017-10-14 14:08:43,297]DEBUG  1084[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for id
[2017-10-14 14:08:43,298]DEBUG  1085[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for cost
[2017-10-14 14:08:43,298]DEBUG  1085[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for itemPrice
[2017-10-14 14:08:43,298]DEBUG  1085[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for quantity
[2017-10-14 14:08:43,298]DEBUG  1085[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for id
[2017-10-14 14:08:43,298]DEBUG  1085[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for cardType
[2017-10-14 14:08:43,299]DEBUG  1086[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for creditCardNumber
[2017-10-14 14:08:43,299]DEBUG  1086[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for cvv2
[2017-10-14 14:08:43,299]DEBUG  1086[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for expDate
[2017-10-14 14:08:43,299]DEBUG  1086[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for issueDate
[2017-10-14 14:08:43,299]DEBUG  1086[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for issueNumber
[2017-10-14 14:08:43,300]DEBUG  1087[main] - org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) - processing fk mappings (*ToOne and JoinedSubclass)
[2017-10-14 14:08:43,304]DEBUG  1091[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) - processing extends queue
[2017-10-14 14:08:43,304]DEBUG  1091[main] - org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) - processing extends queue
[2017-10-14 14:08:43,304]DEBUG  1091[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) - processing collection mappings
[2017-10-14 14:08:43,304]DEBUG  1091[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) - processing native query and ResultSetMapping mappings
[2017-10-14 14:08:43,305]DEBUG  1092[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) - processing association property references
[2017-10-14 14:08:43,305]DEBUG  1092[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) - processing foreign key constraints
[2017-10-14 14:08:43,305]DEBUG  1092[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Product
[2017-10-14 14:08:43,305]DEBUG  1092[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Dimension
[2017-10-14 14:08:43,305]DEBUG  1092[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Order
[2017-10-14 14:08:43,305]DEBUG  1092[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.OrderStatus
[2017-10-14 14:08:43,306]DEBUG  1093[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.User
[2017-10-14 14:08:43,306]DEBUG  1093[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.User
[2017-10-14 14:08:43,306]DEBUG  1093[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Role
[2017-10-14 14:08:43,306]DEBUG  1093[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.CustomerType
[2017-10-14 14:08:43,306]DEBUG  1093[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Region
[2017-10-14 14:08:43,307] INFO  1094[main] - org.hibernate.cfg.Configuration.applyHibernateValidatorLegacyConstraintsOnDDL(Configuration.java:1676) - Hibernate Validator not found: ignoring
[2017-10-14 14:08:43,316] INFO  1103[main] - org.hibernate.validator.util.Version.<clinit>(Version.java:24) - Hibernate Validator 4.2.0.Final
[2017-10-14 14:08:43,322]DEBUG  1109[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:107) - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2017-10-14 14:08:43,322]DEBUG  1109[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:118) - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.engine.resolver.JPATraversableResolver.
[2017-10-14 14:08:43,324]DEBUG  1111[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:203) - Trying to load META-INF/validation.xml for XML based Validator configuration.
[2017-10-14 14:08:43,325]DEBUG  1112[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:206) - No META-INF/validation.xml found. Using annotation based configuration only
[2017-10-14 14:08:43,377] INFO  1164[main] - org.springframework.orm.hibernate3.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:777) - Building new Hibernate SessionFactory
[2017-10-14 14:08:43,377]DEBUG  1164[main] - org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1854) - Preparing to build session factory with filters : {}
[2017-10-14 14:08:43,377]DEBUG  1164[main] - org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) - Processing hbm.xml files
[2017-10-14 14:08:43,378]DEBUG  1165[main] - org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) - Process annotated classes
[2017-10-14 14:08:43,378]DEBUG  1165[main] - org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) - processing fk mappings (*ToOne and JoinedSubclass)
[2017-10-14 14:08:43,378]DEBUG  1165[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) - processing extends queue
[2017-10-14 14:08:43,378]DEBUG  1165[main] - org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) - processing extends queue
[2017-10-14 14:08:43,378]DEBUG  1165[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) - processing collection mappings
[2017-10-14 14:08:43,378]DEBUG  1165[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) - processing native query and ResultSetMapping mappings
[2017-10-14 14:08:43,379]DEBUG  1166[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) - processing association property references
[2017-10-14 14:08:43,379]DEBUG  1166[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) - processing foreign key constraints
[2017-10-14 14:08:43,379]DEBUG  1166[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Product
[2017-10-14 14:08:43,379]DEBUG  1166[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Dimension
[2017-10-14 14:08:43,379]DEBUG  1166[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Order
[2017-10-14 14:08:43,379]DEBUG  1166[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.OrderStatus
[2017-10-14 14:08:43,380]DEBUG  1167[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.User
[2017-10-14 14:08:43,380]DEBUG  1167[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.User
[2017-10-14 14:08:43,380]DEBUG  1167[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Role
[2017-10-14 14:08:43,380]DEBUG  1167[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.CustomerType
[2017-10-14 14:08:43,380]DEBUG  1167[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Region
[2017-10-14 14:08:43,381]DEBUG  1168[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:107) - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2017-10-14 14:08:43,381]DEBUG  1168[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:118) - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.engine.resolver.JPATraversableResolver.
[2017-10-14 14:08:43,381]DEBUG  1168[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:203) - Trying to load META-INF/validation.xml for XML based Validator configuration.
[2017-10-14 14:08:43,382]DEBUG  1169[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:206) - No META-INF/validation.xml found. Using annotation based configuration only
[2017-10-14 14:08:43,401]DEBUG  1188[main] - org.hibernate.cfg.Configuration.enableLegacyHibernateValidator(Configuration.java:1896) - Legacy Validator not present in classpath, ignoring event listener registration
[2017-10-14 14:08:43,401]DEBUG  1188[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:107) - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2017-10-14 14:08:43,401]DEBUG  1188[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:118) - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.engine.resolver.JPATraversableResolver.
[2017-10-14 14:08:43,401]DEBUG  1188[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:203) - Trying to load META-INF/validation.xml for XML based Validator configuration.
[2017-10-14 14:08:43,402]DEBUG  1189[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:206) - No META-INF/validation.xml found. Using annotation based configuration only
[2017-10-14 14:08:43,405]DEBUG  1192[main] - org.hibernate.cfg.search.HibernateSearchEventListenerRegister.attemptToLoadSearchEventListener(HibernateSearchEventListenerRegister.java:231) - Search not present in classpath, ignoring event listener registration.
[2017-10-14 14:08:43,405] INFO  1192[main] - org.hibernate.cfg.search.HibernateSearchEventListenerRegister.enableHibernateSearch(HibernateSearchEventListenerRegister.java:75) - Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled.
[2017-10-14 14:08:43,410] INFO  1197[main] - org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:64) - Using Hibernate built-in connection pool (not for production use!)
[2017-10-14 14:08:43,410] INFO  1197[main] - org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:65) - Hibernate connection pool size: 20
[2017-10-14 14:08:43,410] INFO  1197[main] - org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:68) - autocommit mode: false
[2017-10-14 14:08:43,413] INFO  1200[main] - org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:103) - using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost:3306/test1
[2017-10-14 14:08:43,413] INFO  1200[main] - org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:106) - connection properties: {user=maria, password=333qwerb}
[2017-10-14 14:08:43,414]DEBUG  1201[main] - org.hibernate.connection.DriverManagerConnectionProvider.getConnection(DriverManagerConnectionProvider.java:132) - opening new JDBC connection
[2017-10-14 14:08:43,548]DEBUG  1335[main] - org.hibernate.connection.DriverManagerConnectionProvider.getConnection(DriverManagerConnectionProvider.java:138) - created connection to: jdbc:mysql://localhost:3306/test1, Isolation Level: 4
[2017-10-14 14:08:43,562] INFO  1349[main] - org.hibernate.dialect.Dialect.<init>(Dialect.java:135) - Using dialect: org.hibernate.dialect.MySQL5Dialect
[2017-10-14 14:08:43,571] INFO  1358[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:126) - Database ->
       name : MySQL
    version : 5.5.56-MariaDB
      major : 5
      minor : 5
[2017-10-14 14:08:43,572] INFO  1359[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:132) - Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.17 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1
[2017-10-14 14:08:43,572] INFO  1359[main] - org.hibernate.transaction.TransactionFactoryFactory.buildTransactionFactory(TransactionFactoryFactory.java:65) - Transaction strategy: org.springframework.orm.hibernate3.SpringTransactionFactory
[2017-10-14 14:08:43,573] INFO  1360[main] - org.hibernate.transaction.TransactionManagerLookupFactory.getTransactionManagerLookup(TransactionManagerLookupFactory.java:83) - No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)
[2017-10-14 14:08:43,574] INFO  1361[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:179) - Automatic flush during beforeCompletion(): disabled
[2017-10-14 14:08:43,574] INFO  1361[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:183) - Automatic session close at end of transaction: disabled
[2017-10-14 14:08:43,574] INFO  1361[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:190) - JDBC batch size: 15
[2017-10-14 14:08:43,574] INFO  1361[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:193) - JDBC batch updates for versioned data: disabled
[2017-10-14 14:08:43,575] INFO  1362[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:198) - Scrollable result sets: enabled
[2017-10-14 14:08:43,575]DEBUG  1362[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:202) - Wrap result sets: disabled
[2017-10-14 14:08:43,575] INFO  1362[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:206) - JDBC3 getGeneratedKeys(): enabled
[2017-10-14 14:08:43,575] INFO  1362[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:214) - Connection release mode: auto
[2017-10-14 14:08:43,576] INFO  1363[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:238) - Maximum outer join fetch depth: 2
[2017-10-14 14:08:43,576] INFO  1363[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:241) - Default batch fetch size: 1
[2017-10-14 14:08:43,577] INFO  1364[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:245) - Generate SQL with comments: disabled
[2017-10-14 14:08:43,577] INFO  1364[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:249) - Order SQL updates by primary key: disabled
[2017-10-14 14:08:43,577] INFO  1364[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:253) - Order SQL inserts for batching: disabled
[2017-10-14 14:08:43,577] INFO  1364[main] - org.hibernate.cfg.SettingsFactory.createQueryTranslatorFactory(SettingsFactory.java:431) - Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory
[2017-10-14 14:08:43,578] INFO  1365[main] - org.hibernate.hql.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:47) - Using ASTQueryTranslatorFactory
[2017-10-14 14:08:43,579] INFO  1366[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:261) - Query language substitutions: {}
[2017-10-14 14:08:43,579] INFO  1366[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:266) - JPA-QL strict compliance: disabled
[2017-10-14 14:08:43,579] INFO  1366[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:271) - Second-level cache: enabled
[2017-10-14 14:08:43,579] INFO  1366[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:275) - Query cache: disabled
[2017-10-14 14:08:43,580] INFO  1367[main] - org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:406) - Cache region factory : org.hibernate.cache.impl.NoCachingRegionFactory
[2017-10-14 14:08:43,580] INFO  1367[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:285) - Optimize cache for minimal puts: disabled
[2017-10-14 14:08:43,581] INFO  1368[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:294) - Structured second-level cache entries: disabled
[2017-10-14 14:08:43,584] INFO  1371[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:323) - Statistics: disabled
[2017-10-14 14:08:43,584] INFO  1371[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:327) - Deleted entity synthetic identifier rollback: disabled
[2017-10-14 14:08:43,584] INFO  1371[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:343) - Default entity-mode: pojo
[2017-10-14 14:08:43,585] INFO  1372[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:347) - Named query checking : enabled
[2017-10-14 14:08:43,585] INFO  1372[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:351) - Check Nullability in Core (should be disabled when Bean Validation is on): disabled
[2017-10-14 14:08:43,599] INFO  1386[main] - org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:202) - building session factory
[2017-10-14 14:08:43,602]DEBUG  1389[main] - org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:206) - Statistics initialized [enabled=false]}
[2017-10-14 14:08:43,603]DEBUG  1390[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration boolean -> org.hibernate.type.BooleanType@6e6c50aa
[2017-10-14 14:08:43,603]DEBUG  1390[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration boolean -> org.hibernate.type.BooleanType@6e6c50aa
[2017-10-14 14:08:43,603]DEBUG  1390[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6e6c50aa
[2017-10-14 14:08:43,604]DEBUG  1391[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@35fea088
[2017-10-14 14:08:43,604]DEBUG  1391[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@a42b882
[2017-10-14 14:08:43,604]DEBUG  1391[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration yes_no -> org.hibernate.type.YesNoType@51a95c64
[2017-10-14 14:08:43,604]DEBUG  1391[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration byte -> org.hibernate.type.ByteType@2e802eff
[2017-10-14 14:08:43,605]DEBUG  1392[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration byte -> org.hibernate.type.ByteType@2e802eff
[2017-10-14 14:08:43,605]DEBUG  1392[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2e802eff
[2017-10-14 14:08:43,605]DEBUG  1392[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration character -> org.hibernate.type.CharacterType@4511f60f
[2017-10-14 14:08:43,605]DEBUG  1392[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration char -> org.hibernate.type.CharacterType@4511f60f
[2017-10-14 14:08:43,605]DEBUG  1392[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4511f60f
[2017-10-14 14:08:43,606]DEBUG  1393[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration short -> org.hibernate.type.ShortType@2c852ce7
[2017-10-14 14:08:43,606]DEBUG  1393[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration short -> org.hibernate.type.ShortType@2c852ce7
[2017-10-14 14:08:43,606]DEBUG  1393[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2c852ce7
[2017-10-14 14:08:43,606]DEBUG  1393[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration integer -> org.hibernate.type.IntegerType@244e0d38
[2017-10-14 14:08:43,606]DEBUG  1393[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration int -> org.hibernate.type.IntegerType@244e0d38
[2017-10-14 14:08:43,607]DEBUG  1394[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@244e0d38
[2017-10-14 14:08:43,607]DEBUG  1394[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration long -> org.hibernate.type.LongType@ef45815
[2017-10-14 14:08:43,607]DEBUG  1394[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration long -> org.hibernate.type.LongType@ef45815
[2017-10-14 14:08:43,607]DEBUG  1394[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@ef45815
[2017-10-14 14:08:43,607]DEBUG  1394[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration float -> org.hibernate.type.FloatType@969f4cd
[2017-10-14 14:08:43,608]DEBUG  1395[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration float -> org.hibernate.type.FloatType@969f4cd
[2017-10-14 14:08:43,608]DEBUG  1395[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@969f4cd
[2017-10-14 14:08:43,608]DEBUG  1395[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration double -> org.hibernate.type.DoubleType@5434050
[2017-10-14 14:08:43,608]DEBUG  1395[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration double -> org.hibernate.type.DoubleType@5434050
[2017-10-14 14:08:43,608]DEBUG  1395[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5434050
[2017-10-14 14:08:43,609]DEBUG  1396[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@79ef1245
[2017-10-14 14:08:43,609]DEBUG  1396[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@79ef1245
[2017-10-14 14:08:43,609]DEBUG  1396[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@11427db
[2017-10-14 14:08:43,609]DEBUG  1396[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@11427db
[2017-10-14 14:08:43,609]DEBUG  1396[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration string -> org.hibernate.type.StringType@3525c6
[2017-10-14 14:08:43,610]DEBUG  1397[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.String -> org.hibernate.type.StringType@3525c6
[2017-10-14 14:08:43,610]DEBUG  1397[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration url -> org.hibernate.type.UrlType@5d0d6868
[2017-10-14 14:08:43,610]DEBUG  1397[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5d0d6868
[2017-10-14 14:08:43,610]DEBUG  1397[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration date -> org.hibernate.type.DateType@6404aca7
[2017-10-14 14:08:43,610]DEBUG  1397[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6404aca7
[2017-10-14 14:08:43,611]DEBUG  1398[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration time -> org.hibernate.type.TimeType@3baa0bf5
[2017-10-14 14:08:43,611]DEBUG  1398[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3baa0bf5
[2017-10-14 14:08:43,611]DEBUG  1398[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration timestamp -> org.hibernate.type.TimestampType@784b7c29
[2017-10-14 14:08:43,611]DEBUG  1398[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@784b7c29
[2017-10-14 14:08:43,611]DEBUG  1398[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@784b7c29
[2017-10-14 14:08:43,612]DEBUG  1399[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@28b6f947
[2017-10-14 14:08:43,612]DEBUG  1399[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration calendar -> org.hibernate.type.CalendarType@3ef221ad
[2017-10-14 14:08:43,612]DEBUG  1399[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3ef221ad
[2017-10-14 14:08:43,612]DEBUG  1399[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3ef221ad
[2017-10-14 14:08:43,613]DEBUG  1400[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@24517540
[2017-10-14 14:08:43,613]DEBUG  1400[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration locale -> org.hibernate.type.LocaleType@692f95ad
[2017-10-14 14:08:43,613]DEBUG  1400[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@692f95ad
[2017-10-14 14:08:43,613]DEBUG  1400[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration currency -> org.hibernate.type.CurrencyType@146f1ad0
[2017-10-14 14:08:43,614]DEBUG  1401[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@146f1ad0
[2017-10-14 14:08:43,614]DEBUG  1401[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@bb6962e
[2017-10-14 14:08:43,614]DEBUG  1401[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@bb6962e
[2017-10-14 14:08:43,614]DEBUG  1401[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration class -> org.hibernate.type.ClassType@78a0bc79
[2017-10-14 14:08:43,614]DEBUG  1401[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@78a0bc79
[2017-10-14 14:08:43,615]DEBUG  1402[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@16de9eea
[2017-10-14 14:08:43,615]DEBUG  1402[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@16de9eea
[2017-10-14 14:08:43,615]DEBUG  1402[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5f179316
[2017-10-14 14:08:43,615]DEBUG  1402[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@6354743
[2017-10-14 14:08:43,615]DEBUG  1402[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration binary -> org.hibernate.type.BinaryType@737d54dd
[2017-10-14 14:08:43,616]DEBUG  1403[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration byte[] -> org.hibernate.type.BinaryType@737d54dd
[2017-10-14 14:08:43,616]DEBUG  1403[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration [B -> org.hibernate.type.BinaryType@737d54dd
[2017-10-14 14:08:43,616]DEBUG  1403[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@55071871
[2017-10-14 14:08:43,616]DEBUG  1403[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@55071871
[2017-10-14 14:08:43,616]DEBUG  1403[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@55071871
[2017-10-14 14:08:43,617]DEBUG  1404[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration image -> org.hibernate.type.ImageType@38c8c792
[2017-10-14 14:08:43,617]DEBUG  1404[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration characters -> org.hibernate.type.CharArrayType@4ae5c9e2
[2017-10-14 14:08:43,617]DEBUG  1404[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration char[] -> org.hibernate.type.CharArrayType@4ae5c9e2
[2017-10-14 14:08:43,617]DEBUG  1404[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration [C -> org.hibernate.type.CharArrayType@4ae5c9e2
[2017-10-14 14:08:43,617]DEBUG  1404[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@28e67788
[2017-10-14 14:08:43,618]DEBUG  1405[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@28e67788
[2017-10-14 14:08:43,618]DEBUG  1405[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@28e67788
[2017-10-14 14:08:43,618]DEBUG  1405[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration text -> org.hibernate.type.TextType@70d586bc
[2017-10-14 14:08:43,618]DEBUG  1405[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration blob -> org.hibernate.type.BlobType@7520d2a
[2017-10-14 14:08:43,619]DEBUG  1406[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7520d2a
[2017-10-14 14:08:43,619]DEBUG  1406[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@77a2473e
[2017-10-14 14:08:43,620]DEBUG  1407[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@6a768fd2
[2017-10-14 14:08:43,620]DEBUG  1407[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration clob -> org.hibernate.type.ClobType@42593848
[2017-10-14 14:08:43,620]DEBUG  1407[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@42593848
[2017-10-14 14:08:43,620]DEBUG  1407[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1ddb0486
[2017-10-14 14:08:43,620]DEBUG  1407[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@69a0a8ec
[2017-10-14 14:08:43,621]DEBUG  1408[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@bd42944
[2017-10-14 14:08:43,621]DEBUG  1408[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration serializable -> org.hibernate.type.SerializableType@3d03d2c8
[2017-10-14 14:08:43,621]DEBUG  1408[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration object -> org.hibernate.type.ObjectType@7a8fc519
[2017-10-14 14:08:43,621]DEBUG  1408[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7a8fc519
[2017-10-14 14:08:43,621]DEBUG  1408[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1587be37
[2017-10-14 14:08:43,622]DEBUG  1409[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7ab18869
[2017-10-14 14:08:43,622]DEBUG  1409[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@61f2bf35
[2017-10-14 14:08:43,622]DEBUG  1409[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@680849bd
[2017-10-14 14:08:43,622]DEBUG  1409[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@522f63e7
[2017-10-14 14:08:43,623]DEBUG  1410[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1928dc07
[2017-10-14 14:08:43,623]DEBUG  1410[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5279effd
[2017-10-14 14:08:43,623]DEBUG  1410[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3d818704
[2017-10-14 14:08:43,623]DEBUG  1410[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration clob -> org.hibernate.type.ClobType@1a9c7dfe
[2017-10-14 14:08:43,623] INFO  1410[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) - Type registration [clob] overrides previous : org.hibernate.type.ClobType@42593848
[2017-10-14 14:08:43,624]DEBUG  1411[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1a9c7dfe
[2017-10-14 14:08:43,624] INFO  1411[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) - Type registration [java.sql.Clob] overrides previous : org.hibernate.type.ClobType@42593848
[2017-10-14 14:08:43,624]DEBUG  1411[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@37b241c1
[2017-10-14 14:08:43,624] INFO  1411[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) - Type registration [wrapper_characters_clob] overrides previous : org.hibernate.type.CharacterArrayClobType@69a0a8ec
[2017-10-14 14:08:43,624]DEBUG  1411[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@17fb0278
[2017-10-14 14:08:43,625] INFO  1412[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) - Type registration [characters_clob] overrides previous : org.hibernate.type.PrimitiveCharacterArrayClobType@bd42944
[2017-10-14 14:08:43,625]DEBUG  1412[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1813bc58
[2017-10-14 14:08:43,625] INFO  1412[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) - Type registration [materialized_clob] overrides previous : org.hibernate.type.MaterializedClobType@1ddb0486
[2017-10-14 14:08:43,625]DEBUG  1412[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1e8d31d3
[2017-10-14 14:08:43,625] INFO  1412[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) - Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@77a2473e
[2017-10-14 14:08:43,626]DEBUG  1413[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@47c22350
[2017-10-14 14:08:43,626] INFO  1413[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) - Type registration [wrapper_materialized_blob] overrides previous : org.hibernate.type.WrappedMaterializedBlobType@6a768fd2
[2017-10-14 14:08:43,626]DEBUG  1413[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration blob -> org.hibernate.type.BlobType@6a51c5bd
[2017-10-14 14:08:43,626] INFO  1413[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) - Type registration [blob] overrides previous : org.hibernate.type.BlobType@7520d2a
[2017-10-14 14:08:43,626]DEBUG  1413[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6a51c5bd
[2017-10-14 14:08:43,627] INFO  1414[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) - Type registration [java.sql.Blob] overrides previous : org.hibernate.type.BlobType@7520d2a
[2017-10-14 14:08:43,628]DEBUG  1415[main] - org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:228) - Session factory constructed with filter configurations : {}
[2017-10-14 14:08:43,628]DEBUG  1415[main] - org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:232) - instantiating session factory with properties: {java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.password=333qwerb, sun.boot.library.path=/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre/lib/amd64, java.vm.version=24.151-b00, hibernate.connection.username=maria, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=OpenJDK 64-Bit Server VM, file.encoding.pkg=sun.io, user.country=US, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=unknown, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/tomcat/Documents/backup/OMS.Release, java.runtime.version=1.7.0_151-mockbuild_2017_08_23_16_26-b00, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, basedir=/home/tomcat/Documents/backup/OMS.Release, hibernate.current_session_context_class=org.springframework.orm.hibernate3.SpringSessionContext, java.endorsed.dirs=/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre/lib/endorsed, os.arch=amd64, surefire.real.class.path=/home/tomcat/Documents/backup/OMS.Release/target/surefire/surefirebooter1350476830626056606.jar, hibernate.check_nullability=false, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, surefire.test.class.path=/home/tomcat/Documents/backup/OMS.Release/target/test-classes:/home/tomcat/Documents/backup/OMS.Release/target/classes:/home/tomcat/.m2/repository/org/springframework/spring-context/3.0.5.RELEASE/spring-context-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-aop/3.0.5.RELEASE/spring-aop-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/home/tomcat/.m2/repository/org/springframework/spring-beans/3.0.5.RELEASE/spring-beans-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-core/3.0.5.RELEASE/spring-core-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-expression/3.0.5.RELEASE/spring-expression-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-asm/3.0.5.RELEASE/spring-asm-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-webmvc/3.0.5.RELEASE/spring-webmvc-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-context-support/3.0.5.RELEASE/spring-context-support-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-web/3.0.5.RELEASE/spring-web-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/roo/org.springframework.roo.annotations/1.0.2.RELEASE/org.springframework.roo.annotations-1.0.2.RELEASE.jar:/home/tomcat/.m2/repository/org/aspectj/aspectjrt/1.6.9/aspectjrt-1.6.9.jar:/home/tomcat/.m2/repository/org/slf4j/slf4j-api/1.5.10/slf4j-api-1.5.10.jar:/home/tomcat/.m2/repository/org/slf4j/jcl-over-slf4j/1.5.10/jcl-over-slf4j-1.5.10.jar:/home/tomcat/.m2/repository/org/slf4j/slf4j-log4j12/1.5.10/slf4j-log4j12-1.5.10.jar:/home/tomcat/.m2/repository/log4j/log4j/1.2.15/log4j-1.2.15.jar:/home/tomcat/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar:/home/tomcat/.m2/repository/javax/servlet/jstl/1.2/jstl-1.2.jar:/home/tomcat/.m2/repository/junit/junit/4.7/junit-4.7.jar:/home/tomcat/.m2/repository/org/hibernate/hibernate-core/3.6.5.Final/hibernate-core-3.6.5.Final.jar:/home/tomcat/.m2/repository/antlr/antlr/2.7.6/antlr-2.7.6.jar:/home/tomcat/.m2/repository/commons-collections/commons-collections/3.1/commons-collections-3.1.jar:/home/tomcat/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/home/tomcat/.m2/repository/org/hibernate/hibernate-commons-annotations/3.2.0.Final/hibernate-commons-annotations-3.2.0.Final.jar:/home/tomcat/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.0-api/1.0.0.Final/hibernate-jpa-2.0-api-1.0.0.Final.jar:/home/tomcat/.m2/repository/javax/transaction/jta/1.1/jta-1.1.jar:/home/tomcat/.m2/repository/net/sourceforge/jtds/jtds/1.2.4/jtds-1.2.4.jar:/home/tomcat/.m2/repository/javassist/javassist/3.12.1.GA/javassist-3.12.1.GA.jar:/home/tomcat/.m2/repository/org/springframework/spring-orm/3.0.5.RELEASE/spring-orm-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-jdbc/3.0.5.RELEASE/spring-jdbc-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-tx/3.0.5.RELEASE/spring-tx-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar:/home/tomcat/.m2/repository/org/springframework/spring-test/3.0.5.RELEASE/spring-test-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/security/spring-security-core/3.0.5.RELEASE/spring-security-core-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/aspectj/aspectjweaver/1.6.8/aspectjweaver-1.6.8.jar:/home/tomcat/.m2/repository/org/springframework/security/spring-security-config/3.0.5.RELEASE/spring-security-config-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/security/spring-security-web/3.0.5.RELEASE/spring-security-web-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/cglib/cglib/2.2.2/cglib-2.2.2.jar:/home/tomcat/.m2/repository/asm/asm/3.3.1/asm-3.3.1.jar:/home/tomcat/.m2/repository/mysql/mysql-connector-java/5.1.17/mysql-connector-java-5.1.17.jar:/home/tomcat/.m2/repository/org/hibernate/hibernate-validator/4.2.0.Final/hibernate-validator-4.2.0.Final.jar:/home/tomcat/.m2/repository/javax/validation/validation-api/1.0.0.GA/validation-api-1.0.0.GA.jar:/home/tomcat/.m2/repository/org/apache/tiles/tiles-jsp/2.2.2/tiles-jsp-2.2.2.jar:/home/tomcat/.m2/repository/org/apache/tiles/tiles-servlet/2.2.2/tiles-servlet-2.2.2.jar:/home/tomcat/.m2/repository/org/apache/tiles/tiles-core/2.2.2/tiles-core-2.2.2.jar:/home/tomcat/.m2/repository/org/apache/tiles/tiles-template/2.2.2/tiles-template-2.2.2.jar:/home/tomcat/.m2/repository/org/apache/tiles/tiles-api/2.2.2/tiles-api-2.2.2.jar:/home/tomcat/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.8.3/jackson-mapper-asl-1.8.3.jar:/home/tomcat/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.8.3/jackson-core-asl-1.8.3.jar:/home/tomcat/.m2/repository/net/sf/jasperreports/jasperreports/4.0.1/jasperreports-4.0.1.jar:/home/tomcat/.m2/repository/commons-beanutils/commons-beanutils/1.8.0/commons-beanutils-1.8.0.jar:/home/tomcat/.m2/repository/commons-digester/commons-digester/1.7/commons-digester-1.7.jar:/home/tomcat/.m2/repository/commons-logging/commons-logging/1.0.2/commons-logging-1.0.2.jar:/home/tomcat/.m2/repository/com/lowagie/itext/2.1.7/itext-2.1.7.jar:/home/tomcat/.m2/repository/bouncycastle/bcmail-jdk14/138/bcmail-jdk14-138.jar:/home/tomcat/.m2/repository/bouncycastle/bcprov-jdk14/138/bcprov-jdk14-138.jar:/home/tomcat/.m2/repository/org/bouncycastle/bctsp-jdk14/1.38/bctsp-jdk14-1.38.jar:/home/tomcat/.m2/repository/org/bouncycastle/bcprov-jdk14/1.38/bcprov-jdk14-1.38.jar:/home/tomcat/.m2/repository/org/bouncycastle/bcmail-jdk14/1.38/bcmail-jdk14-1.38.jar:/home/tomcat/.m2/repository/jfree/jcommon/1.0.15/jcommon-1.0.15.jar:/home/tomcat/.m2/repository/jfree/jfreechart/1.0.12/jfreechart-1.0.12.jar:/home/tomcat/.m2/repository/xml-apis/xml-apis/1.3.02/xml-apis-1.3.02.jar:/home/tomcat/.m2/repository/eclipse/jdtcore/3.1.0/jdtcore-3.1.0.jar:/home/tomcat/.m2/repository/org/springframework/security/spring-security-taglibs/3.0.5.RELEASE/spring-security-taglibs-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/security/spring-security-acl/3.0.5.RELEASE/spring-security-acl-3.0.5.RELEASE.jar:, java.specification.name=Java Platform API Specification, java.class.version=51.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.transaction.factory_class=org.springframework.orm.hibernate3.SpringTransactionFactory, os.version=3.10.0-693.el7.x86_64, user.home=/home/tomcat, user.timezone=Europe/Kiev, java.awt.printerjob=sun.print.PSPrinterJob, java.specification.version=1.7, file.encoding=UTF-8, hibernate.connection.driver_class=com.mysql.jdbc.Driver, user.name=tomcat, java.class.path=/home/tomcat/Documents/backup/OMS.Release/target/test-classes:/home/tomcat/Documents/backup/OMS.Release/target/classes:/home/tomcat/.m2/repository/org/springframework/spring-context/3.0.5.RELEASE/spring-context-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-aop/3.0.5.RELEASE/spring-aop-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/home/tomcat/.m2/repository/org/springframework/spring-beans/3.0.5.RELEASE/spring-beans-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-core/3.0.5.RELEASE/spring-core-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-expression/3.0.5.RELEASE/spring-expression-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-asm/3.0.5.RELEASE/spring-asm-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-webmvc/3.0.5.RELEASE/spring-webmvc-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-context-support/3.0.5.RELEASE/spring-context-support-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-web/3.0.5.RELEASE/spring-web-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/roo/org.springframework.roo.annotations/1.0.2.RELEASE/org.springframework.roo.annotations-1.0.2.RELEASE.jar:/home/tomcat/.m2/repository/org/aspectj/aspectjrt/1.6.9/aspectjrt-1.6.9.jar:/home/tomcat/.m2/repository/org/slf4j/slf4j-api/1.5.10/slf4j-api-1.5.10.jar:/home/tomcat/.m2/repository/org/slf4j/jcl-over-slf4j/1.5.10/jcl-over-slf4j-1.5.10.jar:/home/tomcat/.m2/repository/org/slf4j/slf4j-log4j12/1.5.10/slf4j-log4j12-1.5.10.jar:/home/tomcat/.m2/repository/log4j/log4j/1.2.15/log4j-1.2.15.jar:/home/tomcat/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar:/home/tomcat/.m2/repository/javax/servlet/jstl/1.2/jstl-1.2.jar:/home/tomcat/.m2/repository/junit/junit/4.7/junit-4.7.jar:/home/tomcat/.m2/repository/org/hibernate/hibernate-core/3.6.5.Final/hibernate-core-3.6.5.Final.jar:/home/tomcat/.m2/repository/antlr/antlr/2.7.6/antlr-2.7.6.jar:/home/tomcat/.m2/repository/commons-collections/commons-collections/3.1/commons-collections-3.1.jar:/home/tomcat/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/home/tomcat/.m2/repository/org/hibernate/hibernate-commons-annotations/3.2.0.Final/hibernate-commons-annotations-3.2.0.Final.jar:/home/tomcat/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.0-api/1.0.0.Final/hibernate-jpa-2.0-api-1.0.0.Final.jar:/home/tomcat/.m2/repository/javax/transaction/jta/1.1/jta-1.1.jar:/home/tomcat/.m2/repository/net/sourceforge/jtds/jtds/1.2.4/jtds-1.2.4.jar:/home/tomcat/.m2/repository/javassist/javassist/3.12.1.GA/javassist-3.12.1.GA.jar:/home/tomcat/.m2/repository/org/springframework/spring-orm/3.0.5.RELEASE/spring-orm-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-jdbc/3.0.5.RELEASE/spring-jdbc-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-tx/3.0.5.RELEASE/spring-tx-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar:/home/tomcat/.m2/repository/org/springframework/spring-test/3.0.5.RELEASE/spring-test-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/security/spring-security-core/3.0.5.RELEASE/spring-security-core-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/aspectj/aspectjweaver/1.6.8/aspectjweaver-1.6.8.jar:/home/tomcat/.m2/repository/org/springframework/security/spring-security-config/3.0.5.RELEASE/spring-security-config-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/security/spring-security-web/3.0.5.RELEASE/spring-security-web-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/cglib/cglib/2.2.2/cglib-2.2.2.jar:/home/tomcat/.m2/repository/asm/asm/3.3.1/asm-3.3.1.jar:/home/tomcat/.m2/repository/mysql/mysql-connector-java/5.1.17/mysql-connector-java-5.1.17.jar:/home/tomcat/.m2/repository/org/hibernate/hibernate-validator/4.2.0.Final/hibernate-validator-4.2.0.Final.jar:/home/tomcat/.m2/repository/javax/validation/validation-api/1.0.0.GA/validation-api-1.0.0.GA.jar:/home/tomcat/.m2/repository/org/apache/tiles/tiles-jsp/2.2.2/tiles-jsp-2.2.2.jar:/home/tomcat/.m2/repository/org/apache/tiles/tiles-servlet/2.2.2/tiles-servlet-2.2.2.jar:/home/tomcat/.m2/repository/org/apache/tiles/tiles-core/2.2.2/tiles-core-2.2.2.jar:/home/tomcat/.m2/repository/org/apache/tiles/tiles-template/2.2.2/tiles-template-2.2.2.jar:/home/tomcat/.m2/repository/org/apache/tiles/tiles-api/2.2.2/tiles-api-2.2.2.jar:/home/tomcat/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.8.3/jackson-mapper-asl-1.8.3.jar:/home/tomcat/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.8.3/jackson-core-asl-1.8.3.jar:/home/tomcat/.m2/repository/net/sf/jasperreports/jasperreports/4.0.1/jasperreports-4.0.1.jar:/home/tomcat/.m2/repository/commons-beanutils/commons-beanutils/1.8.0/commons-beanutils-1.8.0.jar:/home/tomcat/.m2/repository/commons-digester/commons-digester/1.7/commons-digester-1.7.jar:/home/tomcat/.m2/repository/commons-logging/commons-logging/1.0.2/commons-logging-1.0.2.jar:/home/tomcat/.m2/repository/com/lowagie/itext/2.1.7/itext-2.1.7.jar:/home/tomcat/.m2/repository/bouncycastle/bcmail-jdk14/138/bcmail-jdk14-138.jar:/home/tomcat/.m2/repository/bouncycastle/bcprov-jdk14/138/bcprov-jdk14-138.jar:/home/tomcat/.m2/repository/org/bouncycastle/bctsp-jdk14/1.38/bctsp-jdk14-1.38.jar:/home/tomcat/.m2/repository/org/bouncycastle/bcprov-jdk14/1.38/bcprov-jdk14-1.38.jar:/home/tomcat/.m2/repository/org/bouncycastle/bcmail-jdk14/1.38/bcmail-jdk14-1.38.jar:/home/tomcat/.m2/repository/jfree/jcommon/1.0.15/jcommon-1.0.15.jar:/home/tomcat/.m2/repository/jfree/jfreechart/1.0.12/jfreechart-1.0.12.jar:/home/tomcat/.m2/repository/xml-apis/xml-apis/1.3.02/xml-apis-1.3.02.jar:/home/tomcat/.m2/repository/eclipse/jdtcore/3.1.0/jdtcore-3.1.0.jar:/home/tomcat/.m2/repository/org/springframework/security/spring-security-taglibs/3.0.5.RELEASE/spring-security-taglibs-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/security/spring-security-acl/3.0.5.RELEASE/spring-security-acl-3.0.5.RELEASE.jar:, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.version=1.7, sun.arch.data.model=64, java.home=/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre, sun.java.command=/home/tomcat/Documents/backup/OMS.Release/target/surefire/surefirebooter1350476830626056606.jar /home/tomcat/Documents/backup/OMS.Release/target/surefire 2017-10-14T14-08-41_029-jvmRun1 surefire1747481213800879750tmp surefire_0887568231430146800tmp, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, hibernate.connection.url=jdbc:mysql://localhost:3306/test1, java.specification.vendor=Oracle Corporation, user.language=en, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.7.0_151, java.ext.dirs=/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre/lib/resources.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre/lib/rt.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre/lib/jsse.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre/lib/jce.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre/lib/charsets.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre/lib/rhino.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre/lib/jfr.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre/classes, java.vendor=Oracle Corporation, localRepository=/home/tomcat/.m2/repository, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=create-drop, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=gnome, sun.cpu.isalist=, dialect=org.hibernate.dialect.MySQL5Dialect}
[2017-10-14 14:08:43,635]DEBUG  1422[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:43,636]DEBUG  1423[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:43,636]DEBUG  1423[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:43,637]DEBUG  1424[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:43,637]DEBUG  1424[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:43,637]DEBUG  1424[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:43,637]DEBUG  1424[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:43,637]DEBUG  1424[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:43,638]DEBUG  1425[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:43,638]DEBUG  1425[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:43,722]DEBUG  1509[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) - Static SQL for entity: com.softserveinc.edu.oms.domain.entities.Role
[2017-10-14 14:08:43,722]DEBUG  1509[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) -  Version select: select ID from Roles where ID =?
[2017-10-14 14:08:43,722]DEBUG  1509[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) -  Snapshot select: select role_.ID, role_.RoleName as RoleName0_ from Roles role_ where role_.ID=?
[2017-10-14 14:08:43,722]DEBUG  1509[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) -  Insert 0: insert into Roles (RoleName, ID) values (?, ?)
[2017-10-14 14:08:43,722]DEBUG  1509[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) -  Update 0: update Roles set RoleName=? where ID=?
[2017-10-14 14:08:43,723]DEBUG  1510[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) -  Delete 0: delete from Roles where ID=?
[2017-10-14 14:08:43,723]DEBUG  1510[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2969) -  Identity insert: insert into Roles (RoleName) values (?)
[2017-10-14 14:08:43,729]DEBUG  1516[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) - Static SQL for entity: com.softserveinc.edu.oms.domain.entities.CreditCardType
[2017-10-14 14:08:43,729]DEBUG  1516[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) -  Version select: select ID from CardType where ID =?
[2017-10-14 14:08:43,729]DEBUG  1516[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) -  Snapshot select: select creditcard_.ID, creditcard_.CardType as CardType9_, creditcard_.CardNumber as CardNumber9_, creditcard_.CardCvv2 as CardCvv4_9_, creditcard_.Expiration_Date as Expiration5_9_, creditcard_.IssueDate as IssueDate9_, creditcard_.IssueNumber as IssueNum7_9_ from CardType creditcard_ where creditcard_.ID=?
[2017-10-14 14:08:43,730]DEBUG  1517[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) -  Insert 0: insert into CardType (CardType, CardNumber, CardCvv2, Expiration_Date, IssueDate, IssueNumber, ID) values (?, ?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:43,730]DEBUG  1517[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) -  Update 0: update CardType set CardType=?, CardNumber=?, CardCvv2=?, Expiration_Date=?, IssueDate=?, IssueNumber=? where ID=?
[2017-10-14 14:08:43,730]DEBUG  1517[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) -  Delete 0: delete from CardType where ID=?
[2017-10-14 14:08:43,730]DEBUG  1517[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2969) -  Identity insert: insert into CardType (CardType, CardNumber, CardCvv2, Expiration_Date, IssueDate, IssueNumber) values (?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:43,737]DEBUG  1524[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) - Static SQL for entity: com.softserveinc.edu.oms.domain.entities.OrderItem
[2017-10-14 14:08:43,737]DEBUG  1524[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) -  Version select: select ID from OrderItems where ID =?
[2017-10-14 14:08:43,737]DEBUG  1524[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) -  Snapshot select: select orderitem_.ID, orderitem_.Cost as Cost8_, orderitem_.DimensionRef as Dimensio5_8_, orderitem_.ItemPrice as ItemPrice8_, orderitem_.OrderRef as OrderRef8_, orderitem_.ProductRef as ProductRef8_, orderitem_.Quantity as Quantity8_ from OrderItems orderitem_ where orderitem_.ID=?
[2017-10-14 14:08:43,737]DEBUG  1524[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) -  Insert 0: insert into OrderItems (Cost, DimensionRef, ItemPrice, OrderRef, ProductRef, Quantity, ID) values (?, ?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:43,738]DEBUG  1525[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) -  Update 0: update OrderItems set Cost=?, DimensionRef=?, ItemPrice=?, OrderRef=?, ProductRef=?, Quantity=? where ID=?
[2017-10-14 14:08:43,738]DEBUG  1525[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) -  Delete 0: delete from OrderItems where ID=?
[2017-10-14 14:08:43,738]DEBUG  1525[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2969) -  Identity insert: insert into OrderItems (Cost, DimensionRef, ItemPrice, OrderRef, ProductRef, Quantity) values (?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:43,742]DEBUG  1529[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) - Static SQL for entity: com.softserveinc.edu.oms.domain.entities.Dimension
[2017-10-14 14:08:43,742]DEBUG  1529[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) -  Version select: select ID from Dimensions where ID =?
[2017-10-14 14:08:43,742]DEBUG  1529[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) -  Snapshot select: select dimension_.ID, dimension_.DimensionName as Dimensio2_7_, dimension_.NumberOfProducts as NumberOf3_7_ from Dimensions dimension_ where dimension_.ID=?
[2017-10-14 14:08:43,742]DEBUG  1529[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) -  Insert 0: insert into Dimensions (DimensionName, NumberOfProducts, ID) values (?, ?, ?)
[2017-10-14 14:08:43,742]DEBUG  1529[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) -  Update 0: update Dimensions set DimensionName=?, NumberOfProducts=? where ID=?
[2017-10-14 14:08:43,743]DEBUG  1530[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) -  Delete 0: delete from Dimensions where ID=?
[2017-10-14 14:08:43,743]DEBUG  1530[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2969) -  Identity insert: insert into Dimensions (DimensionName, NumberOfProducts) values (?, ?)
[2017-10-14 14:08:43,752]DEBUG  1539[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) - Static SQL for entity: com.softserveinc.edu.oms.domain.entities.Order
[2017-10-14 14:08:43,753]DEBUG  1540[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) -  Version select: select ID from Orders where ID =?
[2017-10-14 14:08:43,753]DEBUG  1540[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) -  Snapshot select: select order_.ID, order_.Assigne as Assigne5_, order_.Customer as Customer5_, order_.DeliveryDate as Delivery2_5_, order_.IsGift as IsGift5_, order_.MaxDiscount as MaxDisco4_5_, order_.OrderDate as OrderDate5_, order_.OrderName as OrderName5_, order_.OrderNumber as OrderNum7_5_, order_.OrderStatusRef as OrderSt12_5_, order_.PreferableDeliveryDate as Preferab8_5_, order_.TotalPrice as TotalPrice5_ from Orders order_ where order_.ID=?
[2017-10-14 14:08:43,753]DEBUG  1540[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) -  Insert 0: insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice, ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:43,753]DEBUG  1540[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) -  Update 0: update Orders set Assigne=?, Customer=?, DeliveryDate=?, IsGift=?, MaxDiscount=?, OrderDate=?, OrderName=?, OrderNumber=?, OrderStatusRef=?, PreferableDeliveryDate=?, TotalPrice=? where ID=?
[2017-10-14 14:08:43,753]DEBUG  1540[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) -  Delete 0: delete from Orders where ID=?
[2017-10-14 14:08:43,753]DEBUG  1540[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2969) -  Identity insert: insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:43,756]DEBUG  1543[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) - Static SQL for entity: com.softserveinc.edu.oms.domain.entities.OrderStatus
[2017-10-14 14:08:43,757]DEBUG  1544[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) -  Version select: select ID from OrderStatuses where ID =?
[2017-10-14 14:08:43,757]DEBUG  1544[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) -  Snapshot select: select orderstatu_.ID, orderstatu_.OrederStatusName as OrederSt2_4_ from OrderStatuses orderstatu_ where orderstatu_.ID=?
[2017-10-14 14:08:43,757]DEBUG  1544[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) -  Insert 0: insert into OrderStatuses (OrederStatusName, ID) values (?, ?)
[2017-10-14 14:08:43,757]DEBUG  1544[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) -  Update 0: update OrderStatuses set OrederStatusName=? where ID=?
[2017-10-14 14:08:43,757]DEBUG  1544[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) -  Delete 0: delete from OrderStatuses where ID=?
[2017-10-14 14:08:43,757]DEBUG  1544[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2969) -  Identity insert: insert into OrderStatuses (OrederStatusName) values (?)
[2017-10-14 14:08:43,760]DEBUG  1547[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) - Static SQL for entity: com.softserveinc.edu.oms.domain.entities.Region
[2017-10-14 14:08:43,760]DEBUG  1547[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) -  Version select: select ID from Regions where ID =?
[2017-10-14 14:08:43,761]DEBUG  1548[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) -  Snapshot select: select region_.ID, region_.RegionName as RegionName1_ from Regions region_ where region_.ID=?
[2017-10-14 14:08:43,761]DEBUG  1548[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) -  Insert 0: insert into Regions (RegionName, ID) values (?, ?)
[2017-10-14 14:08:43,761]DEBUG  1548[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) -  Update 0: update Regions set RegionName=? where ID=?
[2017-10-14 14:08:43,761]DEBUG  1548[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) -  Delete 0: delete from Regions where ID=?
[2017-10-14 14:08:43,761]DEBUG  1548[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2969) -  Identity insert: insert into Regions (RegionName) values (?)
[2017-10-14 14:08:43,767]DEBUG  1554[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) - Static SQL for entity: com.softserveinc.edu.oms.domain.entities.User
[2017-10-14 14:08:43,767]DEBUG  1554[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) -  Version select: select ID from Users where ID =?
[2017-10-14 14:08:43,768]DEBUG  1555[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) -  Snapshot select: select user_.ID, user_.IsUserActive as IsUserAc2_3_, user_.Balance as Balance3_, user_.CustomerTypeRef as Customer9_3_, user_.Email as Email3_, user_.FirstName as FirstName3_, user_.LastName as LastName3_, user_.Login as Login3_, user_.Password as Password3_, user_.RegionRef as RegionRef3_, user_.RoleRef as RoleRef3_ from Users user_ where user_.ID=?
[2017-10-14 14:08:43,768]DEBUG  1555[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) -  Insert 0: insert into Users (IsUserActive, Balance, CustomerTypeRef, Email, FirstName, LastName, Login, Password, RegionRef, RoleRef, ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:43,768]DEBUG  1555[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) -  Update 0: update Users set IsUserActive=?, Balance=?, CustomerTypeRef=?, Email=?, FirstName=?, LastName=?, Login=?, Password=?, RegionRef=?, RoleRef=? where ID=?
[2017-10-14 14:08:43,768]DEBUG  1555[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) -  Delete 0: delete from Users where ID=?
[2017-10-14 14:08:43,768]DEBUG  1555[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2969) -  Identity insert: insert into Users (IsUserActive, Balance, CustomerTypeRef, Email, FirstName, LastName, Login, Password, RegionRef, RoleRef) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:43,772]DEBUG  1559[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) - Static SQL for entity: com.softserveinc.edu.oms.domain.entities.Product
[2017-10-14 14:08:43,772]DEBUG  1559[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) -  Version select: select ID from Products where ID =?
[2017-10-14 14:08:43,773]DEBUG  1560[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) -  Snapshot select: select product_.ID, product_.IsProductActive as IsProduc2_6_, product_.ProductDescription as ProductD3_6_, product_.ProductName as ProductN4_6_, product_.ProductPrice as ProductP5_6_ from Products product_ where product_.ID=?
[2017-10-14 14:08:43,773]DEBUG  1560[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) -  Insert 0: insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2017-10-14 14:08:43,773]DEBUG  1560[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) -  Update 0: update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 14:08:43,773]DEBUG  1560[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) -  Delete 0: delete from Products where ID=?
[2017-10-14 14:08:43,773]DEBUG  1560[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2969) -  Identity insert: insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 14:08:43,777]DEBUG  1564[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) - Static SQL for entity: com.softserveinc.edu.oms.domain.entities.CustomerType
[2017-10-14 14:08:43,777]DEBUG  1564[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) -  Version select: select ID from CustomerTypes where ID =?
[2017-10-14 14:08:43,777]DEBUG  1564[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) -  Snapshot select: select customerty_.ID, customerty_.Discount as Discount2_, customerty_.MaxRange as MaxRange2_, customerty_.MinRange as MinRange2_, customerty_.TypeName as TypeName2_ from CustomerTypes customerty_ where customerty_.ID=?
[2017-10-14 14:08:43,777]DEBUG  1564[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) -  Insert 0: insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2017-10-14 14:08:43,777]DEBUG  1564[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) -  Update 0: update CustomerTypes set Discount=?, MaxRange=?, MinRange=?, TypeName=? where ID=?
[2017-10-14 14:08:43,778]DEBUG  1565[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) -  Delete 0: delete from CustomerTypes where ID=?
[2017-10-14 14:08:43,778]DEBUG  1565[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2969) -  Identity insert: insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-14 14:08:43,790]DEBUG  1577[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Role [NONE]: select role0_.ID as ID0_0_, role0_.RoleName as RoleName0_0_ from Roles role0_ where role0_.ID=?
[2017-10-14 14:08:43,790]DEBUG  1577[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Role [READ]: select role0_.ID as ID0_0_, role0_.RoleName as RoleName0_0_ from Roles role0_ where role0_.ID=?
[2017-10-14 14:08:43,790]DEBUG  1577[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Role [UPGRADE]: select role0_.ID as ID0_0_, role0_.RoleName as RoleName0_0_ from Roles role0_ where role0_.ID=? for update
[2017-10-14 14:08:43,791]DEBUG  1578[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Role [UPGRADE_NOWAIT]: select role0_.ID as ID0_0_, role0_.RoleName as RoleName0_0_ from Roles role0_ where role0_.ID=? for update
[2017-10-14 14:08:43,791]DEBUG  1578[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Role [FORCE]: select role0_.ID as ID0_0_, role0_.RoleName as RoleName0_0_ from Roles role0_ where role0_.ID=? for update
[2017-10-14 14:08:43,791]DEBUG  1578[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Role [PESSIMISTIC_READ]: select role0_.ID as ID0_0_, role0_.RoleName as RoleName0_0_ from Roles role0_ where role0_.ID=? lock in share mode
[2017-10-14 14:08:43,791]DEBUG  1578[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Role [PESSIMISTIC_WRITE]: select role0_.ID as ID0_0_, role0_.RoleName as RoleName0_0_ from Roles role0_ where role0_.ID=? for update
[2017-10-14 14:08:43,792]DEBUG  1579[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Role [PESSIMISTIC_FORCE_INCREMENT]: select role0_.ID as ID0_0_, role0_.RoleName as RoleName0_0_ from Roles role0_ where role0_.ID=? for update
[2017-10-14 14:08:43,792]DEBUG  1579[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Role [OPTIMISTIC]: select role0_.ID as ID0_0_, role0_.RoleName as RoleName0_0_ from Roles role0_ where role0_.ID=?
[2017-10-14 14:08:43,792]DEBUG  1579[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Role [OPTIMISTIC_FORCE_INCREMENT]: select role0_.ID as ID0_0_, role0_.RoleName as RoleName0_0_ from Roles role0_ where role0_.ID=?
[2017-10-14 14:08:43,796]DEBUG  1583[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.softserveinc.edu.oms.domain.entities.Role: select role0_.ID as ID0_0_, role0_.RoleName as RoleName0_0_ from Roles role0_ where role0_.ID=?
[2017-10-14 14:08:43,796]DEBUG  1583[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.softserveinc.edu.oms.domain.entities.Role: select role0_.ID as ID0_0_, role0_.RoleName as RoleName0_0_ from Roles role0_ where role0_.ID=?
[2017-10-14 14:08:43,799]DEBUG  1586[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderItem [NONE]: select orderitem0_.ID as ID8_6_, orderitem0_.Cost as Cost8_6_, orderitem0_.DimensionRef as Dimensio5_8_6_, orderitem0_.ItemPrice as ItemPrice8_6_, orderitem0_.OrderRef as OrderRef8_6_, orderitem0_.ProductRef as ProductRef8_6_, orderitem0_.Quantity as Quantity8_6_, dimension1_.ID as ID7_0_, dimension1_.DimensionName as Dimensio2_7_0_, dimension1_.NumberOfProducts as NumberOf3_7_0_, order2_.ID as ID5_1_, order2_.Assigne as Assigne5_1_, order2_.Customer as Customer5_1_, order2_.DeliveryDate as Delivery2_5_1_, order2_.IsGift as IsGift5_1_, order2_.MaxDiscount as MaxDisco4_5_1_, order2_.OrderDate as OrderDate5_1_, order2_.OrderName as OrderName5_1_, order2_.OrderNumber as OrderNum7_5_1_, order2_.OrderStatusRef as OrderSt12_5_1_, order2_.PreferableDeliveryDate as Preferab8_5_1_, order2_.TotalPrice as TotalPrice5_1_, user3_.ID as ID3_2_, user3_.IsUserActive as IsUserAc2_3_2_, user3_.Balance as Balance3_2_, user3_.CustomerTypeRef as Customer9_3_2_, user3_.Email as Email3_2_, user3_.FirstName as FirstName3_2_, user3_.LastName as LastName3_2_, user3_.Login as Login3_2_, user3_.Password as Password3_2_, user3_.RegionRef as RegionRef3_2_, user3_.RoleRef as RoleRef3_2_, user4_.ID as ID3_3_, user4_.IsUserActive as IsUserAc2_3_3_, user4_.Balance as Balance3_3_, user4_.CustomerTypeRef as Customer9_3_3_, user4_.Email as Email3_3_, user4_.FirstName as FirstName3_3_, user4_.LastName as LastName3_3_, user4_.Login as Login3_3_, user4_.Password as Password3_3_, user4_.RegionRef as RegionRef3_3_, user4_.RoleRef as RoleRef3_3_, orderstatu5_.ID as ID4_4_, orderstatu5_.OrederStatusName as OrederSt2_4_4_, product6_.ID as ID6_5_, product6_.IsProductActive as IsProduc2_6_5_, product6_.ProductDescription as ProductD3_6_5_, product6_.ProductName as ProductN4_6_5_, product6_.ProductPrice as ProductP5_6_5_ from OrderItems orderitem0_ left outer join Dimensions dimension1_ on orderitem0_.DimensionRef=dimension1_.ID left outer join Orders order2_ on orderitem0_.OrderRef=order2_.ID left outer join Users user3_ on order2_.Assigne=user3_.ID left outer join Users user4_ on order2_.Customer=user4_.ID left outer join OrderStatuses orderstatu5_ on order2_.OrderStatusRef=orderstatu5_.ID left outer join Products product6_ on orderitem0_.ProductRef=product6_.ID where orderitem0_.ID=?
[2017-10-14 14:08:43,800]DEBUG  1587[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderItem [READ]: select orderitem0_.ID as ID8_6_, orderitem0_.Cost as Cost8_6_, orderitem0_.DimensionRef as Dimensio5_8_6_, orderitem0_.ItemPrice as ItemPrice8_6_, orderitem0_.OrderRef as OrderRef8_6_, orderitem0_.ProductRef as ProductRef8_6_, orderitem0_.Quantity as Quantity8_6_, dimension1_.ID as ID7_0_, dimension1_.DimensionName as Dimensio2_7_0_, dimension1_.NumberOfProducts as NumberOf3_7_0_, order2_.ID as ID5_1_, order2_.Assigne as Assigne5_1_, order2_.Customer as Customer5_1_, order2_.DeliveryDate as Delivery2_5_1_, order2_.IsGift as IsGift5_1_, order2_.MaxDiscount as MaxDisco4_5_1_, order2_.OrderDate as OrderDate5_1_, order2_.OrderName as OrderName5_1_, order2_.OrderNumber as OrderNum7_5_1_, order2_.OrderStatusRef as OrderSt12_5_1_, order2_.PreferableDeliveryDate as Preferab8_5_1_, order2_.TotalPrice as TotalPrice5_1_, user3_.ID as ID3_2_, user3_.IsUserActive as IsUserAc2_3_2_, user3_.Balance as Balance3_2_, user3_.CustomerTypeRef as Customer9_3_2_, user3_.Email as Email3_2_, user3_.FirstName as FirstName3_2_, user3_.LastName as LastName3_2_, user3_.Login as Login3_2_, user3_.Password as Password3_2_, user3_.RegionRef as RegionRef3_2_, user3_.RoleRef as RoleRef3_2_, user4_.ID as ID3_3_, user4_.IsUserActive as IsUserAc2_3_3_, user4_.Balance as Balance3_3_, user4_.CustomerTypeRef as Customer9_3_3_, user4_.Email as Email3_3_, user4_.FirstName as FirstName3_3_, user4_.LastName as LastName3_3_, user4_.Login as Login3_3_, user4_.Password as Password3_3_, user4_.RegionRef as RegionRef3_3_, user4_.RoleRef as RoleRef3_3_, orderstatu5_.ID as ID4_4_, orderstatu5_.OrederStatusName as OrederSt2_4_4_, product6_.ID as ID6_5_, product6_.IsProductActive as IsProduc2_6_5_, product6_.ProductDescription as ProductD3_6_5_, product6_.ProductName as ProductN4_6_5_, product6_.ProductPrice as ProductP5_6_5_ from OrderItems orderitem0_ left outer join Dimensions dimension1_ on orderitem0_.DimensionRef=dimension1_.ID left outer join Orders order2_ on orderitem0_.OrderRef=order2_.ID left outer join Users user3_ on order2_.Assigne=user3_.ID left outer join Users user4_ on order2_.Customer=user4_.ID left outer join OrderStatuses orderstatu5_ on order2_.OrderStatusRef=orderstatu5_.ID left outer join Products product6_ on orderitem0_.ProductRef=product6_.ID where orderitem0_.ID=?
[2017-10-14 14:08:43,801]DEBUG  1588[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderItem [UPGRADE]: select orderitem0_.ID as ID8_0_, orderitem0_.Cost as Cost8_0_, orderitem0_.DimensionRef as Dimensio5_8_0_, orderitem0_.ItemPrice as ItemPrice8_0_, orderitem0_.OrderRef as OrderRef8_0_, orderitem0_.ProductRef as ProductRef8_0_, orderitem0_.Quantity as Quantity8_0_ from OrderItems orderitem0_ where orderitem0_.ID=? for update
[2017-10-14 14:08:43,801]DEBUG  1588[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderItem [UPGRADE_NOWAIT]: select orderitem0_.ID as ID8_0_, orderitem0_.Cost as Cost8_0_, orderitem0_.DimensionRef as Dimensio5_8_0_, orderitem0_.ItemPrice as ItemPrice8_0_, orderitem0_.OrderRef as OrderRef8_0_, orderitem0_.ProductRef as ProductRef8_0_, orderitem0_.Quantity as Quantity8_0_ from OrderItems orderitem0_ where orderitem0_.ID=? for update
[2017-10-14 14:08:43,801]DEBUG  1588[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderItem [FORCE]: select orderitem0_.ID as ID8_0_, orderitem0_.Cost as Cost8_0_, orderitem0_.DimensionRef as Dimensio5_8_0_, orderitem0_.ItemPrice as ItemPrice8_0_, orderitem0_.OrderRef as OrderRef8_0_, orderitem0_.ProductRef as ProductRef8_0_, orderitem0_.Quantity as Quantity8_0_ from OrderItems orderitem0_ where orderitem0_.ID=? for update
[2017-10-14 14:08:43,802]DEBUG  1589[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderItem [PESSIMISTIC_READ]: select orderitem0_.ID as ID8_0_, orderitem0_.Cost as Cost8_0_, orderitem0_.DimensionRef as Dimensio5_8_0_, orderitem0_.ItemPrice as ItemPrice8_0_, orderitem0_.OrderRef as OrderRef8_0_, orderitem0_.ProductRef as ProductRef8_0_, orderitem0_.Quantity as Quantity8_0_ from OrderItems orderitem0_ where orderitem0_.ID=? lock in share mode
[2017-10-14 14:08:43,802]DEBUG  1589[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderItem [PESSIMISTIC_WRITE]: select orderitem0_.ID as ID8_0_, orderitem0_.Cost as Cost8_0_, orderitem0_.DimensionRef as Dimensio5_8_0_, orderitem0_.ItemPrice as ItemPrice8_0_, orderitem0_.OrderRef as OrderRef8_0_, orderitem0_.ProductRef as ProductRef8_0_, orderitem0_.Quantity as Quantity8_0_ from OrderItems orderitem0_ where orderitem0_.ID=? for update
[2017-10-14 14:08:43,802]DEBUG  1589[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderItem [PESSIMISTIC_FORCE_INCREMENT]: select orderitem0_.ID as ID8_0_, orderitem0_.Cost as Cost8_0_, orderitem0_.DimensionRef as Dimensio5_8_0_, orderitem0_.ItemPrice as ItemPrice8_0_, orderitem0_.OrderRef as OrderRef8_0_, orderitem0_.ProductRef as ProductRef8_0_, orderitem0_.Quantity as Quantity8_0_ from OrderItems orderitem0_ where orderitem0_.ID=? for update
[2017-10-14 14:08:43,803]DEBUG  1590[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderItem [OPTIMISTIC]: select orderitem0_.ID as ID8_6_, orderitem0_.Cost as Cost8_6_, orderitem0_.DimensionRef as Dimensio5_8_6_, orderitem0_.ItemPrice as ItemPrice8_6_, orderitem0_.OrderRef as OrderRef8_6_, orderitem0_.ProductRef as ProductRef8_6_, orderitem0_.Quantity as Quantity8_6_, dimension1_.ID as ID7_0_, dimension1_.DimensionName as Dimensio2_7_0_, dimension1_.NumberOfProducts as NumberOf3_7_0_, order2_.ID as ID5_1_, order2_.Assigne as Assigne5_1_, order2_.Customer as Customer5_1_, order2_.DeliveryDate as Delivery2_5_1_, order2_.IsGift as IsGift5_1_, order2_.MaxDiscount as MaxDisco4_5_1_, order2_.OrderDate as OrderDate5_1_, order2_.OrderName as OrderName5_1_, order2_.OrderNumber as OrderNum7_5_1_, order2_.OrderStatusRef as OrderSt12_5_1_, order2_.PreferableDeliveryDate as Preferab8_5_1_, order2_.TotalPrice as TotalPrice5_1_, user3_.ID as ID3_2_, user3_.IsUserActive as IsUserAc2_3_2_, user3_.Balance as Balance3_2_, user3_.CustomerTypeRef as Customer9_3_2_, user3_.Email as Email3_2_, user3_.FirstName as FirstName3_2_, user3_.LastName as LastName3_2_, user3_.Login as Login3_2_, user3_.Password as Password3_2_, user3_.RegionRef as RegionRef3_2_, user3_.RoleRef as RoleRef3_2_, user4_.ID as ID3_3_, user4_.IsUserActive as IsUserAc2_3_3_, user4_.Balance as Balance3_3_, user4_.CustomerTypeRef as Customer9_3_3_, user4_.Email as Email3_3_, user4_.FirstName as FirstName3_3_, user4_.LastName as LastName3_3_, user4_.Login as Login3_3_, user4_.Password as Password3_3_, user4_.RegionRef as RegionRef3_3_, user4_.RoleRef as RoleRef3_3_, orderstatu5_.ID as ID4_4_, orderstatu5_.OrederStatusName as OrederSt2_4_4_, product6_.ID as ID6_5_, product6_.IsProductActive as IsProduc2_6_5_, product6_.ProductDescription as ProductD3_6_5_, product6_.ProductName as ProductN4_6_5_, product6_.ProductPrice as ProductP5_6_5_ from OrderItems orderitem0_ left outer join Dimensions dimension1_ on orderitem0_.DimensionRef=dimension1_.ID left outer join Orders order2_ on orderitem0_.OrderRef=order2_.ID left outer join Users user3_ on order2_.Assigne=user3_.ID left outer join Users user4_ on order2_.Customer=user4_.ID left outer join OrderStatuses orderstatu5_ on order2_.OrderStatusRef=orderstatu5_.ID left outer join Products product6_ on orderitem0_.ProductRef=product6_.ID where orderitem0_.ID=?
[2017-10-14 14:08:43,804]DEBUG  1591[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderItem [OPTIMISTIC_FORCE_INCREMENT]: select orderitem0_.ID as ID8_6_, orderitem0_.Cost as Cost8_6_, orderitem0_.DimensionRef as Dimensio5_8_6_, orderitem0_.ItemPrice as ItemPrice8_6_, orderitem0_.OrderRef as OrderRef8_6_, orderitem0_.ProductRef as ProductRef8_6_, orderitem0_.Quantity as Quantity8_6_, dimension1_.ID as ID7_0_, dimension1_.DimensionName as Dimensio2_7_0_, dimension1_.NumberOfProducts as NumberOf3_7_0_, order2_.ID as ID5_1_, order2_.Assigne as Assigne5_1_, order2_.Customer as Customer5_1_, order2_.DeliveryDate as Delivery2_5_1_, order2_.IsGift as IsGift5_1_, order2_.MaxDiscount as MaxDisco4_5_1_, order2_.OrderDate as OrderDate5_1_, order2_.OrderName as OrderName5_1_, order2_.OrderNumber as OrderNum7_5_1_, order2_.OrderStatusRef as OrderSt12_5_1_, order2_.PreferableDeliveryDate as Preferab8_5_1_, order2_.TotalPrice as TotalPrice5_1_, user3_.ID as ID3_2_, user3_.IsUserActive as IsUserAc2_3_2_, user3_.Balance as Balance3_2_, user3_.CustomerTypeRef as Customer9_3_2_, user3_.Email as Email3_2_, user3_.FirstName as FirstName3_2_, user3_.LastName as LastName3_2_, user3_.Login as Login3_2_, user3_.Password as Password3_2_, user3_.RegionRef as RegionRef3_2_, user3_.RoleRef as RoleRef3_2_, user4_.ID as ID3_3_, user4_.IsUserActive as IsUserAc2_3_3_, user4_.Balance as Balance3_3_, user4_.CustomerTypeRef as Customer9_3_3_, user4_.Email as Email3_3_, user4_.FirstName as FirstName3_3_, user4_.LastName as LastName3_3_, user4_.Login as Login3_3_, user4_.Password as Password3_3_, user4_.RegionRef as RegionRef3_3_, user4_.RoleRef as RoleRef3_3_, orderstatu5_.ID as ID4_4_, orderstatu5_.OrederStatusName as OrederSt2_4_4_, product6_.ID as ID6_5_, product6_.IsProductActive as IsProduc2_6_5_, product6_.ProductDescription as ProductD3_6_5_, product6_.ProductName as ProductN4_6_5_, product6_.ProductPrice as ProductP5_6_5_ from OrderItems orderitem0_ left outer join Dimensions dimension1_ on orderitem0_.DimensionRef=dimension1_.ID left outer join Orders order2_ on orderitem0_.OrderRef=order2_.ID left outer join Users user3_ on order2_.Assigne=user3_.ID left outer join Users user4_ on order2_.Customer=user4_.ID left outer join OrderStatuses orderstatu5_ on order2_.OrderStatusRef=orderstatu5_.ID left outer join Products product6_ on orderitem0_.ProductRef=product6_.ID where orderitem0_.ID=?
[2017-10-14 14:08:43,805]DEBUG  1592[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.softserveinc.edu.oms.domain.entities.OrderItem: select orderitem0_.ID as ID8_6_, orderitem0_.Cost as Cost8_6_, orderitem0_.DimensionRef as Dimensio5_8_6_, orderitem0_.ItemPrice as ItemPrice8_6_, orderitem0_.OrderRef as OrderRef8_6_, orderitem0_.ProductRef as ProductRef8_6_, orderitem0_.Quantity as Quantity8_6_, dimension1_.ID as ID7_0_, dimension1_.DimensionName as Dimensio2_7_0_, dimension1_.NumberOfProducts as NumberOf3_7_0_, order2_.ID as ID5_1_, order2_.Assigne as Assigne5_1_, order2_.Customer as Customer5_1_, order2_.DeliveryDate as Delivery2_5_1_, order2_.IsGift as IsGift5_1_, order2_.MaxDiscount as MaxDisco4_5_1_, order2_.OrderDate as OrderDate5_1_, order2_.OrderName as OrderName5_1_, order2_.OrderNumber as OrderNum7_5_1_, order2_.OrderStatusRef as OrderSt12_5_1_, order2_.PreferableDeliveryDate as Preferab8_5_1_, order2_.TotalPrice as TotalPrice5_1_, user3_.ID as ID3_2_, user3_.IsUserActive as IsUserAc2_3_2_, user3_.Balance as Balance3_2_, user3_.CustomerTypeRef as Customer9_3_2_, user3_.Email as Email3_2_, user3_.FirstName as FirstName3_2_, user3_.LastName as LastName3_2_, user3_.Login as Login3_2_, user3_.Password as Password3_2_, user3_.RegionRef as RegionRef3_2_, user3_.RoleRef as RoleRef3_2_, user4_.ID as ID3_3_, user4_.IsUserActive as IsUserAc2_3_3_, user4_.Balance as Balance3_3_, user4_.CustomerTypeRef as Customer9_3_3_, user4_.Email as Email3_3_, user4_.FirstName as FirstName3_3_, user4_.LastName as LastName3_3_, user4_.Login as Login3_3_, user4_.Password as Password3_3_, user4_.RegionRef as RegionRef3_3_, user4_.RoleRef as RoleRef3_3_, orderstatu5_.ID as ID4_4_, orderstatu5_.OrederStatusName as OrederSt2_4_4_, product6_.ID as ID6_5_, product6_.IsProductActive as IsProduc2_6_5_, product6_.ProductDescription as ProductD3_6_5_, product6_.ProductName as ProductN4_6_5_, product6_.ProductPrice as ProductP5_6_5_ from OrderItems orderitem0_ left outer join Dimensions dimension1_ on orderitem0_.DimensionRef=dimension1_.ID left outer join Orders order2_ on orderitem0_.OrderRef=order2_.ID left outer join Users user3_ on order2_.Assigne=user3_.ID left outer join Users user4_ on order2_.Customer=user4_.ID left outer join OrderStatuses orderstatu5_ on order2_.OrderStatusRef=orderstatu5_.ID left outer join Products product6_ on orderitem0_.ProductRef=product6_.ID where orderitem0_.ID=?
[2017-10-14 14:08:43,805]DEBUG  1592[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.softserveinc.edu.oms.domain.entities.OrderItem: select orderitem0_.ID as ID8_0_, orderitem0_.Cost as Cost8_0_, orderitem0_.DimensionRef as Dimensio5_8_0_, orderitem0_.ItemPrice as ItemPrice8_0_, orderitem0_.OrderRef as OrderRef8_0_, orderitem0_.ProductRef as ProductRef8_0_, orderitem0_.Quantity as Quantity8_0_ from OrderItems orderitem0_ where orderitem0_.ID=?
[2017-10-14 14:08:43,806]DEBUG  1593[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CreditCardType [NONE]: select creditcard0_.ID as ID9_0_, creditcard0_.CardType as CardType9_0_, creditcard0_.CardNumber as CardNumber9_0_, creditcard0_.CardCvv2 as CardCvv4_9_0_, creditcard0_.Expiration_Date as Expiration5_9_0_, creditcard0_.IssueDate as IssueDate9_0_, creditcard0_.IssueNumber as IssueNum7_9_0_ from CardType creditcard0_ where creditcard0_.ID=?
[2017-10-14 14:08:43,806]DEBUG  1593[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CreditCardType [READ]: select creditcard0_.ID as ID9_0_, creditcard0_.CardType as CardType9_0_, creditcard0_.CardNumber as CardNumber9_0_, creditcard0_.CardCvv2 as CardCvv4_9_0_, creditcard0_.Expiration_Date as Expiration5_9_0_, creditcard0_.IssueDate as IssueDate9_0_, creditcard0_.IssueNumber as IssueNum7_9_0_ from CardType creditcard0_ where creditcard0_.ID=?
[2017-10-14 14:08:43,806]DEBUG  1593[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CreditCardType [UPGRADE]: select creditcard0_.ID as ID9_0_, creditcard0_.CardType as CardType9_0_, creditcard0_.CardNumber as CardNumber9_0_, creditcard0_.CardCvv2 as CardCvv4_9_0_, creditcard0_.Expiration_Date as Expiration5_9_0_, creditcard0_.IssueDate as IssueDate9_0_, creditcard0_.IssueNumber as IssueNum7_9_0_ from CardType creditcard0_ where creditcard0_.ID=? for update
[2017-10-14 14:08:43,807]DEBUG  1594[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CreditCardType [UPGRADE_NOWAIT]: select creditcard0_.ID as ID9_0_, creditcard0_.CardType as CardType9_0_, creditcard0_.CardNumber as CardNumber9_0_, creditcard0_.CardCvv2 as CardCvv4_9_0_, creditcard0_.Expiration_Date as Expiration5_9_0_, creditcard0_.IssueDate as IssueDate9_0_, creditcard0_.IssueNumber as IssueNum7_9_0_ from CardType creditcard0_ where creditcard0_.ID=? for update
[2017-10-14 14:08:43,807]DEBUG  1594[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CreditCardType [FORCE]: select creditcard0_.ID as ID9_0_, creditcard0_.CardType as CardType9_0_, creditcard0_.CardNumber as CardNumber9_0_, creditcard0_.CardCvv2 as CardCvv4_9_0_, creditcard0_.Expiration_Date as Expiration5_9_0_, creditcard0_.IssueDate as IssueDate9_0_, creditcard0_.IssueNumber as IssueNum7_9_0_ from CardType creditcard0_ where creditcard0_.ID=? for update
[2017-10-14 14:08:43,807]DEBUG  1594[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CreditCardType [PESSIMISTIC_READ]: select creditcard0_.ID as ID9_0_, creditcard0_.CardType as CardType9_0_, creditcard0_.CardNumber as CardNumber9_0_, creditcard0_.CardCvv2 as CardCvv4_9_0_, creditcard0_.Expiration_Date as Expiration5_9_0_, creditcard0_.IssueDate as IssueDate9_0_, creditcard0_.IssueNumber as IssueNum7_9_0_ from CardType creditcard0_ where creditcard0_.ID=? lock in share mode
[2017-10-14 14:08:43,807]DEBUG  1594[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CreditCardType [PESSIMISTIC_WRITE]: select creditcard0_.ID as ID9_0_, creditcard0_.CardType as CardType9_0_, creditcard0_.CardNumber as CardNumber9_0_, creditcard0_.CardCvv2 as CardCvv4_9_0_, creditcard0_.Expiration_Date as Expiration5_9_0_, creditcard0_.IssueDate as IssueDate9_0_, creditcard0_.IssueNumber as IssueNum7_9_0_ from CardType creditcard0_ where creditcard0_.ID=? for update
[2017-10-14 14:08:43,808]DEBUG  1595[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CreditCardType [PESSIMISTIC_FORCE_INCREMENT]: select creditcard0_.ID as ID9_0_, creditcard0_.CardType as CardType9_0_, creditcard0_.CardNumber as CardNumber9_0_, creditcard0_.CardCvv2 as CardCvv4_9_0_, creditcard0_.Expiration_Date as Expiration5_9_0_, creditcard0_.IssueDate as IssueDate9_0_, creditcard0_.IssueNumber as IssueNum7_9_0_ from CardType creditcard0_ where creditcard0_.ID=? for update
[2017-10-14 14:08:43,808]DEBUG  1595[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CreditCardType [OPTIMISTIC]: select creditcard0_.ID as ID9_0_, creditcard0_.CardType as CardType9_0_, creditcard0_.CardNumber as CardNumber9_0_, creditcard0_.CardCvv2 as CardCvv4_9_0_, creditcard0_.Expiration_Date as Expiration5_9_0_, creditcard0_.IssueDate as IssueDate9_0_, creditcard0_.IssueNumber as IssueNum7_9_0_ from CardType creditcard0_ where creditcard0_.ID=?
[2017-10-14 14:08:43,808]DEBUG  1595[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CreditCardType [OPTIMISTIC_FORCE_INCREMENT]: select creditcard0_.ID as ID9_0_, creditcard0_.CardType as CardType9_0_, creditcard0_.CardNumber as CardNumber9_0_, creditcard0_.CardCvv2 as CardCvv4_9_0_, creditcard0_.Expiration_Date as Expiration5_9_0_, creditcard0_.IssueDate as IssueDate9_0_, creditcard0_.IssueNumber as IssueNum7_9_0_ from CardType creditcard0_ where creditcard0_.ID=?
[2017-10-14 14:08:43,809]DEBUG  1596[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.softserveinc.edu.oms.domain.entities.CreditCardType: select creditcard0_.ID as ID9_0_, creditcard0_.CardType as CardType9_0_, creditcard0_.CardNumber as CardNumber9_0_, creditcard0_.CardCvv2 as CardCvv4_9_0_, creditcard0_.Expiration_Date as Expiration5_9_0_, creditcard0_.IssueDate as IssueDate9_0_, creditcard0_.IssueNumber as IssueNum7_9_0_ from CardType creditcard0_ where creditcard0_.ID=?
[2017-10-14 14:08:43,809]DEBUG  1596[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.softserveinc.edu.oms.domain.entities.CreditCardType: select creditcard0_.ID as ID9_0_, creditcard0_.CardType as CardType9_0_, creditcard0_.CardNumber as CardNumber9_0_, creditcard0_.CardCvv2 as CardCvv4_9_0_, creditcard0_.Expiration_Date as Expiration5_9_0_, creditcard0_.IssueDate as IssueDate9_0_, creditcard0_.IssueNumber as IssueNum7_9_0_ from CardType creditcard0_ where creditcard0_.ID=?
[2017-10-14 14:08:43,810]DEBUG  1597[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Order [NONE]: select order0_.ID as ID5_6_, order0_.Assigne as Assigne5_6_, order0_.Customer as Customer5_6_, order0_.DeliveryDate as Delivery2_5_6_, order0_.IsGift as IsGift5_6_, order0_.MaxDiscount as MaxDisco4_5_6_, order0_.OrderDate as OrderDate5_6_, order0_.OrderName as OrderName5_6_, order0_.OrderNumber as OrderNum7_5_6_, order0_.OrderStatusRef as OrderSt12_5_6_, order0_.PreferableDeliveryDate as Preferab8_5_6_, order0_.TotalPrice as TotalPrice5_6_, user1_.ID as ID3_0_, user1_.IsUserActive as IsUserAc2_3_0_, user1_.Balance as Balance3_0_, user1_.CustomerTypeRef as Customer9_3_0_, user1_.Email as Email3_0_, user1_.FirstName as FirstName3_0_, user1_.LastName as LastName3_0_, user1_.Login as Login3_0_, user1_.Password as Password3_0_, user1_.RegionRef as RegionRef3_0_, user1_.RoleRef as RoleRef3_0_, customerty2_.ID as ID2_1_, customerty2_.Discount as Discount2_1_, customerty2_.MaxRange as MaxRange2_1_, customerty2_.MinRange as MinRange2_1_, customerty2_.TypeName as TypeName2_1_, region3_.ID as ID1_2_, region3_.RegionName as RegionName1_2_, role4_.ID as ID0_3_, role4_.RoleName as RoleName0_3_, user5_.ID as ID3_4_, user5_.IsUserActive as IsUserAc2_3_4_, user5_.Balance as Balance3_4_, user5_.CustomerTypeRef as Customer9_3_4_, user5_.Email as Email3_4_, user5_.FirstName as FirstName3_4_, user5_.LastName as LastName3_4_, user5_.Login as Login3_4_, user5_.Password as Password3_4_, user5_.RegionRef as RegionRef3_4_, user5_.RoleRef as RoleRef3_4_, orderstatu6_.ID as ID4_5_, orderstatu6_.OrederStatusName as OrederSt2_4_5_ from Orders order0_ left outer join Users user1_ on order0_.Assigne=user1_.ID left outer join CustomerTypes customerty2_ on user1_.CustomerTypeRef=customerty2_.ID left outer join Regions region3_ on user1_.RegionRef=region3_.ID left outer join Roles role4_ on user1_.RoleRef=role4_.ID left outer join Users user5_ on order0_.Customer=user5_.ID left outer join OrderStatuses orderstatu6_ on order0_.OrderStatusRef=orderstatu6_.ID where order0_.ID=?
[2017-10-14 14:08:43,811]DEBUG  1598[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Order [READ]: select order0_.ID as ID5_6_, order0_.Assigne as Assigne5_6_, order0_.Customer as Customer5_6_, order0_.DeliveryDate as Delivery2_5_6_, order0_.IsGift as IsGift5_6_, order0_.MaxDiscount as MaxDisco4_5_6_, order0_.OrderDate as OrderDate5_6_, order0_.OrderName as OrderName5_6_, order0_.OrderNumber as OrderNum7_5_6_, order0_.OrderStatusRef as OrderSt12_5_6_, order0_.PreferableDeliveryDate as Preferab8_5_6_, order0_.TotalPrice as TotalPrice5_6_, user1_.ID as ID3_0_, user1_.IsUserActive as IsUserAc2_3_0_, user1_.Balance as Balance3_0_, user1_.CustomerTypeRef as Customer9_3_0_, user1_.Email as Email3_0_, user1_.FirstName as FirstName3_0_, user1_.LastName as LastName3_0_, user1_.Login as Login3_0_, user1_.Password as Password3_0_, user1_.RegionRef as RegionRef3_0_, user1_.RoleRef as RoleRef3_0_, customerty2_.ID as ID2_1_, customerty2_.Discount as Discount2_1_, customerty2_.MaxRange as MaxRange2_1_, customerty2_.MinRange as MinRange2_1_, customerty2_.TypeName as TypeName2_1_, region3_.ID as ID1_2_, region3_.RegionName as RegionName1_2_, role4_.ID as ID0_3_, role4_.RoleName as RoleName0_3_, user5_.ID as ID3_4_, user5_.IsUserActive as IsUserAc2_3_4_, user5_.Balance as Balance3_4_, user5_.CustomerTypeRef as Customer9_3_4_, user5_.Email as Email3_4_, user5_.FirstName as FirstName3_4_, user5_.LastName as LastName3_4_, user5_.Login as Login3_4_, user5_.Password as Password3_4_, user5_.RegionRef as RegionRef3_4_, user5_.RoleRef as RoleRef3_4_, orderstatu6_.ID as ID4_5_, orderstatu6_.OrederStatusName as OrederSt2_4_5_ from Orders order0_ left outer join Users user1_ on order0_.Assigne=user1_.ID left outer join CustomerTypes customerty2_ on user1_.CustomerTypeRef=customerty2_.ID left outer join Regions region3_ on user1_.RegionRef=region3_.ID left outer join Roles role4_ on user1_.RoleRef=role4_.ID left outer join Users user5_ on order0_.Customer=user5_.ID left outer join OrderStatuses orderstatu6_ on order0_.OrderStatusRef=orderstatu6_.ID where order0_.ID=?
[2017-10-14 14:08:43,811]DEBUG  1598[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Order [UPGRADE]: select order0_.ID as ID5_0_, order0_.Assigne as Assigne5_0_, order0_.Customer as Customer5_0_, order0_.DeliveryDate as Delivery2_5_0_, order0_.IsGift as IsGift5_0_, order0_.MaxDiscount as MaxDisco4_5_0_, order0_.OrderDate as OrderDate5_0_, order0_.OrderName as OrderName5_0_, order0_.OrderNumber as OrderNum7_5_0_, order0_.OrderStatusRef as OrderSt12_5_0_, order0_.PreferableDeliveryDate as Preferab8_5_0_, order0_.TotalPrice as TotalPrice5_0_ from Orders order0_ where order0_.ID=? for update
[2017-10-14 14:08:43,811]DEBUG  1598[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Order [UPGRADE_NOWAIT]: select order0_.ID as ID5_0_, order0_.Assigne as Assigne5_0_, order0_.Customer as Customer5_0_, order0_.DeliveryDate as Delivery2_5_0_, order0_.IsGift as IsGift5_0_, order0_.MaxDiscount as MaxDisco4_5_0_, order0_.OrderDate as OrderDate5_0_, order0_.OrderName as OrderName5_0_, order0_.OrderNumber as OrderNum7_5_0_, order0_.OrderStatusRef as OrderSt12_5_0_, order0_.PreferableDeliveryDate as Preferab8_5_0_, order0_.TotalPrice as TotalPrice5_0_ from Orders order0_ where order0_.ID=? for update
[2017-10-14 14:08:43,812]DEBUG  1599[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Order [FORCE]: select order0_.ID as ID5_0_, order0_.Assigne as Assigne5_0_, order0_.Customer as Customer5_0_, order0_.DeliveryDate as Delivery2_5_0_, order0_.IsGift as IsGift5_0_, order0_.MaxDiscount as MaxDisco4_5_0_, order0_.OrderDate as OrderDate5_0_, order0_.OrderName as OrderName5_0_, order0_.OrderNumber as OrderNum7_5_0_, order0_.OrderStatusRef as OrderSt12_5_0_, order0_.PreferableDeliveryDate as Preferab8_5_0_, order0_.TotalPrice as TotalPrice5_0_ from Orders order0_ where order0_.ID=? for update
[2017-10-14 14:08:43,812]DEBUG  1599[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Order [PESSIMISTIC_READ]: select order0_.ID as ID5_0_, order0_.Assigne as Assigne5_0_, order0_.Customer as Customer5_0_, order0_.DeliveryDate as Delivery2_5_0_, order0_.IsGift as IsGift5_0_, order0_.MaxDiscount as MaxDisco4_5_0_, order0_.OrderDate as OrderDate5_0_, order0_.OrderName as OrderName5_0_, order0_.OrderNumber as OrderNum7_5_0_, order0_.OrderStatusRef as OrderSt12_5_0_, order0_.PreferableDeliveryDate as Preferab8_5_0_, order0_.TotalPrice as TotalPrice5_0_ from Orders order0_ where order0_.ID=? lock in share mode
[2017-10-14 14:08:43,812]DEBUG  1599[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Order [PESSIMISTIC_WRITE]: select order0_.ID as ID5_0_, order0_.Assigne as Assigne5_0_, order0_.Customer as Customer5_0_, order0_.DeliveryDate as Delivery2_5_0_, order0_.IsGift as IsGift5_0_, order0_.MaxDiscount as MaxDisco4_5_0_, order0_.OrderDate as OrderDate5_0_, order0_.OrderName as OrderName5_0_, order0_.OrderNumber as OrderNum7_5_0_, order0_.OrderStatusRef as OrderSt12_5_0_, order0_.PreferableDeliveryDate as Preferab8_5_0_, order0_.TotalPrice as TotalPrice5_0_ from Orders order0_ where order0_.ID=? for update
[2017-10-14 14:08:43,813]DEBUG  1600[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Order [PESSIMISTIC_FORCE_INCREMENT]: select order0_.ID as ID5_0_, order0_.Assigne as Assigne5_0_, order0_.Customer as Customer5_0_, order0_.DeliveryDate as Delivery2_5_0_, order0_.IsGift as IsGift5_0_, order0_.MaxDiscount as MaxDisco4_5_0_, order0_.OrderDate as OrderDate5_0_, order0_.OrderName as OrderName5_0_, order0_.OrderNumber as OrderNum7_5_0_, order0_.OrderStatusRef as OrderSt12_5_0_, order0_.PreferableDeliveryDate as Preferab8_5_0_, order0_.TotalPrice as TotalPrice5_0_ from Orders order0_ where order0_.ID=? for update
[2017-10-14 14:08:43,813]DEBUG  1600[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Order [OPTIMISTIC]: select order0_.ID as ID5_6_, order0_.Assigne as Assigne5_6_, order0_.Customer as Customer5_6_, order0_.DeliveryDate as Delivery2_5_6_, order0_.IsGift as IsGift5_6_, order0_.MaxDiscount as MaxDisco4_5_6_, order0_.OrderDate as OrderDate5_6_, order0_.OrderName as OrderName5_6_, order0_.OrderNumber as OrderNum7_5_6_, order0_.OrderStatusRef as OrderSt12_5_6_, order0_.PreferableDeliveryDate as Preferab8_5_6_, order0_.TotalPrice as TotalPrice5_6_, user1_.ID as ID3_0_, user1_.IsUserActive as IsUserAc2_3_0_, user1_.Balance as Balance3_0_, user1_.CustomerTypeRef as Customer9_3_0_, user1_.Email as Email3_0_, user1_.FirstName as FirstName3_0_, user1_.LastName as LastName3_0_, user1_.Login as Login3_0_, user1_.Password as Password3_0_, user1_.RegionRef as RegionRef3_0_, user1_.RoleRef as RoleRef3_0_, customerty2_.ID as ID2_1_, customerty2_.Discount as Discount2_1_, customerty2_.MaxRange as MaxRange2_1_, customerty2_.MinRange as MinRange2_1_, customerty2_.TypeName as TypeName2_1_, region3_.ID as ID1_2_, region3_.RegionName as RegionName1_2_, role4_.ID as ID0_3_, role4_.RoleName as RoleName0_3_, user5_.ID as ID3_4_, user5_.IsUserActive as IsUserAc2_3_4_, user5_.Balance as Balance3_4_, user5_.CustomerTypeRef as Customer9_3_4_, user5_.Email as Email3_4_, user5_.FirstName as FirstName3_4_, user5_.LastName as LastName3_4_, user5_.Login as Login3_4_, user5_.Password as Password3_4_, user5_.RegionRef as RegionRef3_4_, user5_.RoleRef as RoleRef3_4_, orderstatu6_.ID as ID4_5_, orderstatu6_.OrederStatusName as OrederSt2_4_5_ from Orders order0_ left outer join Users user1_ on order0_.Assigne=user1_.ID left outer join CustomerTypes customerty2_ on user1_.CustomerTypeRef=customerty2_.ID left outer join Regions region3_ on user1_.RegionRef=region3_.ID left outer join Roles role4_ on user1_.RoleRef=role4_.ID left outer join Users user5_ on order0_.Customer=user5_.ID left outer join OrderStatuses orderstatu6_ on order0_.OrderStatusRef=orderstatu6_.ID where order0_.ID=?
[2017-10-14 14:08:43,814]DEBUG  1601[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Order [OPTIMISTIC_FORCE_INCREMENT]: select order0_.ID as ID5_6_, order0_.Assigne as Assigne5_6_, order0_.Customer as Customer5_6_, order0_.DeliveryDate as Delivery2_5_6_, order0_.IsGift as IsGift5_6_, order0_.MaxDiscount as MaxDisco4_5_6_, order0_.OrderDate as OrderDate5_6_, order0_.OrderName as OrderName5_6_, order0_.OrderNumber as OrderNum7_5_6_, order0_.OrderStatusRef as OrderSt12_5_6_, order0_.PreferableDeliveryDate as Preferab8_5_6_, order0_.TotalPrice as TotalPrice5_6_, user1_.ID as ID3_0_, user1_.IsUserActive as IsUserAc2_3_0_, user1_.Balance as Balance3_0_, user1_.CustomerTypeRef as Customer9_3_0_, user1_.Email as Email3_0_, user1_.FirstName as FirstName3_0_, user1_.LastName as LastName3_0_, user1_.Login as Login3_0_, user1_.Password as Password3_0_, user1_.RegionRef as RegionRef3_0_, user1_.RoleRef as RoleRef3_0_, customerty2_.ID as ID2_1_, customerty2_.Discount as Discount2_1_, customerty2_.MaxRange as MaxRange2_1_, customerty2_.MinRange as MinRange2_1_, customerty2_.TypeName as TypeName2_1_, region3_.ID as ID1_2_, region3_.RegionName as RegionName1_2_, role4_.ID as ID0_3_, role4_.RoleName as RoleName0_3_, user5_.ID as ID3_4_, user5_.IsUserActive as IsUserAc2_3_4_, user5_.Balance as Balance3_4_, user5_.CustomerTypeRef as Customer9_3_4_, user5_.Email as Email3_4_, user5_.FirstName as FirstName3_4_, user5_.LastName as LastName3_4_, user5_.Login as Login3_4_, user5_.Password as Password3_4_, user5_.RegionRef as RegionRef3_4_, user5_.RoleRef as RoleRef3_4_, orderstatu6_.ID as ID4_5_, orderstatu6_.OrederStatusName as OrederSt2_4_5_ from Orders order0_ left outer join Users user1_ on order0_.Assigne=user1_.ID left outer join CustomerTypes customerty2_ on user1_.CustomerTypeRef=customerty2_.ID left outer join Regions region3_ on user1_.RegionRef=region3_.ID left outer join Roles role4_ on user1_.RoleRef=role4_.ID left outer join Users user5_ on order0_.Customer=user5_.ID left outer join OrderStatuses orderstatu6_ on order0_.OrderStatusRef=orderstatu6_.ID where order0_.ID=?
[2017-10-14 14:08:43,815]DEBUG  1602[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.softserveinc.edu.oms.domain.entities.Order: select order0_.ID as ID5_6_, order0_.Assigne as Assigne5_6_, order0_.Customer as Customer5_6_, order0_.DeliveryDate as Delivery2_5_6_, order0_.IsGift as IsGift5_6_, order0_.MaxDiscount as MaxDisco4_5_6_, order0_.OrderDate as OrderDate5_6_, order0_.OrderName as OrderName5_6_, order0_.OrderNumber as OrderNum7_5_6_, order0_.OrderStatusRef as OrderSt12_5_6_, order0_.PreferableDeliveryDate as Preferab8_5_6_, order0_.TotalPrice as TotalPrice5_6_, user1_.ID as ID3_0_, user1_.IsUserActive as IsUserAc2_3_0_, user1_.Balance as Balance3_0_, user1_.CustomerTypeRef as Customer9_3_0_, user1_.Email as Email3_0_, user1_.FirstName as FirstName3_0_, user1_.LastName as LastName3_0_, user1_.Login as Login3_0_, user1_.Password as Password3_0_, user1_.RegionRef as RegionRef3_0_, user1_.RoleRef as RoleRef3_0_, customerty2_.ID as ID2_1_, customerty2_.Discount as Discount2_1_, customerty2_.MaxRange as MaxRange2_1_, customerty2_.MinRange as MinRange2_1_, customerty2_.TypeName as TypeName2_1_, region3_.ID as ID1_2_, region3_.RegionName as RegionName1_2_, role4_.ID as ID0_3_, role4_.RoleName as RoleName0_3_, user5_.ID as ID3_4_, user5_.IsUserActive as IsUserAc2_3_4_, user5_.Balance as Balance3_4_, user5_.CustomerTypeRef as Customer9_3_4_, user5_.Email as Email3_4_, user5_.FirstName as FirstName3_4_, user5_.LastName as LastName3_4_, user5_.Login as Login3_4_, user5_.Password as Password3_4_, user5_.RegionRef as RegionRef3_4_, user5_.RoleRef as RoleRef3_4_, orderstatu6_.ID as ID4_5_, orderstatu6_.OrederStatusName as OrederSt2_4_5_ from Orders order0_ left outer join Users user1_ on order0_.Assigne=user1_.ID left outer join CustomerTypes customerty2_ on user1_.CustomerTypeRef=customerty2_.ID left outer join Regions region3_ on user1_.RegionRef=region3_.ID left outer join Roles role4_ on user1_.RoleRef=role4_.ID left outer join Users user5_ on order0_.Customer=user5_.ID left outer join OrderStatuses orderstatu6_ on order0_.OrderStatusRef=orderstatu6_.ID where order0_.ID=?
[2017-10-14 14:08:43,815]DEBUG  1602[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.softserveinc.edu.oms.domain.entities.Order: select order0_.ID as ID5_0_, order0_.Assigne as Assigne5_0_, order0_.Customer as Customer5_0_, order0_.DeliveryDate as Delivery2_5_0_, order0_.IsGift as IsGift5_0_, order0_.MaxDiscount as MaxDisco4_5_0_, order0_.OrderDate as OrderDate5_0_, order0_.OrderName as OrderName5_0_, order0_.OrderNumber as OrderNum7_5_0_, order0_.OrderStatusRef as OrderSt12_5_0_, order0_.PreferableDeliveryDate as Preferab8_5_0_, order0_.TotalPrice as TotalPrice5_0_ from Orders order0_ where order0_.ID=?
[2017-10-14 14:08:43,816]DEBUG  1603[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Dimension [NONE]: select dimension0_.ID as ID7_0_, dimension0_.DimensionName as Dimensio2_7_0_, dimension0_.NumberOfProducts as NumberOf3_7_0_ from Dimensions dimension0_ where dimension0_.ID=?
[2017-10-14 14:08:43,816]DEBUG  1603[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Dimension [READ]: select dimension0_.ID as ID7_0_, dimension0_.DimensionName as Dimensio2_7_0_, dimension0_.NumberOfProducts as NumberOf3_7_0_ from Dimensions dimension0_ where dimension0_.ID=?
[2017-10-14 14:08:43,816]DEBUG  1603[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Dimension [UPGRADE]: select dimension0_.ID as ID7_0_, dimension0_.DimensionName as Dimensio2_7_0_, dimension0_.NumberOfProducts as NumberOf3_7_0_ from Dimensions dimension0_ where dimension0_.ID=? for update
[2017-10-14 14:08:43,816]DEBUG  1603[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Dimension [UPGRADE_NOWAIT]: select dimension0_.ID as ID7_0_, dimension0_.DimensionName as Dimensio2_7_0_, dimension0_.NumberOfProducts as NumberOf3_7_0_ from Dimensions dimension0_ where dimension0_.ID=? for update
[2017-10-14 14:08:43,817]DEBUG  1604[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Dimension [FORCE]: select dimension0_.ID as ID7_0_, dimension0_.DimensionName as Dimensio2_7_0_, dimension0_.NumberOfProducts as NumberOf3_7_0_ from Dimensions dimension0_ where dimension0_.ID=? for update
[2017-10-14 14:08:43,817]DEBUG  1604[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Dimension [PESSIMISTIC_READ]: select dimension0_.ID as ID7_0_, dimension0_.DimensionName as Dimensio2_7_0_, dimension0_.NumberOfProducts as NumberOf3_7_0_ from Dimensions dimension0_ where dimension0_.ID=? lock in share mode
[2017-10-14 14:08:43,817]DEBUG  1604[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Dimension [PESSIMISTIC_WRITE]: select dimension0_.ID as ID7_0_, dimension0_.DimensionName as Dimensio2_7_0_, dimension0_.NumberOfProducts as NumberOf3_7_0_ from Dimensions dimension0_ where dimension0_.ID=? for update
[2017-10-14 14:08:43,817]DEBUG  1604[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Dimension [PESSIMISTIC_FORCE_INCREMENT]: select dimension0_.ID as ID7_0_, dimension0_.DimensionName as Dimensio2_7_0_, dimension0_.NumberOfProducts as NumberOf3_7_0_ from Dimensions dimension0_ where dimension0_.ID=? for update
[2017-10-14 14:08:43,818]DEBUG  1605[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Dimension [OPTIMISTIC]: select dimension0_.ID as ID7_0_, dimension0_.DimensionName as Dimensio2_7_0_, dimension0_.NumberOfProducts as NumberOf3_7_0_ from Dimensions dimension0_ where dimension0_.ID=?
[2017-10-14 14:08:43,818]DEBUG  1605[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Dimension [OPTIMISTIC_FORCE_INCREMENT]: select dimension0_.ID as ID7_0_, dimension0_.DimensionName as Dimensio2_7_0_, dimension0_.NumberOfProducts as NumberOf3_7_0_ from Dimensions dimension0_ where dimension0_.ID=?
[2017-10-14 14:08:43,818]DEBUG  1605[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.softserveinc.edu.oms.domain.entities.Dimension: select dimension0_.ID as ID7_0_, dimension0_.DimensionName as Dimensio2_7_0_, dimension0_.NumberOfProducts as NumberOf3_7_0_ from Dimensions dimension0_ where dimension0_.ID=?
[2017-10-14 14:08:43,818]DEBUG  1605[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.softserveinc.edu.oms.domain.entities.Dimension: select dimension0_.ID as ID7_0_, dimension0_.DimensionName as Dimensio2_7_0_, dimension0_.NumberOfProducts as NumberOf3_7_0_ from Dimensions dimension0_ where dimension0_.ID=?
[2017-10-14 14:08:43,819]DEBUG  1606[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderStatus [NONE]: select orderstatu0_.ID as ID4_0_, orderstatu0_.OrederStatusName as OrederSt2_4_0_ from OrderStatuses orderstatu0_ where orderstatu0_.ID=?
[2017-10-14 14:08:43,819]DEBUG  1606[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderStatus [READ]: select orderstatu0_.ID as ID4_0_, orderstatu0_.OrederStatusName as OrederSt2_4_0_ from OrderStatuses orderstatu0_ where orderstatu0_.ID=?
[2017-10-14 14:08:43,819]DEBUG  1606[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderStatus [UPGRADE]: select orderstatu0_.ID as ID4_0_, orderstatu0_.OrederStatusName as OrederSt2_4_0_ from OrderStatuses orderstatu0_ where orderstatu0_.ID=? for update
[2017-10-14 14:08:43,819]DEBUG  1606[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderStatus [UPGRADE_NOWAIT]: select orderstatu0_.ID as ID4_0_, orderstatu0_.OrederStatusName as OrederSt2_4_0_ from OrderStatuses orderstatu0_ where orderstatu0_.ID=? for update
[2017-10-14 14:08:43,820]DEBUG  1607[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderStatus [FORCE]: select orderstatu0_.ID as ID4_0_, orderstatu0_.OrederStatusName as OrederSt2_4_0_ from OrderStatuses orderstatu0_ where orderstatu0_.ID=? for update
[2017-10-14 14:08:43,820]DEBUG  1607[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderStatus [PESSIMISTIC_READ]: select orderstatu0_.ID as ID4_0_, orderstatu0_.OrederStatusName as OrederSt2_4_0_ from OrderStatuses orderstatu0_ where orderstatu0_.ID=? lock in share mode
[2017-10-14 14:08:43,820]DEBUG  1607[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderStatus [PESSIMISTIC_WRITE]: select orderstatu0_.ID as ID4_0_, orderstatu0_.OrederStatusName as OrederSt2_4_0_ from OrderStatuses orderstatu0_ where orderstatu0_.ID=? for update
[2017-10-14 14:08:43,820]DEBUG  1607[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderStatus [PESSIMISTIC_FORCE_INCREMENT]: select orderstatu0_.ID as ID4_0_, orderstatu0_.OrederStatusName as OrederSt2_4_0_ from OrderStatuses orderstatu0_ where orderstatu0_.ID=? for update
[2017-10-14 14:08:43,820]DEBUG  1607[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderStatus [OPTIMISTIC]: select orderstatu0_.ID as ID4_0_, orderstatu0_.OrederStatusName as OrederSt2_4_0_ from OrderStatuses orderstatu0_ where orderstatu0_.ID=?
[2017-10-14 14:08:43,821]DEBUG  1608[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderStatus [OPTIMISTIC_FORCE_INCREMENT]: select orderstatu0_.ID as ID4_0_, orderstatu0_.OrederStatusName as OrederSt2_4_0_ from OrderStatuses orderstatu0_ where orderstatu0_.ID=?
[2017-10-14 14:08:43,821]DEBUG  1608[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.softserveinc.edu.oms.domain.entities.OrderStatus: select orderstatu0_.ID as ID4_0_, orderstatu0_.OrederStatusName as OrederSt2_4_0_ from OrderStatuses orderstatu0_ where orderstatu0_.ID=?
[2017-10-14 14:08:43,821]DEBUG  1608[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.softserveinc.edu.oms.domain.entities.OrderStatus: select orderstatu0_.ID as ID4_0_, orderstatu0_.OrederStatusName as OrederSt2_4_0_ from OrderStatuses orderstatu0_ where orderstatu0_.ID=?
[2017-10-14 14:08:43,821]DEBUG  1608[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Region [NONE]: select region0_.ID as ID1_0_, region0_.RegionName as RegionName1_0_ from Regions region0_ where region0_.ID=?
[2017-10-14 14:08:43,822]DEBUG  1609[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Region [READ]: select region0_.ID as ID1_0_, region0_.RegionName as RegionName1_0_ from Regions region0_ where region0_.ID=?
[2017-10-14 14:08:43,822]DEBUG  1609[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Region [UPGRADE]: select region0_.ID as ID1_0_, region0_.RegionName as RegionName1_0_ from Regions region0_ where region0_.ID=? for update
[2017-10-14 14:08:43,822]DEBUG  1609[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Region [UPGRADE_NOWAIT]: select region0_.ID as ID1_0_, region0_.RegionName as RegionName1_0_ from Regions region0_ where region0_.ID=? for update
[2017-10-14 14:08:43,822]DEBUG  1609[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Region [FORCE]: select region0_.ID as ID1_0_, region0_.RegionName as RegionName1_0_ from Regions region0_ where region0_.ID=? for update
[2017-10-14 14:08:43,823]DEBUG  1610[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Region [PESSIMISTIC_READ]: select region0_.ID as ID1_0_, region0_.RegionName as RegionName1_0_ from Regions region0_ where region0_.ID=? lock in share mode
[2017-10-14 14:08:43,823]DEBUG  1610[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Region [PESSIMISTIC_WRITE]: select region0_.ID as ID1_0_, region0_.RegionName as RegionName1_0_ from Regions region0_ where region0_.ID=? for update
[2017-10-14 14:08:43,823]DEBUG  1610[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Region [PESSIMISTIC_FORCE_INCREMENT]: select region0_.ID as ID1_0_, region0_.RegionName as RegionName1_0_ from Regions region0_ where region0_.ID=? for update
[2017-10-14 14:08:43,823]DEBUG  1610[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Region [OPTIMISTIC]: select region0_.ID as ID1_0_, region0_.RegionName as RegionName1_0_ from Regions region0_ where region0_.ID=?
[2017-10-14 14:08:43,824]DEBUG  1611[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Region [OPTIMISTIC_FORCE_INCREMENT]: select region0_.ID as ID1_0_, region0_.RegionName as RegionName1_0_ from Regions region0_ where region0_.ID=?
[2017-10-14 14:08:43,824]DEBUG  1611[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.softserveinc.edu.oms.domain.entities.Region: select region0_.ID as ID1_0_, region0_.RegionName as RegionName1_0_ from Regions region0_ where region0_.ID=?
[2017-10-14 14:08:43,824]DEBUG  1611[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.softserveinc.edu.oms.domain.entities.Region: select region0_.ID as ID1_0_, region0_.RegionName as RegionName1_0_ from Regions region0_ where region0_.ID=?
[2017-10-14 14:08:43,825]DEBUG  1612[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.User [NONE]: select user0_.ID as ID3_3_, user0_.IsUserActive as IsUserAc2_3_3_, user0_.Balance as Balance3_3_, user0_.CustomerTypeRef as Customer9_3_3_, user0_.Email as Email3_3_, user0_.FirstName as FirstName3_3_, user0_.LastName as LastName3_3_, user0_.Login as Login3_3_, user0_.Password as Password3_3_, user0_.RegionRef as RegionRef3_3_, user0_.RoleRef as RoleRef3_3_, customerty1_.ID as ID2_0_, customerty1_.Discount as Discount2_0_, customerty1_.MaxRange as MaxRange2_0_, customerty1_.MinRange as MinRange2_0_, customerty1_.TypeName as TypeName2_0_, region2_.ID as ID1_1_, region2_.RegionName as RegionName1_1_, role3_.ID as ID0_2_, role3_.RoleName as RoleName0_2_ from Users user0_ left outer join CustomerTypes customerty1_ on user0_.CustomerTypeRef=customerty1_.ID left outer join Regions region2_ on user0_.RegionRef=region2_.ID inner join Roles role3_ on user0_.RoleRef=role3_.ID where user0_.ID=?
[2017-10-14 14:08:43,825]DEBUG  1612[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.User [READ]: select user0_.ID as ID3_3_, user0_.IsUserActive as IsUserAc2_3_3_, user0_.Balance as Balance3_3_, user0_.CustomerTypeRef as Customer9_3_3_, user0_.Email as Email3_3_, user0_.FirstName as FirstName3_3_, user0_.LastName as LastName3_3_, user0_.Login as Login3_3_, user0_.Password as Password3_3_, user0_.RegionRef as RegionRef3_3_, user0_.RoleRef as RoleRef3_3_, customerty1_.ID as ID2_0_, customerty1_.Discount as Discount2_0_, customerty1_.MaxRange as MaxRange2_0_, customerty1_.MinRange as MinRange2_0_, customerty1_.TypeName as TypeName2_0_, region2_.ID as ID1_1_, region2_.RegionName as RegionName1_1_, role3_.ID as ID0_2_, role3_.RoleName as RoleName0_2_ from Users user0_ left outer join CustomerTypes customerty1_ on user0_.CustomerTypeRef=customerty1_.ID left outer join Regions region2_ on user0_.RegionRef=region2_.ID inner join Roles role3_ on user0_.RoleRef=role3_.ID where user0_.ID=?
[2017-10-14 14:08:43,827]DEBUG  1614[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.User [UPGRADE]: select user0_.ID as ID3_0_, user0_.IsUserActive as IsUserAc2_3_0_, user0_.Balance as Balance3_0_, user0_.CustomerTypeRef as Customer9_3_0_, user0_.Email as Email3_0_, user0_.FirstName as FirstName3_0_, user0_.LastName as LastName3_0_, user0_.Login as Login3_0_, user0_.Password as Password3_0_, user0_.RegionRef as RegionRef3_0_, user0_.RoleRef as RoleRef3_0_ from Users user0_ where user0_.ID=? for update
[2017-10-14 14:08:43,827]DEBUG  1614[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.User [UPGRADE_NOWAIT]: select user0_.ID as ID3_0_, user0_.IsUserActive as IsUserAc2_3_0_, user0_.Balance as Balance3_0_, user0_.CustomerTypeRef as Customer9_3_0_, user0_.Email as Email3_0_, user0_.FirstName as FirstName3_0_, user0_.LastName as LastName3_0_, user0_.Login as Login3_0_, user0_.Password as Password3_0_, user0_.RegionRef as RegionRef3_0_, user0_.RoleRef as RoleRef3_0_ from Users user0_ where user0_.ID=? for update
[2017-10-14 14:08:43,827]DEBUG  1614[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.User [FORCE]: select user0_.ID as ID3_0_, user0_.IsUserActive as IsUserAc2_3_0_, user0_.Balance as Balance3_0_, user0_.CustomerTypeRef as Customer9_3_0_, user0_.Email as Email3_0_, user0_.FirstName as FirstName3_0_, user0_.LastName as LastName3_0_, user0_.Login as Login3_0_, user0_.Password as Password3_0_, user0_.RegionRef as RegionRef3_0_, user0_.RoleRef as RoleRef3_0_ from Users user0_ where user0_.ID=? for update
[2017-10-14 14:08:43,828]DEBUG  1615[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.User [PESSIMISTIC_READ]: select user0_.ID as ID3_0_, user0_.IsUserActive as IsUserAc2_3_0_, user0_.Balance as Balance3_0_, user0_.CustomerTypeRef as Customer9_3_0_, user0_.Email as Email3_0_, user0_.FirstName as FirstName3_0_, user0_.LastName as LastName3_0_, user0_.Login as Login3_0_, user0_.Password as Password3_0_, user0_.RegionRef as RegionRef3_0_, user0_.RoleRef as RoleRef3_0_ from Users user0_ where user0_.ID=? lock in share mode
[2017-10-14 14:08:43,828]DEBUG  1615[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.User [PESSIMISTIC_WRITE]: select user0_.ID as ID3_0_, user0_.IsUserActive as IsUserAc2_3_0_, user0_.Balance as Balance3_0_, user0_.CustomerTypeRef as Customer9_3_0_, user0_.Email as Email3_0_, user0_.FirstName as FirstName3_0_, user0_.LastName as LastName3_0_, user0_.Login as Login3_0_, user0_.Password as Password3_0_, user0_.RegionRef as RegionRef3_0_, user0_.RoleRef as RoleRef3_0_ from Users user0_ where user0_.ID=? for update
[2017-10-14 14:08:43,828]DEBUG  1615[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.ID as ID3_0_, user0_.IsUserActive as IsUserAc2_3_0_, user0_.Balance as Balance3_0_, user0_.CustomerTypeRef as Customer9_3_0_, user0_.Email as Email3_0_, user0_.FirstName as FirstName3_0_, user0_.LastName as LastName3_0_, user0_.Login as Login3_0_, user0_.Password as Password3_0_, user0_.RegionRef as RegionRef3_0_, user0_.RoleRef as RoleRef3_0_ from Users user0_ where user0_.ID=? for update
[2017-10-14 14:08:43,829]DEBUG  1616[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.User [OPTIMISTIC]: select user0_.ID as ID3_3_, user0_.IsUserActive as IsUserAc2_3_3_, user0_.Balance as Balance3_3_, user0_.CustomerTypeRef as Customer9_3_3_, user0_.Email as Email3_3_, user0_.FirstName as FirstName3_3_, user0_.LastName as LastName3_3_, user0_.Login as Login3_3_, user0_.Password as Password3_3_, user0_.RegionRef as RegionRef3_3_, user0_.RoleRef as RoleRef3_3_, customerty1_.ID as ID2_0_, customerty1_.Discount as Discount2_0_, customerty1_.MaxRange as MaxRange2_0_, customerty1_.MinRange as MinRange2_0_, customerty1_.TypeName as TypeName2_0_, region2_.ID as ID1_1_, region2_.RegionName as RegionName1_1_, role3_.ID as ID0_2_, role3_.RoleName as RoleName0_2_ from Users user0_ left outer join CustomerTypes customerty1_ on user0_.CustomerTypeRef=customerty1_.ID left outer join Regions region2_ on user0_.RegionRef=region2_.ID inner join Roles role3_ on user0_.RoleRef=role3_.ID where user0_.ID=?
[2017-10-14 14:08:43,831]DEBUG  1618[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.ID as ID3_3_, user0_.IsUserActive as IsUserAc2_3_3_, user0_.Balance as Balance3_3_, user0_.CustomerTypeRef as Customer9_3_3_, user0_.Email as Email3_3_, user0_.FirstName as FirstName3_3_, user0_.LastName as LastName3_3_, user0_.Login as Login3_3_, user0_.Password as Password3_3_, user0_.RegionRef as RegionRef3_3_, user0_.RoleRef as RoleRef3_3_, customerty1_.ID as ID2_0_, customerty1_.Discount as Discount2_0_, customerty1_.MaxRange as MaxRange2_0_, customerty1_.MinRange as MinRange2_0_, customerty1_.TypeName as TypeName2_0_, region2_.ID as ID1_1_, region2_.RegionName as RegionName1_1_, role3_.ID as ID0_2_, role3_.RoleName as RoleName0_2_ from Users user0_ left outer join CustomerTypes customerty1_ on user0_.CustomerTypeRef=customerty1_.ID left outer join Regions region2_ on user0_.RegionRef=region2_.ID inner join Roles role3_ on user0_.RoleRef=role3_.ID where user0_.ID=?
[2017-10-14 14:08:43,832]DEBUG  1619[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.softserveinc.edu.oms.domain.entities.User: select user0_.ID as ID3_3_, user0_.IsUserActive as IsUserAc2_3_3_, user0_.Balance as Balance3_3_, user0_.CustomerTypeRef as Customer9_3_3_, user0_.Email as Email3_3_, user0_.FirstName as FirstName3_3_, user0_.LastName as LastName3_3_, user0_.Login as Login3_3_, user0_.Password as Password3_3_, user0_.RegionRef as RegionRef3_3_, user0_.RoleRef as RoleRef3_3_, customerty1_.ID as ID2_0_, customerty1_.Discount as Discount2_0_, customerty1_.MaxRange as MaxRange2_0_, customerty1_.MinRange as MinRange2_0_, customerty1_.TypeName as TypeName2_0_, region2_.ID as ID1_1_, region2_.RegionName as RegionName1_1_, role3_.ID as ID0_2_, role3_.RoleName as RoleName0_2_ from Users user0_ left outer join CustomerTypes customerty1_ on user0_.CustomerTypeRef=customerty1_.ID left outer join Regions region2_ on user0_.RegionRef=region2_.ID inner join Roles role3_ on user0_.RoleRef=role3_.ID where user0_.ID=?
[2017-10-14 14:08:43,832]DEBUG  1619[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.softserveinc.edu.oms.domain.entities.User: select user0_.ID as ID3_0_, user0_.IsUserActive as IsUserAc2_3_0_, user0_.Balance as Balance3_0_, user0_.CustomerTypeRef as Customer9_3_0_, user0_.Email as Email3_0_, user0_.FirstName as FirstName3_0_, user0_.LastName as LastName3_0_, user0_.Login as Login3_0_, user0_.Password as Password3_0_, user0_.RegionRef as RegionRef3_0_, user0_.RoleRef as RoleRef3_0_ from Users user0_ where user0_.ID=?
[2017-10-14 14:08:43,833]DEBUG  1620[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CustomerType [NONE]: select customerty0_.ID as ID2_0_, customerty0_.Discount as Discount2_0_, customerty0_.MaxRange as MaxRange2_0_, customerty0_.MinRange as MinRange2_0_, customerty0_.TypeName as TypeName2_0_ from CustomerTypes customerty0_ where customerty0_.ID=?
[2017-10-14 14:08:43,836]DEBUG  1623[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CustomerType [READ]: select customerty0_.ID as ID2_0_, customerty0_.Discount as Discount2_0_, customerty0_.MaxRange as MaxRange2_0_, customerty0_.MinRange as MinRange2_0_, customerty0_.TypeName as TypeName2_0_ from CustomerTypes customerty0_ where customerty0_.ID=?
[2017-10-14 14:08:43,836]DEBUG  1623[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CustomerType [UPGRADE]: select customerty0_.ID as ID2_0_, customerty0_.Discount as Discount2_0_, customerty0_.MaxRange as MaxRange2_0_, customerty0_.MinRange as MinRange2_0_, customerty0_.TypeName as TypeName2_0_ from CustomerTypes customerty0_ where customerty0_.ID=? for update
[2017-10-14 14:08:43,836]DEBUG  1623[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CustomerType [UPGRADE_NOWAIT]: select customerty0_.ID as ID2_0_, customerty0_.Discount as Discount2_0_, customerty0_.MaxRange as MaxRange2_0_, customerty0_.MinRange as MinRange2_0_, customerty0_.TypeName as TypeName2_0_ from CustomerTypes customerty0_ where customerty0_.ID=? for update
[2017-10-14 14:08:43,836]DEBUG  1623[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CustomerType [FORCE]: select customerty0_.ID as ID2_0_, customerty0_.Discount as Discount2_0_, customerty0_.MaxRange as MaxRange2_0_, customerty0_.MinRange as MinRange2_0_, customerty0_.TypeName as TypeName2_0_ from CustomerTypes customerty0_ where customerty0_.ID=? for update
[2017-10-14 14:08:43,837]DEBUG  1624[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CustomerType [PESSIMISTIC_READ]: select customerty0_.ID as ID2_0_, customerty0_.Discount as Discount2_0_, customerty0_.MaxRange as MaxRange2_0_, customerty0_.MinRange as MinRange2_0_, customerty0_.TypeName as TypeName2_0_ from CustomerTypes customerty0_ where customerty0_.ID=? lock in share mode
[2017-10-14 14:08:43,837]DEBUG  1624[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CustomerType [PESSIMISTIC_WRITE]: select customerty0_.ID as ID2_0_, customerty0_.Discount as Discount2_0_, customerty0_.MaxRange as MaxRange2_0_, customerty0_.MinRange as MinRange2_0_, customerty0_.TypeName as TypeName2_0_ from CustomerTypes customerty0_ where customerty0_.ID=? for update
[2017-10-14 14:08:43,837]DEBUG  1624[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CustomerType [PESSIMISTIC_FORCE_INCREMENT]: select customerty0_.ID as ID2_0_, customerty0_.Discount as Discount2_0_, customerty0_.MaxRange as MaxRange2_0_, customerty0_.MinRange as MinRange2_0_, customerty0_.TypeName as TypeName2_0_ from CustomerTypes customerty0_ where customerty0_.ID=? for update
[2017-10-14 14:08:43,838]DEBUG  1625[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CustomerType [OPTIMISTIC]: select customerty0_.ID as ID2_0_, customerty0_.Discount as Discount2_0_, customerty0_.MaxRange as MaxRange2_0_, customerty0_.MinRange as MinRange2_0_, customerty0_.TypeName as TypeName2_0_ from CustomerTypes customerty0_ where customerty0_.ID=?
[2017-10-14 14:08:43,838]DEBUG  1625[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CustomerType [OPTIMISTIC_FORCE_INCREMENT]: select customerty0_.ID as ID2_0_, customerty0_.Discount as Discount2_0_, customerty0_.MaxRange as MaxRange2_0_, customerty0_.MinRange as MinRange2_0_, customerty0_.TypeName as TypeName2_0_ from CustomerTypes customerty0_ where customerty0_.ID=?
[2017-10-14 14:08:43,838]DEBUG  1625[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.softserveinc.edu.oms.domain.entities.CustomerType: select customerty0_.ID as ID2_0_, customerty0_.Discount as Discount2_0_, customerty0_.MaxRange as MaxRange2_0_, customerty0_.MinRange as MinRange2_0_, customerty0_.TypeName as TypeName2_0_ from CustomerTypes customerty0_ where customerty0_.ID=?
[2017-10-14 14:08:43,838]DEBUG  1625[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.softserveinc.edu.oms.domain.entities.CustomerType: select customerty0_.ID as ID2_0_, customerty0_.Discount as Discount2_0_, customerty0_.MaxRange as MaxRange2_0_, customerty0_.MinRange as MinRange2_0_, customerty0_.TypeName as TypeName2_0_ from CustomerTypes customerty0_ where customerty0_.ID=?
[2017-10-14 14:08:43,839]DEBUG  1626[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Product [NONE]: select product0_.ID as ID6_0_, product0_.IsProductActive as IsProduc2_6_0_, product0_.ProductDescription as ProductD3_6_0_, product0_.ProductName as ProductN4_6_0_, product0_.ProductPrice as ProductP5_6_0_ from Products product0_ where product0_.ID=?
[2017-10-14 14:08:43,839]DEBUG  1626[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Product [READ]: select product0_.ID as ID6_0_, product0_.IsProductActive as IsProduc2_6_0_, product0_.ProductDescription as ProductD3_6_0_, product0_.ProductName as ProductN4_6_0_, product0_.ProductPrice as ProductP5_6_0_ from Products product0_ where product0_.ID=?
[2017-10-14 14:08:43,839]DEBUG  1626[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Product [UPGRADE]: select product0_.ID as ID6_0_, product0_.IsProductActive as IsProduc2_6_0_, product0_.ProductDescription as ProductD3_6_0_, product0_.ProductName as ProductN4_6_0_, product0_.ProductPrice as ProductP5_6_0_ from Products product0_ where product0_.ID=? for update
[2017-10-14 14:08:43,840]DEBUG  1627[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Product [UPGRADE_NOWAIT]: select product0_.ID as ID6_0_, product0_.IsProductActive as IsProduc2_6_0_, product0_.ProductDescription as ProductD3_6_0_, product0_.ProductName as ProductN4_6_0_, product0_.ProductPrice as ProductP5_6_0_ from Products product0_ where product0_.ID=? for update
[2017-10-14 14:08:43,840]DEBUG  1627[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Product [FORCE]: select product0_.ID as ID6_0_, product0_.IsProductActive as IsProduc2_6_0_, product0_.ProductDescription as ProductD3_6_0_, product0_.ProductName as ProductN4_6_0_, product0_.ProductPrice as ProductP5_6_0_ from Products product0_ where product0_.ID=? for update
[2017-10-14 14:08:43,840]DEBUG  1627[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Product [PESSIMISTIC_READ]: select product0_.ID as ID6_0_, product0_.IsProductActive as IsProduc2_6_0_, product0_.ProductDescription as ProductD3_6_0_, product0_.ProductName as ProductN4_6_0_, product0_.ProductPrice as ProductP5_6_0_ from Products product0_ where product0_.ID=? lock in share mode
[2017-10-14 14:08:43,840]DEBUG  1627[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Product [PESSIMISTIC_WRITE]: select product0_.ID as ID6_0_, product0_.IsProductActive as IsProduc2_6_0_, product0_.ProductDescription as ProductD3_6_0_, product0_.ProductName as ProductN4_6_0_, product0_.ProductPrice as ProductP5_6_0_ from Products product0_ where product0_.ID=? for update
[2017-10-14 14:08:43,841]DEBUG  1628[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Product [PESSIMISTIC_FORCE_INCREMENT]: select product0_.ID as ID6_0_, product0_.IsProductActive as IsProduc2_6_0_, product0_.ProductDescription as ProductD3_6_0_, product0_.ProductName as ProductN4_6_0_, product0_.ProductPrice as ProductP5_6_0_ from Products product0_ where product0_.ID=? for update
[2017-10-14 14:08:43,841]DEBUG  1628[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Product [OPTIMISTIC]: select product0_.ID as ID6_0_, product0_.IsProductActive as IsProduc2_6_0_, product0_.ProductDescription as ProductD3_6_0_, product0_.ProductName as ProductN4_6_0_, product0_.ProductPrice as ProductP5_6_0_ from Products product0_ where product0_.ID=?
[2017-10-14 14:08:43,841]DEBUG  1628[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Product [OPTIMISTIC_FORCE_INCREMENT]: select product0_.ID as ID6_0_, product0_.IsProductActive as IsProduc2_6_0_, product0_.ProductDescription as ProductD3_6_0_, product0_.ProductName as ProductN4_6_0_, product0_.ProductPrice as ProductP5_6_0_ from Products product0_ where product0_.ID=?
[2017-10-14 14:08:43,842]DEBUG  1629[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.softserveinc.edu.oms.domain.entities.Product: select product0_.ID as ID6_0_, product0_.IsProductActive as IsProduc2_6_0_, product0_.ProductDescription as ProductD3_6_0_, product0_.ProductName as ProductN4_6_0_, product0_.ProductPrice as ProductP5_6_0_ from Products product0_ where product0_.ID=?
[2017-10-14 14:08:43,842]DEBUG  1629[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.softserveinc.edu.oms.domain.entities.Product: select product0_.ID as ID6_0_, product0_.IsProductActive as IsProduc2_6_0_, product0_.ProductDescription as ProductD3_6_0_, product0_.ProductName as ProductN4_6_0_, product0_.ProductPrice as ProductP5_6_0_ from Products product0_ where product0_.ID=?
[2017-10-14 14:08:43,844]DEBUG  1631[main] - org.hibernate.impl.SessionFactoryObjectFactory.<clinit>(SessionFactoryObjectFactory.java:61) - initializing class SessionFactoryObjectFactory
[2017-10-14 14:08:43,844]DEBUG  1631[main] - org.hibernate.impl.SessionFactoryObjectFactory.addInstance(SessionFactoryObjectFactory.java:99) - registered: 459692b9-0360-4461-be4d-9fd02422bd81 (unnamed)
[2017-10-14 14:08:43,845] INFO  1632[main] - org.hibernate.impl.SessionFactoryObjectFactory.addInstance(SessionFactoryObjectFactory.java:105) - Not binding factory to JNDI, no JNDI name configured
[2017-10-14 14:08:43,845]DEBUG  1632[main] - org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:369) - instantiated session factory
[2017-10-14 14:08:43,847]DEBUG  1634[main] - org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) - Processing hbm.xml files
[2017-10-14 14:08:43,847]DEBUG  1634[main] - org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) - Process annotated classes
[2017-10-14 14:08:43,847]DEBUG  1634[main] - org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) - processing fk mappings (*ToOne and JoinedSubclass)
[2017-10-14 14:08:43,848]DEBUG  1635[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) - processing extends queue
[2017-10-14 14:08:43,848]DEBUG  1635[main] - org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) - processing extends queue
[2017-10-14 14:08:43,848]DEBUG  1635[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) - processing collection mappings
[2017-10-14 14:08:43,848]DEBUG  1635[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) - processing native query and ResultSetMapping mappings
[2017-10-14 14:08:43,848]DEBUG  1635[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) - processing association property references
[2017-10-14 14:08:43,848]DEBUG  1635[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) - processing foreign key constraints
[2017-10-14 14:08:43,849]DEBUG  1636[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Product
[2017-10-14 14:08:43,849]DEBUG  1636[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Dimension
[2017-10-14 14:08:43,849]DEBUG  1636[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Order
[2017-10-14 14:08:43,849]DEBUG  1636[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.OrderStatus
[2017-10-14 14:08:43,849]DEBUG  1636[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.User
[2017-10-14 14:08:43,849]DEBUG  1636[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.User
[2017-10-14 14:08:43,850]DEBUG  1637[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Role
[2017-10-14 14:08:43,850]DEBUG  1637[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.CustomerType
[2017-10-14 14:08:43,850]DEBUG  1637[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Region
[2017-10-14 14:08:43,851]DEBUG  1638[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:107) - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2017-10-14 14:08:43,851]DEBUG  1638[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:118) - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.engine.resolver.JPATraversableResolver.
[2017-10-14 14:08:43,851]DEBUG  1638[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:203) - Trying to load META-INF/validation.xml for XML based Validator configuration.
[2017-10-14 14:08:43,851]DEBUG  1638[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:206) - No META-INF/validation.xml found. Using annotation based configuration only
[2017-10-14 14:08:43,868]DEBUG  1655[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:43,869]DEBUG  1656[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:43,869]DEBUG  1656[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:43,869]DEBUG  1656[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:43,869]DEBUG  1656[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:43,870]DEBUG  1657[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:43,870]DEBUG  1657[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:43,870]DEBUG  1657[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:43,871]DEBUG  1658[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:43,871]DEBUG  1658[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:43,871]DEBUG  1658[main] - org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) - Processing hbm.xml files
[2017-10-14 14:08:43,871]DEBUG  1658[main] - org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) - Process annotated classes
[2017-10-14 14:08:43,871]DEBUG  1658[main] - org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) - processing fk mappings (*ToOne and JoinedSubclass)
[2017-10-14 14:08:43,872]DEBUG  1659[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) - processing extends queue
[2017-10-14 14:08:43,872]DEBUG  1659[main] - org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) - processing extends queue
[2017-10-14 14:08:43,872]DEBUG  1659[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) - processing collection mappings
[2017-10-14 14:08:43,872]DEBUG  1659[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) - processing native query and ResultSetMapping mappings
[2017-10-14 14:08:43,872]DEBUG  1659[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) - processing association property references
[2017-10-14 14:08:43,872]DEBUG  1659[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) - processing foreign key constraints
[2017-10-14 14:08:43,872]DEBUG  1659[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Product
[2017-10-14 14:08:43,873]DEBUG  1660[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Dimension
[2017-10-14 14:08:43,873]DEBUG  1660[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Order
[2017-10-14 14:08:43,873]DEBUG  1660[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.OrderStatus
[2017-10-14 14:08:43,873]DEBUG  1660[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.User
[2017-10-14 14:08:43,873]DEBUG  1660[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.User
[2017-10-14 14:08:43,873]DEBUG  1660[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Role
[2017-10-14 14:08:43,874]DEBUG  1661[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.CustomerType
[2017-10-14 14:08:43,874]DEBUG  1661[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Region
[2017-10-14 14:08:43,874]DEBUG  1661[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:107) - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2017-10-14 14:08:43,875]DEBUG  1662[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:118) - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.engine.resolver.JPATraversableResolver.
[2017-10-14 14:08:43,875]DEBUG  1662[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:203) - Trying to load META-INF/validation.xml for XML based Validator configuration.
[2017-10-14 14:08:43,875]DEBUG  1662[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:206) - No META-INF/validation.xml found. Using annotation based configuration only
[2017-10-14 14:08:43,891]DEBUG  1678[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:43,891]DEBUG  1678[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:43,891]DEBUG  1678[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:43,891]DEBUG  1678[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:43,892]DEBUG  1679[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:43,892]DEBUG  1679[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:43,892]DEBUG  1679[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:43,892]DEBUG  1679[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:43,893]DEBUG  1680[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:43,893]DEBUG  1680[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:43,893]DEBUG  1680[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:43,894]DEBUG  1681[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:43,894]DEBUG  1681[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:43,894]DEBUG  1681[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:43,894]DEBUG  1681[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:43,894]DEBUG  1681[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:43,895]DEBUG  1682[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:43,895]DEBUG  1682[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:43,895]DEBUG  1682[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:43,895]DEBUG  1682[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:43,897] INFO  1684[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:234) - Running hbm2ddl schema export
[2017-10-14 14:08:43,898]DEBUG  1685[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:252) - import file not found: /import.sql
[2017-10-14 14:08:43,898] INFO  1685[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:262) - exporting generated schema to database
[2017-10-14 14:08:43,898]DEBUG  1685[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table OrderItems drop foreign key FKA2B1AD3262E1ABF7
[2017-10-14 14:08:43,905]DEBUG  1692[main] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: alter table OrderItems drop foreign key FKA2B1AD3262E1ABF7
[2017-10-14 14:08:43,905]DEBUG  1692[main] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - Table 'test1.OrderItems' doesn't exist
[2017-10-14 14:08:43,905]DEBUG  1692[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table OrderItems drop foreign key FKA2B1AD32A6376397
[2017-10-14 14:08:43,906]DEBUG  1693[main] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: alter table OrderItems drop foreign key FKA2B1AD32A6376397
[2017-10-14 14:08:43,906]DEBUG  1693[main] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - Table 'test1.OrderItems' doesn't exist
[2017-10-14 14:08:43,906]DEBUG  1693[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table OrderItems drop foreign key FKA2B1AD32BCDB3C97
[2017-10-14 14:08:43,907]DEBUG  1694[main] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: alter table OrderItems drop foreign key FKA2B1AD32BCDB3C97
[2017-10-14 14:08:43,907]DEBUG  1694[main] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - Table 'test1.OrderItems' doesn't exist
[2017-10-14 14:08:43,907]DEBUG  1694[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Orders drop foreign key FK8D444F05990DB877
[2017-10-14 14:08:43,907]DEBUG  1694[main] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: alter table Orders drop foreign key FK8D444F05990DB877
[2017-10-14 14:08:43,907]DEBUG  1694[main] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - Table 'test1.Orders' doesn't exist
[2017-10-14 14:08:43,908]DEBUG  1695[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Orders drop foreign key FK8D444F05C0F431DD
[2017-10-14 14:08:43,908]DEBUG  1695[main] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: alter table Orders drop foreign key FK8D444F05C0F431DD
[2017-10-14 14:08:43,908]DEBUG  1695[main] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - Table 'test1.Orders' doesn't exist
[2017-10-14 14:08:43,908]DEBUG  1695[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Orders drop foreign key FK8D444F05F161465
[2017-10-14 14:08:43,909]DEBUG  1696[main] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: alter table Orders drop foreign key FK8D444F05F161465
[2017-10-14 14:08:43,909]DEBUG  1696[main] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - Table 'test1.Orders' doesn't exist
[2017-10-14 14:08:43,909]DEBUG  1696[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Users drop foreign key FK4E39DE83D05058F
[2017-10-14 14:08:43,909]DEBUG  1696[main] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: alter table Users drop foreign key FK4E39DE83D05058F
[2017-10-14 14:08:43,909]DEBUG  1696[main] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - Table 'test1.Users' doesn't exist
[2017-10-14 14:08:43,909]DEBUG  1696[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Users drop foreign key FK4E39DE89AEF426F
[2017-10-14 14:08:43,910]DEBUG  1697[main] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: alter table Users drop foreign key FK4E39DE89AEF426F
[2017-10-14 14:08:43,910]DEBUG  1697[main] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - Table 'test1.Users' doesn't exist
[2017-10-14 14:08:43,910]DEBUG  1697[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Users drop foreign key FK4E39DE8FEAD4DCF
[2017-10-14 14:08:43,910]DEBUG  1697[main] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: alter table Users drop foreign key FK4E39DE8FEAD4DCF
[2017-10-14 14:08:43,911]DEBUG  1698[main] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - Table 'test1.Users' doesn't exist
[2017-10-14 14:08:43,911]DEBUG  1698[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists CardType
[2017-10-14 14:08:43,913]DEBUG  1700[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists CustomerTypes
[2017-10-14 14:08:43,914]DEBUG  1701[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists Dimensions
[2017-10-14 14:08:43,914]DEBUG  1701[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists OrderItems
[2017-10-14 14:08:43,915]DEBUG  1702[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists OrderStatuses
[2017-10-14 14:08:43,915]DEBUG  1702[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists Orders
[2017-10-14 14:08:43,916]DEBUG  1703[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists Products
[2017-10-14 14:08:43,917]DEBUG  1704[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists Regions
[2017-10-14 14:08:43,917]DEBUG  1704[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists Roles
[2017-10-14 14:08:43,918]DEBUG  1705[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists Users
[2017-10-14 14:08:43,919]DEBUG  1706[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - create table CardType (ID integer not null auto_increment, CardType varchar(255), CardNumber varchar(255), CardCvv2 integer, Expiration_Date varchar(255), IssueDate varchar(255), IssueNumber varchar(255), primary key (ID))
[2017-10-14 14:08:44,050]DEBUG  1837[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - create table CustomerTypes (ID integer not null auto_increment, Discount double precision, MaxRange double precision, MinRange double precision, TypeName varchar(255), primary key (ID))
[2017-10-14 14:08:44,151]DEBUG  1938[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - create table Dimensions (ID integer not null auto_increment, DimensionName varchar(255), NumberOfProducts integer, primary key (ID))
[2017-10-14 14:08:44,251]DEBUG  2038[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - create table OrderItems (ID integer not null auto_increment, Cost double precision, ItemPrice double precision, Quantity integer, DimensionRef integer, OrderRef integer, ProductRef integer, primary key (ID))
[2017-10-14 14:08:44,351]DEBUG  2138[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - create table OrderStatuses (ID integer not null auto_increment, OrederStatusName varchar(255), primary key (ID))
[2017-10-14 14:08:44,493]DEBUG  2280[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - create table Orders (ID integer not null auto_increment, DeliveryDate datetime, IsGift bit, MaxDiscount integer, OrderDate datetime, OrderName varchar(100), OrderNumber integer unique, PreferableDeliveryDate datetime, TotalPrice double precision, Assigne integer, Customer integer, OrderStatusRef integer, primary key (ID))
[2017-10-14 14:08:44,593]DEBUG  2380[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - create table Products (ID integer not null auto_increment, IsProductActive bit, ProductDescription varchar(255), ProductName varchar(255), ProductPrice double precision, primary key (ID))
[2017-10-14 14:08:44,693]DEBUG  2480[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - create table Regions (ID integer not null auto_increment, RegionName varchar(255), primary key (ID))
[2017-10-14 14:08:44,794]DEBUG  2581[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - create table Roles (ID integer not null auto_increment, RoleName varchar(255), primary key (ID))
[2017-10-14 14:08:44,902]DEBUG  2689[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - create table Users (ID integer not null auto_increment, IsUserActive bit, Balance double precision, Email varchar(255) not null, FirstName varchar(255) not null, LastName varchar(255) not null, Login varchar(255) not null, Password varchar(255) not null, CustomerTypeRef integer, RegionRef integer, RoleRef integer not null, primary key (ID))
[2017-10-14 14:08:45,011]DEBUG  2798[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table OrderItems add index FKA2B1AD3262E1ABF7 (ProductRef), add constraint FKA2B1AD3262E1ABF7 foreign key (ProductRef) references Products (ID)
[2017-10-14 14:08:45,278]DEBUG  3065[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table OrderItems add index FKA2B1AD32A6376397 (DimensionRef), add constraint FKA2B1AD32A6376397 foreign key (DimensionRef) references Dimensions (ID)
[2017-10-14 14:08:45,495]DEBUG  3282[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table OrderItems add index FKA2B1AD32BCDB3C97 (OrderRef), add constraint FKA2B1AD32BCDB3C97 foreign key (OrderRef) references Orders (ID)
[2017-10-14 14:08:45,695]DEBUG  3482[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Orders add index FK8D444F05990DB877 (OrderStatusRef), add constraint FK8D444F05990DB877 foreign key (OrderStatusRef) references OrderStatuses (ID)
[2017-10-14 14:08:45,904]DEBUG  3691[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Orders add index FK8D444F05C0F431DD (Assigne), add constraint FK8D444F05C0F431DD foreign key (Assigne) references Users (ID)
[2017-10-14 14:08:46,113]DEBUG  3900[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Orders add index FK8D444F05F161465 (Customer), add constraint FK8D444F05F161465 foreign key (Customer) references Users (ID)
[2017-10-14 14:08:46,315]DEBUG  4102[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Users add index FK4E39DE83D05058F (RoleRef), add constraint FK4E39DE83D05058F foreign key (RoleRef) references Roles (ID)
[2017-10-14 14:08:46,516]DEBUG  4303[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Users add index FK4E39DE89AEF426F (CustomerTypeRef), add constraint FK4E39DE89AEF426F foreign key (CustomerTypeRef) references CustomerTypes (ID)
[2017-10-14 14:08:46,725]DEBUG  4512[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Users add index FK4E39DE8FEAD4DCF (RegionRef), add constraint FK4E39DE8FEAD4DCF foreign key (RegionRef) references Regions (ID)
[2017-10-14 14:08:46,925] INFO  4712[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:281) - schema export complete
[2017-10-14 14:08:46,926]DEBUG  4713[main] - org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) - Processing hbm.xml files
[2017-10-14 14:08:46,927]DEBUG  4714[main] - org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) - Process annotated classes
[2017-10-14 14:08:46,927]DEBUG  4714[main] - org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) - processing fk mappings (*ToOne and JoinedSubclass)
[2017-10-14 14:08:46,928]DEBUG  4715[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) - processing extends queue
[2017-10-14 14:08:46,928]DEBUG  4715[main] - org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) - processing extends queue
[2017-10-14 14:08:46,929]DEBUG  4716[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) - processing collection mappings
[2017-10-14 14:08:46,929]DEBUG  4716[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) - processing native query and ResultSetMapping mappings
[2017-10-14 14:08:46,929]DEBUG  4716[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) - processing association property references
[2017-10-14 14:08:46,930]DEBUG  4717[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) - processing foreign key constraints
[2017-10-14 14:08:46,930]DEBUG  4717[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Product
[2017-10-14 14:08:46,931]DEBUG  4718[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Dimension
[2017-10-14 14:08:46,931]DEBUG  4718[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Order
[2017-10-14 14:08:46,931]DEBUG  4718[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.OrderStatus
[2017-10-14 14:08:46,932]DEBUG  4719[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.User
[2017-10-14 14:08:46,933]DEBUG  4720[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.User
[2017-10-14 14:08:46,933]DEBUG  4720[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Role
[2017-10-14 14:08:46,934]DEBUG  4721[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.CustomerType
[2017-10-14 14:08:46,934]DEBUG  4721[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Region
[2017-10-14 14:08:46,935]DEBUG  4722[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:107) - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2017-10-14 14:08:46,936]DEBUG  4723[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:118) - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.engine.resolver.JPATraversableResolver.
[2017-10-14 14:08:46,936]DEBUG  4723[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:203) - Trying to load META-INF/validation.xml for XML based Validator configuration.
[2017-10-14 14:08:46,937]DEBUG  4724[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:206) - No META-INF/validation.xml found. Using annotation based configuration only
[2017-10-14 14:08:46,962]DEBUG  4749[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:46,962]DEBUG  4749[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:46,963]DEBUG  4750[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:46,963]DEBUG  4750[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:46,963]DEBUG  4750[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:46,963]DEBUG  4750[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:46,963]DEBUG  4750[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:46,964]DEBUG  4751[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:46,964]DEBUG  4751[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:46,964]DEBUG  4751[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:46,964]DEBUG  4751[main] - org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) - Processing hbm.xml files
[2017-10-14 14:08:46,964]DEBUG  4751[main] - org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) - Process annotated classes
[2017-10-14 14:08:46,965]DEBUG  4752[main] - org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) - processing fk mappings (*ToOne and JoinedSubclass)
[2017-10-14 14:08:46,965]DEBUG  4752[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) - processing extends queue
[2017-10-14 14:08:46,965]DEBUG  4752[main] - org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) - processing extends queue
[2017-10-14 14:08:46,965]DEBUG  4752[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) - processing collection mappings
[2017-10-14 14:08:46,971]DEBUG  4758[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) - processing native query and ResultSetMapping mappings
[2017-10-14 14:08:46,971]DEBUG  4758[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) - processing association property references
[2017-10-14 14:08:46,971]DEBUG  4758[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) - processing foreign key constraints
[2017-10-14 14:08:46,971]DEBUG  4758[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Product
[2017-10-14 14:08:46,971]DEBUG  4758[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Dimension
[2017-10-14 14:08:46,972]DEBUG  4759[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Order
[2017-10-14 14:08:46,972]DEBUG  4759[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.OrderStatus
[2017-10-14 14:08:46,972]DEBUG  4759[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.User
[2017-10-14 14:08:46,972]DEBUG  4759[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.User
[2017-10-14 14:08:46,973]DEBUG  4760[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Role
[2017-10-14 14:08:46,973]DEBUG  4760[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.CustomerType
[2017-10-14 14:08:46,973]DEBUG  4760[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Region
[2017-10-14 14:08:46,974]DEBUG  4761[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:107) - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2017-10-14 14:08:46,974]DEBUG  4761[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:118) - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.engine.resolver.JPATraversableResolver.
[2017-10-14 14:08:46,974]DEBUG  4761[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:203) - Trying to load META-INF/validation.xml for XML based Validator configuration.
[2017-10-14 14:08:46,974]DEBUG  4761[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:206) - No META-INF/validation.xml found. Using annotation based configuration only
[2017-10-14 14:08:46,987]DEBUG  4774[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:46,987]DEBUG  4774[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:46,988]DEBUG  4775[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:46,988]DEBUG  4775[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:46,988]DEBUG  4775[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:46,988]DEBUG  4775[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:46,988]DEBUG  4775[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:46,989]DEBUG  4776[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:46,989]DEBUG  4776[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:46,989]DEBUG  4776[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:46,989]DEBUG  4776[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:46,990]DEBUG  4777[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:46,990]DEBUG  4777[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:46,990]DEBUG  4777[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:46,990]DEBUG  4777[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:46,990]DEBUG  4777[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:46,990]DEBUG  4777[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:46,991]DEBUG  4778[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:46,991]DEBUG  4778[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:46,991]DEBUG  4778[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:46,991]DEBUG  4778[main] - org.hibernate.impl.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:539) - Checking 0 named HQL queries
[2017-10-14 14:08:46,992]DEBUG  4779[main] - org.hibernate.impl.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:559) - Checking 0 named SQL queries
[2017-10-14 14:08:46,993]DEBUG  4780[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 14:08:46,993]DEBUG  4780[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 14:08:46,994]DEBUG  4781[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'org.springframework.transaction.config.internalTransactionAdvisor' to allow for resolving potential circular references
[2017-10-14 14:08:46,998]DEBUG  4785[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
[2017-10-14 14:08:46,999]DEBUG  4786[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
[2017-10-14 14:08:46,999]DEBUG  4786[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' to allow for resolving potential circular references
[2017-10-14 14:08:47,003]DEBUG  4790[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
[2017-10-14 14:08:47,003]DEBUG  4790[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 14:08:47,006]DEBUG  4793[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'sessionFactory'
[2017-10-14 14:08:47,006]DEBUG  4793[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 14:08:47,015]DEBUG  4802[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1461) - Invoking afterPropertiesSet() on bean with name 'transactionManager'
[2017-10-14 14:08:47,021]DEBUG  4808[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 14:08:47,023]DEBUG  4810[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'transactionManager'
[2017-10-14 14:08:47,023]DEBUG  4810[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
[2017-10-14 14:08:47,023]DEBUG  4810[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
[2017-10-14 14:08:47,023]DEBUG  4810[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
[2017-10-14 14:08:47,023]DEBUG  4810[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
[2017-10-14 14:08:47,025]DEBUG  4812[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' to allow for resolving potential circular references
[2017-10-14 14:08:47,028]DEBUG  4815[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
[2017-10-14 14:08:47,028]DEBUG  4815[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1461) - Invoking afterPropertiesSet() on bean with name 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
[2017-10-14 14:08:47,028]DEBUG  4815[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
[2017-10-14 14:08:47,028]DEBUG  4815[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 14:08:47,029]DEBUG  4816[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
[2017-10-14 14:08:47,029]DEBUG  4816[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
[2017-10-14 14:08:47,029]DEBUG  4816[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
[2017-10-14 14:08:47,029]DEBUG  4816[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
[2017-10-14 14:08:47,029]DEBUG  4816[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
[2017-10-14 14:08:47,029]DEBUG  4816[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'orderStatusDao'
[2017-10-14 14:08:47,029]DEBUG  4816[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'orderStatusDao'
[2017-10-14 14:08:47,034]DEBUG  4821[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao]: AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2017-10-14 14:08:47,035]DEBUG  4822[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'orderStatusDao' to allow for resolving potential circular references
[2017-10-14 14:08:47,038]DEBUG  4825[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'orderStatusDao': AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2017-10-14 14:08:47,039]DEBUG  4826[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 14:08:47,039]DEBUG  4826[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'orderStatusDao' to bean named 'sessionFactory'
[2017-10-14 14:08:47,040]DEBUG  4827[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 14:08:47,042]DEBUG  4829[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'orderStatusDao'
[2017-10-14 14:08:47,042]DEBUG  4829[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'dimensionDao'
[2017-10-14 14:08:47,042]DEBUG  4829[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'dimensionDao'
[2017-10-14 14:08:47,043]DEBUG  4830[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao]: AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2017-10-14 14:08:47,043]DEBUG  4830[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'dimensionDao' to allow for resolving potential circular references
[2017-10-14 14:08:47,047]DEBUG  4834[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'dimensionDao': AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2017-10-14 14:08:47,047]DEBUG  4834[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 14:08:47,047]DEBUG  4834[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'dimensionDao' to bean named 'sessionFactory'
[2017-10-14 14:08:47,048]DEBUG  4835[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 14:08:47,049]DEBUG  4836[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'dimensionDao'
[2017-10-14 14:08:47,049]DEBUG  4836[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'creditCardTypeDao'
[2017-10-14 14:08:47,050]DEBUG  4837[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'creditCardTypeDao'
[2017-10-14 14:08:47,050]DEBUG  4837[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.concrete.CreditCardTypeDao]: AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2017-10-14 14:08:47,050]DEBUG  4837[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'creditCardTypeDao' to allow for resolving potential circular references
[2017-10-14 14:08:47,053]DEBUG  4840[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'creditCardTypeDao': AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2017-10-14 14:08:47,054]DEBUG  4841[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 14:08:47,054]DEBUG  4841[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'creditCardTypeDao' to bean named 'sessionFactory'
[2017-10-14 14:08:47,054]DEBUG  4841[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 14:08:47,056]DEBUG  4843[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'creditCardTypeDao'
[2017-10-14 14:08:47,056]DEBUG  4843[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'userDao'
[2017-10-14 14:08:47,056]DEBUG  4843[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'userDao'
[2017-10-14 14:08:47,059]DEBUG  4846[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.concrete.UserDao]: AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2017-10-14 14:08:47,059]DEBUG  4846[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'userDao' to allow for resolving potential circular references
[2017-10-14 14:08:47,064]DEBUG  4851[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'userDao': AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2017-10-14 14:08:47,064]DEBUG  4851[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 14:08:47,064]DEBUG  4851[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'userDao' to bean named 'sessionFactory'
[2017-10-14 14:08:47,064]DEBUG  4851[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 14:08:47,066]DEBUG  4853[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'userDao'
[2017-10-14 14:08:47,067]DEBUG  4854[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'orderDao'
[2017-10-14 14:08:47,067]DEBUG  4854[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'orderDao'
[2017-10-14 14:08:47,071]DEBUG  4858[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao]: AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2017-10-14 14:08:47,071]DEBUG  4858[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao]: AutowiredFieldElement for private com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao.orderStatusDao
[2017-10-14 14:08:47,071]DEBUG  4858[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao]: AutowiredFieldElement for private com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao.roleDao
[2017-10-14 14:08:47,071]DEBUG  4858[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'orderDao' to allow for resolving potential circular references
[2017-10-14 14:08:47,076]DEBUG  4863[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'orderDao': AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2017-10-14 14:08:47,077]DEBUG  4864[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 14:08:47,077]DEBUG  4864[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'orderDao' to bean named 'sessionFactory'
[2017-10-14 14:08:47,077]DEBUG  4864[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'orderDao': AutowiredFieldElement for private com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao.orderStatusDao
[2017-10-14 14:08:47,078]DEBUG  4865[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 14:08:47,078]DEBUG  4865[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'orderDao' to bean named 'orderStatusDao'
[2017-10-14 14:08:47,078]DEBUG  4865[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'orderDao': AutowiredFieldElement for private com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao.roleDao
[2017-10-14 14:08:47,079]DEBUG  4866[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'roleDao'
[2017-10-14 14:08:47,079]DEBUG  4866[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'roleDao'
[2017-10-14 14:08:47,079]DEBUG  4866[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao]: AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2017-10-14 14:08:47,080]DEBUG  4867[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'roleDao' to allow for resolving potential circular references
[2017-10-14 14:08:47,083]DEBUG  4870[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'roleDao': AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2017-10-14 14:08:47,084]DEBUG  4871[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 14:08:47,084]DEBUG  4871[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'roleDao' to bean named 'sessionFactory'
[2017-10-14 14:08:47,084]DEBUG  4871[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 14:08:47,086]DEBUG  4873[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'roleDao'
[2017-10-14 14:08:47,086]DEBUG  4873[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'orderDao' to bean named 'roleDao'
[2017-10-14 14:08:47,086]DEBUG  4873[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 14:08:47,088]DEBUG  4875[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'orderDao'
[2017-10-14 14:08:47,088]DEBUG  4875[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'orderItemDao'
[2017-10-14 14:08:47,088]DEBUG  4875[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'orderItemDao'
[2017-10-14 14:08:47,089]DEBUG  4876[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao]: AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2017-10-14 14:08:47,089]DEBUG  4876[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'orderItemDao' to allow for resolving potential circular references
[2017-10-14 14:08:47,094]DEBUG  4881[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'orderItemDao': AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2017-10-14 14:08:47,094]DEBUG  4881[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 14:08:47,094]DEBUG  4881[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'orderItemDao' to bean named 'sessionFactory'
[2017-10-14 14:08:47,094]DEBUG  4881[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 14:08:47,096]DEBUG  4883[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'orderItemDao'
[2017-10-14 14:08:47,096]DEBUG  4883[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'productDao'
[2017-10-14 14:08:47,097]DEBUG  4884[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'productDao'
[2017-10-14 14:08:47,098]DEBUG  4885[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao]: AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2017-10-14 14:08:47,098]DEBUG  4885[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'productDao' to allow for resolving potential circular references
[2017-10-14 14:08:47,103]DEBUG  4890[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'productDao': AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2017-10-14 14:08:47,103]DEBUG  4890[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 14:08:47,103]DEBUG  4890[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'productDao' to bean named 'sessionFactory'
[2017-10-14 14:08:47,104]DEBUG  4891[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 14:08:47,106]DEBUG  4893[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'productDao'
[2017-10-14 14:08:47,106]DEBUG  4893[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 14:08:47,106]DEBUG  4893[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'regionDao'
[2017-10-14 14:08:47,106]DEBUG  4893[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'regionDao'
[2017-10-14 14:08:47,107]DEBUG  4894[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao]: AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2017-10-14 14:08:47,107]DEBUG  4894[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'regionDao' to allow for resolving potential circular references
[2017-10-14 14:08:47,110]DEBUG  4897[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'regionDao': AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2017-10-14 14:08:47,111]DEBUG  4898[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 14:08:47,111]DEBUG  4898[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'regionDao' to bean named 'sessionFactory'
[2017-10-14 14:08:47,111]DEBUG  4898[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 14:08:47,112]DEBUG  4899[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'regionDao'
[2017-10-14 14:08:47,113]DEBUG  4900[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'customerTypeDao'
[2017-10-14 14:08:47,113]DEBUG  4900[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'customerTypeDao'
[2017-10-14 14:08:47,113]DEBUG  4900[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao]: AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2017-10-14 14:08:47,114]DEBUG  4901[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'customerTypeDao' to allow for resolving potential circular references
[2017-10-14 14:08:47,117]DEBUG  4904[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'customerTypeDao': AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2017-10-14 14:08:47,118]DEBUG  4905[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 14:08:47,118]DEBUG  4905[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'customerTypeDao' to bean named 'sessionFactory'
[2017-10-14 14:08:47,118]DEBUG  4905[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 14:08:47,119]DEBUG  4906[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'customerTypeDao'
[2017-10-14 14:08:47,119]DEBUG  4906[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 14:08:47,121]DEBUG  4908[main] - org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(AbstractApplicationContext.java:827) - Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@2d41c8f0]
[2017-10-14 14:08:47,121]DEBUG  4908[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'lifecycleProcessor'
[2017-10-14 14:08:47,127]DEBUG  4914[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 14:08:47,128]DEBUG  4915[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 14:08:47,128]DEBUG  4915[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 14:08:47,128]DEBUG  4915[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 14:08:47,128]DEBUG  4915[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 14:08:47,128]DEBUG  4915[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 14:08:47,128]DEBUG  4915[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 14:08:47,128]DEBUG  4915[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 14:08:47,128]DEBUG  4915[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 14:08:47,129]DEBUG  4916[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]: AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 14:08:47,129]DEBUG  4916[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 14:08:47,129]DEBUG  4916[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 14:08:47,129]DEBUG  4916[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' to bean named 'customerTypeDao'
[2017-10-14 14:08:47,129]DEBUG  4916[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 14:08:47,130]DEBUG  4917[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 14:08:47,130]DEBUG  4917[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' to bean named 'dimensionDao'
[2017-10-14 14:08:47,130]DEBUG  4917[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 14:08:47,130]DEBUG  4917[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 14:08:47,130]DEBUG  4917[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' to bean named 'orderDao'
[2017-10-14 14:08:47,130]DEBUG  4917[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 14:08:47,131]DEBUG  4918[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 14:08:47,131]DEBUG  4918[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' to bean named 'orderItemDao'
[2017-10-14 14:08:47,131]DEBUG  4918[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 14:08:47,131]DEBUG  4918[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 14:08:47,132]DEBUG  4919[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' to bean named 'orderStatusDao'
[2017-10-14 14:08:47,132]DEBUG  4919[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 14:08:47,132]DEBUG  4919[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 14:08:47,132]DEBUG  4919[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' to bean named 'productDao'
[2017-10-14 14:08:47,132]DEBUG  4919[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 14:08:47,133]DEBUG  4920[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 14:08:47,133]DEBUG  4920[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' to bean named 'regionDao'
[2017-10-14 14:08:47,133]DEBUG  4920[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 14:08:47,133]DEBUG  4920[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 14:08:47,133]DEBUG  4920[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' to bean named 'roleDao'
[2017-10-14 14:08:47,133]DEBUG  4920[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 14:08:47,134]DEBUG  4921[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 14:08:47,134]DEBUG  4921[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' to bean named 'userDao'
[2017-10-14 14:08:47,134]DEBUG  4921[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 14:08:47,134]DEBUG  4921[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 14:08:47,134]DEBUG  4921[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' to bean named 'sessionFactory'
[2017-10-14 14:08:47,135]DEBUG  4922[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 14:08:47,136]DEBUG  4923[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByID' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:47,140]DEBUG  4927[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 14:08:47,144]DEBUG  4931[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@42c5898a]
[2017-10-14 14:08:47,196]DEBUG  4983[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
[2017-10-14 14:08:47,199]DEBUG  4986[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest.testFindByID()
[2017-10-14 14:08:47,199]DEBUG  4986[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetStandartTypeDiscount' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:47,199]DEBUG  4986[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest.testGetStandartTypeDiscount()
[2017-10-14 14:08:47,200]DEBUG  4987[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetSilverTypeDiscount' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:47,200]DEBUG  4987[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest.testGetSilverTypeDiscount()
[2017-10-14 14:08:47,200]DEBUG  4987[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetGoldTypeDiscount' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:47,200]DEBUG  4987[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest.testGetGoldTypeDiscount()
[2017-10-14 14:08:47,200]DEBUG  4987[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetPlatinumTypeDiscount' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:47,201]DEBUG  4988[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest.testGetPlatinumTypeDiscount()
[2017-10-14 14:08:47,201]DEBUG  4988[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindAll' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:47,201]DEBUG  4988[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest.testFindAll()
[2017-10-14 14:08:47,201]DEBUG  4988[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByCriterions' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:47,201]DEBUG  4988[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest.testFindByCriterions()
[2017-10-14 14:08:47,202]DEBUG  4989[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByOneOfCriterions' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:47,202]DEBUG  4989[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest.testFindByOneOfCriterions()
[2017-10-14 14:08:47,202]DEBUG  4989[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testInsertOrUpdate' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:47,202]DEBUG  4989[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest.testInsertOrUpdate()
[2017-10-14 14:08:47,202]DEBUG  4989[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testDelete' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:47,203]DEBUG  4990[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest.testDelete()
[2017-10-14 14:08:47,203]DEBUG  4990[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'setUp' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:47,203]DEBUG  4990[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest.setUp() throws java.lang.Exception
[2017-10-14 14:08:47,203]DEBUG  4990[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'tearDown' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:47,204]DEBUG  4991[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest.tearDown()
[2017-10-14 14:08:47,204]DEBUG  4991[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanDB()
[2017-10-14 14:08:47,204]DEBUG  4991[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanCustomerType()
[2017-10-14 14:08:47,204]DEBUG  4991[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testContextFile' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:47,204]DEBUG  4991[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.testContextFile()
[2017-10-14 14:08:47,204]DEBUG  4991[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanUser()
[2017-10-14 14:08:47,205]DEBUG  4992[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanRole()
[2017-10-14 14:08:47,205]DEBUG  4992[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanRegion()
[2017-10-14 14:08:47,205]DEBUG  4992[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanProduct()
[2017-10-14 14:08:47,205]DEBUG  4992[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrderStatus()
[2017-10-14 14:08:47,205]DEBUG  4992[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrderItem()
[2017-10-14 14:08:47,205]DEBUG  4992[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrder()
[2017-10-14 14:08:47,205]DEBUG  4992[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanDimension()
[2017-10-14 14:08:47,206]DEBUG  4993[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:749) - Found finalize() method - using NO_OVERRIDE
[2017-10-14 14:08:47,206]DEBUG  4993[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:761) - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
[2017-10-14 14:08:47,206]DEBUG  4993[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
[2017-10-14 14:08:47,206]DEBUG  4993[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:766) - Found 'hashCode' method: public native int java.lang.Object.hashCode()
[2017-10-14 14:08:47,206]DEBUG  4993[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
[2017-10-14 14:08:47,206]DEBUG  4993[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
[2017-10-14 14:08:47,207]DEBUG  4994[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
[2017-10-14 14:08:47,207]DEBUG  4994[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2017-10-14 14:08:47,207]DEBUG  4994[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2017-10-14 14:08:47,207]DEBUG  4994[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
[2017-10-14 14:08:47,207]DEBUG  4994[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
[2017-10-14 14:08:47,207]DEBUG  4994[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
[2017-10-14 14:08:47,207]DEBUG  4994[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
[2017-10-14 14:08:47,207]DEBUG  4994[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
[2017-10-14 14:08:47,208]DEBUG  4995[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
[2017-10-14 14:08:47,208]DEBUG  4995[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
[2017-10-14 14:08:47,208]DEBUG  4995[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
[2017-10-14 14:08:47,208]DEBUG  4995[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
[2017-10-14 14:08:47,208]DEBUG  4995[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
[2017-10-14 14:08:47,208]DEBUG  4995[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
[2017-10-14 14:08:47,208]DEBUG  4995[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
[2017-10-14 14:08:47,209]DEBUG  4996[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
[2017-10-14 14:08:47,209]DEBUG  4996[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
[2017-10-14 14:08:47,209]DEBUG  4996[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2017-10-14 14:08:47,209]DEBUG  4996[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
[2017-10-14 14:08:47,209]DEBUG  4996[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
[2017-10-14 14:08:47,209]DEBUG  4996[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
[2017-10-14 14:08:47,209]DEBUG  4996[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
[2017-10-14 14:08:47,230]DEBUG  5017[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByID' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:47,231]DEBUG  5018[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@4418f61b testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@42c5898a, testMethod = testFindByID@CustomerTypeDaoTest, testException = [null]]]
[2017-10-14 14:08:47,231]DEBUG  5018[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.retrieveConfigurationAttributes(TransactionalTestExecutionListener.java:466) - Retrieved @TransactionConfiguration [@org.springframework.test.context.transaction.TransactionConfiguration(transactionManager=transactionManager, defaultRollback=true)] for test class [class com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2017-10-14 14:08:47,232]DEBUG  5019[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.retrieveConfigurationAttributes(TransactionalTestExecutionListener.java:483) - Retrieved TransactionConfigurationAttributes [[TransactionConfigurationAttributes@706ba7cf transactionManagerName = 'transactionManager', defaultRollback = true]] for class [class com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2017-10-14 14:08:47,232]DEBUG  5019[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 14:08:47,236]DEBUG  5023[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByID]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:47,254]DEBUG  5041[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15079793272
[2017-10-14 14:08:47,254]DEBUG  5041[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@2eb3998c] for Hibernate transaction
[2017-10-14 14:08:47,256]DEBUG  5043[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@2eb3998c]
[2017-10-14 14:08:47,265]DEBUG  5052[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 14:08:47,265]DEBUG  5052[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 14:08:47,265]DEBUG  5052[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 14:08:47,266]DEBUG  5053[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@4418f61b testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@42c5898a, testMethod = testFindByID@CustomerTypeDaoTest, testException = [null]]]
[2017-10-14 14:08:47,266] INFO  5053[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (1): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@48ad0abe]; rollback [true]
[2017-10-14 14:08:47,275]DEBUG  5062[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:47,283]DEBUG  5070[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:47,283]DEBUG  5070[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-14 14:08:47,291]DEBUG  5078[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 1
[2017-10-14 14:08:47,292]DEBUG  5079[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:47,293]DEBUG  5080[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:47,294]DEBUG  5081[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:47,294]DEBUG  5081[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-14 14:08:47,294]DEBUG  5081[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 2
[2017-10-14 14:08:47,294]DEBUG  5081[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:47,295]DEBUG  5082[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:47,295]DEBUG  5082[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:47,295]DEBUG  5082[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-14 14:08:47,295]DEBUG  5082[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 3
[2017-10-14 14:08:47,296]DEBUG  5083[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:47,296]DEBUG  5083[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:47,296]DEBUG  5083[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:47,296]DEBUG  5083[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-14 14:08:47,297]DEBUG  5084[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 4
[2017-10-14 14:08:47,297]DEBUG  5084[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:47,322]DEBUG  5109[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: from com.softserveinc.edu.oms.domain.entities.CustomerType customerT where customerT.typeName = :Standard
[2017-10-14 14:08:47,330]DEBUG  5117[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  |  |  +-[IDENT] Node: 'com'
    |        |  |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
    |        |  |  |  |  |  \-[IDENT] Node: 'edu'
    |        |  |  |  |  \-[IDENT] Node: 'oms'
    |        |  |  |  \-[IDENT] Node: 'domain'
    |        |  |  \-[IDENT] Node: 'entities'
    |        |  \-[IDENT] Node: 'CustomerType'
    |        \-[ALIAS] Node: 'customerT'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'customerT'
          |  \-[IDENT] Node: 'typeName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'Standard'

[2017-10-14 14:08:47,330]DEBUG  5117[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-14 14:08:47,348]DEBUG  5135[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - select << begin [level=1, statement=select]
[2017-10-14 14:08:47,357]DEBUG  5144[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.CustomerType (customerT) -> customerty0_
[2017-10-14 14:08:47,358]DEBUG  5145[main] - org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  customerT -> customerty0_.ID
[2017-10-14 14:08:47,359]DEBUG  5146[main] - org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : typeName -> org.hibernate.type.StringType@3525c6
[2017-10-14 14:08:47,360]DEBUG  5147[main] - org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  customerT.typeName -> customerty0_.TypeName
[2017-10-14 14:08:47,361]DEBUG  5148[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - select : finishing up [level=1, statement=select]
[2017-10-14 14:08:47,361]DEBUG  5148[main] - org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) - processQuery() :  ( SELECT ( FromClause{level=1} CustomerTypes customerty0_ ) ( where ( = ( customerty0_.TypeName customerty0_.ID typeName ) ? ) ) )
[2017-10-14 14:08:47,364]DEBUG  5151[main] - org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) - Derived SELECT clause created.
[2017-10-14 14:08:47,367]DEBUG  5154[main] - org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) - Using FROM fragment [CustomerTypes customerty0_]
[2017-10-14 14:08:47,367]DEBUG  5154[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - select >> end [level=1, statement=select]
[2017-10-14 14:08:47,368]DEBUG  5155[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerTypes)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'customerty0_.ID as ID2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=customerT,role=null,tableName=CustomerTypes,tableAlias=customerty0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.CustomerType}}}
    |  \-[SQL_TOKEN] SqlFragment: 'customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[customerT], fromElementByTableAlias=[customerty0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CustomerTypes customerty0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=customerT,role=null,tableName=CustomerTypes,tableAlias=customerty0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.CustomerType}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customerty0_.TypeName' {propertyName=typeName,dereferenceType=ALL,propertyPath=typeName,path=customerT.typeName,tableAlias=customerty0_,className=com.softserveinc.edu.oms.domain.entities.CustomerType,classAlias=customerT}
          |  +-[ALIAS_REF] IdentNode: 'customerty0_.ID' {alias=customerT, className=com.softserveinc.edu.oms.domain.entities.CustomerType, tableAlias=customerty0_}
          |  \-[IDENT] IdentNode: 'typeName' {originalText=typeName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=Standard, expectedType=org.hibernate.type.StringType@3525c6}

[2017-10-14 14:08:47,369]DEBUG  5156[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-14 14:08:47,376]DEBUG  5163[main] - org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:241) - HQL: from com.softserveinc.edu.oms.domain.entities.CustomerType customerT where customerT.typeName = :Standard
[2017-10-14 14:08:47,376]DEBUG  5163[main] - org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:242) - SQL: select customerty0_.ID as ID2_, customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_ from CustomerTypes customerty0_ where customerty0_.TypeName=?
[2017-10-14 14:08:47,377]DEBUG  5164[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-14 14:08:47,385]DEBUG  5172[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:47,385]DEBUG  5172[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:47,387]DEBUG  5174[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:47,387]DEBUG  5174[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:47,388]DEBUG  5175[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:47,388]DEBUG  5175[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=3, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,388]DEBUG  5175[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=4, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,389]DEBUG  5176[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=2, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,389]DEBUG  5176[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=1, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,390]DEBUG  5177[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:47,390]DEBUG  5177[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select customerty0_.ID as ID2_, customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_ from CustomerTypes customerty0_ where customerty0_.TypeName=?
[2017-10-14 14:08:47,392]DEBUG  5179[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:47,395]DEBUG  5182[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.CustomerType#1]
[2017-10-14 14:08:47,395]DEBUG  5182[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:47,395]DEBUG  5182[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:47,396]DEBUG  5183[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:47,399]DEBUG  5186[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: Delete From com.softserveinc.edu.oms.domain.entities.OrderItem
[2017-10-14 14:08:47,401]DEBUG  5188[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[DELETE] Node: 'Delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[DOT] Node: '.'
             |  |  |  |  +-[DOT] Node: '.'
             |  |  |  |  |  +-[IDENT] Node: 'com'
             |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
             |  |  |  |  \-[IDENT] Node: 'edu'
             |  |  |  \-[IDENT] Node: 'oms'
             |  |  \-[IDENT] Node: 'domain'
             |  \-[IDENT] Node: 'entities'
             \-[IDENT] Node: 'OrderItem'

[2017-10-14 14:08:47,401]DEBUG  5188[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-14 14:08:47,402]DEBUG  5189[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - delete << begin [level=1, statement=delete]
[2017-10-14 14:08:47,403]DEBUG  5190[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.OrderItem (no alias) -> orderitem0_
[2017-10-14 14:08:47,403]DEBUG  5190[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - delete : finishing up [level=1, statement=delete]
[2017-10-14 14:08:47,403]DEBUG  5190[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - delete >> end [level=1, statement=delete]
[2017-10-14 14:08:47,404]DEBUG  5191[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'Delete'  querySpaces (OrderItems)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[orderitem0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'OrderItems' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=OrderItems,tableAlias=orderitem0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.OrderItem}}

[2017-10-14 14:08:47,404]DEBUG  5191[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-14 14:08:47,407]DEBUG  5194[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-14 14:08:47,407]DEBUG  5194[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:47,407]DEBUG  5194[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:47,408]DEBUG  5195[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:47,408]DEBUG  5195[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:47,409]DEBUG  5196[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:47,409]DEBUG  5196[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=3, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,409]DEBUG  5196[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=4, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,410]DEBUG  5197[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=2, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,410]DEBUG  5197[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=1, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,411]DEBUG  5198[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:47,411]DEBUG  5198[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 14:08:47,412]DEBUG  5199[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:47,413]DEBUG  5200[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: Delete From com.softserveinc.edu.oms.domain.entities.Dimension
[2017-10-14 14:08:47,415]DEBUG  5202[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[DELETE] Node: 'Delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[DOT] Node: '.'
             |  |  |  |  +-[DOT] Node: '.'
             |  |  |  |  |  +-[IDENT] Node: 'com'
             |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
             |  |  |  |  \-[IDENT] Node: 'edu'
             |  |  |  \-[IDENT] Node: 'oms'
             |  |  \-[IDENT] Node: 'domain'
             |  \-[IDENT] Node: 'entities'
             \-[IDENT] Node: 'Dimension'

[2017-10-14 14:08:47,415]DEBUG  5202[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-14 14:08:47,415]DEBUG  5202[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - delete << begin [level=1, statement=delete]
[2017-10-14 14:08:47,416]DEBUG  5203[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.Dimension (no alias) -> dimension0_
[2017-10-14 14:08:47,416]DEBUG  5203[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - delete : finishing up [level=1, statement=delete]
[2017-10-14 14:08:47,417]DEBUG  5204[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - delete >> end [level=1, statement=delete]
[2017-10-14 14:08:47,417]DEBUG  5204[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'Delete'  querySpaces (Dimensions)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[dimension0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Dimensions' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Dimensions,tableAlias=dimension0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.Dimension}}

[2017-10-14 14:08:47,417]DEBUG  5204[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-14 14:08:47,418]DEBUG  5205[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-14 14:08:47,418]DEBUG  5205[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:47,418]DEBUG  5205[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:47,419]DEBUG  5206[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:47,419]DEBUG  5206[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:47,419]DEBUG  5206[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:47,419]DEBUG  5206[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=3, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,419]DEBUG  5206[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=4, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,420]DEBUG  5207[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=2, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,420]DEBUG  5207[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=1, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,420]DEBUG  5207[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:47,420]DEBUG  5207[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 14:08:47,421]DEBUG  5208[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:47,422]DEBUG  5209[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: Delete From com.softserveinc.edu.oms.domain.entities.Product
[2017-10-14 14:08:47,424]DEBUG  5211[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[DELETE] Node: 'Delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[DOT] Node: '.'
             |  |  |  |  +-[DOT] Node: '.'
             |  |  |  |  |  +-[IDENT] Node: 'com'
             |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
             |  |  |  |  \-[IDENT] Node: 'edu'
             |  |  |  \-[IDENT] Node: 'oms'
             |  |  \-[IDENT] Node: 'domain'
             |  \-[IDENT] Node: 'entities'
             \-[IDENT] Node: 'Product'

[2017-10-14 14:08:47,424]DEBUG  5211[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-14 14:08:47,424]DEBUG  5211[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - delete << begin [level=1, statement=delete]
[2017-10-14 14:08:47,425]DEBUG  5212[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.Product (no alias) -> product0_
[2017-10-14 14:08:47,425]DEBUG  5212[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - delete : finishing up [level=1, statement=delete]
[2017-10-14 14:08:47,425]DEBUG  5212[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - delete >> end [level=1, statement=delete]
[2017-10-14 14:08:47,425]DEBUG  5212[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'Delete'  querySpaces (Products)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[product0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Products' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Products,tableAlias=product0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.Product}}

[2017-10-14 14:08:47,426]DEBUG  5213[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-14 14:08:47,426]DEBUG  5213[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-14 14:08:47,426]DEBUG  5213[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:47,426]DEBUG  5213[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:47,427]DEBUG  5214[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:47,427]DEBUG  5214[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:47,427]DEBUG  5214[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:47,427]DEBUG  5214[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=3, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,427]DEBUG  5214[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=4, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,428]DEBUG  5215[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=2, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,428]DEBUG  5215[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=1, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,428]DEBUG  5215[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:47,428]DEBUG  5215[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 14:08:47,429]DEBUG  5216[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:47,430]DEBUG  5217[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: Delete From com.softserveinc.edu.oms.domain.entities.Order
[2017-10-14 14:08:47,431]DEBUG  5218[main] - org.hibernate.hql.ast.HqlParser.weakKeywords(HqlParser.java:340) - weakKeywords() : new LT(1) token - ["Order",<126> previously: <41>,line=1,col=54,possibleID=true]
[2017-10-14 14:08:47,432]DEBUG  5219[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[DELETE] Node: 'Delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[DOT] Node: '.'
             |  |  |  |  +-[DOT] Node: '.'
             |  |  |  |  |  +-[IDENT] Node: 'com'
             |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
             |  |  |  |  \-[IDENT] Node: 'edu'
             |  |  |  \-[IDENT] Node: 'oms'
             |  |  \-[IDENT] Node: 'domain'
             |  \-[IDENT] Node: 'entities'
             \-[IDENT] Node: 'Order'

[2017-10-14 14:08:47,432]DEBUG  5219[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-14 14:08:47,432]DEBUG  5219[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - delete << begin [level=1, statement=delete]
[2017-10-14 14:08:47,432]DEBUG  5219[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.Order (no alias) -> order0_
[2017-10-14 14:08:47,433]DEBUG  5220[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - delete : finishing up [level=1, statement=delete]
[2017-10-14 14:08:47,433]DEBUG  5220[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - delete >> end [level=1, statement=delete]
[2017-10-14 14:08:47,433]DEBUG  5220[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'Delete'  querySpaces (Orders)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[order0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Orders' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Orders,tableAlias=order0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.Order}}

[2017-10-14 14:08:47,434]DEBUG  5221[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-14 14:08:47,434]DEBUG  5221[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-14 14:08:47,434]DEBUG  5221[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:47,434]DEBUG  5221[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:47,435]DEBUG  5222[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:47,435]DEBUG  5222[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:47,435]DEBUG  5222[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:47,435]DEBUG  5222[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=3, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,435]DEBUG  5222[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=4, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,435]DEBUG  5222[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=2, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,436]DEBUG  5223[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=1, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,436]DEBUG  5223[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:47,436]DEBUG  5223[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 14:08:47,437]DEBUG  5224[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:47,438]DEBUG  5225[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: Delete From com.softserveinc.edu.oms.domain.entities.OrderStatus
[2017-10-14 14:08:47,439]DEBUG  5226[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[DELETE] Node: 'Delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[DOT] Node: '.'
             |  |  |  |  +-[DOT] Node: '.'
             |  |  |  |  |  +-[IDENT] Node: 'com'
             |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
             |  |  |  |  \-[IDENT] Node: 'edu'
             |  |  |  \-[IDENT] Node: 'oms'
             |  |  \-[IDENT] Node: 'domain'
             |  \-[IDENT] Node: 'entities'
             \-[IDENT] Node: 'OrderStatus'

[2017-10-14 14:08:47,439]DEBUG  5226[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-14 14:08:47,440]DEBUG  5227[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - delete << begin [level=1, statement=delete]
[2017-10-14 14:08:47,440]DEBUG  5227[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.OrderStatus (no alias) -> orderstatu0_
[2017-10-14 14:08:47,440]DEBUG  5227[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - delete : finishing up [level=1, statement=delete]
[2017-10-14 14:08:47,440]DEBUG  5227[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - delete >> end [level=1, statement=delete]
[2017-10-14 14:08:47,441]DEBUG  5228[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'Delete'  querySpaces (OrderStatuses)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[orderstatu0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'OrderStatuses' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=OrderStatuses,tableAlias=orderstatu0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.OrderStatus}}

[2017-10-14 14:08:47,441]DEBUG  5228[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-14 14:08:47,441]DEBUG  5228[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-14 14:08:47,442]DEBUG  5229[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:47,442]DEBUG  5229[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:47,442]DEBUG  5229[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:47,442]DEBUG  5229[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:47,442]DEBUG  5229[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:47,442]DEBUG  5229[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=3, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,443]DEBUG  5230[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=4, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,443]DEBUG  5230[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=2, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,443]DEBUG  5230[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=1, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,443]DEBUG  5230[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:47,443]DEBUG  5230[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 14:08:47,444]DEBUG  5231[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:47,445]DEBUG  5232[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: Delete From com.softserveinc.edu.oms.domain.entities.User
[2017-10-14 14:08:47,446]DEBUG  5233[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[DELETE] Node: 'Delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[DOT] Node: '.'
             |  |  |  |  +-[DOT] Node: '.'
             |  |  |  |  |  +-[IDENT] Node: 'com'
             |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
             |  |  |  |  \-[IDENT] Node: 'edu'
             |  |  |  \-[IDENT] Node: 'oms'
             |  |  \-[IDENT] Node: 'domain'
             |  \-[IDENT] Node: 'entities'
             \-[IDENT] Node: 'User'

[2017-10-14 14:08:47,446]DEBUG  5233[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-14 14:08:47,447]DEBUG  5234[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - delete << begin [level=1, statement=delete]
[2017-10-14 14:08:47,447]DEBUG  5234[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.User (no alias) -> user0_
[2017-10-14 14:08:47,447]DEBUG  5234[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - delete : finishing up [level=1, statement=delete]
[2017-10-14 14:08:47,448]DEBUG  5235[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - delete >> end [level=1, statement=delete]
[2017-10-14 14:08:47,448]DEBUG  5235[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'Delete'  querySpaces (Users)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Users' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Users,tableAlias=user0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.User}}

[2017-10-14 14:08:47,448]DEBUG  5235[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-14 14:08:47,449]DEBUG  5236[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-14 14:08:47,449]DEBUG  5236[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:47,449]DEBUG  5236[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:47,449]DEBUG  5236[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:47,449]DEBUG  5236[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:47,449]DEBUG  5236[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:47,450]DEBUG  5237[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=3, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,450]DEBUG  5237[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=4, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,450]DEBUG  5237[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=2, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,450]DEBUG  5237[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=1, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,450]DEBUG  5237[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:47,450]DEBUG  5237[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 14:08:47,451]DEBUG  5238[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:47,452]DEBUG  5239[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: Delete From com.softserveinc.edu.oms.domain.entities.CustomerType
[2017-10-14 14:08:47,454]DEBUG  5241[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[DELETE] Node: 'Delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[DOT] Node: '.'
             |  |  |  |  +-[DOT] Node: '.'
             |  |  |  |  |  +-[IDENT] Node: 'com'
             |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
             |  |  |  |  \-[IDENT] Node: 'edu'
             |  |  |  \-[IDENT] Node: 'oms'
             |  |  \-[IDENT] Node: 'domain'
             |  \-[IDENT] Node: 'entities'
             \-[IDENT] Node: 'CustomerType'

[2017-10-14 14:08:47,454]DEBUG  5241[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-14 14:08:47,454]DEBUG  5241[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - delete << begin [level=1, statement=delete]
[2017-10-14 14:08:47,455]DEBUG  5242[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.CustomerType (no alias) -> customerty0_
[2017-10-14 14:08:47,455]DEBUG  5242[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - delete : finishing up [level=1, statement=delete]
[2017-10-14 14:08:47,455]DEBUG  5242[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - delete >> end [level=1, statement=delete]
[2017-10-14 14:08:47,455]DEBUG  5242[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'Delete'  querySpaces (CustomerTypes)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[customerty0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'CustomerTypes' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=CustomerTypes,tableAlias=customerty0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.CustomerType}}

[2017-10-14 14:08:47,455]DEBUG  5242[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-14 14:08:47,456]DEBUG  5243[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-14 14:08:47,456]DEBUG  5243[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:47,456]DEBUG  5243[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:47,456]DEBUG  5243[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:47,457]DEBUG  5244[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:47,457]DEBUG  5244[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:47,457]DEBUG  5244[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=3, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,457]DEBUG  5244[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=4, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,457]DEBUG  5244[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=2, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,457]DEBUG  5244[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=1, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,458]DEBUG  5245[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:47,458]DEBUG  5245[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 14:08:47,458]DEBUG  5245[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:47,459]DEBUG  5246[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: Delete From com.softserveinc.edu.oms.domain.entities.Region
[2017-10-14 14:08:47,461]DEBUG  5248[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[DELETE] Node: 'Delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[DOT] Node: '.'
             |  |  |  |  +-[DOT] Node: '.'
             |  |  |  |  |  +-[IDENT] Node: 'com'
             |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
             |  |  |  |  \-[IDENT] Node: 'edu'
             |  |  |  \-[IDENT] Node: 'oms'
             |  |  \-[IDENT] Node: 'domain'
             |  \-[IDENT] Node: 'entities'
             \-[IDENT] Node: 'Region'

[2017-10-14 14:08:47,461]DEBUG  5248[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-14 14:08:47,461]DEBUG  5248[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - delete << begin [level=1, statement=delete]
[2017-10-14 14:08:47,462]DEBUG  5249[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.Region (no alias) -> region0_
[2017-10-14 14:08:47,462]DEBUG  5249[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - delete : finishing up [level=1, statement=delete]
[2017-10-14 14:08:47,462]DEBUG  5249[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - delete >> end [level=1, statement=delete]
[2017-10-14 14:08:47,462]DEBUG  5249[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'Delete'  querySpaces (Regions)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[region0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Regions' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Regions,tableAlias=region0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.Region}}

[2017-10-14 14:08:47,462]DEBUG  5249[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-14 14:08:47,463]DEBUG  5250[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-14 14:08:47,463]DEBUG  5250[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:47,463]DEBUG  5250[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:47,463]DEBUG  5250[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:47,464]DEBUG  5251[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:47,464]DEBUG  5251[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:47,464]DEBUG  5251[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=3, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,464]DEBUG  5251[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=4, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,464]DEBUG  5251[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=2, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,464]DEBUG  5251[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=1, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,465]DEBUG  5252[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:47,465]DEBUG  5252[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 14:08:47,466]DEBUG  5253[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:47,467]DEBUG  5254[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: Delete From com.softserveinc.edu.oms.domain.entities.Role
[2017-10-14 14:08:47,468]DEBUG  5255[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[DELETE] Node: 'Delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[DOT] Node: '.'
             |  |  |  |  +-[DOT] Node: '.'
             |  |  |  |  |  +-[IDENT] Node: 'com'
             |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
             |  |  |  |  \-[IDENT] Node: 'edu'
             |  |  |  \-[IDENT] Node: 'oms'
             |  |  \-[IDENT] Node: 'domain'
             |  \-[IDENT] Node: 'entities'
             \-[IDENT] Node: 'Role'

[2017-10-14 14:08:47,468]DEBUG  5255[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-14 14:08:47,469]DEBUG  5256[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - delete << begin [level=1, statement=delete]
[2017-10-14 14:08:47,469]DEBUG  5256[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.Role (no alias) -> role0_
[2017-10-14 14:08:47,469]DEBUG  5256[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - delete : finishing up [level=1, statement=delete]
[2017-10-14 14:08:47,469]DEBUG  5256[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - delete >> end [level=1, statement=delete]
[2017-10-14 14:08:47,470]DEBUG  5257[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'Delete'  querySpaces (Roles)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[role0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Roles' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Roles,tableAlias=role0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.Role}}

[2017-10-14 14:08:47,470]DEBUG  5257[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-14 14:08:47,470]DEBUG  5257[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-14 14:08:47,470]DEBUG  5257[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:47,471]DEBUG  5258[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:47,471]DEBUG  5258[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:47,471]DEBUG  5258[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:47,471]DEBUG  5258[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:47,471]DEBUG  5258[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=3, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,471]DEBUG  5258[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=4, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,472]DEBUG  5259[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=2, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,472]DEBUG  5259[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=1, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,472]DEBUG  5259[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:47,472]DEBUG  5259[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 14:08:47,473]DEBUG  5260[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:47,473]DEBUG  5260[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@4418f61b testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@42c5898a, testMethod = testFindByID@CustomerTypeDaoTest, testException = [null]]]
[2017-10-14 14:08:47,473]DEBUG  5260[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 14:08:47,473]DEBUG  5260[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@2eb3998c]
[2017-10-14 14:08:47,474]DEBUG  5261[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 14:08:47,508]DEBUG  5295[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 14:08:47,509]DEBUG  5296[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:47,509]DEBUG  5296[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@2eb3998c] after transaction
[2017-10-14 14:08:47,510]DEBUG  5297[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 14:08:47,510]DEBUG  5297[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 14:08:47,511]DEBUG  5298[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:47,513] INFO  5300[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@4418f61b testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@42c5898a, testMethod = testFindByID@CustomerTypeDaoTest, testException = [null]]]
[2017-10-14 14:08:47,516]DEBUG  5303[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@4418f61b testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@42c5898a, testMethod = testFindByID@CustomerTypeDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 14:08:47,518]DEBUG  5305[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2017-10-14 14:08:47,518]DEBUG  5305[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2017-10-14 14:08:47,521]DEBUG  5308[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@4418f61b testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@481c22e0, testMethod = [null], testException = [null]]].
[2017-10-14 14:08:47,521]DEBUG  5308[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 14:08:47,522]DEBUG  5309[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 14:08:47,522]DEBUG  5309[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 14:08:47,522]DEBUG  5309[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 14:08:47,523]DEBUG  5310[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 14:08:47,523]DEBUG  5310[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 14:08:47,523]DEBUG  5310[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 14:08:47,524]DEBUG  5311[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 14:08:47,524]DEBUG  5311[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 14:08:47,524]DEBUG  5311[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 14:08:47,525]DEBUG  5312[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 14:08:47,525]DEBUG  5312[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 14:08:47,525]DEBUG  5312[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 14:08:47,526]DEBUG  5313[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 14:08:47,526]DEBUG  5313[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 14:08:47,526]DEBUG  5313[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 14:08:47,527]DEBUG  5314[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 14:08:47,527]DEBUG  5314[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 14:08:47,527]DEBUG  5314[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 14:08:47,527]DEBUG  5314[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 14:08:47,528]DEBUG  5315[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 14:08:47,528]DEBUG  5315[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 14:08:47,529]DEBUG  5316[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@481c22e0]
[2017-10-14 14:08:47,530]DEBUG  5317[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetStandartTypeDiscount' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:47,530]DEBUG  5317[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@4418f61b testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@481c22e0, testMethod = testGetStandartTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2017-10-14 14:08:47,530]DEBUG  5317[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 14:08:47,532]DEBUG  5319[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testGetStandartTypeDiscount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:47,533]DEBUG  5320[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15079793275
[2017-10-14 14:08:47,533]DEBUG  5320[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@7674fd63] for Hibernate transaction
[2017-10-14 14:08:47,533]DEBUG  5320[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7674fd63]
[2017-10-14 14:08:47,533]DEBUG  5320[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 14:08:47,534]DEBUG  5321[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 14:08:47,534]DEBUG  5321[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 14:08:47,534]DEBUG  5321[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@4418f61b testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@481c22e0, testMethod = testGetStandartTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2017-10-14 14:08:47,535] INFO  5322[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (2): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@48ad0abe]; rollback [true]
[2017-10-14 14:08:47,535]DEBUG  5322[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:47,536]DEBUG  5323[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:47,536]DEBUG  5323[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-14 14:08:47,538]DEBUG  5325[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 5
[2017-10-14 14:08:47,538]DEBUG  5325[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:47,538]DEBUG  5325[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:47,539]DEBUG  5326[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:47,539]DEBUG  5326[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-14 14:08:47,540]DEBUG  5327[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 6
[2017-10-14 14:08:47,540]DEBUG  5327[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:47,540]DEBUG  5327[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:47,540]DEBUG  5327[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:47,541]DEBUG  5328[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-14 14:08:47,541]DEBUG  5328[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 7
[2017-10-14 14:08:47,541]DEBUG  5328[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:47,542]DEBUG  5329[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:47,542]DEBUG  5329[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:47,542]DEBUG  5329[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-14 14:08:47,542]DEBUG  5329[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 8
[2017-10-14 14:08:47,543]DEBUG  5330[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:47,543]DEBUG  5330[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:47,543]DEBUG  5330[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:47,543]DEBUG  5330[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:47,544]DEBUG  5331[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:47,544]DEBUG  5331[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:47,544]DEBUG  5331[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=5, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,544]DEBUG  5331[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=6, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,544]DEBUG  5331[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=7, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,544]DEBUG  5331[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=8, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,545]DEBUG  5332[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:47,545]DEBUG  5332[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select customerty0_.ID as ID2_, customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_ from CustomerTypes customerty0_ where customerty0_.TypeName=?
[2017-10-14 14:08:47,545]DEBUG  5332[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:47,546]DEBUG  5333[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.CustomerType#5]
[2017-10-14 14:08:47,546]DEBUG  5333[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:47,546]DEBUG  5333[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:47,546]DEBUG  5333[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:47,547]DEBUG  5334[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:47,547]DEBUG  5334[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:47,547]DEBUG  5334[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:47,547]DEBUG  5334[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:47,547]DEBUG  5334[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:47,547]DEBUG  5334[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=5, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,548]DEBUG  5335[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=6, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,548]DEBUG  5335[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=7, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,548]DEBUG  5335[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=8, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,548]DEBUG  5335[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:47,548]DEBUG  5335[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 14:08:47,549]DEBUG  5336[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:47,549]DEBUG  5336[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:47,549]DEBUG  5336[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:47,549]DEBUG  5336[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:47,549]DEBUG  5336[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:47,549]DEBUG  5336[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:47,550]DEBUG  5337[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=5, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,550]DEBUG  5337[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=6, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,550]DEBUG  5337[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=7, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,550]DEBUG  5337[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=8, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,550]DEBUG  5337[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:47,550]DEBUG  5337[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 14:08:47,551]DEBUG  5338[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:47,551]DEBUG  5338[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:47,551]DEBUG  5338[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:47,551]DEBUG  5338[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:47,551]DEBUG  5338[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:47,551]DEBUG  5338[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:47,552]DEBUG  5339[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=5, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,560]DEBUG  5347[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=6, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,561]DEBUG  5348[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=7, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,561]DEBUG  5348[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=8, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,561]DEBUG  5348[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:47,561]DEBUG  5348[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 14:08:47,563]DEBUG  5350[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:47,564]DEBUG  5351[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:47,564]DEBUG  5351[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:47,564]DEBUG  5351[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:47,564]DEBUG  5351[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:47,564]DEBUG  5351[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:47,565]DEBUG  5352[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=5, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,565]DEBUG  5352[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=6, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,566]DEBUG  5353[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=7, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,566]DEBUG  5353[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=8, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,566]DEBUG  5353[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:47,566]DEBUG  5353[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 14:08:47,566]DEBUG  5353[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:47,566]DEBUG  5353[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:47,567]DEBUG  5354[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:47,567]DEBUG  5354[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:47,567]DEBUG  5354[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:47,567]DEBUG  5354[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:47,567]DEBUG  5354[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=5, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,567]DEBUG  5354[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=6, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,567]DEBUG  5354[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=7, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,568]DEBUG  5355[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=8, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,568]DEBUG  5355[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:47,568]DEBUG  5355[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 14:08:47,568]DEBUG  5355[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:47,568]DEBUG  5355[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:47,568]DEBUG  5355[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:47,569]DEBUG  5356[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:47,569]DEBUG  5356[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:47,569]DEBUG  5356[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:47,569]DEBUG  5356[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=5, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,569]DEBUG  5356[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=6, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,569]DEBUG  5356[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=7, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,569]DEBUG  5356[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=8, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,570]DEBUG  5357[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:47,570]DEBUG  5357[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 14:08:47,570]DEBUG  5357[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:47,570]DEBUG  5357[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:47,570]DEBUG  5357[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:47,571]DEBUG  5358[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:47,571]DEBUG  5358[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:47,571]DEBUG  5358[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:47,571]DEBUG  5358[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=5, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,571]DEBUG  5358[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=6, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,571]DEBUG  5358[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=7, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,571]DEBUG  5358[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=8, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,572]DEBUG  5359[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:47,572]DEBUG  5359[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 14:08:47,572]DEBUG  5359[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:47,572]DEBUG  5359[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:47,572]DEBUG  5359[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:47,573]DEBUG  5360[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:47,573]DEBUG  5360[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:47,573]DEBUG  5360[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:47,573]DEBUG  5360[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=5, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,573]DEBUG  5360[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=6, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,573]DEBUG  5360[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=7, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,573]DEBUG  5360[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=8, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,573]DEBUG  5360[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:47,574]DEBUG  5361[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 14:08:47,574]DEBUG  5361[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:47,574]DEBUG  5361[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:47,574]DEBUG  5361[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:47,574]DEBUG  5361[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:47,575]DEBUG  5362[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:47,575]DEBUG  5362[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:47,575]DEBUG  5362[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=5, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,575]DEBUG  5362[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=6, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,575]DEBUG  5362[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=7, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,575]DEBUG  5362[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=8, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,575]DEBUG  5362[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:47,575]DEBUG  5362[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 14:08:47,576]DEBUG  5363[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:47,576]DEBUG  5363[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@4418f61b testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@481c22e0, testMethod = testGetStandartTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2017-10-14 14:08:47,576]DEBUG  5363[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 14:08:47,576]DEBUG  5363[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7674fd63]
[2017-10-14 14:08:47,576]DEBUG  5363[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 14:08:47,608]DEBUG  5395[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 14:08:47,609]DEBUG  5396[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:47,609]DEBUG  5396[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@7674fd63] after transaction
[2017-10-14 14:08:47,609]DEBUG  5396[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 14:08:47,610]DEBUG  5397[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 14:08:47,610]DEBUG  5397[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:47,610] INFO  5397[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@4418f61b testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@481c22e0, testMethod = testGetStandartTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2017-10-14 14:08:47,612]DEBUG  5399[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@4418f61b testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@481c22e0, testMethod = testGetStandartTypeDiscount@CustomerTypeDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 14:08:47,613]DEBUG  5400[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2017-10-14 14:08:47,613]DEBUG  5400[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2017-10-14 14:08:47,614]DEBUG  5401[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@4418f61b testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@14bbe706, testMethod = [null], testException = [null]]].
[2017-10-14 14:08:47,614]DEBUG  5401[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 14:08:47,614]DEBUG  5401[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 14:08:47,615]DEBUG  5402[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 14:08:47,615]DEBUG  5402[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 14:08:47,615]DEBUG  5402[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 14:08:47,616]DEBUG  5403[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 14:08:47,616]DEBUG  5403[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 14:08:47,616]DEBUG  5403[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 14:08:47,616]DEBUG  5403[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 14:08:47,617]DEBUG  5404[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 14:08:47,617]DEBUG  5404[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 14:08:47,617]DEBUG  5404[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 14:08:47,617]DEBUG  5404[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 14:08:47,618]DEBUG  5405[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 14:08:47,618]DEBUG  5405[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 14:08:47,618]DEBUG  5405[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 14:08:47,618]DEBUG  5405[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 14:08:47,619]DEBUG  5406[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 14:08:47,619]DEBUG  5406[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 14:08:47,619]DEBUG  5406[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 14:08:47,619]DEBUG  5406[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 14:08:47,620]DEBUG  5407[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 14:08:47,620]DEBUG  5407[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@14bbe706]
[2017-10-14 14:08:47,621]DEBUG  5408[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetSilverTypeDiscount' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:47,621]DEBUG  5408[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@4418f61b testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@14bbe706, testMethod = testGetSilverTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2017-10-14 14:08:47,621]DEBUG  5408[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 14:08:47,623]DEBUG  5410[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testGetSilverTypeDiscount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:47,623]DEBUG  5410[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15079793276
[2017-10-14 14:08:47,624]DEBUG  5411[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@1b894f7d] for Hibernate transaction
[2017-10-14 14:08:47,624]DEBUG  5411[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@1b894f7d]
[2017-10-14 14:08:47,624]DEBUG  5411[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 14:08:47,624]DEBUG  5411[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 14:08:47,625]DEBUG  5412[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 14:08:47,625]DEBUG  5412[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@4418f61b testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@14bbe706, testMethod = testGetSilverTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2017-10-14 14:08:47,625] INFO  5412[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (3): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@48ad0abe]; rollback [true]
[2017-10-14 14:08:47,626]DEBUG  5413[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:47,626]DEBUG  5413[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:47,626]DEBUG  5413[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-14 14:08:47,630]DEBUG  5417[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 9
[2017-10-14 14:08:47,630]DEBUG  5417[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:47,631]DEBUG  5418[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:47,631]DEBUG  5418[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:47,632]DEBUG  5419[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-14 14:08:47,633]DEBUG  5420[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 10
[2017-10-14 14:08:47,633]DEBUG  5420[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:47,634]DEBUG  5421[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:47,634]DEBUG  5421[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:47,634]DEBUG  5421[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-14 14:08:47,635]DEBUG  5422[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 11
[2017-10-14 14:08:47,636]DEBUG  5423[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:47,636]DEBUG  5423[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:47,637]DEBUG  5424[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:47,637]DEBUG  5424[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-14 14:08:47,638]DEBUG  5425[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 12
[2017-10-14 14:08:47,638]DEBUG  5425[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:47,639]DEBUG  5426[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: from com.softserveinc.edu.oms.domain.entities.CustomerType customerT where customerT.typeName = :Silver
[2017-10-14 14:08:47,641]DEBUG  5428[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  |  |  +-[IDENT] Node: 'com'
    |        |  |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
    |        |  |  |  |  |  \-[IDENT] Node: 'edu'
    |        |  |  |  |  \-[IDENT] Node: 'oms'
    |        |  |  |  \-[IDENT] Node: 'domain'
    |        |  |  \-[IDENT] Node: 'entities'
    |        |  \-[IDENT] Node: 'CustomerType'
    |        \-[ALIAS] Node: 'customerT'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'customerT'
          |  \-[IDENT] Node: 'typeName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'Silver'

[2017-10-14 14:08:47,641]DEBUG  5428[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-14 14:08:47,641]DEBUG  5428[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - select << begin [level=1, statement=select]
[2017-10-14 14:08:47,642]DEBUG  5429[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.CustomerType (customerT) -> customerty0_
[2017-10-14 14:08:47,642]DEBUG  5429[main] - org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  customerT -> customerty0_.ID
[2017-10-14 14:08:47,642]DEBUG  5429[main] - org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : typeName -> org.hibernate.type.StringType@3525c6
[2017-10-14 14:08:47,642]DEBUG  5429[main] - org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  customerT.typeName -> customerty0_.TypeName
[2017-10-14 14:08:47,642]DEBUG  5429[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - select : finishing up [level=1, statement=select]
[2017-10-14 14:08:47,643]DEBUG  5430[main] - org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) - processQuery() :  ( SELECT ( FromClause{level=1} CustomerTypes customerty0_ ) ( where ( = ( customerty0_.TypeName customerty0_.ID typeName ) ? ) ) )
[2017-10-14 14:08:47,643]DEBUG  5430[main] - org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) - Derived SELECT clause created.
[2017-10-14 14:08:47,643]DEBUG  5430[main] - org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) - Using FROM fragment [CustomerTypes customerty0_]
[2017-10-14 14:08:47,643]DEBUG  5430[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - select >> end [level=1, statement=select]
[2017-10-14 14:08:47,644]DEBUG  5431[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerTypes)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'customerty0_.ID as ID2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=customerT,role=null,tableName=CustomerTypes,tableAlias=customerty0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.CustomerType}}}
    |  \-[SQL_TOKEN] SqlFragment: 'customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[customerT], fromElementByTableAlias=[customerty0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CustomerTypes customerty0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=customerT,role=null,tableName=CustomerTypes,tableAlias=customerty0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.CustomerType}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customerty0_.TypeName' {propertyName=typeName,dereferenceType=ALL,propertyPath=typeName,path=customerT.typeName,tableAlias=customerty0_,className=com.softserveinc.edu.oms.domain.entities.CustomerType,classAlias=customerT}
          |  +-[ALIAS_REF] IdentNode: 'customerty0_.ID' {alias=customerT, className=com.softserveinc.edu.oms.domain.entities.CustomerType, tableAlias=customerty0_}
          |  \-[IDENT] IdentNode: 'typeName' {originalText=typeName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=Silver, expectedType=org.hibernate.type.StringType@3525c6}

[2017-10-14 14:08:47,644]DEBUG  5431[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-14 14:08:47,644]DEBUG  5431[main] - org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:241) - HQL: from com.softserveinc.edu.oms.domain.entities.CustomerType customerT where customerT.typeName = :Silver
[2017-10-14 14:08:47,644]DEBUG  5431[main] - org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:242) - SQL: select customerty0_.ID as ID2_, customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_ from CustomerTypes customerty0_ where customerty0_.TypeName=?
[2017-10-14 14:08:47,644]DEBUG  5431[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-14 14:08:47,645]DEBUG  5432[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:47,645]DEBUG  5432[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:47,645]DEBUG  5432[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:47,645]DEBUG  5432[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:47,645]DEBUG  5432[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:47,645]DEBUG  5432[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=11, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,645]DEBUG  5432[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=12, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,646]DEBUG  5433[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=9, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,646]DEBUG  5433[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=10, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,646]DEBUG  5433[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:47,646]DEBUG  5433[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select customerty0_.ID as ID2_, customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_ from CustomerTypes customerty0_ where customerty0_.TypeName=?
[2017-10-14 14:08:47,647]DEBUG  5434[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:47,647]DEBUG  5434[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.CustomerType#10]
[2017-10-14 14:08:47,647]DEBUG  5434[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:47,647]DEBUG  5434[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:47,647]DEBUG  5434[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:47,648]DEBUG  5435[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:47,648]DEBUG  5435[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:47,648]DEBUG  5435[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:47,648]DEBUG  5435[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:47,648]DEBUG  5435[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:47,648]DEBUG  5435[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=11, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,648]DEBUG  5435[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=12, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,649]DEBUG  5436[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=9, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,649]DEBUG  5436[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=10, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,649]DEBUG  5436[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:47,649]DEBUG  5436[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 14:08:47,649]DEBUG  5436[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:47,650]DEBUG  5437[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:47,650]DEBUG  5437[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:47,650]DEBUG  5437[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:47,650]DEBUG  5437[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:47,650]DEBUG  5437[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:47,650]DEBUG  5437[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=11, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,650]DEBUG  5437[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=12, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,650]DEBUG  5437[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=9, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,651]DEBUG  5438[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=10, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,651]DEBUG  5438[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:47,651]DEBUG  5438[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 14:08:47,651]DEBUG  5438[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:47,651]DEBUG  5438[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:47,651]DEBUG  5438[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:47,652]DEBUG  5439[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:47,652]DEBUG  5439[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:47,652]DEBUG  5439[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:47,652]DEBUG  5439[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=11, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,652]DEBUG  5439[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=12, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,652]DEBUG  5439[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=9, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,652]DEBUG  5439[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=10, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,653]DEBUG  5440[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:47,653]DEBUG  5440[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 14:08:47,653]DEBUG  5440[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:47,653]DEBUG  5440[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:47,653]DEBUG  5440[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:47,653]DEBUG  5440[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:47,654]DEBUG  5441[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:47,654]DEBUG  5441[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:47,654]DEBUG  5441[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=11, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,654]DEBUG  5441[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=12, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,654]DEBUG  5441[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=9, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,654]DEBUG  5441[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=10, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,654]DEBUG  5441[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:47,654]DEBUG  5441[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 14:08:47,655]DEBUG  5442[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:47,655]DEBUG  5442[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:47,655]DEBUG  5442[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:47,655]DEBUG  5442[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:47,655]DEBUG  5442[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:47,655]DEBUG  5442[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:47,656]DEBUG  5443[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=11, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,656]DEBUG  5443[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=12, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,656]DEBUG  5443[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=9, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,656]DEBUG  5443[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=10, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,656]DEBUG  5443[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:47,656]DEBUG  5443[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 14:08:47,657]DEBUG  5444[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:47,657]DEBUG  5444[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:47,657]DEBUG  5444[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:47,657]DEBUG  5444[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:47,657]DEBUG  5444[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:47,657]DEBUG  5444[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:47,657]DEBUG  5444[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=11, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,658]DEBUG  5445[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=12, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,658]DEBUG  5445[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=9, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,658]DEBUG  5445[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=10, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,658]DEBUG  5445[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:47,658]DEBUG  5445[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 14:08:47,658]DEBUG  5445[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:47,658]DEBUG  5445[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:47,659]DEBUG  5446[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:47,659]DEBUG  5446[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:47,659]DEBUG  5446[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:47,659]DEBUG  5446[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:47,659]DEBUG  5446[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=11, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,659]DEBUG  5446[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=12, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,659]DEBUG  5446[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=9, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,660]DEBUG  5447[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=10, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,660]DEBUG  5447[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:47,660]DEBUG  5447[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 14:08:47,660]DEBUG  5447[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:47,660]DEBUG  5447[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:47,660]DEBUG  5447[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:47,661]DEBUG  5448[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:47,661]DEBUG  5448[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:47,661]DEBUG  5448[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:47,661]DEBUG  5448[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=11, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,661]DEBUG  5448[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=12, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,661]DEBUG  5448[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=9, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,661]DEBUG  5448[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=10, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,662]DEBUG  5449[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:47,662]DEBUG  5449[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 14:08:47,662]DEBUG  5449[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:47,662]DEBUG  5449[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:47,662]DEBUG  5449[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:47,663]DEBUG  5450[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:47,663]DEBUG  5450[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:47,663]DEBUG  5450[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:47,663]DEBUG  5450[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=11, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,663]DEBUG  5450[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=12, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,663]DEBUG  5450[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=9, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,663]DEBUG  5450[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=10, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,663]DEBUG  5450[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:47,664]DEBUG  5451[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 14:08:47,664]DEBUG  5451[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:47,664]DEBUG  5451[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@4418f61b testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@14bbe706, testMethod = testGetSilverTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2017-10-14 14:08:47,664]DEBUG  5451[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 14:08:47,664]DEBUG  5451[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@1b894f7d]
[2017-10-14 14:08:47,664]DEBUG  5451[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 14:08:47,700]DEBUG  5487[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 14:08:47,700]DEBUG  5487[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:47,701]DEBUG  5488[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@1b894f7d] after transaction
[2017-10-14 14:08:47,701]DEBUG  5488[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 14:08:47,701]DEBUG  5488[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 14:08:47,702]DEBUG  5489[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:47,702] INFO  5489[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@4418f61b testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@14bbe706, testMethod = testGetSilverTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2017-10-14 14:08:47,704]DEBUG  5491[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@4418f61b testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@14bbe706, testMethod = testGetSilverTypeDiscount@CustomerTypeDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 14:08:47,704]DEBUG  5491[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2017-10-14 14:08:47,705]DEBUG  5492[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2017-10-14 14:08:47,705]DEBUG  5492[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@4418f61b testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@45193317, testMethod = [null], testException = [null]]].
[2017-10-14 14:08:47,706]DEBUG  5493[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 14:08:47,706]DEBUG  5493[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 14:08:47,706]DEBUG  5493[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 14:08:47,707]DEBUG  5494[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 14:08:47,707]DEBUG  5494[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 14:08:47,707]DEBUG  5494[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 14:08:47,707]DEBUG  5494[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 14:08:47,708]DEBUG  5495[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 14:08:47,708]DEBUG  5495[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 14:08:47,708]DEBUG  5495[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 14:08:47,708]DEBUG  5495[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 14:08:47,709]DEBUG  5496[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 14:08:47,709]DEBUG  5496[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 14:08:47,709]DEBUG  5496[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 14:08:47,710]DEBUG  5497[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 14:08:47,710]DEBUG  5497[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 14:08:47,710]DEBUG  5497[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 14:08:47,710]DEBUG  5497[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 14:08:47,711]DEBUG  5498[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 14:08:47,711]DEBUG  5498[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 14:08:47,711]DEBUG  5498[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 14:08:47,711]DEBUG  5498[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 14:08:47,712]DEBUG  5499[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@45193317]
[2017-10-14 14:08:47,713]DEBUG  5500[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetGoldTypeDiscount' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:47,713]DEBUG  5500[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@4418f61b testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@45193317, testMethod = testGetGoldTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2017-10-14 14:08:47,713]DEBUG  5500[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 14:08:47,716]DEBUG  5503[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testGetGoldTypeDiscount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:47,716]DEBUG  5503[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15079793277
[2017-10-14 14:08:47,716]DEBUG  5503[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@59de5d89] for Hibernate transaction
[2017-10-14 14:08:47,717]DEBUG  5504[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@59de5d89]
[2017-10-14 14:08:47,717]DEBUG  5504[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 14:08:47,717]DEBUG  5504[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 14:08:47,717]DEBUG  5504[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 14:08:47,718]DEBUG  5505[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@4418f61b testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@45193317, testMethod = testGetGoldTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2017-10-14 14:08:47,718] INFO  5505[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (4): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@48ad0abe]; rollback [true]
[2017-10-14 14:08:47,718]DEBUG  5505[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:47,719]DEBUG  5506[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:47,719]DEBUG  5506[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-14 14:08:47,721]DEBUG  5508[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 13
[2017-10-14 14:08:47,721]DEBUG  5508[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:47,722]DEBUG  5509[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:47,722]DEBUG  5509[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:47,722]DEBUG  5509[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-14 14:08:47,726]DEBUG  5513[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 14
[2017-10-14 14:08:47,726]DEBUG  5513[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:47,727]DEBUG  5514[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:47,727]DEBUG  5514[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:47,728]DEBUG  5515[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-14 14:08:47,729]DEBUG  5516[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 15
[2017-10-14 14:08:47,729]DEBUG  5516[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:47,730]DEBUG  5517[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:47,730]DEBUG  5517[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:47,731]DEBUG  5518[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-14 14:08:47,732]DEBUG  5519[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 16
[2017-10-14 14:08:47,732]DEBUG  5519[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:47,734]DEBUG  5521[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: from com.softserveinc.edu.oms.domain.entities.CustomerType customerT where customerT.typeName = :Gold
[2017-10-14 14:08:47,738]DEBUG  5525[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  |  |  +-[IDENT] Node: 'com'
    |        |  |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
    |        |  |  |  |  |  \-[IDENT] Node: 'edu'
    |        |  |  |  |  \-[IDENT] Node: 'oms'
    |        |  |  |  \-[IDENT] Node: 'domain'
    |        |  |  \-[IDENT] Node: 'entities'
    |        |  \-[IDENT] Node: 'CustomerType'
    |        \-[ALIAS] Node: 'customerT'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'customerT'
          |  \-[IDENT] Node: 'typeName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'Gold'

[2017-10-14 14:08:47,738]DEBUG  5525[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-14 14:08:47,739]DEBUG  5526[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - select << begin [level=1, statement=select]
[2017-10-14 14:08:47,739]DEBUG  5526[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.CustomerType (customerT) -> customerty0_
[2017-10-14 14:08:47,739]DEBUG  5526[main] - org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  customerT -> customerty0_.ID
[2017-10-14 14:08:47,740]DEBUG  5527[main] - org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : typeName -> org.hibernate.type.StringType@3525c6
[2017-10-14 14:08:47,740]DEBUG  5527[main] - org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  customerT.typeName -> customerty0_.TypeName
[2017-10-14 14:08:47,740]DEBUG  5527[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - select : finishing up [level=1, statement=select]
[2017-10-14 14:08:47,740]DEBUG  5527[main] - org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) - processQuery() :  ( SELECT ( FromClause{level=1} CustomerTypes customerty0_ ) ( where ( = ( customerty0_.TypeName customerty0_.ID typeName ) ? ) ) )
[2017-10-14 14:08:47,740]DEBUG  5527[main] - org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) - Derived SELECT clause created.
[2017-10-14 14:08:47,740]DEBUG  5527[main] - org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) - Using FROM fragment [CustomerTypes customerty0_]
[2017-10-14 14:08:47,741]DEBUG  5528[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - select >> end [level=1, statement=select]
[2017-10-14 14:08:47,741]DEBUG  5528[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerTypes)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'customerty0_.ID as ID2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=customerT,role=null,tableName=CustomerTypes,tableAlias=customerty0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.CustomerType}}}
    |  \-[SQL_TOKEN] SqlFragment: 'customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[customerT], fromElementByTableAlias=[customerty0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CustomerTypes customerty0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=customerT,role=null,tableName=CustomerTypes,tableAlias=customerty0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.CustomerType}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customerty0_.TypeName' {propertyName=typeName,dereferenceType=ALL,propertyPath=typeName,path=customerT.typeName,tableAlias=customerty0_,className=com.softserveinc.edu.oms.domain.entities.CustomerType,classAlias=customerT}
          |  +-[ALIAS_REF] IdentNode: 'customerty0_.ID' {alias=customerT, className=com.softserveinc.edu.oms.domain.entities.CustomerType, tableAlias=customerty0_}
          |  \-[IDENT] IdentNode: 'typeName' {originalText=typeName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=Gold, expectedType=org.hibernate.type.StringType@3525c6}

[2017-10-14 14:08:47,741]DEBUG  5528[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-14 14:08:47,742]DEBUG  5529[main] - org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:241) - HQL: from com.softserveinc.edu.oms.domain.entities.CustomerType customerT where customerT.typeName = :Gold
[2017-10-14 14:08:47,742]DEBUG  5529[main] - org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:242) - SQL: select customerty0_.ID as ID2_, customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_ from CustomerTypes customerty0_ where customerty0_.TypeName=?
[2017-10-14 14:08:47,742]DEBUG  5529[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-14 14:08:47,742]DEBUG  5529[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:47,742]DEBUG  5529[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:47,743]DEBUG  5530[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:47,743]DEBUG  5530[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:47,743]DEBUG  5530[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:47,743]DEBUG  5530[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=13, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,743]DEBUG  5530[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=14, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,743]DEBUG  5530[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=15, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,744]DEBUG  5531[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=16, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,744]DEBUG  5531[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:47,744]DEBUG  5531[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select customerty0_.ID as ID2_, customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_ from CustomerTypes customerty0_ where customerty0_.TypeName=?
[2017-10-14 14:08:47,745]DEBUG  5532[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:47,745]DEBUG  5532[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.CustomerType#15]
[2017-10-14 14:08:47,745]DEBUG  5532[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:47,745]DEBUG  5532[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:47,746]DEBUG  5533[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:47,746]DEBUG  5533[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:47,746]DEBUG  5533[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:47,746]DEBUG  5533[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:47,746]DEBUG  5533[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:47,746]DEBUG  5533[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:47,747]DEBUG  5534[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=13, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,747]DEBUG  5534[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=14, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,747]DEBUG  5534[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=15, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,747]DEBUG  5534[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=16, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,747]DEBUG  5534[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:47,747]DEBUG  5534[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 14:08:47,748]DEBUG  5535[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:47,748]DEBUG  5535[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:47,748]DEBUG  5535[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:47,748]DEBUG  5535[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:47,749]DEBUG  5536[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:47,749]DEBUG  5536[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:47,749]DEBUG  5536[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=13, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,749]DEBUG  5536[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=14, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,749]DEBUG  5536[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=15, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,749]DEBUG  5536[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=16, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,749]DEBUG  5536[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:47,750]DEBUG  5537[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 14:08:47,750]DEBUG  5537[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:47,750]DEBUG  5537[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:47,750]DEBUG  5537[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:47,750]DEBUG  5537[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:47,751]DEBUG  5538[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:47,751]DEBUG  5538[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:47,751]DEBUG  5538[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=13, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,751]DEBUG  5538[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=14, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,751]DEBUG  5538[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=15, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,751]DEBUG  5538[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=16, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,752]DEBUG  5539[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:47,752]DEBUG  5539[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 14:08:47,752]DEBUG  5539[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:47,752]DEBUG  5539[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:47,752]DEBUG  5539[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:47,753]DEBUG  5540[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:47,753]DEBUG  5540[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:47,753]DEBUG  5540[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:47,753]DEBUG  5540[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=13, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,753]DEBUG  5540[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=14, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,753]DEBUG  5540[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=15, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,753]DEBUG  5540[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=16, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,754]DEBUG  5541[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:47,754]DEBUG  5541[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 14:08:47,754]DEBUG  5541[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:47,754]DEBUG  5541[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:47,754]DEBUG  5541[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:47,755]DEBUG  5542[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:47,755]DEBUG  5542[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:47,755]DEBUG  5542[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:47,755]DEBUG  5542[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=13, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,755]DEBUG  5542[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=14, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,755]DEBUG  5542[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=15, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,755]DEBUG  5542[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=16, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,756]DEBUG  5543[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:47,756]DEBUG  5543[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 14:08:47,756]DEBUG  5543[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:47,756]DEBUG  5543[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:47,756]DEBUG  5543[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:47,757]DEBUG  5544[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:47,757]DEBUG  5544[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:47,757]DEBUG  5544[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:47,757]DEBUG  5544[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=13, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,757]DEBUG  5544[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=14, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,757]DEBUG  5544[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=15, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,757]DEBUG  5544[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=16, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,758]DEBUG  5545[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:47,758]DEBUG  5545[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 14:08:47,758]DEBUG  5545[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:47,758]DEBUG  5545[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:47,758]DEBUG  5545[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:47,759]DEBUG  5546[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:47,759]DEBUG  5546[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:47,759]DEBUG  5546[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:47,759]DEBUG  5546[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=13, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,759]DEBUG  5546[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=14, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,759]DEBUG  5546[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=15, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,759]DEBUG  5546[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=16, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,760]DEBUG  5547[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:47,760]DEBUG  5547[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 14:08:47,760]DEBUG  5547[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:47,760]DEBUG  5547[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:47,760]DEBUG  5547[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:47,761]DEBUG  5548[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:47,761]DEBUG  5548[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:47,761]DEBUG  5548[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:47,761]DEBUG  5548[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=13, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,761]DEBUG  5548[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=14, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,761]DEBUG  5548[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=15, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,761]DEBUG  5548[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=16, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,762]DEBUG  5549[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:47,762]DEBUG  5549[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 14:08:47,762]DEBUG  5549[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:47,762]DEBUG  5549[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:47,762]DEBUG  5549[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:47,763]DEBUG  5550[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:47,763]DEBUG  5550[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:47,763]DEBUG  5550[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:47,763]DEBUG  5550[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=13, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,763]DEBUG  5550[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=14, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,763]DEBUG  5550[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=15, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,763]DEBUG  5550[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=16, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,764]DEBUG  5551[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:47,764]DEBUG  5551[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 14:08:47,764]DEBUG  5551[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:47,764]DEBUG  5551[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@4418f61b testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@45193317, testMethod = testGetGoldTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2017-10-14 14:08:47,764]DEBUG  5551[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 14:08:47,764]DEBUG  5551[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@59de5d89]
[2017-10-14 14:08:47,765]DEBUG  5552[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 14:08:47,800]DEBUG  5587[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 14:08:47,801]DEBUG  5588[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:47,801]DEBUG  5588[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@59de5d89] after transaction
[2017-10-14 14:08:47,801]DEBUG  5588[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 14:08:47,801]DEBUG  5588[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 14:08:47,802]DEBUG  5589[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:47,802] INFO  5589[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@4418f61b testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@45193317, testMethod = testGetGoldTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2017-10-14 14:08:47,804]DEBUG  5591[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@4418f61b testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@45193317, testMethod = testGetGoldTypeDiscount@CustomerTypeDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 14:08:47,804]DEBUG  5591[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2017-10-14 14:08:47,805]DEBUG  5592[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2017-10-14 14:08:47,805]DEBUG  5592[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@4418f61b testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@7d80a533, testMethod = [null], testException = [null]]].
[2017-10-14 14:08:47,806]DEBUG  5593[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 14:08:47,806]DEBUG  5593[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 14:08:47,807]DEBUG  5594[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 14:08:47,807]DEBUG  5594[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 14:08:47,807]DEBUG  5594[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 14:08:47,807]DEBUG  5594[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 14:08:47,808]DEBUG  5595[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 14:08:47,808]DEBUG  5595[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 14:08:47,808]DEBUG  5595[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 14:08:47,808]DEBUG  5595[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 14:08:47,809]DEBUG  5596[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 14:08:47,809]DEBUG  5596[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 14:08:47,809]DEBUG  5596[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 14:08:47,809]DEBUG  5596[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 14:08:47,810]DEBUG  5597[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 14:08:47,810]DEBUG  5597[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 14:08:47,810]DEBUG  5597[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 14:08:47,810]DEBUG  5597[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 14:08:47,811]DEBUG  5598[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 14:08:47,811]DEBUG  5598[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 14:08:47,811]DEBUG  5598[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 14:08:47,812]DEBUG  5599[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 14:08:47,812]DEBUG  5599[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@7d80a533]
[2017-10-14 14:08:47,813]DEBUG  5600[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetPlatinumTypeDiscount' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:47,813]DEBUG  5600[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@4418f61b testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@7d80a533, testMethod = testGetPlatinumTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2017-10-14 14:08:47,813]DEBUG  5600[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 14:08:47,815]DEBUG  5602[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testGetPlatinumTypeDiscount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:47,815]DEBUG  5602[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15079793278
[2017-10-14 14:08:47,815]DEBUG  5602[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@24290780] for Hibernate transaction
[2017-10-14 14:08:47,816]DEBUG  5603[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@24290780]
[2017-10-14 14:08:47,816]DEBUG  5603[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 14:08:47,816]DEBUG  5603[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 14:08:47,816]DEBUG  5603[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 14:08:47,817]DEBUG  5604[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@4418f61b testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@7d80a533, testMethod = testGetPlatinumTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2017-10-14 14:08:47,817] INFO  5604[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (5): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@48ad0abe]; rollback [true]
[2017-10-14 14:08:47,817]DEBUG  5604[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:47,818]DEBUG  5605[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:47,818]DEBUG  5605[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-14 14:08:47,819]DEBUG  5606[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 17
[2017-10-14 14:08:47,819]DEBUG  5606[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:47,819]DEBUG  5606[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:47,819]DEBUG  5606[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:47,819]DEBUG  5606[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-14 14:08:47,820]DEBUG  5607[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 18
[2017-10-14 14:08:47,820]DEBUG  5607[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:47,820]DEBUG  5607[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:47,820]DEBUG  5607[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:47,821]DEBUG  5608[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-14 14:08:47,821]DEBUG  5608[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 19
[2017-10-14 14:08:47,821]DEBUG  5608[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:47,821]DEBUG  5608[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:47,822]DEBUG  5609[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:47,822]DEBUG  5609[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-14 14:08:47,822]DEBUG  5609[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 20
[2017-10-14 14:08:47,822]DEBUG  5609[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:47,823]DEBUG  5610[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: from com.softserveinc.edu.oms.domain.entities.CustomerType customerT where customerT.typeName = :Platinum
[2017-10-14 14:08:47,825]DEBUG  5612[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  |  |  +-[IDENT] Node: 'com'
    |        |  |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
    |        |  |  |  |  |  \-[IDENT] Node: 'edu'
    |        |  |  |  |  \-[IDENT] Node: 'oms'
    |        |  |  |  \-[IDENT] Node: 'domain'
    |        |  |  \-[IDENT] Node: 'entities'
    |        |  \-[IDENT] Node: 'CustomerType'
    |        \-[ALIAS] Node: 'customerT'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'customerT'
          |  \-[IDENT] Node: 'typeName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'Platinum'

[2017-10-14 14:08:47,825]DEBUG  5612[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-14 14:08:47,825]DEBUG  5612[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - select << begin [level=1, statement=select]
[2017-10-14 14:08:47,825]DEBUG  5612[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.CustomerType (customerT) -> customerty0_
[2017-10-14 14:08:47,826]DEBUG  5613[main] - org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  customerT -> customerty0_.ID
[2017-10-14 14:08:47,826]DEBUG  5613[main] - org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : typeName -> org.hibernate.type.StringType@3525c6
[2017-10-14 14:08:47,826]DEBUG  5613[main] - org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  customerT.typeName -> customerty0_.TypeName
[2017-10-14 14:08:47,826]DEBUG  5613[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - select : finishing up [level=1, statement=select]
[2017-10-14 14:08:47,826]DEBUG  5613[main] - org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) - processQuery() :  ( SELECT ( FromClause{level=1} CustomerTypes customerty0_ ) ( where ( = ( customerty0_.TypeName customerty0_.ID typeName ) ? ) ) )
[2017-10-14 14:08:47,827]DEBUG  5614[main] - org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) - Derived SELECT clause created.
[2017-10-14 14:08:47,827]DEBUG  5614[main] - org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) - Using FROM fragment [CustomerTypes customerty0_]
[2017-10-14 14:08:47,827]DEBUG  5614[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - select >> end [level=1, statement=select]
[2017-10-14 14:08:47,827]DEBUG  5614[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerTypes)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'customerty0_.ID as ID2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=customerT,role=null,tableName=CustomerTypes,tableAlias=customerty0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.CustomerType}}}
    |  \-[SQL_TOKEN] SqlFragment: 'customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[customerT], fromElementByTableAlias=[customerty0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CustomerTypes customerty0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=customerT,role=null,tableName=CustomerTypes,tableAlias=customerty0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.CustomerType}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customerty0_.TypeName' {propertyName=typeName,dereferenceType=ALL,propertyPath=typeName,path=customerT.typeName,tableAlias=customerty0_,className=com.softserveinc.edu.oms.domain.entities.CustomerType,classAlias=customerT}
          |  +-[ALIAS_REF] IdentNode: 'customerty0_.ID' {alias=customerT, className=com.softserveinc.edu.oms.domain.entities.CustomerType, tableAlias=customerty0_}
          |  \-[IDENT] IdentNode: 'typeName' {originalText=typeName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=Platinum, expectedType=org.hibernate.type.StringType@3525c6}

[2017-10-14 14:08:47,827]DEBUG  5614[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-14 14:08:47,828]DEBUG  5615[main] - org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:241) - HQL: from com.softserveinc.edu.oms.domain.entities.CustomerType customerT where customerT.typeName = :Platinum
[2017-10-14 14:08:47,828]DEBUG  5615[main] - org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:242) - SQL: select customerty0_.ID as ID2_, customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_ from CustomerTypes customerty0_ where customerty0_.TypeName=?
[2017-10-14 14:08:47,828]DEBUG  5615[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-14 14:08:47,828]DEBUG  5615[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:47,828]DEBUG  5615[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:47,828]DEBUG  5615[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:47,829]DEBUG  5616[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:47,829]DEBUG  5616[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:47,829]DEBUG  5616[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=20, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,829]DEBUG  5616[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=17, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,829]DEBUG  5616[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=19, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,829]DEBUG  5616[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=18, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,829]DEBUG  5616[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:47,830]DEBUG  5617[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select customerty0_.ID as ID2_, customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_ from CustomerTypes customerty0_ where customerty0_.TypeName=?
[2017-10-14 14:08:47,830]DEBUG  5617[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:47,831]DEBUG  5618[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.CustomerType#20]
[2017-10-14 14:08:47,831]DEBUG  5618[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:47,831]DEBUG  5618[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:47,831]DEBUG  5618[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:47,831]DEBUG  5618[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:47,831]DEBUG  5618[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:47,832]DEBUG  5619[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:47,832]DEBUG  5619[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:47,832]DEBUG  5619[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:47,832]DEBUG  5619[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=20, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,832]DEBUG  5619[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=17, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,832]DEBUG  5619[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=19, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,832]DEBUG  5619[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=18, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,832]DEBUG  5619[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:47,833]DEBUG  5620[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 14:08:47,833]DEBUG  5620[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:47,833]DEBUG  5620[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:47,833]DEBUG  5620[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:47,833]DEBUG  5620[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:47,833]DEBUG  5620[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:47,834]DEBUG  5621[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:47,834]DEBUG  5621[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=20, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,834]DEBUG  5621[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=17, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,834]DEBUG  5621[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=19, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,834]DEBUG  5621[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=18, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,834]DEBUG  5621[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:47,834]DEBUG  5621[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 14:08:47,835]DEBUG  5622[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:47,835]DEBUG  5622[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:47,835]DEBUG  5622[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:47,835]DEBUG  5622[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:47,835]DEBUG  5622[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:47,835]DEBUG  5622[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:47,835]DEBUG  5622[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=20, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,836]DEBUG  5623[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=17, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,836]DEBUG  5623[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=19, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,836]DEBUG  5623[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=18, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,836]DEBUG  5623[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:47,836]DEBUG  5623[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 14:08:47,836]DEBUG  5623[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:47,837]DEBUG  5624[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:47,837]DEBUG  5624[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:47,837]DEBUG  5624[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:47,837]DEBUG  5624[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:47,837]DEBUG  5624[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:47,837]DEBUG  5624[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=20, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,837]DEBUG  5624[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=17, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,838]DEBUG  5625[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=19, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,838]DEBUG  5625[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=18, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,838]DEBUG  5625[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:47,838]DEBUG  5625[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 14:08:47,838]DEBUG  5625[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:47,838]DEBUG  5625[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:47,839]DEBUG  5626[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:47,839]DEBUG  5626[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:47,839]DEBUG  5626[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:47,839]DEBUG  5626[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:47,839]DEBUG  5626[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=20, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,839]DEBUG  5626[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=17, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,839]DEBUG  5626[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=19, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,840]DEBUG  5627[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=18, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,840]DEBUG  5627[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:47,840]DEBUG  5627[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 14:08:47,840]DEBUG  5627[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:47,841]DEBUG  5628[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:47,841]DEBUG  5628[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:47,841]DEBUG  5628[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:47,841]DEBUG  5628[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:47,841]DEBUG  5628[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:47,841]DEBUG  5628[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=20, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,841]DEBUG  5628[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=17, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,842]DEBUG  5629[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=19, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,842]DEBUG  5629[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=18, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,842]DEBUG  5629[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:47,842]DEBUG  5629[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 14:08:47,842]DEBUG  5629[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:47,843]DEBUG  5630[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:47,843]DEBUG  5630[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:47,843]DEBUG  5630[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:47,843]DEBUG  5630[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:47,843]DEBUG  5630[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:47,843]DEBUG  5630[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=20, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,843]DEBUG  5630[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=17, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,844]DEBUG  5631[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=19, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,844]DEBUG  5631[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=18, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,844]DEBUG  5631[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:47,844]DEBUG  5631[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 14:08:47,844]DEBUG  5631[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:47,845]DEBUG  5632[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:47,845]DEBUG  5632[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:47,845]DEBUG  5632[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:47,845]DEBUG  5632[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:47,845]DEBUG  5632[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:47,845]DEBUG  5632[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=20, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,845]DEBUG  5632[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=17, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,846]DEBUG  5633[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=19, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,846]DEBUG  5633[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=18, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,846]DEBUG  5633[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:47,846]DEBUG  5633[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 14:08:47,846]DEBUG  5633[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:47,846]DEBUG  5633[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:47,847]DEBUG  5634[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:47,847]DEBUG  5634[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:47,847]DEBUG  5634[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:47,847]DEBUG  5634[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:47,847]DEBUG  5634[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=20, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,847]DEBUG  5634[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=17, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,848]DEBUG  5635[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=19, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,848]DEBUG  5635[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=18, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,848]DEBUG  5635[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:47,848]DEBUG  5635[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 14:08:47,848]DEBUG  5635[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:47,848]DEBUG  5635[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@4418f61b testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@7d80a533, testMethod = testGetPlatinumTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2017-10-14 14:08:47,849]DEBUG  5636[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 14:08:47,849]DEBUG  5636[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@24290780]
[2017-10-14 14:08:47,849]DEBUG  5636[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 14:08:47,884]DEBUG  5671[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 14:08:47,884]DEBUG  5671[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:47,884]DEBUG  5671[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@24290780] after transaction
[2017-10-14 14:08:47,885]DEBUG  5672[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 14:08:47,885]DEBUG  5672[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 14:08:47,885]DEBUG  5672[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:47,885] INFO  5672[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@4418f61b testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@7d80a533, testMethod = testGetPlatinumTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2017-10-14 14:08:47,888]DEBUG  5675[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@4418f61b testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@7d80a533, testMethod = testGetPlatinumTypeDiscount@CustomerTypeDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 14:08:47,889]DEBUG  5676[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2017-10-14 14:08:47,889]DEBUG  5676[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2017-10-14 14:08:47,890]DEBUG  5677[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@4418f61b testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@52a7e380, testMethod = [null], testException = [null]]].
[2017-10-14 14:08:47,890]DEBUG  5677[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 14:08:47,890]DEBUG  5677[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 14:08:47,891]DEBUG  5678[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 14:08:47,891]DEBUG  5678[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 14:08:47,891]DEBUG  5678[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 14:08:47,892]DEBUG  5679[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 14:08:47,892]DEBUG  5679[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 14:08:47,892]DEBUG  5679[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 14:08:47,892]DEBUG  5679[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 14:08:47,893]DEBUG  5680[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 14:08:47,893]DEBUG  5680[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 14:08:47,893]DEBUG  5680[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 14:08:47,893]DEBUG  5680[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 14:08:47,894]DEBUG  5681[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 14:08:47,894]DEBUG  5681[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 14:08:47,894]DEBUG  5681[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 14:08:47,894]DEBUG  5681[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 14:08:47,895]DEBUG  5682[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 14:08:47,895]DEBUG  5682[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 14:08:47,895]DEBUG  5682[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 14:08:47,895]DEBUG  5682[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 14:08:47,896]DEBUG  5683[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 14:08:47,896]DEBUG  5683[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@52a7e380]
[2017-10-14 14:08:47,897]DEBUG  5684[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindAll' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:47,897]DEBUG  5684[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@4418f61b testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@52a7e380, testMethod = testFindAll@CustomerTypeDaoTest, testException = [null]]]
[2017-10-14 14:08:47,897]DEBUG  5684[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 14:08:47,898]DEBUG  5685[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:47,899]DEBUG  5686[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15079793278
[2017-10-14 14:08:47,899]DEBUG  5686[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@77f34114] for Hibernate transaction
[2017-10-14 14:08:47,899]DEBUG  5686[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@77f34114]
[2017-10-14 14:08:47,899]DEBUG  5686[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 14:08:47,899]DEBUG  5686[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 14:08:47,899]DEBUG  5686[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 14:08:47,899]DEBUG  5686[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@4418f61b testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@52a7e380, testMethod = testFindAll@CustomerTypeDaoTest, testException = [null]]]
[2017-10-14 14:08:47,899] INFO  5686[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (6): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@48ad0abe]; rollback [true]
[2017-10-14 14:08:47,900]DEBUG  5687[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:47,900]DEBUG  5687[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:47,900]DEBUG  5687[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-14 14:08:47,901]DEBUG  5688[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 21
[2017-10-14 14:08:47,901]DEBUG  5688[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:47,901]DEBUG  5688[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:47,901]DEBUG  5688[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:47,901]DEBUG  5688[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-14 14:08:47,902]DEBUG  5689[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 22
[2017-10-14 14:08:47,902]DEBUG  5689[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:47,902]DEBUG  5689[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:47,902]DEBUG  5689[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:47,902]DEBUG  5689[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-14 14:08:47,903]DEBUG  5690[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 23
[2017-10-14 14:08:47,903]DEBUG  5690[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:47,903]DEBUG  5690[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:47,903]DEBUG  5690[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:47,903]DEBUG  5690[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-14 14:08:47,904]DEBUG  5691[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 24
[2017-10-14 14:08:47,904]DEBUG  5691[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:47,909]DEBUG  5696[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:47,909]DEBUG  5696[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:47,910]DEBUG  5697[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:47,910]DEBUG  5697[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:47,910]DEBUG  5697[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:47,910]DEBUG  5697[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=24, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,910]DEBUG  5697[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=23, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,910]DEBUG  5697[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=22, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,910]DEBUG  5697[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=21, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,911]DEBUG  5698[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:47,911]DEBUG  5698[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID2_0_, this_.Discount as Discount2_0_, this_.MaxRange as MaxRange2_0_, this_.MinRange as MinRange2_0_, this_.TypeName as TypeName2_0_ from CustomerTypes this_
[2017-10-14 14:08:47,911]DEBUG  5698[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:47,912]DEBUG  5699[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.CustomerType#21]
[2017-10-14 14:08:47,912]DEBUG  5699[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.CustomerType#22]
[2017-10-14 14:08:47,912]DEBUG  5699[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.CustomerType#23]
[2017-10-14 14:08:47,912]DEBUG  5699[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.CustomerType#24]
[2017-10-14 14:08:47,912]DEBUG  5699[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:47,912]DEBUG  5699[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:47,913]DEBUG  5700[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:47,913]DEBUG  5700[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:47,913]DEBUG  5700[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:47,913]DEBUG  5700[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:47,913]DEBUG  5700[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:47,913]DEBUG  5700[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:47,913]DEBUG  5700[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=24, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,914]DEBUG  5701[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=23, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,914]DEBUG  5701[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=22, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,914]DEBUG  5701[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=21, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,914]DEBUG  5701[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:47,914]DEBUG  5701[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 14:08:47,914]DEBUG  5701[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:47,915]DEBUG  5702[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:47,915]DEBUG  5702[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:47,915]DEBUG  5702[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:47,915]DEBUG  5702[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:47,915]DEBUG  5702[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:47,915]DEBUG  5702[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=24, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,915]DEBUG  5702[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=23, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,916]DEBUG  5703[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=22, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,916]DEBUG  5703[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=21, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,916]DEBUG  5703[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:47,916]DEBUG  5703[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 14:08:47,916]DEBUG  5703[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:47,916]DEBUG  5703[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:47,917]DEBUG  5704[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:47,917]DEBUG  5704[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:47,917]DEBUG  5704[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:47,917]DEBUG  5704[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:47,917]DEBUG  5704[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=24, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,917]DEBUG  5704[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=23, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,917]DEBUG  5704[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=22, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,918]DEBUG  5705[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=21, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,918]DEBUG  5705[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:47,918]DEBUG  5705[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 14:08:47,918]DEBUG  5705[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:47,918]DEBUG  5705[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:47,918]DEBUG  5705[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:47,919]DEBUG  5706[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:47,919]DEBUG  5706[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:47,919]DEBUG  5706[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:47,919]DEBUG  5706[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=24, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,919]DEBUG  5706[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=23, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,919]DEBUG  5706[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=22, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,919]DEBUG  5706[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=21, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,920]DEBUG  5707[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:47,920]DEBUG  5707[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 14:08:47,920]DEBUG  5707[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:47,920]DEBUG  5707[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:47,920]DEBUG  5707[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:47,920]DEBUG  5707[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:47,921]DEBUG  5708[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:47,921]DEBUG  5708[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:47,921]DEBUG  5708[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=24, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,921]DEBUG  5708[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=23, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,921]DEBUG  5708[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=22, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,921]DEBUG  5708[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=21, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,921]DEBUG  5708[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:47,921]DEBUG  5708[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 14:08:47,922]DEBUG  5709[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:47,922]DEBUG  5709[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:47,922]DEBUG  5709[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:47,922]DEBUG  5709[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:47,922]DEBUG  5709[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:47,922]DEBUG  5709[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:47,923]DEBUG  5710[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=24, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,923]DEBUG  5710[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=23, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,923]DEBUG  5710[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=22, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,923]DEBUG  5710[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=21, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,923]DEBUG  5710[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:47,923]DEBUG  5710[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 14:08:47,923]DEBUG  5710[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:47,924]DEBUG  5711[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:47,924]DEBUG  5711[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:47,924]DEBUG  5711[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:47,924]DEBUG  5711[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:47,924]DEBUG  5711[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:47,924]DEBUG  5711[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=24, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,924]DEBUG  5711[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=23, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,925]DEBUG  5712[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=22, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,925]DEBUG  5712[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=21, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,925]DEBUG  5712[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:47,925]DEBUG  5712[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 14:08:47,925]DEBUG  5712[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:47,925]DEBUG  5712[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:47,926]DEBUG  5713[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:47,926]DEBUG  5713[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:47,926]DEBUG  5713[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:47,926]DEBUG  5713[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:47,926]DEBUG  5713[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=24, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,926]DEBUG  5713[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=23, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,926]DEBUG  5713[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=22, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,927]DEBUG  5714[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=21, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,927]DEBUG  5714[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:47,927]DEBUG  5714[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 14:08:47,927]DEBUG  5714[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:47,927]DEBUG  5714[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:47,927]DEBUG  5714[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:47,928]DEBUG  5715[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:47,928]DEBUG  5715[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:47,928]DEBUG  5715[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:47,928]DEBUG  5715[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=24, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,928]DEBUG  5715[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=23, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,928]DEBUG  5715[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=22, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,928]DEBUG  5715[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=21, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,928]DEBUG  5715[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:47,929]DEBUG  5716[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 14:08:47,929]DEBUG  5716[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:47,929]DEBUG  5716[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@4418f61b testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@52a7e380, testMethod = testFindAll@CustomerTypeDaoTest, testException = [null]]]
[2017-10-14 14:08:47,929]DEBUG  5716[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 14:08:47,929]DEBUG  5716[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@77f34114]
[2017-10-14 14:08:47,929]DEBUG  5716[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 14:08:47,959]DEBUG  5746[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 14:08:47,959]DEBUG  5746[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:47,959]DEBUG  5746[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@77f34114] after transaction
[2017-10-14 14:08:47,960]DEBUG  5747[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 14:08:47,960]DEBUG  5747[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 14:08:47,960]DEBUG  5747[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:47,961] INFO  5748[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@4418f61b testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@52a7e380, testMethod = testFindAll@CustomerTypeDaoTest, testException = [null]]]
[2017-10-14 14:08:47,962]DEBUG  5749[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@4418f61b testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@52a7e380, testMethod = testFindAll@CustomerTypeDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 14:08:47,963]DEBUG  5750[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2017-10-14 14:08:47,963]DEBUG  5750[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2017-10-14 14:08:47,964]DEBUG  5751[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@4418f61b testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@69470e44, testMethod = [null], testException = [null]]].
[2017-10-14 14:08:47,964]DEBUG  5751[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 14:08:47,964]DEBUG  5751[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 14:08:47,965]DEBUG  5752[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 14:08:47,965]DEBUG  5752[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 14:08:47,965]DEBUG  5752[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 14:08:47,966]DEBUG  5753[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 14:08:47,966]DEBUG  5753[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 14:08:47,966]DEBUG  5753[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 14:08:47,966]DEBUG  5753[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 14:08:47,967]DEBUG  5754[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 14:08:47,967]DEBUG  5754[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 14:08:47,967]DEBUG  5754[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 14:08:47,967]DEBUG  5754[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 14:08:47,968]DEBUG  5755[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 14:08:47,968]DEBUG  5755[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 14:08:47,968]DEBUG  5755[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 14:08:47,968]DEBUG  5755[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 14:08:47,969]DEBUG  5756[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 14:08:47,969]DEBUG  5756[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 14:08:47,969]DEBUG  5756[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 14:08:47,969]DEBUG  5756[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 14:08:47,970]DEBUG  5757[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 14:08:47,970]DEBUG  5757[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@69470e44]
[2017-10-14 14:08:47,970]DEBUG  5757[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByCriterions' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:47,971]DEBUG  5758[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@4418f61b testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@69470e44, testMethod = testFindByCriterions@CustomerTypeDaoTest, testException = [null]]]
[2017-10-14 14:08:47,971]DEBUG  5758[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 14:08:47,972]DEBUG  5759[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByCriterions]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:47,972]DEBUG  5759[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15079793279
[2017-10-14 14:08:47,972]DEBUG  5759[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@46343224] for Hibernate transaction
[2017-10-14 14:08:47,973]DEBUG  5760[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@46343224]
[2017-10-14 14:08:47,973]DEBUG  5760[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 14:08:47,973]DEBUG  5760[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 14:08:47,973]DEBUG  5760[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 14:08:47,974]DEBUG  5761[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@4418f61b testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@69470e44, testMethod = testFindByCriterions@CustomerTypeDaoTest, testException = [null]]]
[2017-10-14 14:08:47,974] INFO  5761[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (7): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@48ad0abe]; rollback [true]
[2017-10-14 14:08:47,974]DEBUG  5761[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:47,975]DEBUG  5762[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:47,975]DEBUG  5762[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-14 14:08:47,976]DEBUG  5763[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 25
[2017-10-14 14:08:47,977]DEBUG  5764[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:47,977]DEBUG  5764[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:47,977]DEBUG  5764[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:47,978]DEBUG  5765[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-14 14:08:47,978]DEBUG  5765[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 26
[2017-10-14 14:08:47,979]DEBUG  5766[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:47,979]DEBUG  5766[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:47,979]DEBUG  5766[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:47,979]DEBUG  5766[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-14 14:08:47,980]DEBUG  5767[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 27
[2017-10-14 14:08:47,980]DEBUG  5767[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:47,980]DEBUG  5767[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:47,980]DEBUG  5767[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:47,980]DEBUG  5767[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-14 14:08:47,981]DEBUG  5768[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 28
[2017-10-14 14:08:47,981]DEBUG  5768[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:47,982]DEBUG  5769[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:47,982]DEBUG  5769[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:47,982]DEBUG  5769[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:47,982]DEBUG  5769[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:47,982]DEBUG  5769[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:47,982]DEBUG  5769[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=26, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,983]DEBUG  5770[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=25, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,983]DEBUG  5770[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=28, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,983]DEBUG  5770[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=27, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,983]DEBUG  5770[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:47,983]DEBUG  5770[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID2_0_, this_.Discount as Discount2_0_, this_.MaxRange as MaxRange2_0_, this_.MinRange as MinRange2_0_, this_.TypeName as TypeName2_0_ from CustomerTypes this_ where this_.TypeName=? and this_.ID<=?
[2017-10-14 14:08:47,984]DEBUG  5771[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:47,985]DEBUG  5772[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.CustomerType#25]
[2017-10-14 14:08:47,985]DEBUG  5772[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:47,985]DEBUG  5772[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:47,985]DEBUG  5772[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:47,985]DEBUG  5772[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:47,985]DEBUG  5772[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:47,985]DEBUG  5772[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:47,986]DEBUG  5773[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:47,986]DEBUG  5773[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:47,986]DEBUG  5773[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=26, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,986]DEBUG  5773[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=25, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,986]DEBUG  5773[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=28, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,986]DEBUG  5773[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=27, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,986]DEBUG  5773[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:47,986]DEBUG  5773[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 14:08:47,987]DEBUG  5774[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:47,987]DEBUG  5774[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:47,987]DEBUG  5774[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:47,987]DEBUG  5774[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:47,987]DEBUG  5774[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:47,987]DEBUG  5774[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:47,988]DEBUG  5775[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=26, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,988]DEBUG  5775[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=25, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,988]DEBUG  5775[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=28, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,988]DEBUG  5775[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=27, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,988]DEBUG  5775[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:47,988]DEBUG  5775[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 14:08:47,989]DEBUG  5776[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:47,989]DEBUG  5776[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:47,989]DEBUG  5776[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:47,989]DEBUG  5776[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:47,989]DEBUG  5776[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:47,989]DEBUG  5776[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:47,989]DEBUG  5776[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=26, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,990]DEBUG  5777[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=25, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,990]DEBUG  5777[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=28, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,990]DEBUG  5777[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=27, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,990]DEBUG  5777[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:47,990]DEBUG  5777[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 14:08:47,990]DEBUG  5777[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:47,990]DEBUG  5777[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:47,991]DEBUG  5778[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:47,991]DEBUG  5778[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:47,991]DEBUG  5778[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:47,991]DEBUG  5778[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:47,991]DEBUG  5778[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=26, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,991]DEBUG  5778[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=25, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,991]DEBUG  5778[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=28, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,992]DEBUG  5779[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=27, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,992]DEBUG  5779[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:47,992]DEBUG  5779[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 14:08:47,992]DEBUG  5779[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:47,992]DEBUG  5779[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:47,992]DEBUG  5779[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:47,993]DEBUG  5780[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:47,993]DEBUG  5780[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:47,993]DEBUG  5780[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:47,993]DEBUG  5780[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=26, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,993]DEBUG  5780[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=25, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,993]DEBUG  5780[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=28, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,993]DEBUG  5780[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=27, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,993]DEBUG  5780[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:47,994]DEBUG  5781[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 14:08:47,994]DEBUG  5781[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:47,994]DEBUG  5781[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:47,994]DEBUG  5781[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:47,994]DEBUG  5781[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:47,994]DEBUG  5781[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:47,995]DEBUG  5782[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:47,995]DEBUG  5782[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=26, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,995]DEBUG  5782[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=25, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,995]DEBUG  5782[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=28, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,995]DEBUG  5782[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=27, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,995]DEBUG  5782[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:47,995]DEBUG  5782[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 14:08:47,996]DEBUG  5783[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:47,996]DEBUG  5783[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:47,996]DEBUG  5783[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:47,996]DEBUG  5783[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:47,996]DEBUG  5783[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:47,996]DEBUG  5783[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:47,996]DEBUG  5783[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=26, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,997]DEBUG  5784[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=25, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,997]DEBUG  5784[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=28, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,997]DEBUG  5784[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=27, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,997]DEBUG  5784[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:47,997]DEBUG  5784[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 14:08:47,997]DEBUG  5784[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:47,998]DEBUG  5785[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:47,998]DEBUG  5785[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:47,998]DEBUG  5785[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:47,998]DEBUG  5785[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:47,998]DEBUG  5785[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:47,998]DEBUG  5785[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=26, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,998]DEBUG  5785[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=25, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,998]DEBUG  5785[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=28, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,999]DEBUG  5786[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=27, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:47,999]DEBUG  5786[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:47,999]DEBUG  5786[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 14:08:47,999]DEBUG  5786[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:47,999]DEBUG  5786[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:47,999]DEBUG  5786[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:48,000]DEBUG  5787[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:48,000]DEBUG  5787[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:48,000]DEBUG  5787[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:48,000]DEBUG  5787[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=26, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,000]DEBUG  5787[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=25, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,000]DEBUG  5787[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=28, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,000]DEBUG  5787[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=27, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,001]DEBUG  5788[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,001]DEBUG  5788[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 14:08:48,001]DEBUG  5788[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,001]DEBUG  5788[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@4418f61b testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@69470e44, testMethod = testFindByCriterions@CustomerTypeDaoTest, testException = [null]]]
[2017-10-14 14:08:48,001]DEBUG  5788[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 14:08:48,001]DEBUG  5788[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@46343224]
[2017-10-14 14:08:48,001]DEBUG  5788[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 14:08:48,034]DEBUG  5821[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 14:08:48,034]DEBUG  5821[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:48,034]DEBUG  5821[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@46343224] after transaction
[2017-10-14 14:08:48,035]DEBUG  5822[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 14:08:48,035]DEBUG  5822[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 14:08:48,035]DEBUG  5822[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:48,036] INFO  5823[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@4418f61b testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@69470e44, testMethod = testFindByCriterions@CustomerTypeDaoTest, testException = [null]]]
[2017-10-14 14:08:48,037]DEBUG  5824[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@4418f61b testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@69470e44, testMethod = testFindByCriterions@CustomerTypeDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 14:08:48,038]DEBUG  5825[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2017-10-14 14:08:48,038]DEBUG  5825[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2017-10-14 14:08:48,038]DEBUG  5825[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@4418f61b testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@7e66f32a, testMethod = [null], testException = [null]]].
[2017-10-14 14:08:48,039]DEBUG  5826[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 14:08:48,039]DEBUG  5826[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 14:08:48,039]DEBUG  5826[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 14:08:48,039]DEBUG  5826[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 14:08:48,039]DEBUG  5826[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 14:08:48,039]DEBUG  5826[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 14:08:48,039]DEBUG  5826[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 14:08:48,039]DEBUG  5826[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 14:08:48,039]DEBUG  5826[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 14:08:48,040]DEBUG  5827[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 14:08:48,040]DEBUG  5827[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 14:08:48,040]DEBUG  5827[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 14:08:48,040]DEBUG  5827[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 14:08:48,040]DEBUG  5827[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 14:08:48,040]DEBUG  5827[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 14:08:48,040]DEBUG  5827[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 14:08:48,040]DEBUG  5827[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 14:08:48,041]DEBUG  5828[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 14:08:48,041]DEBUG  5828[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 14:08:48,041]DEBUG  5828[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 14:08:48,041]DEBUG  5828[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 14:08:48,041]DEBUG  5828[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 14:08:48,041]DEBUG  5828[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@7e66f32a]
[2017-10-14 14:08:48,042]DEBUG  5829[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByOneOfCriterions' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:48,042]DEBUG  5829[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@4418f61b testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@7e66f32a, testMethod = testFindByOneOfCriterions@CustomerTypeDaoTest, testException = [null]]]
[2017-10-14 14:08:48,042]DEBUG  5829[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 14:08:48,043]DEBUG  5830[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByOneOfCriterions]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:48,043]DEBUG  5830[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15079793280
[2017-10-14 14:08:48,043]DEBUG  5830[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@1508dd9] for Hibernate transaction
[2017-10-14 14:08:48,043]DEBUG  5830[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@1508dd9]
[2017-10-14 14:08:48,043]DEBUG  5830[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 14:08:48,043]DEBUG  5830[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 14:08:48,044]DEBUG  5831[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 14:08:48,044]DEBUG  5831[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@4418f61b testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@7e66f32a, testMethod = testFindByOneOfCriterions@CustomerTypeDaoTest, testException = [null]]]
[2017-10-14 14:08:48,044] INFO  5831[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (8): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@48ad0abe]; rollback [true]
[2017-10-14 14:08:48,044]DEBUG  5831[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:48,044]DEBUG  5831[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,044]DEBUG  5831[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-14 14:08:48,045]DEBUG  5832[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 29
[2017-10-14 14:08:48,045]DEBUG  5832[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,045]DEBUG  5832[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:48,046]DEBUG  5833[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,046]DEBUG  5833[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-14 14:08:48,046]DEBUG  5833[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 30
[2017-10-14 14:08:48,046]DEBUG  5833[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,046]DEBUG  5833[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:48,047]DEBUG  5834[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,047]DEBUG  5834[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-14 14:08:48,047]DEBUG  5834[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 31
[2017-10-14 14:08:48,047]DEBUG  5834[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,048]DEBUG  5835[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:48,048]DEBUG  5835[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,048]DEBUG  5835[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-14 14:08:48,048]DEBUG  5835[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 32
[2017-10-14 14:08:48,049]DEBUG  5836[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,049]DEBUG  5836[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:48,049]DEBUG  5836[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:48,049]DEBUG  5836[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:48,049]DEBUG  5836[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:48,050]DEBUG  5837[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:48,050]DEBUG  5837[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=32, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,050]DEBUG  5837[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=31, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,050]DEBUG  5837[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=30, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,050]DEBUG  5837[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=29, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,056]DEBUG  5843[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,056]DEBUG  5843[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID2_0_, this_.Discount as Discount2_0_, this_.MaxRange as MaxRange2_0_, this_.MinRange as MinRange2_0_, this_.TypeName as TypeName2_0_ from CustomerTypes this_ where this_.TypeName=? and this_.ID<=?
[2017-10-14 14:08:48,057]DEBUG  5844[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:48,058]DEBUG  5845[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.CustomerType#29]
[2017-10-14 14:08:48,058]DEBUG  5845[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:48,058]DEBUG  5845[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,058]DEBUG  5845[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:48,058]DEBUG  5845[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:48,059]DEBUG  5846[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:48,059]DEBUG  5846[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:48,059]DEBUG  5846[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:48,059]DEBUG  5846[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:48,059]DEBUG  5846[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=32, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,059]DEBUG  5846[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=31, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,059]DEBUG  5846[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=30, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,060]DEBUG  5847[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=29, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,060]DEBUG  5847[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,060]DEBUG  5847[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 14:08:48,060]DEBUG  5847[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,060]DEBUG  5847[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:48,061]DEBUG  5848[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:48,061]DEBUG  5848[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:48,061]DEBUG  5848[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:48,061]DEBUG  5848[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:48,061]DEBUG  5848[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=32, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,061]DEBUG  5848[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=31, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,061]DEBUG  5848[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=30, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,062]DEBUG  5849[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=29, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,062]DEBUG  5849[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,062]DEBUG  5849[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 14:08:48,062]DEBUG  5849[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,062]DEBUG  5849[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:48,062]DEBUG  5849[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:48,063]DEBUG  5850[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:48,063]DEBUG  5850[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:48,063]DEBUG  5850[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:48,063]DEBUG  5850[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=32, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,063]DEBUG  5850[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=31, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,063]DEBUG  5850[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=30, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,063]DEBUG  5850[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=29, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,063]DEBUG  5850[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,064]DEBUG  5851[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 14:08:48,064]DEBUG  5851[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,064]DEBUG  5851[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:48,064]DEBUG  5851[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:48,064]DEBUG  5851[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:48,064]DEBUG  5851[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:48,065]DEBUG  5852[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:48,065]DEBUG  5852[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=32, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,065]DEBUG  5852[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=31, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,065]DEBUG  5852[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=30, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,065]DEBUG  5852[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=29, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,065]DEBUG  5852[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,065]DEBUG  5852[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 14:08:48,066]DEBUG  5853[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,066]DEBUG  5853[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:48,066]DEBUG  5853[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:48,066]DEBUG  5853[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:48,066]DEBUG  5853[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:48,066]DEBUG  5853[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:48,067]DEBUG  5854[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=32, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,067]DEBUG  5854[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=31, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,067]DEBUG  5854[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=30, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,067]DEBUG  5854[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=29, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,067]DEBUG  5854[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,067]DEBUG  5854[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 14:08:48,067]DEBUG  5854[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,068]DEBUG  5855[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:48,068]DEBUG  5855[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:48,068]DEBUG  5855[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:48,068]DEBUG  5855[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:48,068]DEBUG  5855[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:48,068]DEBUG  5855[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=32, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,068]DEBUG  5855[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=31, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,069]DEBUG  5856[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=30, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,069]DEBUG  5856[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=29, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,069]DEBUG  5856[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,069]DEBUG  5856[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 14:08:48,069]DEBUG  5856[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,069]DEBUG  5856[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:48,070]DEBUG  5857[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:48,070]DEBUG  5857[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:48,070]DEBUG  5857[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:48,070]DEBUG  5857[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:48,070]DEBUG  5857[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=32, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,070]DEBUG  5857[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=31, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,070]DEBUG  5857[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=30, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,071]DEBUG  5858[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=29, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,071]DEBUG  5858[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,071]DEBUG  5858[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 14:08:48,071]DEBUG  5858[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,071]DEBUG  5858[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:48,071]DEBUG  5858[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:48,072]DEBUG  5859[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:48,072]DEBUG  5859[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:48,072]DEBUG  5859[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:48,072]DEBUG  5859[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=32, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,072]DEBUG  5859[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=31, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,072]DEBUG  5859[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=30, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,072]DEBUG  5859[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=29, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,073]DEBUG  5860[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,073]DEBUG  5860[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 14:08:48,073]DEBUG  5860[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,073]DEBUG  5860[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:48,073]DEBUG  5860[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:48,073]DEBUG  5860[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:48,074]DEBUG  5861[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:48,074]DEBUG  5861[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:48,074]DEBUG  5861[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=32, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,074]DEBUG  5861[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=31, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,074]DEBUG  5861[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=30, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,074]DEBUG  5861[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=29, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,074]DEBUG  5861[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,075]DEBUG  5862[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 14:08:48,075]DEBUG  5862[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,075]DEBUG  5862[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@4418f61b testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@7e66f32a, testMethod = testFindByOneOfCriterions@CustomerTypeDaoTest, testException = [null]]]
[2017-10-14 14:08:48,075]DEBUG  5862[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 14:08:48,075]DEBUG  5862[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@1508dd9]
[2017-10-14 14:08:48,075]DEBUG  5862[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 14:08:48,117]DEBUG  5904[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 14:08:48,118]DEBUG  5905[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:48,118]DEBUG  5905[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@1508dd9] after transaction
[2017-10-14 14:08:48,118]DEBUG  5905[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 14:08:48,119]DEBUG  5906[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 14:08:48,119]DEBUG  5906[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:48,119] INFO  5906[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@4418f61b testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@7e66f32a, testMethod = testFindByOneOfCriterions@CustomerTypeDaoTest, testException = [null]]]
[2017-10-14 14:08:48,121]DEBUG  5908[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@4418f61b testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@7e66f32a, testMethod = testFindByOneOfCriterions@CustomerTypeDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 14:08:48,122]DEBUG  5909[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2017-10-14 14:08:48,122]DEBUG  5909[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2017-10-14 14:08:48,123]DEBUG  5910[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@4418f61b testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@1a6633f, testMethod = [null], testException = [null]]].
[2017-10-14 14:08:48,123]DEBUG  5910[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 14:08:48,123]DEBUG  5910[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 14:08:48,124]DEBUG  5911[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 14:08:48,124]DEBUG  5911[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 14:08:48,124]DEBUG  5911[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 14:08:48,124]DEBUG  5911[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 14:08:48,125]DEBUG  5912[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 14:08:48,125]DEBUG  5912[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 14:08:48,125]DEBUG  5912[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 14:08:48,125]DEBUG  5912[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 14:08:48,126]DEBUG  5913[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 14:08:48,126]DEBUG  5913[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 14:08:48,126]DEBUG  5913[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 14:08:48,126]DEBUG  5913[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 14:08:48,127]DEBUG  5914[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 14:08:48,127]DEBUG  5914[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 14:08:48,127]DEBUG  5914[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 14:08:48,127]DEBUG  5914[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 14:08:48,128]DEBUG  5915[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 14:08:48,128]DEBUG  5915[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 14:08:48,129]DEBUG  5916[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 14:08:48,129]DEBUG  5916[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 14:08:48,129]DEBUG  5916[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@1a6633f]
[2017-10-14 14:08:48,130]DEBUG  5917[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testInsertOrUpdate' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:48,130]DEBUG  5917[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@4418f61b testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@1a6633f, testMethod = testInsertOrUpdate@CustomerTypeDaoTest, testException = [null]]]
[2017-10-14 14:08:48,131]DEBUG  5918[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 14:08:48,133]DEBUG  5920[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testInsertOrUpdate]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:48,133]DEBUG  5920[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15079793281
[2017-10-14 14:08:48,134]DEBUG  5921[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@1ce7435f] for Hibernate transaction
[2017-10-14 14:08:48,134]DEBUG  5921[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@1ce7435f]
[2017-10-14 14:08:48,134]DEBUG  5921[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 14:08:48,134]DEBUG  5921[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 14:08:48,135]DEBUG  5922[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 14:08:48,135]DEBUG  5922[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@4418f61b testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@1a6633f, testMethod = testInsertOrUpdate@CustomerTypeDaoTest, testException = [null]]]
[2017-10-14 14:08:48,135] INFO  5922[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (9): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@48ad0abe]; rollback [true]
[2017-10-14 14:08:48,136]DEBUG  5923[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:48,136]DEBUG  5923[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,136]DEBUG  5923[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-14 14:08:48,138]DEBUG  5925[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 33
[2017-10-14 14:08:48,138]DEBUG  5925[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,138]DEBUG  5925[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:48,138]DEBUG  5925[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,139]DEBUG  5926[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-14 14:08:48,139]DEBUG  5926[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 34
[2017-10-14 14:08:48,139]DEBUG  5926[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,139]DEBUG  5926[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:48,140]DEBUG  5927[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,140]DEBUG  5927[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-14 14:08:48,140]DEBUG  5927[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 35
[2017-10-14 14:08:48,140]DEBUG  5927[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,140]DEBUG  5927[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:48,141]DEBUG  5928[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,141]DEBUG  5928[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-14 14:08:48,141]DEBUG  5928[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 36
[2017-10-14 14:08:48,141]DEBUG  5928[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,142]DEBUG  5929[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:48,142]DEBUG  5929[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:48,142]DEBUG  5929[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:48,142]DEBUG  5929[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:48,142]DEBUG  5929[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:48,142]DEBUG  5929[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=34, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,143]DEBUG  5930[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=33, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,143]DEBUG  5930[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=35, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,143]DEBUG  5930[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=36, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,143]DEBUG  5930[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,143]DEBUG  5930[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 14:08:48,143]DEBUG  5930[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,144]DEBUG  5931[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:48,144]DEBUG  5931[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,144]DEBUG  5931[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-14 14:08:48,144]DEBUG  5931[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 37
[2017-10-14 14:08:48,145]DEBUG  5932[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,145]DEBUG  5932[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:48,145]DEBUG  5932[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:48,145]DEBUG  5932[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2017-10-14 14:08:48,145]DEBUG  5932[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:48,145]DEBUG  5932[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:48,146]DEBUG  5933[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=34, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,146]DEBUG  5933[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=33, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,146]DEBUG  5933[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=37, maxRange=9.99999999E7, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,146]DEBUG  5933[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=35, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,146]DEBUG  5933[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=36, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,146]DEBUG  5933[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,146]DEBUG  5933[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select customerty0_.ID as ID2_, customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_ from CustomerTypes customerty0_ where customerty0_.TypeName=?
[2017-10-14 14:08:48,147]DEBUG  5934[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:48,147]DEBUG  5934[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.CustomerType#37]
[2017-10-14 14:08:48,148]DEBUG  5935[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:48,148]DEBUG  5935[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,148]DEBUG  5935[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:48,148]DEBUG  5935[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:48,148]DEBUG  5935[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:48,148]DEBUG  5935[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2017-10-14 14:08:48,148]DEBUG  5935[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:48,149]DEBUG  5936[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:48,149]DEBUG  5936[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=34, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,149]DEBUG  5936[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=33, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,149]DEBUG  5936[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=37, maxRange=9.99999999E7, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,149]DEBUG  5936[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=35, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,149]DEBUG  5936[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=36, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,149]DEBUG  5936[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,150]DEBUG  5937[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 14:08:48,150]DEBUG  5937[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,150]DEBUG  5937[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:48,150]DEBUG  5937[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:48,151]DEBUG  5938[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2017-10-14 14:08:48,151]DEBUG  5938[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:48,151]DEBUG  5938[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:48,151]DEBUG  5938[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=34, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,151]DEBUG  5938[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=33, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,151]DEBUG  5938[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=37, maxRange=9.99999999E7, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,151]DEBUG  5938[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=35, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,151]DEBUG  5938[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=36, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,152]DEBUG  5939[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,152]DEBUG  5939[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 14:08:48,152]DEBUG  5939[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,152]DEBUG  5939[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:48,152]DEBUG  5939[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:48,153]DEBUG  5940[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2017-10-14 14:08:48,153]DEBUG  5940[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:48,153]DEBUG  5940[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:48,153]DEBUG  5940[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=34, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,153]DEBUG  5940[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=33, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,153]DEBUG  5940[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=37, maxRange=9.99999999E7, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,153]DEBUG  5940[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=35, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,154]DEBUG  5941[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=36, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,154]DEBUG  5941[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,154]DEBUG  5941[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 14:08:48,155]DEBUG  5942[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,155]DEBUG  5942[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:48,156]DEBUG  5943[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:48,156]DEBUG  5943[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2017-10-14 14:08:48,156]DEBUG  5943[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:48,156]DEBUG  5943[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:48,156]DEBUG  5943[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=34, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,156]DEBUG  5943[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=33, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,157]DEBUG  5944[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=37, maxRange=9.99999999E7, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,157]DEBUG  5944[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=35, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,157]DEBUG  5944[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=36, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,157]DEBUG  5944[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,157]DEBUG  5944[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 14:08:48,157]DEBUG  5944[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,158]DEBUG  5945[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:48,158]DEBUG  5945[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:48,158]DEBUG  5945[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2017-10-14 14:08:48,158]DEBUG  5945[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:48,158]DEBUG  5945[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:48,158]DEBUG  5945[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=34, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,158]DEBUG  5945[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=33, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,159]DEBUG  5946[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=37, maxRange=9.99999999E7, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,159]DEBUG  5946[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=35, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,159]DEBUG  5946[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=36, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,159]DEBUG  5946[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,159]DEBUG  5946[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 14:08:48,159]DEBUG  5946[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,160]DEBUG  5947[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:48,160]DEBUG  5947[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:48,160]DEBUG  5947[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2017-10-14 14:08:48,160]DEBUG  5947[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:48,160]DEBUG  5947[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:48,160]DEBUG  5947[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=34, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,161]DEBUG  5948[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=33, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,161]DEBUG  5948[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=37, maxRange=9.99999999E7, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,161]DEBUG  5948[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=35, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,161]DEBUG  5948[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=36, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,161]DEBUG  5948[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,161]DEBUG  5948[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 14:08:48,163]DEBUG  5950[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,163]DEBUG  5950[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:48,163]DEBUG  5950[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:48,163]DEBUG  5950[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2017-10-14 14:08:48,164]DEBUG  5951[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:48,164]DEBUG  5951[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:48,164]DEBUG  5951[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=34, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,164]DEBUG  5951[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=33, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,164]DEBUG  5951[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=37, maxRange=9.99999999E7, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,164]DEBUG  5951[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=35, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,164]DEBUG  5951[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=36, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,165]DEBUG  5952[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,165]DEBUG  5952[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 14:08:48,165]DEBUG  5952[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,165]DEBUG  5952[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:48,165]DEBUG  5952[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:48,166]DEBUG  5953[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2017-10-14 14:08:48,166]DEBUG  5953[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:48,166]DEBUG  5953[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:48,166]DEBUG  5953[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=34, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,166]DEBUG  5953[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=33, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,166]DEBUG  5953[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=37, maxRange=9.99999999E7, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,166]DEBUG  5953[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=35, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,167]DEBUG  5954[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=36, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,167]DEBUG  5954[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,167]DEBUG  5954[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 14:08:48,167]DEBUG  5954[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,167]DEBUG  5954[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:48,167]DEBUG  5954[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:48,168]DEBUG  5955[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2017-10-14 14:08:48,168]DEBUG  5955[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:48,168]DEBUG  5955[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:48,168]DEBUG  5955[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=34, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,168]DEBUG  5955[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=33, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,168]DEBUG  5955[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=37, maxRange=9.99999999E7, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,168]DEBUG  5955[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=35, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,169]DEBUG  5956[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=36, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,169]DEBUG  5956[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,169]DEBUG  5956[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 14:08:48,169]DEBUG  5956[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,169]DEBUG  5956[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@4418f61b testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@1a6633f, testMethod = testInsertOrUpdate@CustomerTypeDaoTest, testException = [null]]]
[2017-10-14 14:08:48,169]DEBUG  5956[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 14:08:48,169]DEBUG  5956[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@1ce7435f]
[2017-10-14 14:08:48,170]DEBUG  5957[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 14:08:48,201]DEBUG  5988[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 14:08:48,201]DEBUG  5988[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:48,201]DEBUG  5988[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@1ce7435f] after transaction
[2017-10-14 14:08:48,202]DEBUG  5989[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 14:08:48,202]DEBUG  5989[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 14:08:48,202]DEBUG  5989[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:48,203] INFO  5990[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@4418f61b testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@1a6633f, testMethod = testInsertOrUpdate@CustomerTypeDaoTest, testException = [null]]]
[2017-10-14 14:08:48,204]DEBUG  5991[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@4418f61b testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@1a6633f, testMethod = testInsertOrUpdate@CustomerTypeDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 14:08:48,205]DEBUG  5992[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2017-10-14 14:08:48,205]DEBUG  5992[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2017-10-14 14:08:48,206]DEBUG  5993[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@4418f61b testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@32f67bbb, testMethod = [null], testException = [null]]].
[2017-10-14 14:08:48,206]DEBUG  5993[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 14:08:48,206]DEBUG  5993[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 14:08:48,207]DEBUG  5994[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 14:08:48,207]DEBUG  5994[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 14:08:48,207]DEBUG  5994[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 14:08:48,207]DEBUG  5994[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 14:08:48,208]DEBUG  5995[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 14:08:48,208]DEBUG  5995[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 14:08:48,208]DEBUG  5995[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 14:08:48,208]DEBUG  5995[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 14:08:48,209]DEBUG  5996[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 14:08:48,209]DEBUG  5996[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 14:08:48,209]DEBUG  5996[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 14:08:48,209]DEBUG  5996[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 14:08:48,210]DEBUG  5997[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 14:08:48,210]DEBUG  5997[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 14:08:48,210]DEBUG  5997[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 14:08:48,210]DEBUG  5997[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 14:08:48,211]DEBUG  5998[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 14:08:48,211]DEBUG  5998[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 14:08:48,211]DEBUG  5998[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 14:08:48,212]DEBUG  5999[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 14:08:48,212]DEBUG  5999[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@32f67bbb]
[2017-10-14 14:08:48,213]DEBUG  6000[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testDelete' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:48,213]DEBUG  6000[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@4418f61b testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@32f67bbb, testMethod = testDelete@CustomerTypeDaoTest, testException = [null]]]
[2017-10-14 14:08:48,213]DEBUG  6000[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 14:08:48,215]DEBUG  6002[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testDelete]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:48,215]DEBUG  6002[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15079793282
[2017-10-14 14:08:48,215]DEBUG  6002[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@70307b0e] for Hibernate transaction
[2017-10-14 14:08:48,216]DEBUG  6003[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@70307b0e]
[2017-10-14 14:08:48,216]DEBUG  6003[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 14:08:48,216]DEBUG  6003[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 14:08:48,216]DEBUG  6003[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 14:08:48,217]DEBUG  6004[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@4418f61b testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@32f67bbb, testMethod = testDelete@CustomerTypeDaoTest, testException = [null]]]
[2017-10-14 14:08:48,217] INFO  6004[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (10): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@48ad0abe]; rollback [true]
[2017-10-14 14:08:48,217]DEBUG  6004[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:48,218]DEBUG  6005[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,218]DEBUG  6005[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-14 14:08:48,223]DEBUG  6010[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 38
[2017-10-14 14:08:48,223]DEBUG  6010[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,223]DEBUG  6010[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:48,223]DEBUG  6010[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,224]DEBUG  6011[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-14 14:08:48,224]DEBUG  6011[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 39
[2017-10-14 14:08:48,224]DEBUG  6011[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,225]DEBUG  6012[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:48,225]DEBUG  6012[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,225]DEBUG  6012[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-14 14:08:48,225]DEBUG  6012[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 40
[2017-10-14 14:08:48,225]DEBUG  6012[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,226]DEBUG  6013[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:48,226]DEBUG  6013[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,226]DEBUG  6013[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-14 14:08:48,226]DEBUG  6013[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 41
[2017-10-14 14:08:48,226]DEBUG  6013[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,228] INFO  6015[main] - org.hibernate.event.def.DefaultDeleteEventListener.deleteTransientEntity(DefaultDeleteEventListener.java:203) - handling transient entity in delete processing
[2017-10-14 14:08:48,228]DEBUG  6015[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:48,228]DEBUG  6015[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:48,228]DEBUG  6015[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:48,228]DEBUG  6015[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:48,228]DEBUG  6015[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:48,229]DEBUG  6016[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=41, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,229]DEBUG  6016[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=39, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,229]DEBUG  6016[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=40, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,229]DEBUG  6016[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=38, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,229]DEBUG  6016[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,229]DEBUG  6016[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select customerty0_.ID as ID2_, customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_ from CustomerTypes customerty0_ where customerty0_.TypeName=?
[2017-10-14 14:08:48,231]DEBUG  6018[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:48,231]DEBUG  6018[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.CustomerType#38]
[2017-10-14 14:08:48,231]DEBUG  6018[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:48,232]DEBUG  6019[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,232]DEBUG  6019[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:48,232]DEBUG  6019[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:48,233]DEBUG  6020[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:48,233]DEBUG  6020[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:48,233]DEBUG  6020[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:48,234]DEBUG  6021[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:48,234]DEBUG  6021[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=41, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,234]DEBUG  6021[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=39, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,234]DEBUG  6021[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=40, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,235]DEBUG  6022[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=38, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,235]DEBUG  6022[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,235]DEBUG  6022[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 14:08:48,236]DEBUG  6023[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,237]DEBUG  6024[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:48,237]DEBUG  6024[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:48,237]DEBUG  6024[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:48,237]DEBUG  6024[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:48,237]DEBUG  6024[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:48,237]DEBUG  6024[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=41, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,237]DEBUG  6024[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=39, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,238]DEBUG  6025[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=40, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,238]DEBUG  6025[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=38, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,238]DEBUG  6025[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,238]DEBUG  6025[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 14:08:48,238]DEBUG  6025[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,238]DEBUG  6025[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:48,239]DEBUG  6026[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:48,239]DEBUG  6026[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:48,239]DEBUG  6026[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:48,239]DEBUG  6026[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:48,239]DEBUG  6026[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=41, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,239]DEBUG  6026[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=39, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,239]DEBUG  6026[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=40, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,240]DEBUG  6027[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=38, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,240]DEBUG  6027[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,240]DEBUG  6027[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 14:08:48,240]DEBUG  6027[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,240]DEBUG  6027[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:48,240]DEBUG  6027[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:48,241]DEBUG  6028[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:48,241]DEBUG  6028[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:48,241]DEBUG  6028[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:48,241]DEBUG  6028[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=41, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,241]DEBUG  6028[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=39, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,241]DEBUG  6028[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=40, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,242]DEBUG  6029[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=38, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,242]DEBUG  6029[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,242]DEBUG  6029[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 14:08:48,242]DEBUG  6029[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,242]DEBUG  6029[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:48,243]DEBUG  6030[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:48,243]DEBUG  6030[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:48,243]DEBUG  6030[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:48,243]DEBUG  6030[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:48,243]DEBUG  6030[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=41, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,243]DEBUG  6030[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=39, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,243]DEBUG  6030[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=40, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,244]DEBUG  6031[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=38, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,244]DEBUG  6031[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,244]DEBUG  6031[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 14:08:48,244]DEBUG  6031[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,244]DEBUG  6031[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:48,244]DEBUG  6031[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:48,245]DEBUG  6032[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:48,245]DEBUG  6032[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:48,245]DEBUG  6032[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:48,245]DEBUG  6032[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=41, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,245]DEBUG  6032[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=39, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,245]DEBUG  6032[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=40, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,245]DEBUG  6032[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=38, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,246]DEBUG  6033[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,246]DEBUG  6033[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 14:08:48,246]DEBUG  6033[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,246]DEBUG  6033[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:48,246]DEBUG  6033[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:48,247]DEBUG  6034[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:48,247]DEBUG  6034[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:48,247]DEBUG  6034[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:48,247]DEBUG  6034[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=41, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,247]DEBUG  6034[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=39, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,247]DEBUG  6034[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=40, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,247]DEBUG  6034[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=38, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,247]DEBUG  6034[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,248]DEBUG  6035[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 14:08:48,248]DEBUG  6035[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,248]DEBUG  6035[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:48,248]DEBUG  6035[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:48,248]DEBUG  6035[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:48,248]DEBUG  6035[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:48,249]DEBUG  6036[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:48,249]DEBUG  6036[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=41, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,249]DEBUG  6036[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=39, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,249]DEBUG  6036[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=40, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,249]DEBUG  6036[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=38, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,249]DEBUG  6036[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,249]DEBUG  6036[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 14:08:48,250]DEBUG  6037[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,250]DEBUG  6037[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:48,250]DEBUG  6037[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:48,250]DEBUG  6037[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:48,250]DEBUG  6037[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:48,250]DEBUG  6037[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:48,250]DEBUG  6037[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=41, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,251]DEBUG  6038[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=39, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,251]DEBUG  6038[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=40, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,251]DEBUG  6038[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=38, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,251]DEBUG  6038[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,251]DEBUG  6038[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 14:08:48,251]DEBUG  6038[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,252]DEBUG  6039[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@4418f61b testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@32f67bbb, testMethod = testDelete@CustomerTypeDaoTest, testException = [null]]]
[2017-10-14 14:08:48,252]DEBUG  6039[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 14:08:48,252]DEBUG  6039[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@70307b0e]
[2017-10-14 14:08:48,252]DEBUG  6039[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 14:08:48,284]DEBUG  6071[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 14:08:48,284]DEBUG  6071[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:48,285]DEBUG  6072[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@70307b0e] after transaction
[2017-10-14 14:08:48,285]DEBUG  6072[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 14:08:48,285]DEBUG  6072[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 14:08:48,286]DEBUG  6073[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:48,286] INFO  6073[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@4418f61b testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@32f67bbb, testMethod = testDelete@CustomerTypeDaoTest, testException = [null]]]
[2017-10-14 14:08:48,287]DEBUG  6074[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@4418f61b testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@32f67bbb, testMethod = testDelete@CustomerTypeDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 14:08:48,288]DEBUG  6075[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2017-10-14 14:08:48,288]DEBUG  6075[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2017-10-14 14:08:48,289]DEBUG  6076[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@4418f61b testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@7debbdeb, testMethod = [null], testException = [null]]].
[2017-10-14 14:08:48,289]DEBUG  6076[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 14:08:48,290]DEBUG  6077[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 14:08:48,290]DEBUG  6077[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 14:08:48,290]DEBUG  6077[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 14:08:48,290]DEBUG  6077[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 14:08:48,291]DEBUG  6078[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 14:08:48,291]DEBUG  6078[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 14:08:48,291]DEBUG  6078[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 14:08:48,291]DEBUG  6078[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 14:08:48,292]DEBUG  6079[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 14:08:48,292]DEBUG  6079[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 14:08:48,292]DEBUG  6079[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 14:08:48,292]DEBUG  6079[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 14:08:48,293]DEBUG  6080[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 14:08:48,293]DEBUG  6080[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 14:08:48,293]DEBUG  6080[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 14:08:48,293]DEBUG  6080[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 14:08:48,294]DEBUG  6081[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 14:08:48,294]DEBUG  6081[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 14:08:48,294]DEBUG  6081[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 14:08:48,294]DEBUG  6081[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 14:08:48,295]DEBUG  6082[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 14:08:48,295]DEBUG  6082[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@7debbdeb]
[2017-10-14 14:08:48,296]DEBUG  6083[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testContextFile' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:48,296]DEBUG  6083[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@4418f61b testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@7debbdeb, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2017-10-14 14:08:48,296]DEBUG  6083[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 14:08:48,298]DEBUG  6085[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testContextFile]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:48,298]DEBUG  6085[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15079793282
[2017-10-14 14:08:48,298]DEBUG  6085[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@71cc2b7a] for Hibernate transaction
[2017-10-14 14:08:48,299]DEBUG  6086[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@71cc2b7a]
[2017-10-14 14:08:48,299]DEBUG  6086[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 14:08:48,299]DEBUG  6086[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 14:08:48,299]DEBUG  6086[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 14:08:48,300]DEBUG  6087[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@4418f61b testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@7debbdeb, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2017-10-14 14:08:48,300] INFO  6087[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (11): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@48ad0abe]; rollback [true]
[2017-10-14 14:08:48,300]DEBUG  6087[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:48,301]DEBUG  6088[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,301]DEBUG  6088[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-14 14:08:48,302]DEBUG  6089[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 42
[2017-10-14 14:08:48,302]DEBUG  6089[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,303]DEBUG  6090[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:48,303]DEBUG  6090[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,303]DEBUG  6090[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-14 14:08:48,304]DEBUG  6091[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 43
[2017-10-14 14:08:48,305]DEBUG  6092[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,305]DEBUG  6092[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:48,306]DEBUG  6093[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,306]DEBUG  6093[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-14 14:08:48,307]DEBUG  6094[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 44
[2017-10-14 14:08:48,307]DEBUG  6094[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,308]DEBUG  6095[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:48,308]DEBUG  6095[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,308]DEBUG  6095[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-14 14:08:48,309]DEBUG  6096[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 45
[2017-10-14 14:08:48,309]DEBUG  6096[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,310]DEBUG  6097[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:48,310]DEBUG  6097[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:48,311]DEBUG  6098[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:48,311]DEBUG  6098[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:48,311]DEBUG  6098[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:48,312]DEBUG  6099[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=42, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,312]DEBUG  6099[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=45, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,312]DEBUG  6099[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=43, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,312]DEBUG  6099[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=44, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,313]DEBUG  6100[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,313]DEBUG  6100[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 14:08:48,314]DEBUG  6101[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,314]DEBUG  6101[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:48,314]DEBUG  6101[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:48,315]DEBUG  6102[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:48,315]DEBUG  6102[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:48,315]DEBUG  6102[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:48,316]DEBUG  6103[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=42, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,316]DEBUG  6103[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=45, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,316]DEBUG  6103[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=43, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,317]DEBUG  6104[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=44, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,317]DEBUG  6104[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,317]DEBUG  6104[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 14:08:48,318]DEBUG  6105[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,318]DEBUG  6105[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:48,318]DEBUG  6105[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:48,318]DEBUG  6105[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:48,318]DEBUG  6105[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:48,319]DEBUG  6106[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:48,319]DEBUG  6106[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=42, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,319]DEBUG  6106[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=45, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,319]DEBUG  6106[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=43, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,319]DEBUG  6106[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=44, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,319]DEBUG  6106[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,319]DEBUG  6106[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 14:08:48,320]DEBUG  6107[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,320]DEBUG  6107[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:48,320]DEBUG  6107[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:48,320]DEBUG  6107[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:48,320]DEBUG  6107[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:48,320]DEBUG  6107[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:48,320]DEBUG  6107[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=42, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,320]DEBUG  6107[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=45, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,321]DEBUG  6108[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=43, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,321]DEBUG  6108[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=44, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,321]DEBUG  6108[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,321]DEBUG  6108[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 14:08:48,321]DEBUG  6108[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,321]DEBUG  6108[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:48,322]DEBUG  6109[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:48,322]DEBUG  6109[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:48,322]DEBUG  6109[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:48,322]DEBUG  6109[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:48,322]DEBUG  6109[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=42, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,322]DEBUG  6109[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=45, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,322]DEBUG  6109[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=43, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,322]DEBUG  6109[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=44, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,323]DEBUG  6110[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,323]DEBUG  6110[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 14:08:48,323]DEBUG  6110[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,323]DEBUG  6110[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:48,323]DEBUG  6110[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:48,323]DEBUG  6110[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:48,324]DEBUG  6111[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:48,324]DEBUG  6111[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:48,324]DEBUG  6111[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=42, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,324]DEBUG  6111[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=45, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,324]DEBUG  6111[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=43, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,324]DEBUG  6111[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=44, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,324]DEBUG  6111[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,324]DEBUG  6111[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 14:08:48,325]DEBUG  6112[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,325]DEBUG  6112[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:48,325]DEBUG  6112[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:48,325]DEBUG  6112[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:48,325]DEBUG  6112[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:48,325]DEBUG  6112[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:48,325]DEBUG  6112[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=42, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,326]DEBUG  6113[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=45, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,326]DEBUG  6113[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=43, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,326]DEBUG  6113[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=44, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,326]DEBUG  6113[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,326]DEBUG  6113[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 14:08:48,326]DEBUG  6113[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,327]DEBUG  6114[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:48,327]DEBUG  6114[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:48,327]DEBUG  6114[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:48,327]DEBUG  6114[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:48,327]DEBUG  6114[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:48,327]DEBUG  6114[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=42, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,327]DEBUG  6114[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=45, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,327]DEBUG  6114[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=43, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,328]DEBUG  6115[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=44, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,328]DEBUG  6115[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,328]DEBUG  6115[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 14:08:48,328]DEBUG  6115[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,328]DEBUG  6115[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:48,328]DEBUG  6115[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:48,329]DEBUG  6116[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:48,329]DEBUG  6116[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:48,329]DEBUG  6116[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:48,329]DEBUG  6116[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=42, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,329]DEBUG  6116[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=45, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,329]DEBUG  6116[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=43, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,329]DEBUG  6116[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=44, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 14:08:48,329]DEBUG  6116[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,329]DEBUG  6116[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 14:08:48,330]DEBUG  6117[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,330]DEBUG  6117[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@4418f61b testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@7debbdeb, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2017-10-14 14:08:48,330]DEBUG  6117[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 14:08:48,330]DEBUG  6117[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@71cc2b7a]
[2017-10-14 14:08:48,330]DEBUG  6117[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 14:08:48,359]DEBUG  6146[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 14:08:48,360]DEBUG  6147[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:48,360]DEBUG  6147[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@71cc2b7a] after transaction
[2017-10-14 14:08:48,360]DEBUG  6147[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 14:08:48,360]DEBUG  6147[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 14:08:48,361]DEBUG  6148[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:48,361] INFO  6148[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@4418f61b testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@7debbdeb, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2017-10-14 14:08:48,362]DEBUG  6149[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@4418f61b testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@7debbdeb, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 14:08:48,363]DEBUG  6150[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestClass(DirtiesContextTestExecutionListener.java:113) - After test class: context [[TestContext@4418f61b testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = [null], testMethod = [null], testException = [null]]], dirtiesContext [false].
[2017-10-14 14:08:48,367]DEBUG  6154[main] - org.springframework.test.context.junit4.SpringJUnit4ClassRunner.<init>(SpringJUnit4ClassRunner.java:106) - SpringJUnit4ClassRunner constructor called with [class com.softserveinc.edu.oms.persistence.dao.RoleDAOTest].
[2017-10-14 14:08:48,367] INFO  6154[main] - org.springframework.test.context.TestContextManager.retrieveTestExecutionListeners(TestContextManager.java:185) - @TestExecutionListeners is not present for class [class com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]: using defaults.
[2017-10-14 14:08:48,368]DEBUG  6155[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2017-10-14 14:08:48,368]DEBUG  6155[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2017-10-14 14:08:48,378]DEBUG  6165[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2017-10-14 14:08:48,378]DEBUG  6165[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2017-10-14 14:08:48,378]DEBUG  6165[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2017-10-14 14:08:48,379]DEBUG  6166[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2017-10-14 14:08:48,382]DEBUG  6169[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2017-10-14 14:08:48,382]DEBUG  6169[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2017-10-14 14:08:48,382]DEBUG  6169[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@7e062eda testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@47ee2ad9, testMethod = [null], testException = [null]]].
[2017-10-14 14:08:48,388]DEBUG  6175[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 14:08:48,388]DEBUG  6175[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 14:08:48,389]DEBUG  6176[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 14:08:48,389]DEBUG  6176[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 14:08:48,389]DEBUG  6176[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 14:08:48,389]DEBUG  6176[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 14:08:48,389]DEBUG  6176[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 14:08:48,389]DEBUG  6176[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 14:08:48,389]DEBUG  6176[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 14:08:48,389]DEBUG  6176[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]: AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 14:08:48,390]DEBUG  6177[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 14:08:48,390]DEBUG  6177[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 14:08:48,390]DEBUG  6177[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' to bean named 'customerTypeDao'
[2017-10-14 14:08:48,390]DEBUG  6177[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 14:08:48,391]DEBUG  6178[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 14:08:48,391]DEBUG  6178[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' to bean named 'dimensionDao'
[2017-10-14 14:08:48,391]DEBUG  6178[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 14:08:48,391]DEBUG  6178[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 14:08:48,391]DEBUG  6178[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' to bean named 'orderDao'
[2017-10-14 14:08:48,391]DEBUG  6178[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 14:08:48,392]DEBUG  6179[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 14:08:48,392]DEBUG  6179[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' to bean named 'orderItemDao'
[2017-10-14 14:08:48,392]DEBUG  6179[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 14:08:48,392]DEBUG  6179[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 14:08:48,392]DEBUG  6179[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' to bean named 'orderStatusDao'
[2017-10-14 14:08:48,392]DEBUG  6179[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 14:08:48,393]DEBUG  6180[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 14:08:48,393]DEBUG  6180[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' to bean named 'productDao'
[2017-10-14 14:08:48,393]DEBUG  6180[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 14:08:48,393]DEBUG  6180[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 14:08:48,393]DEBUG  6180[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' to bean named 'regionDao'
[2017-10-14 14:08:48,394]DEBUG  6181[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 14:08:48,394]DEBUG  6181[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 14:08:48,394]DEBUG  6181[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' to bean named 'roleDao'
[2017-10-14 14:08:48,394]DEBUG  6181[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 14:08:48,394]DEBUG  6181[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 14:08:48,395]DEBUG  6182[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' to bean named 'userDao'
[2017-10-14 14:08:48,395]DEBUG  6182[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 14:08:48,395]DEBUG  6182[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 14:08:48,395]DEBUG  6182[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' to bean named 'sessionFactory'
[2017-10-14 14:08:48,396]DEBUG  6183[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 14:08:48,416]DEBUG  6203[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByID' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:48,417]DEBUG  6204[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 14:08:48,417]DEBUG  6204[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@47ee2ad9]
[2017-10-14 14:08:48,418]DEBUG  6205[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RoleDAOTest.testFindByID()
[2017-10-14 14:08:48,418]DEBUG  6205[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByCriterions' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:48,418]DEBUG  6205[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RoleDAOTest.testFindByCriterions()
[2017-10-14 14:08:48,418]DEBUG  6205[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByOneOfCriterions' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:48,418]DEBUG  6205[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RoleDAOTest.testFindByOneOfCriterions()
[2017-10-14 14:08:48,419]DEBUG  6206[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testInsertOrUpdate' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:48,419]DEBUG  6206[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RoleDAOTest.testInsertOrUpdate()
[2017-10-14 14:08:48,419]DEBUG  6206[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testDelete' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:48,419]DEBUG  6206[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RoleDAOTest.testDelete()
[2017-10-14 14:08:48,419]DEBUG  6206[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'setUp' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:48,420]DEBUG  6207[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RoleDAOTest.setUp()
[2017-10-14 14:08:48,420]DEBUG  6207[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'tearDown' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:48,420]DEBUG  6207[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RoleDAOTest.tearDown() throws java.lang.Exception
[2017-10-14 14:08:48,420]DEBUG  6207[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetAdminRole' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:48,420]DEBUG  6207[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RoleDAOTest.testGetAdminRole()
[2017-10-14 14:08:48,421]DEBUG  6208[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetCustomerRole' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:48,421]DEBUG  6208[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RoleDAOTest.testGetCustomerRole()
[2017-10-14 14:08:48,421]DEBUG  6208[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetMerchandiserRole' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:48,421]DEBUG  6208[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RoleDAOTest.testGetMerchandiserRole()
[2017-10-14 14:08:48,421]DEBUG  6208[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetSupervisorRole' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:48,421]DEBUG  6208[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RoleDAOTest.testGetSupervisorRole()
[2017-10-14 14:08:48,422]DEBUG  6209[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByRoleName' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:48,422]DEBUG  6209[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RoleDAOTest.testFindByRoleName()
[2017-10-14 14:08:48,422]DEBUG  6209[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testContainsRole' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:48,422]DEBUG  6209[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RoleDAOTest.testContainsRole()
[2017-10-14 14:08:48,422]DEBUG  6209[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByCriterionsSorting' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:48,422]DEBUG  6209[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RoleDAOTest.testFindByCriterionsSorting()
[2017-10-14 14:08:48,423]DEBUG  6210[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByOneOfCriterionsSorting' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:48,423]DEBUG  6210[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RoleDAOTest.testFindByOneOfCriterionsSorting()
[2017-10-14 14:08:48,423]DEBUG  6210[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByRoleNameWithUserSelectWayConditions' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:48,423]DEBUG  6210[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RoleDAOTest.testFindByRoleNameWithUserSelectWayConditions()
[2017-10-14 14:08:48,423]DEBUG  6210[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByRoleNameWithUserSelectWayConditionsSorting' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:48,424]DEBUG  6211[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RoleDAOTest.testFindByRoleNameWithUserSelectWayConditionsSorting()
[2017-10-14 14:08:48,424]DEBUG  6211[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanDB()
[2017-10-14 14:08:48,424]DEBUG  6211[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanCustomerType()
[2017-10-14 14:08:48,424]DEBUG  6211[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testContextFile' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:48,424]DEBUG  6211[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.testContextFile()
[2017-10-14 14:08:48,424]DEBUG  6211[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanUser()
[2017-10-14 14:08:48,425]DEBUG  6212[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanRole()
[2017-10-14 14:08:48,425]DEBUG  6212[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanRegion()
[2017-10-14 14:08:48,425]DEBUG  6212[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanProduct()
[2017-10-14 14:08:48,425]DEBUG  6212[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrderStatus()
[2017-10-14 14:08:48,425]DEBUG  6212[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrderItem()
[2017-10-14 14:08:48,425]DEBUG  6212[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrder()
[2017-10-14 14:08:48,425]DEBUG  6212[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanDimension()
[2017-10-14 14:08:48,426]DEBUG  6213[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:749) - Found finalize() method - using NO_OVERRIDE
[2017-10-14 14:08:48,426]DEBUG  6213[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:761) - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
[2017-10-14 14:08:48,426]DEBUG  6213[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
[2017-10-14 14:08:48,426]DEBUG  6213[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:766) - Found 'hashCode' method: public native int java.lang.Object.hashCode()
[2017-10-14 14:08:48,426]DEBUG  6213[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
[2017-10-14 14:08:48,426]DEBUG  6213[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
[2017-10-14 14:08:48,426]DEBUG  6213[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
[2017-10-14 14:08:48,426]DEBUG  6213[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2017-10-14 14:08:48,427]DEBUG  6214[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2017-10-14 14:08:48,427]DEBUG  6214[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
[2017-10-14 14:08:48,427]DEBUG  6214[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
[2017-10-14 14:08:48,427]DEBUG  6214[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
[2017-10-14 14:08:48,427]DEBUG  6214[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
[2017-10-14 14:08:48,427]DEBUG  6214[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
[2017-10-14 14:08:48,427]DEBUG  6214[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
[2017-10-14 14:08:48,427]DEBUG  6214[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
[2017-10-14 14:08:48,427]DEBUG  6214[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
[2017-10-14 14:08:48,428]DEBUG  6215[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
[2017-10-14 14:08:48,428]DEBUG  6215[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
[2017-10-14 14:08:48,428]DEBUG  6215[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
[2017-10-14 14:08:48,428]DEBUG  6215[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
[2017-10-14 14:08:48,428]DEBUG  6215[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
[2017-10-14 14:08:48,428]DEBUG  6215[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
[2017-10-14 14:08:48,428]DEBUG  6215[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2017-10-14 14:08:48,429]DEBUG  6216[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
[2017-10-14 14:08:48,429]DEBUG  6216[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
[2017-10-14 14:08:48,429]DEBUG  6216[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
[2017-10-14 14:08:48,429]DEBUG  6216[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
[2017-10-14 14:08:48,443]DEBUG  6230[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByID' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:48,443]DEBUG  6230[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@7e062eda testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@47ee2ad9, testMethod = testFindByID@RoleDAOTest, testException = [null]]]
[2017-10-14 14:08:48,443]DEBUG  6230[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.retrieveConfigurationAttributes(TransactionalTestExecutionListener.java:466) - Retrieved @TransactionConfiguration [@org.springframework.test.context.transaction.TransactionConfiguration(transactionManager=transactionManager, defaultRollback=true)] for test class [class com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2017-10-14 14:08:48,443]DEBUG  6230[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.retrieveConfigurationAttributes(TransactionalTestExecutionListener.java:483) - Retrieved TransactionConfigurationAttributes [[TransactionConfigurationAttributes@272eb9fe transactionManagerName = 'transactionManager', defaultRollback = true]] for class [class com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2017-10-14 14:08:48,443]DEBUG  6230[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 14:08:48,444]DEBUG  6231[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByID]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:48,444]DEBUG  6231[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15079793284
[2017-10-14 14:08:48,444]DEBUG  6231[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@732d0fda] for Hibernate transaction
[2017-10-14 14:08:48,444]DEBUG  6231[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@732d0fda]
[2017-10-14 14:08:48,445]DEBUG  6232[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 14:08:48,445]DEBUG  6232[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 14:08:48,445]DEBUG  6232[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 14:08:48,445]DEBUG  6232[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7e062eda testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@47ee2ad9, testMethod = testFindByID@RoleDAOTest, testException = [null]]]
[2017-10-14 14:08:48,445] INFO  6232[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (1): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@48ad0abe]; rollback [true]
[2017-10-14 14:08:48,445]DEBUG  6232[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:48,446]DEBUG  6233[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,446]DEBUG  6233[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 14:08:48,447]DEBUG  6234[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 1
[2017-10-14 14:08:48,447]DEBUG  6234[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,447]DEBUG  6234[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:48,448]DEBUG  6235[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,448]DEBUG  6235[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 14:08:48,448]DEBUG  6235[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 2
[2017-10-14 14:08:48,448]DEBUG  6235[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,448]DEBUG  6235[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:48,449]DEBUG  6236[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,449]DEBUG  6236[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 14:08:48,449]DEBUG  6236[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 3
[2017-10-14 14:08:48,449]DEBUG  6236[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,449]DEBUG  6236[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:48,450]DEBUG  6237[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,450]DEBUG  6237[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 14:08:48,450]DEBUG  6237[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 4
[2017-10-14 14:08:48,450]DEBUG  6237[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,451]DEBUG  6238[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:48,451]DEBUG  6238[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:48,451]DEBUG  6238[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:48,451]DEBUG  6238[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:48,451]DEBUG  6238[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:48,452]DEBUG  6239[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=1, roleName=Administrator}
[2017-10-14 14:08:48,452]DEBUG  6239[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=2, roleName=Supervisor}
[2017-10-14 14:08:48,452]DEBUG  6239[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=3, roleName=Customer}
[2017-10-14 14:08:48,452]DEBUG  6239[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=4, roleName=Merchandiser}
[2017-10-14 14:08:48,452]DEBUG  6239[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,453]DEBUG  6240[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_
[2017-10-14 14:08:48,453]DEBUG  6240[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:48,454]DEBUG  6241[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#1]
[2017-10-14 14:08:48,454]DEBUG  6241[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#2]
[2017-10-14 14:08:48,454]DEBUG  6241[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#3]
[2017-10-14 14:08:48,454]DEBUG  6241[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#4]
[2017-10-14 14:08:48,454]DEBUG  6241[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:48,454]DEBUG  6241[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,454]DEBUG  6241[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:48,455]DEBUG  6242[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:48,455]DEBUG  6242[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:48,455]DEBUG  6242[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:48,456]DEBUG  6243[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:48,456]DEBUG  6243[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:48,456]DEBUG  6243[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=1, roleName=Administrator}
[2017-10-14 14:08:48,456]DEBUG  6243[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=2, roleName=Supervisor}
[2017-10-14 14:08:48,456]DEBUG  6243[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=3, roleName=Customer}
[2017-10-14 14:08:48,457]DEBUG  6244[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=4, roleName=Merchandiser}
[2017-10-14 14:08:48,457]DEBUG  6244[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,457]DEBUG  6244[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 14:08:48,457]DEBUG  6244[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,457]DEBUG  6244[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7e062eda testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@47ee2ad9, testMethod = testFindByID@RoleDAOTest, testException = [null]]]
[2017-10-14 14:08:48,458]DEBUG  6245[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 14:08:48,458]DEBUG  6245[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@732d0fda]
[2017-10-14 14:08:48,458]DEBUG  6245[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 14:08:48,493]DEBUG  6280[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 14:08:48,493]DEBUG  6280[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:48,494]DEBUG  6281[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@732d0fda] after transaction
[2017-10-14 14:08:48,494]DEBUG  6281[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 14:08:48,494]DEBUG  6281[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 14:08:48,494]DEBUG  6281[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:48,495] INFO  6282[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@7e062eda testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@47ee2ad9, testMethod = testFindByID@RoleDAOTest, testException = [null]]]
[2017-10-14 14:08:48,496]DEBUG  6283[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@7e062eda testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@47ee2ad9, testMethod = testFindByID@RoleDAOTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 14:08:48,497]DEBUG  6284[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2017-10-14 14:08:48,497]DEBUG  6284[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2017-10-14 14:08:48,498]DEBUG  6285[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@7e062eda testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@494c806e, testMethod = [null], testException = [null]]].
[2017-10-14 14:08:48,498]DEBUG  6285[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 14:08:48,499]DEBUG  6286[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 14:08:48,499]DEBUG  6286[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 14:08:48,499]DEBUG  6286[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 14:08:48,499]DEBUG  6286[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 14:08:48,500]DEBUG  6287[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 14:08:48,500]DEBUG  6287[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 14:08:48,500]DEBUG  6287[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 14:08:48,500]DEBUG  6287[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 14:08:48,501]DEBUG  6288[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 14:08:48,501]DEBUG  6288[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 14:08:48,501]DEBUG  6288[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 14:08:48,501]DEBUG  6288[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 14:08:48,502]DEBUG  6289[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 14:08:48,502]DEBUG  6289[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 14:08:48,502]DEBUG  6289[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 14:08:48,502]DEBUG  6289[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 14:08:48,503]DEBUG  6290[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 14:08:48,503]DEBUG  6290[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 14:08:48,503]DEBUG  6290[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 14:08:48,503]DEBUG  6290[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 14:08:48,504]DEBUG  6291[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 14:08:48,504]DEBUG  6291[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@494c806e]
[2017-10-14 14:08:48,505]DEBUG  6292[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByCriterions' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:48,505]DEBUG  6292[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@7e062eda testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@494c806e, testMethod = testFindByCriterions@RoleDAOTest, testException = [null]]]
[2017-10-14 14:08:48,506]DEBUG  6293[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 14:08:48,507]DEBUG  6294[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByCriterions]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:48,508]DEBUG  6295[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15079793285
[2017-10-14 14:08:48,508]DEBUG  6295[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@4c3713b] for Hibernate transaction
[2017-10-14 14:08:48,508]DEBUG  6295[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@4c3713b]
[2017-10-14 14:08:48,508]DEBUG  6295[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 14:08:48,509]DEBUG  6296[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 14:08:48,509]DEBUG  6296[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 14:08:48,509]DEBUG  6296[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7e062eda testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@494c806e, testMethod = testFindByCriterions@RoleDAOTest, testException = [null]]]
[2017-10-14 14:08:48,509] INFO  6296[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (2): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@48ad0abe]; rollback [true]
[2017-10-14 14:08:48,510]DEBUG  6297[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:48,510]DEBUG  6297[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,510]DEBUG  6297[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 14:08:48,511]DEBUG  6298[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 5
[2017-10-14 14:08:48,512]DEBUG  6299[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,512]DEBUG  6299[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:48,513]DEBUG  6300[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,513]DEBUG  6300[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 14:08:48,514]DEBUG  6301[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 6
[2017-10-14 14:08:48,514]DEBUG  6301[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,514]DEBUG  6301[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:48,515]DEBUG  6302[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,515]DEBUG  6302[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 14:08:48,516]DEBUG  6303[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 7
[2017-10-14 14:08:48,516]DEBUG  6303[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,517]DEBUG  6304[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:48,517]DEBUG  6304[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,517]DEBUG  6304[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 14:08:48,518]DEBUG  6305[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 8
[2017-10-14 14:08:48,518]DEBUG  6305[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,519]DEBUG  6306[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:48,519]DEBUG  6306[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:48,519]DEBUG  6306[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:48,519]DEBUG  6306[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:48,519]DEBUG  6306[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:48,519]DEBUG  6306[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=5, roleName=Administrator}
[2017-10-14 14:08:48,519]DEBUG  6306[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=6, roleName=Supervisor}
[2017-10-14 14:08:48,520]DEBUG  6307[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=7, roleName=Customer}
[2017-10-14 14:08:48,520]DEBUG  6307[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=8, roleName=Merchandiser}
[2017-10-14 14:08:48,520]DEBUG  6307[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,520]DEBUG  6307[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=? and this_.ID<=?
[2017-10-14 14:08:48,520]DEBUG  6307[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:48,521]DEBUG  6308[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:48,521]DEBUG  6308[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,521]DEBUG  6308[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:48,521]DEBUG  6308[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:48,521]DEBUG  6308[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:48,521]DEBUG  6308[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:48,521]DEBUG  6308[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:48,522]DEBUG  6309[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:48,522]DEBUG  6309[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=5, roleName=Administrator}
[2017-10-14 14:08:48,522]DEBUG  6309[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=6, roleName=Supervisor}
[2017-10-14 14:08:48,522]DEBUG  6309[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=7, roleName=Customer}
[2017-10-14 14:08:48,522]DEBUG  6309[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=8, roleName=Merchandiser}
[2017-10-14 14:08:48,522]DEBUG  6309[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,522]DEBUG  6309[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 14:08:48,523]DEBUG  6310[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,523]DEBUG  6310[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7e062eda testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@494c806e, testMethod = testFindByCriterions@RoleDAOTest, testException = [null]]]
[2017-10-14 14:08:48,523]DEBUG  6310[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 14:08:48,523]DEBUG  6310[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@4c3713b]
[2017-10-14 14:08:48,523]DEBUG  6310[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 14:08:48,559]DEBUG  6346[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 14:08:48,560]DEBUG  6347[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:48,560]DEBUG  6347[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@4c3713b] after transaction
[2017-10-14 14:08:48,560]DEBUG  6347[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 14:08:48,560]DEBUG  6347[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 14:08:48,561]DEBUG  6348[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:48,561] INFO  6348[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@7e062eda testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@494c806e, testMethod = testFindByCriterions@RoleDAOTest, testException = [null]]]
[2017-10-14 14:08:48,563]DEBUG  6350[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@7e062eda testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@494c806e, testMethod = testFindByCriterions@RoleDAOTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 14:08:48,563]DEBUG  6350[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2017-10-14 14:08:48,564]DEBUG  6351[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2017-10-14 14:08:48,564]DEBUG  6351[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@7e062eda testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@12f86513, testMethod = [null], testException = [null]]].
[2017-10-14 14:08:48,565]DEBUG  6352[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 14:08:48,565]DEBUG  6352[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 14:08:48,566]DEBUG  6353[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 14:08:48,566]DEBUG  6353[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 14:08:48,566]DEBUG  6353[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 14:08:48,566]DEBUG  6353[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 14:08:48,567]DEBUG  6354[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 14:08:48,567]DEBUG  6354[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 14:08:48,567]DEBUG  6354[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 14:08:48,567]DEBUG  6354[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 14:08:48,567]DEBUG  6354[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 14:08:48,568]DEBUG  6355[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 14:08:48,568]DEBUG  6355[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 14:08:48,568]DEBUG  6355[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 14:08:48,568]DEBUG  6355[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 14:08:48,569]DEBUG  6356[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 14:08:48,569]DEBUG  6356[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 14:08:48,569]DEBUG  6356[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 14:08:48,569]DEBUG  6356[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 14:08:48,570]DEBUG  6357[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 14:08:48,570]DEBUG  6357[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 14:08:48,570]DEBUG  6357[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 14:08:48,571]DEBUG  6358[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@12f86513]
[2017-10-14 14:08:48,571]DEBUG  6358[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByOneOfCriterions' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:48,572]DEBUG  6359[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@7e062eda testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@12f86513, testMethod = testFindByOneOfCriterions@RoleDAOTest, testException = [null]]]
[2017-10-14 14:08:48,572]DEBUG  6359[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 14:08:48,574]DEBUG  6361[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByOneOfCriterions]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:48,574]DEBUG  6361[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15079793285
[2017-10-14 14:08:48,574]DEBUG  6361[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@e13b4f6] for Hibernate transaction
[2017-10-14 14:08:48,574]DEBUG  6361[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@e13b4f6]
[2017-10-14 14:08:48,575]DEBUG  6362[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 14:08:48,575]DEBUG  6362[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 14:08:48,575]DEBUG  6362[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 14:08:48,575]DEBUG  6362[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7e062eda testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@12f86513, testMethod = testFindByOneOfCriterions@RoleDAOTest, testException = [null]]]
[2017-10-14 14:08:48,576] INFO  6363[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (3): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@48ad0abe]; rollback [true]
[2017-10-14 14:08:48,576]DEBUG  6363[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:48,576]DEBUG  6363[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,577]DEBUG  6364[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 14:08:48,578]DEBUG  6365[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 9
[2017-10-14 14:08:48,578]DEBUG  6365[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,578]DEBUG  6365[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:48,578]DEBUG  6365[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,578]DEBUG  6365[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 14:08:48,579]DEBUG  6366[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 10
[2017-10-14 14:08:48,579]DEBUG  6366[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,579]DEBUG  6366[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:48,579]DEBUG  6366[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,579]DEBUG  6366[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 14:08:48,580]DEBUG  6367[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 11
[2017-10-14 14:08:48,580]DEBUG  6367[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,580]DEBUG  6367[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:48,580]DEBUG  6367[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,580]DEBUG  6367[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 14:08:48,581]DEBUG  6368[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 12
[2017-10-14 14:08:48,581]DEBUG  6368[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,584]DEBUG  6371[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:48,584]DEBUG  6371[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:48,584]DEBUG  6371[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:48,585]DEBUG  6372[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:48,585]DEBUG  6372[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:48,585]DEBUG  6372[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=9, roleName=Administrator}
[2017-10-14 14:08:48,585]DEBUG  6372[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=10, roleName=Supervisor}
[2017-10-14 14:08:48,586]DEBUG  6373[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=11, roleName=Customer}
[2017-10-14 14:08:48,586]DEBUG  6373[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=12, roleName=Merchandiser}
[2017-10-14 14:08:48,587]DEBUG  6374[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,587]DEBUG  6374[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where (this_.RoleName like ? or this_.ID<=?)
[2017-10-14 14:08:48,588]DEBUG  6375[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:48,589]DEBUG  6376[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#9]
[2017-10-14 14:08:48,589]DEBUG  6376[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#10]
[2017-10-14 14:08:48,589]DEBUG  6376[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#11]
[2017-10-14 14:08:48,590]DEBUG  6377[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#12]
[2017-10-14 14:08:48,590]DEBUG  6377[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:48,590]DEBUG  6377[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,591]DEBUG  6378[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:48,591]DEBUG  6378[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:48,591]DEBUG  6378[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:48,592]DEBUG  6379[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:48,592]DEBUG  6379[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:48,592]DEBUG  6379[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:48,593]DEBUG  6380[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=9, roleName=Administrator}
[2017-10-14 14:08:48,593]DEBUG  6380[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=10, roleName=Supervisor}
[2017-10-14 14:08:48,594]DEBUG  6381[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=11, roleName=Customer}
[2017-10-14 14:08:48,594]DEBUG  6381[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=12, roleName=Merchandiser}
[2017-10-14 14:08:48,594]DEBUG  6381[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,595]DEBUG  6382[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 14:08:48,595]DEBUG  6382[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,596]DEBUG  6383[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7e062eda testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@12f86513, testMethod = testFindByOneOfCriterions@RoleDAOTest, testException = [null]]]
[2017-10-14 14:08:48,596]DEBUG  6383[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 14:08:48,596]DEBUG  6383[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@e13b4f6]
[2017-10-14 14:08:48,596]DEBUG  6383[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 14:08:48,626]DEBUG  6413[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 14:08:48,626]DEBUG  6413[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:48,626]DEBUG  6413[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@e13b4f6] after transaction
[2017-10-14 14:08:48,626]DEBUG  6413[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 14:08:48,626]DEBUG  6413[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 14:08:48,627]DEBUG  6414[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:48,627] INFO  6414[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@7e062eda testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@12f86513, testMethod = testFindByOneOfCriterions@RoleDAOTest, testException = [null]]]
[2017-10-14 14:08:48,628]DEBUG  6415[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@7e062eda testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@12f86513, testMethod = testFindByOneOfCriterions@RoleDAOTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 14:08:48,628]DEBUG  6415[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2017-10-14 14:08:48,628]DEBUG  6415[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2017-10-14 14:08:48,628]DEBUG  6415[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@7e062eda testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@49359283, testMethod = [null], testException = [null]]].
[2017-10-14 14:08:48,629]DEBUG  6416[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 14:08:48,629]DEBUG  6416[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 14:08:48,629]DEBUG  6416[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 14:08:48,629]DEBUG  6416[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 14:08:48,629]DEBUG  6416[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 14:08:48,629]DEBUG  6416[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 14:08:48,629]DEBUG  6416[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 14:08:48,629]DEBUG  6416[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 14:08:48,629]DEBUG  6416[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 14:08:48,630]DEBUG  6417[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 14:08:48,630]DEBUG  6417[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 14:08:48,630]DEBUG  6417[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 14:08:48,630]DEBUG  6417[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 14:08:48,630]DEBUG  6417[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 14:08:48,630]DEBUG  6417[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 14:08:48,630]DEBUG  6417[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 14:08:48,630]DEBUG  6417[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 14:08:48,630]DEBUG  6417[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 14:08:48,631]DEBUG  6418[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 14:08:48,631]DEBUG  6418[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 14:08:48,631]DEBUG  6418[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 14:08:48,631]DEBUG  6418[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 14:08:48,632]DEBUG  6419[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@49359283]
[2017-10-14 14:08:48,634]DEBUG  6421[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testInsertOrUpdate' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:48,634]DEBUG  6421[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@7e062eda testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@49359283, testMethod = testInsertOrUpdate@RoleDAOTest, testException = [null]]]
[2017-10-14 14:08:48,634]DEBUG  6421[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 14:08:48,636]DEBUG  6423[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testInsertOrUpdate]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:48,636]DEBUG  6423[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15079793286
[2017-10-14 14:08:48,637]DEBUG  6424[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@6af39445] for Hibernate transaction
[2017-10-14 14:08:48,637]DEBUG  6424[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@6af39445]
[2017-10-14 14:08:48,637]DEBUG  6424[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 14:08:48,637]DEBUG  6424[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 14:08:48,637]DEBUG  6424[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 14:08:48,638]DEBUG  6425[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7e062eda testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@49359283, testMethod = testInsertOrUpdate@RoleDAOTest, testException = [null]]]
[2017-10-14 14:08:48,638] INFO  6425[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (4): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@48ad0abe]; rollback [true]
[2017-10-14 14:08:48,638]DEBUG  6425[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:48,639]DEBUG  6426[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,639]DEBUG  6426[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 14:08:48,640]DEBUG  6427[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 13
[2017-10-14 14:08:48,640]DEBUG  6427[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,641]DEBUG  6428[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:48,641]DEBUG  6428[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,642]DEBUG  6429[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 14:08:48,642]DEBUG  6429[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 14
[2017-10-14 14:08:48,643]DEBUG  6430[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,643]DEBUG  6430[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:48,644]DEBUG  6431[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,644]DEBUG  6431[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 14:08:48,645]DEBUG  6432[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 15
[2017-10-14 14:08:48,645]DEBUG  6432[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,645]DEBUG  6432[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:48,646]DEBUG  6433[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,646]DEBUG  6433[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 14:08:48,647]DEBUG  6434[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 16
[2017-10-14 14:08:48,647]DEBUG  6434[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,648]DEBUG  6435[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:48,648]DEBUG  6435[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,649]DEBUG  6436[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 14:08:48,650]DEBUG  6437[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 17
[2017-10-14 14:08:48,650]DEBUG  6437[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,651]DEBUG  6438[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:48,651]DEBUG  6438[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:48,652]DEBUG  6439[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2017-10-14 14:08:48,652]DEBUG  6439[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:48,652]DEBUG  6439[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:48,652]DEBUG  6439[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=14, roleName=Supervisor}
[2017-10-14 14:08:48,653]DEBUG  6440[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=13, roleName=Administrator}
[2017-10-14 14:08:48,653]DEBUG  6440[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=16, roleName=Merchandiser}
[2017-10-14 14:08:48,653]DEBUG  6440[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=15, roleName=Customer}
[2017-10-14 14:08:48,653]DEBUG  6440[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=17, roleName=tempRole}
[2017-10-14 14:08:48,653]DEBUG  6440[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,654]DEBUG  6441[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_
[2017-10-14 14:08:48,655]DEBUG  6442[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:48,655]DEBUG  6442[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#13]
[2017-10-14 14:08:48,655]DEBUG  6442[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#14]
[2017-10-14 14:08:48,655]DEBUG  6442[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#15]
[2017-10-14 14:08:48,655]DEBUG  6442[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#16]
[2017-10-14 14:08:48,656]DEBUG  6443[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#17]
[2017-10-14 14:08:48,656]DEBUG  6443[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:48,656]DEBUG  6443[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,656]DEBUG  6443[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:48,656]DEBUG  6443[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:48,657]DEBUG  6444[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:48,657]DEBUG  6444[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2017-10-14 14:08:48,657]DEBUG  6444[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:48,658]DEBUG  6445[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:48,658]DEBUG  6445[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=14, roleName=Supervisor}
[2017-10-14 14:08:48,658]DEBUG  6445[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=13, roleName=Administrator}
[2017-10-14 14:08:48,658]DEBUG  6445[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=16, roleName=Merchandiser}
[2017-10-14 14:08:48,658]DEBUG  6445[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=15, roleName=Customer}
[2017-10-14 14:08:48,658]DEBUG  6445[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=17, roleName=tempRole}
[2017-10-14 14:08:48,659]DEBUG  6446[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,659]DEBUG  6446[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 14:08:48,659]DEBUG  6446[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,659]DEBUG  6446[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7e062eda testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@49359283, testMethod = testInsertOrUpdate@RoleDAOTest, testException = [null]]]
[2017-10-14 14:08:48,660]DEBUG  6447[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 14:08:48,660]DEBUG  6447[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@6af39445]
[2017-10-14 14:08:48,660]DEBUG  6447[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 14:08:48,693]DEBUG  6480[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 14:08:48,693]DEBUG  6480[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:48,694]DEBUG  6481[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@6af39445] after transaction
[2017-10-14 14:08:48,694]DEBUG  6481[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 14:08:48,694]DEBUG  6481[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 14:08:48,695]DEBUG  6482[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:48,695] INFO  6482[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@7e062eda testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@49359283, testMethod = testInsertOrUpdate@RoleDAOTest, testException = [null]]]
[2017-10-14 14:08:48,697]DEBUG  6484[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@7e062eda testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@49359283, testMethod = testInsertOrUpdate@RoleDAOTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 14:08:48,698]DEBUG  6485[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2017-10-14 14:08:48,698]DEBUG  6485[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2017-10-14 14:08:48,699]DEBUG  6486[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@7e062eda testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@4bc7e296, testMethod = [null], testException = [null]]].
[2017-10-14 14:08:48,699]DEBUG  6486[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 14:08:48,699]DEBUG  6486[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 14:08:48,700]DEBUG  6487[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 14:08:48,700]DEBUG  6487[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 14:08:48,700]DEBUG  6487[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 14:08:48,700]DEBUG  6487[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 14:08:48,701]DEBUG  6488[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 14:08:48,701]DEBUG  6488[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 14:08:48,703]DEBUG  6490[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 14:08:48,704]DEBUG  6491[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 14:08:48,704]DEBUG  6491[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 14:08:48,704]DEBUG  6491[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 14:08:48,704]DEBUG  6491[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 14:08:48,705]DEBUG  6492[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 14:08:48,705]DEBUG  6492[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 14:08:48,705]DEBUG  6492[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 14:08:48,706]DEBUG  6493[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 14:08:48,706]DEBUG  6493[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 14:08:48,706]DEBUG  6493[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 14:08:48,707]DEBUG  6494[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 14:08:48,707]DEBUG  6494[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 14:08:48,707]DEBUG  6494[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 14:08:48,708]DEBUG  6495[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@4bc7e296]
[2017-10-14 14:08:48,709]DEBUG  6496[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testDelete' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:48,709]DEBUG  6496[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@7e062eda testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@4bc7e296, testMethod = testDelete@RoleDAOTest, testException = [null]]]
[2017-10-14 14:08:48,710]DEBUG  6497[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 14:08:48,711]DEBUG  6498[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testDelete]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:48,712]DEBUG  6499[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15079793287
[2017-10-14 14:08:48,712]DEBUG  6499[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@79721303] for Hibernate transaction
[2017-10-14 14:08:48,712]DEBUG  6499[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@79721303]
[2017-10-14 14:08:48,713]DEBUG  6500[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 14:08:48,713]DEBUG  6500[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 14:08:48,714]DEBUG  6501[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 14:08:48,714]DEBUG  6501[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7e062eda testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@4bc7e296, testMethod = testDelete@RoleDAOTest, testException = [null]]]
[2017-10-14 14:08:48,714] INFO  6501[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (5): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@48ad0abe]; rollback [true]
[2017-10-14 14:08:48,715]DEBUG  6502[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:48,715]DEBUG  6502[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,716]DEBUG  6503[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 14:08:48,717]DEBUG  6504[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 18
[2017-10-14 14:08:48,717]DEBUG  6504[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,718]DEBUG  6505[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:48,718]DEBUG  6505[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,718]DEBUG  6505[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 14:08:48,719]DEBUG  6506[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 19
[2017-10-14 14:08:48,719]DEBUG  6506[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,719]DEBUG  6506[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:48,719]DEBUG  6506[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,719]DEBUG  6506[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 14:08:48,720]DEBUG  6507[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 20
[2017-10-14 14:08:48,720]DEBUG  6507[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,720]DEBUG  6507[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:48,720]DEBUG  6507[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,720]DEBUG  6507[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 14:08:48,721]DEBUG  6508[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 21
[2017-10-14 14:08:48,721]DEBUG  6508[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,721]DEBUG  6508[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:48,721]DEBUG  6508[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,722]DEBUG  6509[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 14:08:48,722]DEBUG  6509[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 22
[2017-10-14 14:08:48,722]DEBUG  6509[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,724]DEBUG  6511[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:48,724]DEBUG  6511[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:48,725]DEBUG  6512[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 5 objects
[2017-10-14 14:08:48,725]DEBUG  6512[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:48,725]DEBUG  6512[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:48,726]DEBUG  6513[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=22, roleName=tempRole}
[2017-10-14 14:08:48,726]DEBUG  6513[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=21, roleName=Merchandiser}
[2017-10-14 14:08:48,726]DEBUG  6513[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=18, roleName=Administrator}
[2017-10-14 14:08:48,727]DEBUG  6514[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=20, roleName=Customer}
[2017-10-14 14:08:48,727]DEBUG  6514[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=19, roleName=Supervisor}
[2017-10-14 14:08:48,728]DEBUG  6515[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Roles
[2017-10-14 14:08:48,732]DEBUG  6519[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,732]DEBUG  6519[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles where ID=?
[2017-10-14 14:08:48,733]DEBUG  6520[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
[2017-10-14 14:08:48,734]DEBUG  6521[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,734]DEBUG  6521[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,734]DEBUG  6521[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_
[2017-10-14 14:08:48,735]DEBUG  6522[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:48,735]DEBUG  6522[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#18]
[2017-10-14 14:08:48,736]DEBUG  6523[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#19]
[2017-10-14 14:08:48,736]DEBUG  6523[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#20]
[2017-10-14 14:08:48,736]DEBUG  6523[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#21]
[2017-10-14 14:08:48,736]DEBUG  6523[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:48,737]DEBUG  6524[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,737]DEBUG  6524[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:48,737]DEBUG  6524[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:48,737]DEBUG  6524[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:48,737]DEBUG  6524[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:48,738]DEBUG  6525[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:48,738]DEBUG  6525[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:48,738]DEBUG  6525[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=21, roleName=Merchandiser}
[2017-10-14 14:08:48,738]DEBUG  6525[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=18, roleName=Administrator}
[2017-10-14 14:08:48,738]DEBUG  6525[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=20, roleName=Customer}
[2017-10-14 14:08:48,738]DEBUG  6525[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=19, roleName=Supervisor}
[2017-10-14 14:08:48,738]DEBUG  6525[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,739]DEBUG  6526[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 14:08:48,739]DEBUG  6526[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,739]DEBUG  6526[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7e062eda testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@4bc7e296, testMethod = testDelete@RoleDAOTest, testException = [null]]]
[2017-10-14 14:08:48,740]DEBUG  6527[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 14:08:48,740]DEBUG  6527[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@79721303]
[2017-10-14 14:08:48,740]DEBUG  6527[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 14:08:48,768]DEBUG  6555[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 14:08:48,768]DEBUG  6555[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:48,769]DEBUG  6556[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@79721303] after transaction
[2017-10-14 14:08:48,769]DEBUG  6556[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 14:08:48,769]DEBUG  6556[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 14:08:48,769]DEBUG  6556[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:48,769] INFO  6556[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@7e062eda testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@4bc7e296, testMethod = testDelete@RoleDAOTest, testException = [null]]]
[2017-10-14 14:08:48,770]DEBUG  6557[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@7e062eda testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@4bc7e296, testMethod = testDelete@RoleDAOTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 14:08:48,770]DEBUG  6557[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2017-10-14 14:08:48,771]DEBUG  6558[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2017-10-14 14:08:48,771]DEBUG  6558[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@7e062eda testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@6b84de0e, testMethod = [null], testException = [null]]].
[2017-10-14 14:08:48,771]DEBUG  6558[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 14:08:48,771]DEBUG  6558[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 14:08:48,771]DEBUG  6558[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 14:08:48,771]DEBUG  6558[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 14:08:48,772]DEBUG  6559[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 14:08:48,772]DEBUG  6559[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 14:08:48,772]DEBUG  6559[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 14:08:48,772]DEBUG  6559[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 14:08:48,772]DEBUG  6559[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 14:08:48,772]DEBUG  6559[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 14:08:48,772]DEBUG  6559[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 14:08:48,772]DEBUG  6559[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 14:08:48,773]DEBUG  6560[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 14:08:48,773]DEBUG  6560[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 14:08:48,773]DEBUG  6560[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 14:08:48,773]DEBUG  6560[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 14:08:48,773]DEBUG  6560[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 14:08:48,773]DEBUG  6560[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 14:08:48,773]DEBUG  6560[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 14:08:48,773]DEBUG  6560[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 14:08:48,774]DEBUG  6561[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 14:08:48,774]DEBUG  6561[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 14:08:48,774]DEBUG  6561[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@6b84de0e]
[2017-10-14 14:08:48,774]DEBUG  6561[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetAdminRole' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:48,775]DEBUG  6562[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@7e062eda testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@6b84de0e, testMethod = testGetAdminRole@RoleDAOTest, testException = [null]]]
[2017-10-14 14:08:48,775]DEBUG  6562[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 14:08:48,776]DEBUG  6563[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testGetAdminRole]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:48,776]DEBUG  6563[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15079793287
[2017-10-14 14:08:48,776]DEBUG  6563[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@404ca42a] for Hibernate transaction
[2017-10-14 14:08:48,776]DEBUG  6563[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@404ca42a]
[2017-10-14 14:08:48,776]DEBUG  6563[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 14:08:48,776]DEBUG  6563[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 14:08:48,776]DEBUG  6563[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 14:08:48,777]DEBUG  6564[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7e062eda testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@6b84de0e, testMethod = testGetAdminRole@RoleDAOTest, testException = [null]]]
[2017-10-14 14:08:48,777] INFO  6564[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (6): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@48ad0abe]; rollback [true]
[2017-10-14 14:08:48,777]DEBUG  6564[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:48,777]DEBUG  6564[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,777]DEBUG  6564[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 14:08:48,778]DEBUG  6565[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 23
[2017-10-14 14:08:48,778]DEBUG  6565[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,779]DEBUG  6566[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:48,779]DEBUG  6566[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,779]DEBUG  6566[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 14:08:48,779]DEBUG  6566[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 24
[2017-10-14 14:08:48,780]DEBUG  6567[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,780]DEBUG  6567[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:48,780]DEBUG  6567[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,780]DEBUG  6567[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 14:08:48,781]DEBUG  6568[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 25
[2017-10-14 14:08:48,781]DEBUG  6568[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,781]DEBUG  6568[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:48,782]DEBUG  6569[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,782]DEBUG  6569[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 14:08:48,782]DEBUG  6569[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 26
[2017-10-14 14:08:48,782]DEBUG  6569[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,783]DEBUG  6570[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:48,783]DEBUG  6570[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:48,783]DEBUG  6570[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:48,784]DEBUG  6571[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:48,784]DEBUG  6571[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:48,784]DEBUG  6571[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=24, roleName=Supervisor}
[2017-10-14 14:08:48,784]DEBUG  6571[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=23, roleName=Administrator}
[2017-10-14 14:08:48,784]DEBUG  6571[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=26, roleName=Merchandiser}
[2017-10-14 14:08:48,784]DEBUG  6571[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=25, roleName=Customer}
[2017-10-14 14:08:48,785]DEBUG  6572[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,785]DEBUG  6572[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2017-10-14 14:08:48,785]DEBUG  6572[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:48,786]DEBUG  6573[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#23]
[2017-10-14 14:08:48,786]DEBUG  6573[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:48,786]DEBUG  6573[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,786]DEBUG  6573[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:48,787]DEBUG  6574[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:48,787]DEBUG  6574[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:48,787]DEBUG  6574[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:48,787]DEBUG  6574[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:48,787]DEBUG  6574[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:48,788]DEBUG  6575[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=24, roleName=Supervisor}
[2017-10-14 14:08:48,788]DEBUG  6575[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=23, roleName=Administrator}
[2017-10-14 14:08:48,788]DEBUG  6575[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=26, roleName=Merchandiser}
[2017-10-14 14:08:48,788]DEBUG  6575[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=25, roleName=Customer}
[2017-10-14 14:08:48,788]DEBUG  6575[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,789]DEBUG  6576[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2017-10-14 14:08:48,789]DEBUG  6576[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:48,789]DEBUG  6576[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#23]
[2017-10-14 14:08:48,790]DEBUG  6577[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:48,790]DEBUG  6577[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,790]DEBUG  6577[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:48,790]DEBUG  6577[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:48,791]DEBUG  6578[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:48,791]DEBUG  6578[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 4 objects
[2017-10-14 14:08:48,791]DEBUG  6578[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:48,791]DEBUG  6578[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:48,791]DEBUG  6578[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=24, roleName=Supervisor}
[2017-10-14 14:08:48,792]DEBUG  6579[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=23, roleName=Administrator}
[2017-10-14 14:08:48,792]DEBUG  6579[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=26, roleName=Merchandiser}
[2017-10-14 14:08:48,792]DEBUG  6579[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=25, roleName=Customer}
[2017-10-14 14:08:48,792]DEBUG  6579[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Roles
[2017-10-14 14:08:48,792]DEBUG  6579[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,792]DEBUG  6579[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles where ID=?
[2017-10-14 14:08:48,793]DEBUG  6580[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
[2017-10-14 14:08:48,793]DEBUG  6580[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,793]DEBUG  6580[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,794]DEBUG  6581[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2017-10-14 14:08:48,794]DEBUG  6581[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:48,794]DEBUG  6581[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:48,794]DEBUG  6581[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,795]DEBUG  6582[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:48,795]DEBUG  6582[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:48,795]DEBUG  6582[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,795]DEBUG  6582[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 14:08:48,796]DEBUG  6583[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 27
[2017-10-14 14:08:48,796]DEBUG  6583[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,796]DEBUG  6583[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:48,796]DEBUG  6583[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:48,797]DEBUG  6584[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:48,797]DEBUG  6584[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:48,797]DEBUG  6584[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:48,797]DEBUG  6584[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=24, roleName=Supervisor}
[2017-10-14 14:08:48,797]DEBUG  6584[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=26, roleName=Merchandiser}
[2017-10-14 14:08:48,798]DEBUG  6585[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=25, roleName=Customer}
[2017-10-14 14:08:48,798]DEBUG  6585[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=27, roleName=Administrator}
[2017-10-14 14:08:48,798]DEBUG  6585[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,798]DEBUG  6585[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 14:08:48,798]DEBUG  6585[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,799]DEBUG  6586[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7e062eda testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@6b84de0e, testMethod = testGetAdminRole@RoleDAOTest, testException = [null]]]
[2017-10-14 14:08:48,799]DEBUG  6586[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 14:08:48,799]DEBUG  6586[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@404ca42a]
[2017-10-14 14:08:48,799]DEBUG  6586[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 14:08:48,835]DEBUG  6622[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 14:08:48,835]DEBUG  6622[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:48,835]DEBUG  6622[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@404ca42a] after transaction
[2017-10-14 14:08:48,836]DEBUG  6623[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 14:08:48,836]DEBUG  6623[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 14:08:48,836]DEBUG  6623[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:48,837] INFO  6624[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@7e062eda testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@6b84de0e, testMethod = testGetAdminRole@RoleDAOTest, testException = [null]]]
[2017-10-14 14:08:48,838]DEBUG  6625[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@7e062eda testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@6b84de0e, testMethod = testGetAdminRole@RoleDAOTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 14:08:48,839]DEBUG  6626[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2017-10-14 14:08:48,839]DEBUG  6626[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2017-10-14 14:08:48,840]DEBUG  6627[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@7e062eda testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@24382e6, testMethod = [null], testException = [null]]].
[2017-10-14 14:08:48,841]DEBUG  6628[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 14:08:48,841]DEBUG  6628[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 14:08:48,841]DEBUG  6628[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 14:08:48,841]DEBUG  6628[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 14:08:48,842]DEBUG  6629[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 14:08:48,842]DEBUG  6629[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 14:08:48,842]DEBUG  6629[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 14:08:48,843]DEBUG  6630[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 14:08:48,843]DEBUG  6630[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 14:08:48,843]DEBUG  6630[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 14:08:48,843]DEBUG  6630[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 14:08:48,844]DEBUG  6631[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 14:08:48,844]DEBUG  6631[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 14:08:48,844]DEBUG  6631[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 14:08:48,845]DEBUG  6632[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 14:08:48,845]DEBUG  6632[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 14:08:48,845]DEBUG  6632[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 14:08:48,845]DEBUG  6632[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 14:08:48,846]DEBUG  6633[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 14:08:48,846]DEBUG  6633[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 14:08:48,846]DEBUG  6633[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 14:08:48,847]DEBUG  6634[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 14:08:48,847]DEBUG  6634[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@24382e6]
[2017-10-14 14:08:48,848]DEBUG  6635[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetCustomerRole' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:48,848]DEBUG  6635[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@7e062eda testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@24382e6, testMethod = testGetCustomerRole@RoleDAOTest, testException = [null]]]
[2017-10-14 14:08:48,849]DEBUG  6636[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 14:08:48,850]DEBUG  6637[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testGetCustomerRole]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:48,851]DEBUG  6638[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15079793288
[2017-10-14 14:08:48,851]DEBUG  6638[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@75089e03] for Hibernate transaction
[2017-10-14 14:08:48,851]DEBUG  6638[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@75089e03]
[2017-10-14 14:08:48,851]DEBUG  6638[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 14:08:48,852]DEBUG  6639[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 14:08:48,852]DEBUG  6639[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 14:08:48,852]DEBUG  6639[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7e062eda testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@24382e6, testMethod = testGetCustomerRole@RoleDAOTest, testException = [null]]]
[2017-10-14 14:08:48,853] INFO  6640[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (7): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@48ad0abe]; rollback [true]
[2017-10-14 14:08:48,853]DEBUG  6640[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:48,853]DEBUG  6640[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,854]DEBUG  6641[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 14:08:48,855]DEBUG  6642[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 28
[2017-10-14 14:08:48,855]DEBUG  6642[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,856]DEBUG  6643[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:48,856]DEBUG  6643[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,857]DEBUG  6644[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 14:08:48,857]DEBUG  6644[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 29
[2017-10-14 14:08:48,858]DEBUG  6645[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,858]DEBUG  6645[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:48,858]DEBUG  6645[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,858]DEBUG  6645[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 14:08:48,859]DEBUG  6646[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 30
[2017-10-14 14:08:48,859]DEBUG  6646[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,859]DEBUG  6646[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:48,859]DEBUG  6646[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,859]DEBUG  6646[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 14:08:48,860]DEBUG  6647[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 31
[2017-10-14 14:08:48,860]DEBUG  6647[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,860]DEBUG  6647[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:48,861]DEBUG  6648[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:48,861]DEBUG  6648[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:48,861]DEBUG  6648[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:48,861]DEBUG  6648[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:48,861]DEBUG  6648[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=31, roleName=Merchandiser}
[2017-10-14 14:08:48,861]DEBUG  6648[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=29, roleName=Supervisor}
[2017-10-14 14:08:48,862]DEBUG  6649[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=28, roleName=Administrator}
[2017-10-14 14:08:48,862]DEBUG  6649[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=30, roleName=Customer}
[2017-10-14 14:08:48,862]DEBUG  6649[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,862]DEBUG  6649[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2017-10-14 14:08:48,862]DEBUG  6649[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:48,863]DEBUG  6650[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#30]
[2017-10-14 14:08:48,863]DEBUG  6650[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:48,863]DEBUG  6650[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,863]DEBUG  6650[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:48,863]DEBUG  6650[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:48,864]DEBUG  6651[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:48,864]DEBUG  6651[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:48,864]DEBUG  6651[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:48,864]DEBUG  6651[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:48,864]DEBUG  6651[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=31, roleName=Merchandiser}
[2017-10-14 14:08:48,864]DEBUG  6651[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=29, roleName=Supervisor}
[2017-10-14 14:08:48,864]DEBUG  6651[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=28, roleName=Administrator}
[2017-10-14 14:08:48,865]DEBUG  6652[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=30, roleName=Customer}
[2017-10-14 14:08:48,865]DEBUG  6652[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,865]DEBUG  6652[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2017-10-14 14:08:48,865]DEBUG  6652[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:48,866]DEBUG  6653[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#30]
[2017-10-14 14:08:48,866]DEBUG  6653[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:48,866]DEBUG  6653[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,866]DEBUG  6653[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:48,866]DEBUG  6653[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:48,867]DEBUG  6654[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:48,867]DEBUG  6654[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 4 objects
[2017-10-14 14:08:48,867]DEBUG  6654[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:48,867]DEBUG  6654[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:48,867]DEBUG  6654[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=31, roleName=Merchandiser}
[2017-10-14 14:08:48,867]DEBUG  6654[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=29, roleName=Supervisor}
[2017-10-14 14:08:48,867]DEBUG  6654[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=28, roleName=Administrator}
[2017-10-14 14:08:48,868]DEBUG  6655[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=30, roleName=Customer}
[2017-10-14 14:08:48,868]DEBUG  6655[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Roles
[2017-10-14 14:08:48,868]DEBUG  6655[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,868]DEBUG  6655[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles where ID=?
[2017-10-14 14:08:48,868]DEBUG  6655[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
[2017-10-14 14:08:48,869]DEBUG  6656[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,869]DEBUG  6656[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,869]DEBUG  6656[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2017-10-14 14:08:48,869]DEBUG  6656[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:48,869]DEBUG  6656[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:48,870]DEBUG  6657[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,870]DEBUG  6657[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:48,870]DEBUG  6657[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:48,870]DEBUG  6657[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,870]DEBUG  6657[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 14:08:48,871]DEBUG  6658[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 32
[2017-10-14 14:08:48,871]DEBUG  6658[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,871]DEBUG  6658[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:48,871]DEBUG  6658[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:48,871]DEBUG  6658[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:48,872]DEBUG  6659[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:48,872]DEBUG  6659[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:48,872]DEBUG  6659[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=31, roleName=Merchandiser}
[2017-10-14 14:08:48,872]DEBUG  6659[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=32, roleName=Customer}
[2017-10-14 14:08:48,872]DEBUG  6659[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=29, roleName=Supervisor}
[2017-10-14 14:08:48,872]DEBUG  6659[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=28, roleName=Administrator}
[2017-10-14 14:08:48,872]DEBUG  6659[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,872]DEBUG  6659[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 14:08:48,873]DEBUG  6660[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,873]DEBUG  6660[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7e062eda testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@24382e6, testMethod = testGetCustomerRole@RoleDAOTest, testException = [null]]]
[2017-10-14 14:08:48,873]DEBUG  6660[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 14:08:48,873]DEBUG  6660[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@75089e03]
[2017-10-14 14:08:48,873]DEBUG  6660[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 14:08:48,910]DEBUG  6697[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 14:08:48,910]DEBUG  6697[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:48,910]DEBUG  6697[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@75089e03] after transaction
[2017-10-14 14:08:48,911]DEBUG  6698[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 14:08:48,911]DEBUG  6698[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 14:08:48,911]DEBUG  6698[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:48,912] INFO  6699[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@7e062eda testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@24382e6, testMethod = testGetCustomerRole@RoleDAOTest, testException = [null]]]
[2017-10-14 14:08:48,914]DEBUG  6701[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@7e062eda testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@24382e6, testMethod = testGetCustomerRole@RoleDAOTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 14:08:48,914]DEBUG  6701[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2017-10-14 14:08:48,915]DEBUG  6702[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2017-10-14 14:08:48,915]DEBUG  6702[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@7e062eda testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@597399c, testMethod = [null], testException = [null]]].
[2017-10-14 14:08:48,916]DEBUG  6703[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 14:08:48,916]DEBUG  6703[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 14:08:48,916]DEBUG  6703[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 14:08:48,917]DEBUG  6704[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 14:08:48,917]DEBUG  6704[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 14:08:48,917]DEBUG  6704[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 14:08:48,918]DEBUG  6705[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 14:08:48,918]DEBUG  6705[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 14:08:48,918]DEBUG  6705[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 14:08:48,918]DEBUG  6705[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 14:08:48,919]DEBUG  6706[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 14:08:48,919]DEBUG  6706[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 14:08:48,919]DEBUG  6706[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 14:08:48,919]DEBUG  6706[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 14:08:48,920]DEBUG  6707[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 14:08:48,920]DEBUG  6707[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 14:08:48,920]DEBUG  6707[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 14:08:48,921]DEBUG  6708[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 14:08:48,921]DEBUG  6708[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 14:08:48,921]DEBUG  6708[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 14:08:48,922]DEBUG  6709[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 14:08:48,922]DEBUG  6709[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 14:08:48,922]DEBUG  6709[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@597399c]
[2017-10-14 14:08:48,924]DEBUG  6711[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetMerchandiserRole' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:48,924]DEBUG  6711[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@7e062eda testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@597399c, testMethod = testGetMerchandiserRole@RoleDAOTest, testException = [null]]]
[2017-10-14 14:08:48,924]DEBUG  6711[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 14:08:48,926]DEBUG  6713[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testGetMerchandiserRole]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:48,926]DEBUG  6713[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15079793289
[2017-10-14 14:08:48,927]DEBUG  6714[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@40fff8f9] for Hibernate transaction
[2017-10-14 14:08:48,927]DEBUG  6714[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@40fff8f9]
[2017-10-14 14:08:48,927]DEBUG  6714[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 14:08:48,928]DEBUG  6715[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 14:08:48,928]DEBUG  6715[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 14:08:48,928]DEBUG  6715[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7e062eda testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@597399c, testMethod = testGetMerchandiserRole@RoleDAOTest, testException = [null]]]
[2017-10-14 14:08:48,929] INFO  6716[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (8): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@48ad0abe]; rollback [true]
[2017-10-14 14:08:48,929]DEBUG  6716[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:48,929]DEBUG  6716[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,930]DEBUG  6717[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 14:08:48,931]DEBUG  6718[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 33
[2017-10-14 14:08:48,931]DEBUG  6718[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,932]DEBUG  6719[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:48,932]DEBUG  6719[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,932]DEBUG  6719[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 14:08:48,933]DEBUG  6720[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 34
[2017-10-14 14:08:48,934]DEBUG  6721[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,934]DEBUG  6721[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:48,935]DEBUG  6722[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,935]DEBUG  6722[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 14:08:48,936]DEBUG  6723[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 35
[2017-10-14 14:08:48,936]DEBUG  6723[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,937]DEBUG  6724[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:48,937]DEBUG  6724[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,937]DEBUG  6724[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 14:08:48,938]DEBUG  6725[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 36
[2017-10-14 14:08:48,938]DEBUG  6725[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,939]DEBUG  6726[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:48,939]DEBUG  6726[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:48,939]DEBUG  6726[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:48,939]DEBUG  6726[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:48,939]DEBUG  6726[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:48,940]DEBUG  6727[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=35, roleName=Customer}
[2017-10-14 14:08:48,940]DEBUG  6727[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=36, roleName=Merchandiser}
[2017-10-14 14:08:48,940]DEBUG  6727[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=33, roleName=Administrator}
[2017-10-14 14:08:48,940]DEBUG  6727[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=34, roleName=Supervisor}
[2017-10-14 14:08:48,940]DEBUG  6727[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,940]DEBUG  6727[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2017-10-14 14:08:48,941]DEBUG  6728[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:48,941]DEBUG  6728[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#36]
[2017-10-14 14:08:48,941]DEBUG  6728[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:48,941]DEBUG  6728[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,942]DEBUG  6729[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:48,942]DEBUG  6729[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:48,942]DEBUG  6729[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:48,942]DEBUG  6729[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:48,942]DEBUG  6729[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:48,943]DEBUG  6730[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:48,943]DEBUG  6730[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=35, roleName=Customer}
[2017-10-14 14:08:48,943]DEBUG  6730[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=36, roleName=Merchandiser}
[2017-10-14 14:08:48,943]DEBUG  6730[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=33, roleName=Administrator}
[2017-10-14 14:08:48,943]DEBUG  6730[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=34, roleName=Supervisor}
[2017-10-14 14:08:48,943]DEBUG  6730[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,943]DEBUG  6730[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2017-10-14 14:08:48,944]DEBUG  6731[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:48,944]DEBUG  6731[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#36]
[2017-10-14 14:08:48,944]DEBUG  6731[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:48,944]DEBUG  6731[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,945]DEBUG  6732[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:48,945]DEBUG  6732[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:48,945]DEBUG  6732[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:48,945]DEBUG  6732[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 4 objects
[2017-10-14 14:08:48,945]DEBUG  6732[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:48,946]DEBUG  6733[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:48,946]DEBUG  6733[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=35, roleName=Customer}
[2017-10-14 14:08:48,946]DEBUG  6733[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=36, roleName=Merchandiser}
[2017-10-14 14:08:48,946]DEBUG  6733[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=33, roleName=Administrator}
[2017-10-14 14:08:48,946]DEBUG  6733[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=34, roleName=Supervisor}
[2017-10-14 14:08:48,946]DEBUG  6733[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Roles
[2017-10-14 14:08:48,946]DEBUG  6733[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,947]DEBUG  6734[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles where ID=?
[2017-10-14 14:08:48,947]DEBUG  6734[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
[2017-10-14 14:08:48,947]DEBUG  6734[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,947]DEBUG  6734[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,948]DEBUG  6735[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2017-10-14 14:08:48,948]DEBUG  6735[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:48,948]DEBUG  6735[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:48,948]DEBUG  6735[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,948]DEBUG  6735[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:48,949]DEBUG  6736[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:48,949]DEBUG  6736[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,949]DEBUG  6736[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 14:08:48,949]DEBUG  6736[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 37
[2017-10-14 14:08:48,950]DEBUG  6737[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,950]DEBUG  6737[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:48,950]DEBUG  6737[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:48,950]DEBUG  6737[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:48,950]DEBUG  6737[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:48,950]DEBUG  6737[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:48,951]DEBUG  6738[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=35, roleName=Customer}
[2017-10-14 14:08:48,951]DEBUG  6738[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=33, roleName=Administrator}
[2017-10-14 14:08:48,951]DEBUG  6738[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=34, roleName=Supervisor}
[2017-10-14 14:08:48,951]DEBUG  6738[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=37, roleName=Merchandiser}
[2017-10-14 14:08:48,951]DEBUG  6738[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:48,951]DEBUG  6738[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 14:08:48,952]DEBUG  6739[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:48,952]DEBUG  6739[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7e062eda testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@597399c, testMethod = testGetMerchandiserRole@RoleDAOTest, testException = [null]]]
[2017-10-14 14:08:48,952]DEBUG  6739[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 14:08:48,952]DEBUG  6739[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@40fff8f9]
[2017-10-14 14:08:48,952]DEBUG  6739[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 14:08:48,985]DEBUG  6772[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 14:08:48,985]DEBUG  6772[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:48,985]DEBUG  6772[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@40fff8f9] after transaction
[2017-10-14 14:08:48,986]DEBUG  6773[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 14:08:48,986]DEBUG  6773[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 14:08:48,986]DEBUG  6773[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:48,987] INFO  6774[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@7e062eda testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@597399c, testMethod = testGetMerchandiserRole@RoleDAOTest, testException = [null]]]
[2017-10-14 14:08:48,988]DEBUG  6775[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@7e062eda testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@597399c, testMethod = testGetMerchandiserRole@RoleDAOTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 14:08:48,989]DEBUG  6776[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2017-10-14 14:08:48,990]DEBUG  6777[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2017-10-14 14:08:48,990]DEBUG  6777[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@7e062eda testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@7b1dbafa, testMethod = [null], testException = [null]]].
[2017-10-14 14:08:48,991]DEBUG  6778[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 14:08:48,991]DEBUG  6778[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 14:08:48,991]DEBUG  6778[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 14:08:48,992]DEBUG  6779[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 14:08:48,992]DEBUG  6779[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 14:08:48,992]DEBUG  6779[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 14:08:48,992]DEBUG  6779[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 14:08:48,993]DEBUG  6780[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 14:08:48,993]DEBUG  6780[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 14:08:48,993]DEBUG  6780[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 14:08:48,994]DEBUG  6781[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 14:08:48,994]DEBUG  6781[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 14:08:48,994]DEBUG  6781[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 14:08:48,994]DEBUG  6781[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 14:08:48,995]DEBUG  6782[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 14:08:48,995]DEBUG  6782[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 14:08:48,995]DEBUG  6782[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 14:08:48,996]DEBUG  6783[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 14:08:48,996]DEBUG  6783[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 14:08:48,996]DEBUG  6783[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 14:08:48,996]DEBUG  6783[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 14:08:48,997]DEBUG  6784[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 14:08:48,997]DEBUG  6784[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@7b1dbafa]
[2017-10-14 14:08:48,998]DEBUG  6785[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetSupervisorRole' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:48,998]DEBUG  6785[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@7e062eda testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@7b1dbafa, testMethod = testGetSupervisorRole@RoleDAOTest, testException = [null]]]
[2017-10-14 14:08:48,998]DEBUG  6785[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 14:08:49,001]DEBUG  6788[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testGetSupervisorRole]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:49,002]DEBUG  6789[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15079793290
[2017-10-14 14:08:49,002]DEBUG  6789[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@3d112885] for Hibernate transaction
[2017-10-14 14:08:49,002]DEBUG  6789[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@3d112885]
[2017-10-14 14:08:49,003]DEBUG  6790[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 14:08:49,003]DEBUG  6790[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 14:08:49,003]DEBUG  6790[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 14:08:49,003]DEBUG  6790[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7e062eda testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@7b1dbafa, testMethod = testGetSupervisorRole@RoleDAOTest, testException = [null]]]
[2017-10-14 14:08:49,003] INFO  6790[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (9): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@48ad0abe]; rollback [true]
[2017-10-14 14:08:49,003]DEBUG  6790[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:49,003]DEBUG  6790[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,004]DEBUG  6791[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 14:08:49,004]DEBUG  6791[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 38
[2017-10-14 14:08:49,004]DEBUG  6791[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,004]DEBUG  6791[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:49,005]DEBUG  6792[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,005]DEBUG  6792[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 14:08:49,005]DEBUG  6792[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 39
[2017-10-14 14:08:49,005]DEBUG  6792[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,005]DEBUG  6792[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:49,006]DEBUG  6793[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,006]DEBUG  6793[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 14:08:49,006]DEBUG  6793[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 40
[2017-10-14 14:08:49,006]DEBUG  6793[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,006]DEBUG  6793[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:49,006]DEBUG  6793[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,007]DEBUG  6794[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 14:08:49,007]DEBUG  6794[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 41
[2017-10-14 14:08:49,007]DEBUG  6794[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,007]DEBUG  6794[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:49,007]DEBUG  6794[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:49,008]DEBUG  6795[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:49,008]DEBUG  6795[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:49,008]DEBUG  6795[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:49,008]DEBUG  6795[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=41, roleName=Merchandiser}
[2017-10-14 14:08:49,008]DEBUG  6795[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=39, roleName=Supervisor}
[2017-10-14 14:08:49,008]DEBUG  6795[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=40, roleName=Customer}
[2017-10-14 14:08:49,008]DEBUG  6795[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=38, roleName=Administrator}
[2017-10-14 14:08:49,008]DEBUG  6795[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,009]DEBUG  6796[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2017-10-14 14:08:49,009]DEBUG  6796[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:49,009]DEBUG  6796[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#39]
[2017-10-14 14:08:49,009]DEBUG  6796[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:49,009]DEBUG  6796[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,010]DEBUG  6797[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:49,010]DEBUG  6797[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:49,010]DEBUG  6797[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:49,010]DEBUG  6797[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:49,010]DEBUG  6797[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:49,010]DEBUG  6797[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:49,011]DEBUG  6798[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=41, roleName=Merchandiser}
[2017-10-14 14:08:49,011]DEBUG  6798[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=39, roleName=Supervisor}
[2017-10-14 14:08:49,011]DEBUG  6798[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=40, roleName=Customer}
[2017-10-14 14:08:49,011]DEBUG  6798[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=38, roleName=Administrator}
[2017-10-14 14:08:49,011]DEBUG  6798[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,011]DEBUG  6798[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2017-10-14 14:08:49,011]DEBUG  6798[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:49,012]DEBUG  6799[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#39]
[2017-10-14 14:08:49,012]DEBUG  6799[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:49,012]DEBUG  6799[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,012]DEBUG  6799[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:49,012]DEBUG  6799[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:49,012]DEBUG  6799[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:49,013]DEBUG  6800[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 4 objects
[2017-10-14 14:08:49,013]DEBUG  6800[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:49,013]DEBUG  6800[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:49,013]DEBUG  6800[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=41, roleName=Merchandiser}
[2017-10-14 14:08:49,013]DEBUG  6800[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=39, roleName=Supervisor}
[2017-10-14 14:08:49,013]DEBUG  6800[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=40, roleName=Customer}
[2017-10-14 14:08:49,013]DEBUG  6800[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=38, roleName=Administrator}
[2017-10-14 14:08:49,013]DEBUG  6800[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Roles
[2017-10-14 14:08:49,014]DEBUG  6801[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,014]DEBUG  6801[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles where ID=?
[2017-10-14 14:08:49,014]DEBUG  6801[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
[2017-10-14 14:08:49,014]DEBUG  6801[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,014]DEBUG  6801[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,014]DEBUG  6801[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2017-10-14 14:08:49,015]DEBUG  6802[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:49,015]DEBUG  6802[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:49,015]DEBUG  6802[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,015]DEBUG  6802[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:49,015]DEBUG  6802[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:49,015]DEBUG  6802[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,016]DEBUG  6803[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 14:08:49,016]DEBUG  6803[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 42
[2017-10-14 14:08:49,016]DEBUG  6803[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,016]DEBUG  6803[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:49,016]DEBUG  6803[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:49,017]DEBUG  6804[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:49,017]DEBUG  6804[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:49,017]DEBUG  6804[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:49,017]DEBUG  6804[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=41, roleName=Merchandiser}
[2017-10-14 14:08:49,017]DEBUG  6804[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=42, roleName=Supervisor}
[2017-10-14 14:08:49,017]DEBUG  6804[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=40, roleName=Customer}
[2017-10-14 14:08:49,017]DEBUG  6804[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=38, roleName=Administrator}
[2017-10-14 14:08:49,017]DEBUG  6804[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,017]DEBUG  6804[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 14:08:49,018]DEBUG  6805[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,018]DEBUG  6805[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7e062eda testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@7b1dbafa, testMethod = testGetSupervisorRole@RoleDAOTest, testException = [null]]]
[2017-10-14 14:08:49,018]DEBUG  6805[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 14:08:49,018]DEBUG  6805[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@3d112885]
[2017-10-14 14:08:49,018]DEBUG  6805[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 14:08:49,052]DEBUG  6839[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 14:08:49,052]DEBUG  6839[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:49,052]DEBUG  6839[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@3d112885] after transaction
[2017-10-14 14:08:49,053]DEBUG  6840[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 14:08:49,053]DEBUG  6840[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 14:08:49,053]DEBUG  6840[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:49,053] INFO  6840[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@7e062eda testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@7b1dbafa, testMethod = testGetSupervisorRole@RoleDAOTest, testException = [null]]]
[2017-10-14 14:08:49,055]DEBUG  6842[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@7e062eda testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@7b1dbafa, testMethod = testGetSupervisorRole@RoleDAOTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 14:08:49,056]DEBUG  6843[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2017-10-14 14:08:49,056]DEBUG  6843[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2017-10-14 14:08:49,057]DEBUG  6844[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@7e062eda testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@273bc174, testMethod = [null], testException = [null]]].
[2017-10-14 14:08:49,057]DEBUG  6844[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 14:08:49,057]DEBUG  6844[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 14:08:49,057]DEBUG  6844[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 14:08:49,058]DEBUG  6845[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 14:08:49,058]DEBUG  6845[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 14:08:49,058]DEBUG  6845[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 14:08:49,058]DEBUG  6845[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 14:08:49,058]DEBUG  6845[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 14:08:49,058]DEBUG  6845[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 14:08:49,058]DEBUG  6845[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 14:08:49,059]DEBUG  6846[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 14:08:49,059]DEBUG  6846[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 14:08:49,059]DEBUG  6846[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 14:08:49,059]DEBUG  6846[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 14:08:49,059]DEBUG  6846[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 14:08:49,059]DEBUG  6846[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 14:08:49,059]DEBUG  6846[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 14:08:49,059]DEBUG  6846[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 14:08:49,059]DEBUG  6846[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 14:08:49,059]DEBUG  6846[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 14:08:49,060]DEBUG  6847[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 14:08:49,060]DEBUG  6847[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 14:08:49,060]DEBUG  6847[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@273bc174]
[2017-10-14 14:08:49,060]DEBUG  6847[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByRoleName' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:49,060]DEBUG  6847[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@7e062eda testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@273bc174, testMethod = testFindByRoleName@RoleDAOTest, testException = [null]]]
[2017-10-14 14:08:49,060]DEBUG  6847[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 14:08:49,061]DEBUG  6848[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByRoleName]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:49,061]DEBUG  6848[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15079793290
[2017-10-14 14:08:49,061]DEBUG  6848[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@7f42f891] for Hibernate transaction
[2017-10-14 14:08:49,062]DEBUG  6849[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7f42f891]
[2017-10-14 14:08:49,062]DEBUG  6849[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 14:08:49,062]DEBUG  6849[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 14:08:49,062]DEBUG  6849[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 14:08:49,062]DEBUG  6849[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7e062eda testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@273bc174, testMethod = testFindByRoleName@RoleDAOTest, testException = [null]]]
[2017-10-14 14:08:49,062] INFO  6849[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (10): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@48ad0abe]; rollback [true]
[2017-10-14 14:08:49,062]DEBUG  6849[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:49,062]DEBUG  6849[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,063]DEBUG  6850[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 14:08:49,063]DEBUG  6850[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 43
[2017-10-14 14:08:49,063]DEBUG  6850[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,063]DEBUG  6850[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:49,064]DEBUG  6851[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,064]DEBUG  6851[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 14:08:49,064]DEBUG  6851[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 44
[2017-10-14 14:08:49,064]DEBUG  6851[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,064]DEBUG  6851[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:49,064]DEBUG  6851[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,065]DEBUG  6852[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 14:08:49,065]DEBUG  6852[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 45
[2017-10-14 14:08:49,065]DEBUG  6852[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,065]DEBUG  6852[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:49,065]DEBUG  6852[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,066]DEBUG  6853[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 14:08:49,066]DEBUG  6853[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 46
[2017-10-14 14:08:49,066]DEBUG  6853[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,066]DEBUG  6853[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:49,067]DEBUG  6854[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:49,067]DEBUG  6854[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:49,067]DEBUG  6854[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:49,067]DEBUG  6854[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:49,067]DEBUG  6854[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=43, roleName=Administrator}
[2017-10-14 14:08:49,067]DEBUG  6854[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=44, roleName=Supervisor}
[2017-10-14 14:08:49,067]DEBUG  6854[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=46, roleName=Merchandiser}
[2017-10-14 14:08:49,068]DEBUG  6855[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=45, roleName=Customer}
[2017-10-14 14:08:49,068]DEBUG  6855[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,068]DEBUG  6855[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2017-10-14 14:08:49,068]DEBUG  6855[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:49,068]DEBUG  6855[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#46]
[2017-10-14 14:08:49,069]DEBUG  6856[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:49,069]DEBUG  6856[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,069]DEBUG  6856[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:49,069]DEBUG  6856[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:49,069]DEBUG  6856[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:49,069]DEBUG  6856[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:49,070]DEBUG  6857[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:49,070]DEBUG  6857[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:49,070]DEBUG  6857[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=43, roleName=Administrator}
[2017-10-14 14:08:49,070]DEBUG  6857[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=44, roleName=Supervisor}
[2017-10-14 14:08:49,070]DEBUG  6857[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=46, roleName=Merchandiser}
[2017-10-14 14:08:49,070]DEBUG  6857[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=45, roleName=Customer}
[2017-10-14 14:08:49,070]DEBUG  6857[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,070]DEBUG  6857[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2017-10-14 14:08:49,071]DEBUG  6858[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:49,071]DEBUG  6858[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#44]
[2017-10-14 14:08:49,071]DEBUG  6858[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:49,071]DEBUG  6858[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,071]DEBUG  6858[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:49,072]DEBUG  6859[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:49,072]DEBUG  6859[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:49,072]DEBUG  6859[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:49,072]DEBUG  6859[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:49,072]DEBUG  6859[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:49,072]DEBUG  6859[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=43, roleName=Administrator}
[2017-10-14 14:08:49,072]DEBUG  6859[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=44, roleName=Supervisor}
[2017-10-14 14:08:49,072]DEBUG  6859[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=46, roleName=Merchandiser}
[2017-10-14 14:08:49,073]DEBUG  6860[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=45, roleName=Customer}
[2017-10-14 14:08:49,073]DEBUG  6860[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,073]DEBUG  6860[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2017-10-14 14:08:49,073]DEBUG  6860[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:49,074]DEBUG  6861[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#43]
[2017-10-14 14:08:49,074]DEBUG  6861[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:49,074]DEBUG  6861[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,074]DEBUG  6861[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:49,074]DEBUG  6861[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:49,074]DEBUG  6861[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:49,074]DEBUG  6861[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:49,075]DEBUG  6862[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:49,075]DEBUG  6862[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:49,075]DEBUG  6862[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=43, roleName=Administrator}
[2017-10-14 14:08:49,075]DEBUG  6862[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=44, roleName=Supervisor}
[2017-10-14 14:08:49,075]DEBUG  6862[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=46, roleName=Merchandiser}
[2017-10-14 14:08:49,075]DEBUG  6862[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=45, roleName=Customer}
[2017-10-14 14:08:49,075]DEBUG  6862[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,075]DEBUG  6862[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2017-10-14 14:08:49,076]DEBUG  6863[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:49,076]DEBUG  6863[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#45]
[2017-10-14 14:08:49,076]DEBUG  6863[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:49,076]DEBUG  6863[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,076]DEBUG  6863[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:49,077]DEBUG  6864[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:49,077]DEBUG  6864[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:49,077]DEBUG  6864[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:49,077]DEBUG  6864[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:49,077]DEBUG  6864[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:49,077]DEBUG  6864[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=43, roleName=Administrator}
[2017-10-14 14:08:49,077]DEBUG  6864[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=44, roleName=Supervisor}
[2017-10-14 14:08:49,077]DEBUG  6864[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=46, roleName=Merchandiser}
[2017-10-14 14:08:49,078]DEBUG  6865[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=45, roleName=Customer}
[2017-10-14 14:08:49,078]DEBUG  6865[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,078]DEBUG  6865[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 14:08:49,078]DEBUG  6865[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,078]DEBUG  6865[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7e062eda testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@273bc174, testMethod = testFindByRoleName@RoleDAOTest, testException = [null]]]
[2017-10-14 14:08:49,078]DEBUG  6865[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 14:08:49,079]DEBUG  6866[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7f42f891]
[2017-10-14 14:08:49,079]DEBUG  6866[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 14:08:49,118]DEBUG  6905[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 14:08:49,119]DEBUG  6906[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:49,119]DEBUG  6906[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@7f42f891] after transaction
[2017-10-14 14:08:49,119]DEBUG  6906[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 14:08:49,120]DEBUG  6907[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 14:08:49,120]DEBUG  6907[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:49,120] INFO  6907[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@7e062eda testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@273bc174, testMethod = testFindByRoleName@RoleDAOTest, testException = [null]]]
[2017-10-14 14:08:49,122]DEBUG  6909[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@7e062eda testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@273bc174, testMethod = testFindByRoleName@RoleDAOTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 14:08:49,123]DEBUG  6910[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2017-10-14 14:08:49,123]DEBUG  6910[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2017-10-14 14:08:49,123]DEBUG  6910[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@7e062eda testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@8cf9f4f, testMethod = [null], testException = [null]]].
[2017-10-14 14:08:49,124]DEBUG  6911[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 14:08:49,124]DEBUG  6911[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 14:08:49,124]DEBUG  6911[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 14:08:49,124]DEBUG  6911[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 14:08:49,125]DEBUG  6912[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 14:08:49,137]DEBUG  6924[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 14:08:49,137]DEBUG  6924[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 14:08:49,137]DEBUG  6924[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 14:08:49,137]DEBUG  6924[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 14:08:49,137]DEBUG  6924[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 14:08:49,138]DEBUG  6925[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 14:08:49,138]DEBUG  6925[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 14:08:49,138]DEBUG  6925[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 14:08:49,138]DEBUG  6925[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 14:08:49,138]DEBUG  6925[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 14:08:49,138]DEBUG  6925[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 14:08:49,138]DEBUG  6925[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 14:08:49,139]DEBUG  6926[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 14:08:49,139]DEBUG  6926[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 14:08:49,139]DEBUG  6926[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 14:08:49,139]DEBUG  6926[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 14:08:49,139]DEBUG  6926[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 14:08:49,139]DEBUG  6926[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@8cf9f4f]
[2017-10-14 14:08:49,139]DEBUG  6926[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testContainsRole' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:49,140]DEBUG  6927[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@7e062eda testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@8cf9f4f, testMethod = testContainsRole@RoleDAOTest, testException = [null]]]
[2017-10-14 14:08:49,140]DEBUG  6927[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 14:08:49,140]DEBUG  6927[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testContainsRole]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:49,141]DEBUG  6928[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15079793291
[2017-10-14 14:08:49,141]DEBUG  6928[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@7661693e] for Hibernate transaction
[2017-10-14 14:08:49,141]DEBUG  6928[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7661693e]
[2017-10-14 14:08:49,141]DEBUG  6928[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 14:08:49,141]DEBUG  6928[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 14:08:49,141]DEBUG  6928[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 14:08:49,141]DEBUG  6928[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7e062eda testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@8cf9f4f, testMethod = testContainsRole@RoleDAOTest, testException = [null]]]
[2017-10-14 14:08:49,141] INFO  6928[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (11): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@48ad0abe]; rollback [true]
[2017-10-14 14:08:49,141]DEBUG  6928[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:49,142]DEBUG  6929[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,142]DEBUG  6929[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 14:08:49,142]DEBUG  6929[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 47
[2017-10-14 14:08:49,142]DEBUG  6929[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,143]DEBUG  6930[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:49,143]DEBUG  6930[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,143]DEBUG  6930[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 14:08:49,143]DEBUG  6930[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 48
[2017-10-14 14:08:49,143]DEBUG  6930[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,143]DEBUG  6930[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:49,144]DEBUG  6931[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,144]DEBUG  6931[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 14:08:49,144]DEBUG  6931[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 49
[2017-10-14 14:08:49,144]DEBUG  6931[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,144]DEBUG  6931[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:49,144]DEBUG  6931[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,145]DEBUG  6932[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 14:08:49,145]DEBUG  6932[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 50
[2017-10-14 14:08:49,145]DEBUG  6932[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,145]DEBUG  6932[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:49,146]DEBUG  6933[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:49,146]DEBUG  6933[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:49,146]DEBUG  6933[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:49,146]DEBUG  6933[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:49,146]DEBUG  6933[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=50, roleName=Merchandiser}
[2017-10-14 14:08:49,146]DEBUG  6933[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=49, roleName=Customer}
[2017-10-14 14:08:49,146]DEBUG  6933[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=48, roleName=Supervisor}
[2017-10-14 14:08:49,146]DEBUG  6933[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=47, roleName=Administrator}
[2017-10-14 14:08:49,146]DEBUG  6933[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,147]DEBUG  6934[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2017-10-14 14:08:49,162]DEBUG  6949[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:49,162]DEBUG  6949[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#47]
[2017-10-14 14:08:49,162]DEBUG  6949[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:49,162]DEBUG  6949[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,162]DEBUG  6949[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:49,163]DEBUG  6950[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:49,163]DEBUG  6950[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:49,163]DEBUG  6950[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:49,163]DEBUG  6950[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:49,163]DEBUG  6950[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:49,163]DEBUG  6950[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=50, roleName=Merchandiser}
[2017-10-14 14:08:49,163]DEBUG  6950[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=49, roleName=Customer}
[2017-10-14 14:08:49,163]DEBUG  6950[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=48, roleName=Supervisor}
[2017-10-14 14:08:49,164]DEBUG  6951[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=47, roleName=Administrator}
[2017-10-14 14:08:49,164]DEBUG  6951[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,164]DEBUG  6951[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2017-10-14 14:08:49,164]DEBUG  6951[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:49,165]DEBUG  6952[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#48]
[2017-10-14 14:08:49,165]DEBUG  6952[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:49,165]DEBUG  6952[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,165]DEBUG  6952[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:49,165]DEBUG  6952[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:49,165]DEBUG  6952[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:49,165]DEBUG  6952[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:49,166]DEBUG  6953[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:49,166]DEBUG  6953[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:49,166]DEBUG  6953[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=50, roleName=Merchandiser}
[2017-10-14 14:08:49,166]DEBUG  6953[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=49, roleName=Customer}
[2017-10-14 14:08:49,166]DEBUG  6953[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=48, roleName=Supervisor}
[2017-10-14 14:08:49,166]DEBUG  6953[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=47, roleName=Administrator}
[2017-10-14 14:08:49,166]DEBUG  6953[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,167]DEBUG  6954[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2017-10-14 14:08:49,167]DEBUG  6954[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:49,168]DEBUG  6955[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#50]
[2017-10-14 14:08:49,168]DEBUG  6955[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:49,168]DEBUG  6955[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,168]DEBUG  6955[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:49,168]DEBUG  6955[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:49,168]DEBUG  6955[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:49,168]DEBUG  6955[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:49,168]DEBUG  6955[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:49,169]DEBUG  6956[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:49,169]DEBUG  6956[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=50, roleName=Merchandiser}
[2017-10-14 14:08:49,169]DEBUG  6956[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=49, roleName=Customer}
[2017-10-14 14:08:49,169]DEBUG  6956[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=48, roleName=Supervisor}
[2017-10-14 14:08:49,169]DEBUG  6956[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=47, roleName=Administrator}
[2017-10-14 14:08:49,169]DEBUG  6956[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,169]DEBUG  6956[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2017-10-14 14:08:49,170]DEBUG  6957[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:49,170]DEBUG  6957[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#49]
[2017-10-14 14:08:49,170]DEBUG  6957[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:49,170]DEBUG  6957[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,170]DEBUG  6957[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:49,170]DEBUG  6957[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:49,170]DEBUG  6957[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:49,171]DEBUG  6958[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:49,171]DEBUG  6958[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:49,171]DEBUG  6958[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:49,171]DEBUG  6958[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=50, roleName=Merchandiser}
[2017-10-14 14:08:49,171]DEBUG  6958[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=49, roleName=Customer}
[2017-10-14 14:08:49,171]DEBUG  6958[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=48, roleName=Supervisor}
[2017-10-14 14:08:49,171]DEBUG  6958[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=47, roleName=Administrator}
[2017-10-14 14:08:49,171]DEBUG  6958[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,171]DEBUG  6958[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2017-10-14 14:08:49,172]DEBUG  6959[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:49,172]DEBUG  6959[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:49,172]DEBUG  6959[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,172]DEBUG  6959[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:49,172]DEBUG  6959[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:49,172]DEBUG  6959[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:49,173]DEBUG  6960[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:49,173]DEBUG  6960[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:49,173]DEBUG  6960[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:49,173]DEBUG  6960[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=50, roleName=Merchandiser}
[2017-10-14 14:08:49,173]DEBUG  6960[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=49, roleName=Customer}
[2017-10-14 14:08:49,173]DEBUG  6960[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=48, roleName=Supervisor}
[2017-10-14 14:08:49,173]DEBUG  6960[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=47, roleName=Administrator}
[2017-10-14 14:08:49,173]DEBUG  6960[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,173]DEBUG  6960[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2017-10-14 14:08:49,174]DEBUG  6961[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:49,174]DEBUG  6961[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:49,174]DEBUG  6961[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,174]DEBUG  6961[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:49,174]DEBUG  6961[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:49,174]DEBUG  6961[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:49,174]DEBUG  6961[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:49,174]DEBUG  6961[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:49,175]DEBUG  6962[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:49,175]DEBUG  6962[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=50, roleName=Merchandiser}
[2017-10-14 14:08:49,175]DEBUG  6962[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=49, roleName=Customer}
[2017-10-14 14:08:49,175]DEBUG  6962[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=48, roleName=Supervisor}
[2017-10-14 14:08:49,175]DEBUG  6962[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=47, roleName=Administrator}
[2017-10-14 14:08:49,175]DEBUG  6962[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,175]DEBUG  6962[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 14:08:49,175]DEBUG  6962[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,176]DEBUG  6963[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7e062eda testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@8cf9f4f, testMethod = testContainsRole@RoleDAOTest, testException = [null]]]
[2017-10-14 14:08:49,176]DEBUG  6963[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 14:08:49,176]DEBUG  6963[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7661693e]
[2017-10-14 14:08:49,176]DEBUG  6963[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 14:08:49,210]DEBUG  6997[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 14:08:49,210]DEBUG  6997[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:49,210]DEBUG  6997[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@7661693e] after transaction
[2017-10-14 14:08:49,210]DEBUG  6997[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 14:08:49,211]DEBUG  6998[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 14:08:49,211]DEBUG  6998[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:49,211] INFO  6998[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@7e062eda testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@8cf9f4f, testMethod = testContainsRole@RoleDAOTest, testException = [null]]]
[2017-10-14 14:08:49,212]DEBUG  6999[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@7e062eda testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@8cf9f4f, testMethod = testContainsRole@RoleDAOTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 14:08:49,213]DEBUG  7000[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2017-10-14 14:08:49,213]DEBUG  7000[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2017-10-14 14:08:49,213]DEBUG  7000[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@7e062eda testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@7cae71e4, testMethod = [null], testException = [null]]].
[2017-10-14 14:08:49,213]DEBUG  7000[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 14:08:49,213]DEBUG  7000[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 14:08:49,214]DEBUG  7001[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 14:08:49,214]DEBUG  7001[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 14:08:49,214]DEBUG  7001[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 14:08:49,214]DEBUG  7001[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 14:08:49,214]DEBUG  7001[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 14:08:49,214]DEBUG  7001[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 14:08:49,214]DEBUG  7001[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 14:08:49,215]DEBUG  7002[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 14:08:49,215]DEBUG  7002[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 14:08:49,215]DEBUG  7002[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 14:08:49,215]DEBUG  7002[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 14:08:49,215]DEBUG  7002[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 14:08:49,215]DEBUG  7002[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 14:08:49,215]DEBUG  7002[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 14:08:49,216]DEBUG  7003[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 14:08:49,216]DEBUG  7003[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 14:08:49,216]DEBUG  7003[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 14:08:49,216]DEBUG  7003[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 14:08:49,216]DEBUG  7003[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 14:08:49,216]DEBUG  7003[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 14:08:49,217]DEBUG  7004[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@7cae71e4]
[2017-10-14 14:08:49,217]DEBUG  7004[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByCriterionsSorting' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:49,217]DEBUG  7004[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@7e062eda testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@7cae71e4, testMethod = testFindByCriterionsSorting@RoleDAOTest, testException = [null]]]
[2017-10-14 14:08:49,217]DEBUG  7004[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 14:08:49,219]DEBUG  7006[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByCriterionsSorting]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:49,219]DEBUG  7006[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15079793292
[2017-10-14 14:08:49,219]DEBUG  7006[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@15b327bb] for Hibernate transaction
[2017-10-14 14:08:49,219]DEBUG  7006[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@15b327bb]
[2017-10-14 14:08:49,219]DEBUG  7006[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 14:08:49,220]DEBUG  7007[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 14:08:49,220]DEBUG  7007[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 14:08:49,220]DEBUG  7007[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7e062eda testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@7cae71e4, testMethod = testFindByCriterionsSorting@RoleDAOTest, testException = [null]]]
[2017-10-14 14:08:49,220] INFO  7007[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (12): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@48ad0abe]; rollback [true]
[2017-10-14 14:08:49,221]DEBUG  7008[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:49,221]DEBUG  7008[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,221]DEBUG  7008[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 14:08:49,222]DEBUG  7009[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 51
[2017-10-14 14:08:49,222]DEBUG  7009[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,223]DEBUG  7010[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:49,223]DEBUG  7010[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,223]DEBUG  7010[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 14:08:49,224]DEBUG  7011[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 52
[2017-10-14 14:08:49,224]DEBUG  7011[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,225]DEBUG  7012[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:49,225]DEBUG  7012[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,225]DEBUG  7012[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 14:08:49,226]DEBUG  7013[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 53
[2017-10-14 14:08:49,226]DEBUG  7013[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,227]DEBUG  7014[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:49,227]DEBUG  7014[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,227]DEBUG  7014[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 14:08:49,228]DEBUG  7015[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 54
[2017-10-14 14:08:49,228]DEBUG  7015[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,231]DEBUG  7018[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:49,231]DEBUG  7018[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:49,231]DEBUG  7018[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:49,231]DEBUG  7018[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:49,232]DEBUG  7019[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:49,232]DEBUG  7019[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=52, roleName=Supervisor}
[2017-10-14 14:08:49,232]DEBUG  7019[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=51, roleName=Administrator}
[2017-10-14 14:08:49,232]DEBUG  7019[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=54, roleName=Merchandiser}
[2017-10-14 14:08:49,233]DEBUG  7020[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=53, roleName=Customer}
[2017-10-14 14:08:49,233]DEBUG  7020[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,233]DEBUG  7020[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName like ? and this_.ID<=? order by this_.RoleName asc
[2017-10-14 14:08:49,234]DEBUG  7021[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:49,235]DEBUG  7022[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#51]
[2017-10-14 14:08:49,235]DEBUG  7022[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#54]
[2017-10-14 14:08:49,235]DEBUG  7022[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#52]
[2017-10-14 14:08:49,235]DEBUG  7022[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:49,236]DEBUG  7023[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,236]DEBUG  7023[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:49,236]DEBUG  7023[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:49,237]DEBUG  7024[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:49,237]DEBUG  7024[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:49,237]DEBUG  7024[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:49,237]DEBUG  7024[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:49,238]DEBUG  7025[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=52, roleName=Supervisor}
[2017-10-14 14:08:49,238]DEBUG  7025[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=51, roleName=Administrator}
[2017-10-14 14:08:49,238]DEBUG  7025[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=54, roleName=Merchandiser}
[2017-10-14 14:08:49,238]DEBUG  7025[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=53, roleName=Customer}
[2017-10-14 14:08:49,238]DEBUG  7025[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,238]DEBUG  7025[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName like ? and this_.ID<=? order by this_.RoleName desc
[2017-10-14 14:08:49,239]DEBUG  7026[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:49,239]DEBUG  7026[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#52]
[2017-10-14 14:08:49,239]DEBUG  7026[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#54]
[2017-10-14 14:08:49,239]DEBUG  7026[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#51]
[2017-10-14 14:08:49,239]DEBUG  7026[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:49,239]DEBUG  7026[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,240]DEBUG  7027[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:49,240]DEBUG  7027[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:49,240]DEBUG  7027[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:49,240]DEBUG  7027[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:49,240]DEBUG  7027[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:49,240]DEBUG  7027[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:49,240]DEBUG  7027[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=52, roleName=Supervisor}
[2017-10-14 14:08:49,241]DEBUG  7028[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=51, roleName=Administrator}
[2017-10-14 14:08:49,241]DEBUG  7028[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=54, roleName=Merchandiser}
[2017-10-14 14:08:49,241]DEBUG  7028[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=53, roleName=Customer}
[2017-10-14 14:08:49,241]DEBUG  7028[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,241]DEBUG  7028[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName like ? and this_.ID<=? order by this_.ID asc
[2017-10-14 14:08:49,242]DEBUG  7029[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:49,242]DEBUG  7029[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#51]
[2017-10-14 14:08:49,242]DEBUG  7029[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#52]
[2017-10-14 14:08:49,242]DEBUG  7029[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#54]
[2017-10-14 14:08:49,242]DEBUG  7029[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:49,242]DEBUG  7029[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,242]DEBUG  7029[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:49,243]DEBUG  7030[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:49,243]DEBUG  7030[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:49,243]DEBUG  7030[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:49,243]DEBUG  7030[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:49,243]DEBUG  7030[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:49,243]DEBUG  7030[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=52, roleName=Supervisor}
[2017-10-14 14:08:49,243]DEBUG  7030[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=51, roleName=Administrator}
[2017-10-14 14:08:49,244]DEBUG  7031[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=54, roleName=Merchandiser}
[2017-10-14 14:08:49,244]DEBUG  7031[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=53, roleName=Customer}
[2017-10-14 14:08:49,244]DEBUG  7031[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,244]DEBUG  7031[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName like ? and this_.ID<=? order by this_.ID desc
[2017-10-14 14:08:49,244]DEBUG  7031[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:49,245]DEBUG  7032[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#54]
[2017-10-14 14:08:49,245]DEBUG  7032[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#52]
[2017-10-14 14:08:49,245]DEBUG  7032[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#51]
[2017-10-14 14:08:49,245]DEBUG  7032[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:49,245]DEBUG  7032[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,245]DEBUG  7032[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:49,245]DEBUG  7032[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:49,246]DEBUG  7033[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:49,246]DEBUG  7033[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:49,246]DEBUG  7033[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:49,246]DEBUG  7033[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:49,246]DEBUG  7033[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=52, roleName=Supervisor}
[2017-10-14 14:08:49,246]DEBUG  7033[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=51, roleName=Administrator}
[2017-10-14 14:08:49,246]DEBUG  7033[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=54, roleName=Merchandiser}
[2017-10-14 14:08:49,246]DEBUG  7033[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=53, roleName=Customer}
[2017-10-14 14:08:49,246]DEBUG  7033[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,247]DEBUG  7034[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 14:08:49,247]DEBUG  7034[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,247]DEBUG  7034[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7e062eda testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@7cae71e4, testMethod = testFindByCriterionsSorting@RoleDAOTest, testException = [null]]]
[2017-10-14 14:08:49,247]DEBUG  7034[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 14:08:49,247]DEBUG  7034[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@15b327bb]
[2017-10-14 14:08:49,247]DEBUG  7034[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 14:08:49,277]DEBUG  7064[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 14:08:49,277]DEBUG  7064[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:49,277]DEBUG  7064[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@15b327bb] after transaction
[2017-10-14 14:08:49,277]DEBUG  7064[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 14:08:49,278]DEBUG  7065[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 14:08:49,278]DEBUG  7065[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:49,278] INFO  7065[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@7e062eda testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@7cae71e4, testMethod = testFindByCriterionsSorting@RoleDAOTest, testException = [null]]]
[2017-10-14 14:08:49,279]DEBUG  7066[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@7e062eda testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@7cae71e4, testMethod = testFindByCriterionsSorting@RoleDAOTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 14:08:49,279]DEBUG  7066[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2017-10-14 14:08:49,279]DEBUG  7066[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2017-10-14 14:08:49,279]DEBUG  7066[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@7e062eda testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@4f181113, testMethod = [null], testException = [null]]].
[2017-10-14 14:08:49,280]DEBUG  7067[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 14:08:49,280]DEBUG  7067[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 14:08:49,280]DEBUG  7067[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 14:08:49,280]DEBUG  7067[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 14:08:49,280]DEBUG  7067[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 14:08:49,280]DEBUG  7067[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 14:08:49,280]DEBUG  7067[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 14:08:49,280]DEBUG  7067[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 14:08:49,280]DEBUG  7067[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 14:08:49,280]DEBUG  7067[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 14:08:49,280]DEBUG  7067[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 14:08:49,280]DEBUG  7067[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 14:08:49,281]DEBUG  7068[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 14:08:49,281]DEBUG  7068[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 14:08:49,281]DEBUG  7068[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 14:08:49,281]DEBUG  7068[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 14:08:49,281]DEBUG  7068[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 14:08:49,281]DEBUG  7068[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 14:08:49,281]DEBUG  7068[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 14:08:49,281]DEBUG  7068[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 14:08:49,281]DEBUG  7068[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 14:08:49,281]DEBUG  7068[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 14:08:49,282]DEBUG  7069[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@4f181113]
[2017-10-14 14:08:49,282]DEBUG  7069[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByOneOfCriterionsSorting' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:49,282]DEBUG  7069[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@7e062eda testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@4f181113, testMethod = testFindByOneOfCriterionsSorting@RoleDAOTest, testException = [null]]]
[2017-10-14 14:08:49,282]DEBUG  7069[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 14:08:49,283]DEBUG  7070[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByOneOfCriterionsSorting]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:49,283]DEBUG  7070[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15079793292
[2017-10-14 14:08:49,283]DEBUG  7070[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@6eecdcff] for Hibernate transaction
[2017-10-14 14:08:49,283]DEBUG  7070[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@6eecdcff]
[2017-10-14 14:08:49,283]DEBUG  7070[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 14:08:49,283]DEBUG  7070[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 14:08:49,283]DEBUG  7070[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 14:08:49,283]DEBUG  7070[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7e062eda testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@4f181113, testMethod = testFindByOneOfCriterionsSorting@RoleDAOTest, testException = [null]]]
[2017-10-14 14:08:49,284] INFO  7071[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (13): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@48ad0abe]; rollback [true]
[2017-10-14 14:08:49,284]DEBUG  7071[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:49,284]DEBUG  7071[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,284]DEBUG  7071[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 14:08:49,285]DEBUG  7072[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 55
[2017-10-14 14:08:49,285]DEBUG  7072[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,285]DEBUG  7072[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:49,286]DEBUG  7073[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,286]DEBUG  7073[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 14:08:49,287]DEBUG  7074[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 56
[2017-10-14 14:08:49,287]DEBUG  7074[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,287]DEBUG  7074[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:49,288]DEBUG  7075[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,288]DEBUG  7075[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 14:08:49,289]DEBUG  7076[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 57
[2017-10-14 14:08:49,289]DEBUG  7076[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,289]DEBUG  7076[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:49,290]DEBUG  7077[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,290]DEBUG  7077[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 14:08:49,290]DEBUG  7077[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 58
[2017-10-14 14:08:49,291]DEBUG  7078[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,292]DEBUG  7079[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:49,292]DEBUG  7079[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:49,292]DEBUG  7079[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:49,292]DEBUG  7079[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:49,293]DEBUG  7080[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:49,293]DEBUG  7080[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=58, roleName=Merchandiser}
[2017-10-14 14:08:49,293]DEBUG  7080[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=57, roleName=Customer}
[2017-10-14 14:08:49,293]DEBUG  7080[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=56, roleName=Supervisor}
[2017-10-14 14:08:49,294]DEBUG  7081[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=55, roleName=Administrator}
[2017-10-14 14:08:49,294]DEBUG  7081[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,294]DEBUG  7081[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName like ? and this_.ID<=? order by this_.RoleName asc
[2017-10-14 14:08:49,295]DEBUG  7082[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:49,296]DEBUG  7083[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#55]
[2017-10-14 14:08:49,296]DEBUG  7083[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#58]
[2017-10-14 14:08:49,296]DEBUG  7083[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#56]
[2017-10-14 14:08:49,296]DEBUG  7083[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:49,297]DEBUG  7084[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,297]DEBUG  7084[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:49,297]DEBUG  7084[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:49,298]DEBUG  7085[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:49,298]DEBUG  7085[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:49,298]DEBUG  7085[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:49,298]DEBUG  7085[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:49,299]DEBUG  7086[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=58, roleName=Merchandiser}
[2017-10-14 14:08:49,299]DEBUG  7086[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=57, roleName=Customer}
[2017-10-14 14:08:49,299]DEBUG  7086[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=56, roleName=Supervisor}
[2017-10-14 14:08:49,299]DEBUG  7086[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=55, roleName=Administrator}
[2017-10-14 14:08:49,300]DEBUG  7087[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,300]DEBUG  7087[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName like ? and this_.ID<=? order by this_.RoleName desc
[2017-10-14 14:08:49,301]DEBUG  7088[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:49,301]DEBUG  7088[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#56]
[2017-10-14 14:08:49,301]DEBUG  7088[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#58]
[2017-10-14 14:08:49,302]DEBUG  7089[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#55]
[2017-10-14 14:08:49,302]DEBUG  7089[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:49,302]DEBUG  7089[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,302]DEBUG  7089[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:49,303]DEBUG  7090[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:49,303]DEBUG  7090[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:49,303]DEBUG  7090[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:49,304]DEBUG  7091[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:49,304]DEBUG  7091[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:49,304]DEBUG  7091[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=58, roleName=Merchandiser}
[2017-10-14 14:08:49,304]DEBUG  7091[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=57, roleName=Customer}
[2017-10-14 14:08:49,304]DEBUG  7091[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=56, roleName=Supervisor}
[2017-10-14 14:08:49,305]DEBUG  7092[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=55, roleName=Administrator}
[2017-10-14 14:08:49,305]DEBUG  7092[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,305]DEBUG  7092[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 14:08:49,306]DEBUG  7093[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,306]DEBUG  7093[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7e062eda testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@4f181113, testMethod = testFindByOneOfCriterionsSorting@RoleDAOTest, testException = [null]]]
[2017-10-14 14:08:49,306]DEBUG  7093[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 14:08:49,306]DEBUG  7093[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@6eecdcff]
[2017-10-14 14:08:49,307]DEBUG  7094[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 14:08:49,344]DEBUG  7131[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 14:08:49,344]DEBUG  7131[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:49,344]DEBUG  7131[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@6eecdcff] after transaction
[2017-10-14 14:08:49,344]DEBUG  7131[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 14:08:49,344]DEBUG  7131[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 14:08:49,345]DEBUG  7132[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:49,345] INFO  7132[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@7e062eda testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@4f181113, testMethod = testFindByOneOfCriterionsSorting@RoleDAOTest, testException = [null]]]
[2017-10-14 14:08:49,347]DEBUG  7134[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@7e062eda testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@4f181113, testMethod = testFindByOneOfCriterionsSorting@RoleDAOTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 14:08:49,347]DEBUG  7134[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2017-10-14 14:08:49,347]DEBUG  7134[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2017-10-14 14:08:49,348]DEBUG  7135[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@7e062eda testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@590876bf, testMethod = [null], testException = [null]]].
[2017-10-14 14:08:49,348]DEBUG  7135[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 14:08:49,349]DEBUG  7136[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 14:08:49,349]DEBUG  7136[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 14:08:49,349]DEBUG  7136[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 14:08:49,349]DEBUG  7136[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 14:08:49,349]DEBUG  7136[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 14:08:49,350]DEBUG  7137[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 14:08:49,350]DEBUG  7137[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 14:08:49,350]DEBUG  7137[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 14:08:49,350]DEBUG  7137[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 14:08:49,356]DEBUG  7143[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 14:08:49,356]DEBUG  7143[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 14:08:49,356]DEBUG  7143[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 14:08:49,357]DEBUG  7144[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 14:08:49,357]DEBUG  7144[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 14:08:49,357]DEBUG  7144[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 14:08:49,357]DEBUG  7144[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 14:08:49,357]DEBUG  7144[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 14:08:49,358]DEBUG  7145[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 14:08:49,358]DEBUG  7145[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 14:08:49,358]DEBUG  7145[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 14:08:49,358]DEBUG  7145[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 14:08:49,358]DEBUG  7145[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@590876bf]
[2017-10-14 14:08:49,359]DEBUG  7146[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByRoleNameWithUserSelectWayConditions' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:49,359]DEBUG  7146[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@7e062eda testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@590876bf, testMethod = testFindByRoleNameWithUserSelectWayConditions@RoleDAOTest, testException = [null]]]
[2017-10-14 14:08:49,359]DEBUG  7146[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 14:08:49,360]DEBUG  7147[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByRoleNameWithUserSelectWayConditions]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:49,360]DEBUG  7147[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15079793293
[2017-10-14 14:08:49,360]DEBUG  7147[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@12b90889] for Hibernate transaction
[2017-10-14 14:08:49,360]DEBUG  7147[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@12b90889]
[2017-10-14 14:08:49,360]DEBUG  7147[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 14:08:49,360]DEBUG  7147[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 14:08:49,360]DEBUG  7147[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 14:08:49,360]DEBUG  7147[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7e062eda testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@590876bf, testMethod = testFindByRoleNameWithUserSelectWayConditions@RoleDAOTest, testException = [null]]]
[2017-10-14 14:08:49,360] INFO  7147[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (14): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@48ad0abe]; rollback [true]
[2017-10-14 14:08:49,361]DEBUG  7148[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:49,361]DEBUG  7148[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,361]DEBUG  7148[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 14:08:49,361]DEBUG  7148[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 59
[2017-10-14 14:08:49,362]DEBUG  7149[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,362]DEBUG  7149[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:49,362]DEBUG  7149[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,362]DEBUG  7149[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 14:08:49,362]DEBUG  7149[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 60
[2017-10-14 14:08:49,362]DEBUG  7149[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,363]DEBUG  7150[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:49,363]DEBUG  7150[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,363]DEBUG  7150[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 14:08:49,363]DEBUG  7150[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 61
[2017-10-14 14:08:49,363]DEBUG  7150[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,363]DEBUG  7150[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:49,364]DEBUG  7151[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,364]DEBUG  7151[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 14:08:49,364]DEBUG  7151[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 62
[2017-10-14 14:08:49,364]DEBUG  7151[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,364]DEBUG  7151[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:49,364]DEBUG  7151[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,365]DEBUG  7152[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 14:08:49,365]DEBUG  7152[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 63
[2017-10-14 14:08:49,365]DEBUG  7152[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,366]DEBUG  7153[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:49,367]DEBUG  7154[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:49,367]DEBUG  7154[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2017-10-14 14:08:49,367]DEBUG  7154[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:49,367]DEBUG  7154[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:49,367]DEBUG  7154[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=60, roleName=Supervisor}
[2017-10-14 14:08:49,367]DEBUG  7154[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=59, roleName=Administrator}
[2017-10-14 14:08:49,367]DEBUG  7154[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=61, roleName=Customer}
[2017-10-14 14:08:49,367]DEBUG  7154[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=62, roleName=Merchandiser}
[2017-10-14 14:08:49,368]DEBUG  7155[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=63, roleName=tempAdmin}
[2017-10-14 14:08:49,368]DEBUG  7155[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,368]DEBUG  7155[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2017-10-14 14:08:49,368]DEBUG  7155[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:49,368]DEBUG  7155[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#63]
[2017-10-14 14:08:49,369]DEBUG  7156[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:49,369]DEBUG  7156[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,369]DEBUG  7156[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:49,369]DEBUG  7156[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:49,369]DEBUG  7156[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:49,370]DEBUG  7157[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 1 updates, 0 deletions to 5 objects
[2017-10-14 14:08:49,370]DEBUG  7157[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:49,370]DEBUG  7157[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:49,371]DEBUG  7158[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=60, roleName=Supervisor}
[2017-10-14 14:08:49,371]DEBUG  7158[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=59, roleName=Administrator}
[2017-10-14 14:08:49,371]DEBUG  7158[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=61, roleName=Customer}
[2017-10-14 14:08:49,371]DEBUG  7158[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=62, roleName=Merchandiser}
[2017-10-14 14:08:49,371]DEBUG  7158[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=63, roleName=tempAdmin and something}
[2017-10-14 14:08:49,371]DEBUG  7158[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Roles
[2017-10-14 14:08:49,372]DEBUG  7159[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,372]DEBUG  7159[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Roles set RoleName=? where ID=?
[2017-10-14 14:08:49,372]DEBUG  7159[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
[2017-10-14 14:08:49,373]DEBUG  7160[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,373]DEBUG  7160[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,373]DEBUG  7160[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName like ?
[2017-10-14 14:08:49,374]DEBUG  7161[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:49,374]DEBUG  7161[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#63]
[2017-10-14 14:08:49,374]DEBUG  7161[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:49,374]DEBUG  7161[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,374]DEBUG  7161[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:49,374]DEBUG  7161[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:49,375]DEBUG  7162[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:49,375]DEBUG  7162[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 1 updates, 0 deletions to 5 objects
[2017-10-14 14:08:49,375]DEBUG  7162[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:49,375]DEBUG  7162[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:49,375]DEBUG  7162[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=60, roleName=Supervisor}
[2017-10-14 14:08:49,375]DEBUG  7162[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=59, roleName=Administrator}
[2017-10-14 14:08:49,375]DEBUG  7162[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=61, roleName=Customer}
[2017-10-14 14:08:49,375]DEBUG  7162[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=62, roleName=Merchandiser}
[2017-10-14 14:08:49,375]DEBUG  7162[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=63, roleName=something heretempAdmin and something and something here}
[2017-10-14 14:08:49,376]DEBUG  7163[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Roles
[2017-10-14 14:08:49,376]DEBUG  7163[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,376]DEBUG  7163[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Roles set RoleName=? where ID=?
[2017-10-14 14:08:49,376]DEBUG  7163[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
[2017-10-14 14:08:49,376]DEBUG  7163[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,376]DEBUG  7163[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,377]DEBUG  7164[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName like ?
[2017-10-14 14:08:49,377]DEBUG  7164[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:49,377]DEBUG  7164[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#63]
[2017-10-14 14:08:49,377]DEBUG  7164[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:49,377]DEBUG  7164[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,378]DEBUG  7165[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:49,378]DEBUG  7165[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:49,378]DEBUG  7165[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:49,378]DEBUG  7165[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2017-10-14 14:08:49,378]DEBUG  7165[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:49,378]DEBUG  7165[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:49,378]DEBUG  7165[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=60, roleName=Supervisor}
[2017-10-14 14:08:49,378]DEBUG  7165[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=59, roleName=Administrator}
[2017-10-14 14:08:49,379]DEBUG  7166[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=61, roleName=Customer}
[2017-10-14 14:08:49,379]DEBUG  7166[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=62, roleName=Merchandiser}
[2017-10-14 14:08:49,379]DEBUG  7166[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=63, roleName=something heretempAdmin and something and something here}
[2017-10-14 14:08:49,379]DEBUG  7166[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,379]DEBUG  7166[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 14:08:49,379]DEBUG  7166[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,379]DEBUG  7166[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7e062eda testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@590876bf, testMethod = testFindByRoleNameWithUserSelectWayConditions@RoleDAOTest, testException = [null]]]
[2017-10-14 14:08:49,380]DEBUG  7167[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 14:08:49,380]DEBUG  7167[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@12b90889]
[2017-10-14 14:08:49,380]DEBUG  7167[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 14:08:49,410]DEBUG  7197[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 14:08:49,411]DEBUG  7198[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:49,411]DEBUG  7198[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@12b90889] after transaction
[2017-10-14 14:08:49,411]DEBUG  7198[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 14:08:49,411]DEBUG  7198[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 14:08:49,411]DEBUG  7198[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:49,412] INFO  7199[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@7e062eda testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@590876bf, testMethod = testFindByRoleNameWithUserSelectWayConditions@RoleDAOTest, testException = [null]]]
[2017-10-14 14:08:49,413]DEBUG  7200[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@7e062eda testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@590876bf, testMethod = testFindByRoleNameWithUserSelectWayConditions@RoleDAOTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 14:08:49,414]DEBUG  7201[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2017-10-14 14:08:49,414]DEBUG  7201[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2017-10-14 14:08:49,415]DEBUG  7202[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@7e062eda testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@4ebded0b, testMethod = [null], testException = [null]]].
[2017-10-14 14:08:49,415]DEBUG  7202[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 14:08:49,415]DEBUG  7202[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 14:08:49,416]DEBUG  7203[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 14:08:49,416]DEBUG  7203[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 14:08:49,416]DEBUG  7203[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 14:08:49,416]DEBUG  7203[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 14:08:49,416]DEBUG  7203[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 14:08:49,417]DEBUG  7204[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 14:08:49,417]DEBUG  7204[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 14:08:49,417]DEBUG  7204[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 14:08:49,417]DEBUG  7204[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 14:08:49,417]DEBUG  7204[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 14:08:49,418]DEBUG  7205[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 14:08:49,418]DEBUG  7205[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 14:08:49,418]DEBUG  7205[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 14:08:49,418]DEBUG  7205[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 14:08:49,418]DEBUG  7205[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 14:08:49,418]DEBUG  7205[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 14:08:49,418]DEBUG  7205[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 14:08:49,418]DEBUG  7205[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 14:08:49,419]DEBUG  7206[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 14:08:49,419]DEBUG  7206[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 14:08:49,419]DEBUG  7206[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@4ebded0b]
[2017-10-14 14:08:49,419]DEBUG  7206[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByRoleNameWithUserSelectWayConditionsSorting' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:49,419]DEBUG  7206[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@7e062eda testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@4ebded0b, testMethod = testFindByRoleNameWithUserSelectWayConditionsSorting@RoleDAOTest, testException = [null]]]
[2017-10-14 14:08:49,419]DEBUG  7206[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 14:08:49,420]DEBUG  7207[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByRoleNameWithUserSelectWayConditionsSorting]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:49,420]DEBUG  7207[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15079793294
[2017-10-14 14:08:49,420]DEBUG  7207[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@2a8025a0] for Hibernate transaction
[2017-10-14 14:08:49,420]DEBUG  7207[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@2a8025a0]
[2017-10-14 14:08:49,420]DEBUG  7207[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 14:08:49,420]DEBUG  7207[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 14:08:49,421]DEBUG  7208[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 14:08:49,421]DEBUG  7208[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7e062eda testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@4ebded0b, testMethod = testFindByRoleNameWithUserSelectWayConditionsSorting@RoleDAOTest, testException = [null]]]
[2017-10-14 14:08:49,421] INFO  7208[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (15): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@48ad0abe]; rollback [true]
[2017-10-14 14:08:49,421]DEBUG  7208[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:49,421]DEBUG  7208[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,421]DEBUG  7208[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 14:08:49,422]DEBUG  7209[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 64
[2017-10-14 14:08:49,422]DEBUG  7209[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,422]DEBUG  7209[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:49,422]DEBUG  7209[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,422]DEBUG  7209[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 14:08:49,423]DEBUG  7210[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 65
[2017-10-14 14:08:49,423]DEBUG  7210[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,423]DEBUG  7210[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:49,423]DEBUG  7210[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,423]DEBUG  7210[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 14:08:49,423]DEBUG  7210[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 66
[2017-10-14 14:08:49,424]DEBUG  7211[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,424]DEBUG  7211[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:49,424]DEBUG  7211[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,424]DEBUG  7211[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 14:08:49,424]DEBUG  7211[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 67
[2017-10-14 14:08:49,424]DEBUG  7211[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,425]DEBUG  7212[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:49,425]DEBUG  7212[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,425]DEBUG  7212[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 14:08:49,425]DEBUG  7212[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 68
[2017-10-14 14:08:49,425]DEBUG  7212[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,426]DEBUG  7213[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:49,426]DEBUG  7213[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:49,426]DEBUG  7213[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2017-10-14 14:08:49,426]DEBUG  7213[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:49,426]DEBUG  7213[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:49,426]DEBUG  7213[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=65, roleName=Supervisor}
[2017-10-14 14:08:49,426]DEBUG  7213[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=66, roleName=Customer}
[2017-10-14 14:08:49,426]DEBUG  7213[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=67, roleName=Merchandiser}
[2017-10-14 14:08:49,426]DEBUG  7213[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=68, roleName=tempAdmin}
[2017-10-14 14:08:49,427]DEBUG  7214[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=64, roleName=Administrator}
[2017-10-14 14:08:49,427]DEBUG  7214[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,427]DEBUG  7214[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2017-10-14 14:08:49,427]DEBUG  7214[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:49,427]DEBUG  7214[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#68]
[2017-10-14 14:08:49,427]DEBUG  7214[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:49,428]DEBUG  7215[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,428]DEBUG  7215[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:49,428]DEBUG  7215[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:49,428]DEBUG  7215[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:49,428]DEBUG  7215[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 1 updates, 0 deletions to 5 objects
[2017-10-14 14:08:49,428]DEBUG  7215[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:49,428]DEBUG  7215[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:49,429]DEBUG  7216[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=65, roleName=Supervisor}
[2017-10-14 14:08:49,429]DEBUG  7216[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=66, roleName=Customer}
[2017-10-14 14:08:49,429]DEBUG  7216[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=67, roleName=Merchandiser}
[2017-10-14 14:08:49,429]DEBUG  7216[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=68, roleName=tempAdmin and something}
[2017-10-14 14:08:49,429]DEBUG  7216[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=64, roleName=Administrator}
[2017-10-14 14:08:49,429]DEBUG  7216[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Roles
[2017-10-14 14:08:49,429]DEBUG  7216[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,429]DEBUG  7216[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Roles set RoleName=? where ID=?
[2017-10-14 14:08:49,429]DEBUG  7216[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
[2017-10-14 14:08:49,430]DEBUG  7217[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,430]DEBUG  7217[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,430]DEBUG  7217[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName like ?
[2017-10-14 14:08:49,430]DEBUG  7217[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:49,431]DEBUG  7218[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#68]
[2017-10-14 14:08:49,431]DEBUG  7218[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:49,431]DEBUG  7218[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,431]DEBUG  7218[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:49,431]DEBUG  7218[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:49,431]DEBUG  7218[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:49,431]DEBUG  7218[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 1 updates, 0 deletions to 5 objects
[2017-10-14 14:08:49,431]DEBUG  7218[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:49,432]DEBUG  7219[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:49,432]DEBUG  7219[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=65, roleName=Supervisor}
[2017-10-14 14:08:49,432]DEBUG  7219[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=66, roleName=Customer}
[2017-10-14 14:08:49,432]DEBUG  7219[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=67, roleName=Merchandiser}
[2017-10-14 14:08:49,432]DEBUG  7219[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=68, roleName=something heretempAdmin and something and something here}
[2017-10-14 14:08:49,432]DEBUG  7219[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=64, roleName=Administrator}
[2017-10-14 14:08:49,432]DEBUG  7219[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Roles
[2017-10-14 14:08:49,432]DEBUG  7219[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,432]DEBUG  7219[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Roles set RoleName=? where ID=?
[2017-10-14 14:08:49,433]DEBUG  7220[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
[2017-10-14 14:08:49,433]DEBUG  7220[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,433]DEBUG  7220[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,433]DEBUG  7220[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName like ?
[2017-10-14 14:08:49,433]DEBUG  7220[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:49,434]DEBUG  7221[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#68]
[2017-10-14 14:08:49,434]DEBUG  7221[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:49,434]DEBUG  7221[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,434]DEBUG  7221[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:49,434]DEBUG  7221[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:49,434]DEBUG  7221[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:49,434]DEBUG  7221[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2017-10-14 14:08:49,434]DEBUG  7221[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:49,435]DEBUG  7222[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:49,435]DEBUG  7222[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=65, roleName=Supervisor}
[2017-10-14 14:08:49,435]DEBUG  7222[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=66, roleName=Customer}
[2017-10-14 14:08:49,435]DEBUG  7222[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=67, roleName=Merchandiser}
[2017-10-14 14:08:49,435]DEBUG  7222[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=68, roleName=something heretempAdmin and something and something here}
[2017-10-14 14:08:49,435]DEBUG  7222[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=64, roleName=Administrator}
[2017-10-14 14:08:49,435]DEBUG  7222[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,435]DEBUG  7222[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 14:08:49,435]DEBUG  7222[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,436]DEBUG  7223[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7e062eda testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@4ebded0b, testMethod = testFindByRoleNameWithUserSelectWayConditionsSorting@RoleDAOTest, testException = [null]]]
[2017-10-14 14:08:49,436]DEBUG  7223[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 14:08:49,436]DEBUG  7223[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@2a8025a0]
[2017-10-14 14:08:49,436]DEBUG  7223[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 14:08:49,469]DEBUG  7256[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 14:08:49,469]DEBUG  7256[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:49,469]DEBUG  7256[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@2a8025a0] after transaction
[2017-10-14 14:08:49,469]DEBUG  7256[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 14:08:49,470]DEBUG  7257[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 14:08:49,470]DEBUG  7257[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:49,470] INFO  7257[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@7e062eda testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@4ebded0b, testMethod = testFindByRoleNameWithUserSelectWayConditionsSorting@RoleDAOTest, testException = [null]]]
[2017-10-14 14:08:49,472]DEBUG  7259[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@7e062eda testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@4ebded0b, testMethod = testFindByRoleNameWithUserSelectWayConditionsSorting@RoleDAOTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 14:08:49,472]DEBUG  7259[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2017-10-14 14:08:49,472]DEBUG  7259[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2017-10-14 14:08:49,473]DEBUG  7260[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@7e062eda testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@17654aef, testMethod = [null], testException = [null]]].
[2017-10-14 14:08:49,474]DEBUG  7261[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 14:08:49,474]DEBUG  7261[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 14:08:49,474]DEBUG  7261[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 14:08:49,474]DEBUG  7261[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 14:08:49,474]DEBUG  7261[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 14:08:49,475]DEBUG  7262[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 14:08:49,475]DEBUG  7262[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 14:08:49,475]DEBUG  7262[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 14:08:49,475]DEBUG  7262[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 14:08:49,475]DEBUG  7262[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 14:08:49,476]DEBUG  7263[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 14:08:49,476]DEBUG  7263[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 14:08:49,476]DEBUG  7263[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 14:08:49,476]DEBUG  7263[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 14:08:49,476]DEBUG  7263[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 14:08:49,477]DEBUG  7264[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 14:08:49,477]DEBUG  7264[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 14:08:49,477]DEBUG  7264[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 14:08:49,477]DEBUG  7264[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 14:08:49,477]DEBUG  7264[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 14:08:49,478]DEBUG  7265[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 14:08:49,478]DEBUG  7265[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 14:08:49,478]DEBUG  7265[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@17654aef]
[2017-10-14 14:08:49,479]DEBUG  7266[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testContextFile' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:49,480]DEBUG  7267[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@7e062eda testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@17654aef, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2017-10-14 14:08:49,480]DEBUG  7267[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 14:08:49,481]DEBUG  7268[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testContextFile]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:49,482]DEBUG  7269[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15079793294
[2017-10-14 14:08:49,482]DEBUG  7269[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@56ecfc9d] for Hibernate transaction
[2017-10-14 14:08:49,482]DEBUG  7269[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@56ecfc9d]
[2017-10-14 14:08:49,482]DEBUG  7269[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 14:08:49,482]DEBUG  7269[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 14:08:49,483]DEBUG  7270[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 14:08:49,483]DEBUG  7270[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7e062eda testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@17654aef, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2017-10-14 14:08:49,483] INFO  7270[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (16): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@48ad0abe]; rollback [true]
[2017-10-14 14:08:49,484]DEBUG  7271[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:49,484]DEBUG  7271[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,484]DEBUG  7271[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 14:08:49,485]DEBUG  7272[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 69
[2017-10-14 14:08:49,486]DEBUG  7273[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,486]DEBUG  7273[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:49,486]DEBUG  7273[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,487]DEBUG  7274[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 14:08:49,487]DEBUG  7274[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 70
[2017-10-14 14:08:49,488]DEBUG  7275[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,488]DEBUG  7275[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:49,488]DEBUG  7275[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,488]DEBUG  7275[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 14:08:49,489]DEBUG  7276[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 71
[2017-10-14 14:08:49,489]DEBUG  7276[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,490]DEBUG  7277[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:49,490]DEBUG  7277[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,490]DEBUG  7277[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 14:08:49,491]DEBUG  7278[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 72
[2017-10-14 14:08:49,491]DEBUG  7278[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,492]DEBUG  7279[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:49,492]DEBUG  7279[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:49,493]DEBUG  7280[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 14:08:49,493]DEBUG  7280[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:49,493]DEBUG  7280[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:49,493]DEBUG  7280[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=69, roleName=Administrator}
[2017-10-14 14:08:49,494]DEBUG  7281[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=70, roleName=Supervisor}
[2017-10-14 14:08:49,494]DEBUG  7281[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=71, roleName=Customer}
[2017-10-14 14:08:49,494]DEBUG  7281[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=72, roleName=Merchandiser}
[2017-10-14 14:08:49,494]DEBUG  7281[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,495]DEBUG  7282[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 14:08:49,495]DEBUG  7282[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,495]DEBUG  7282[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7e062eda testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@17654aef, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2017-10-14 14:08:49,496]DEBUG  7283[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 14:08:49,496]DEBUG  7283[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@56ecfc9d]
[2017-10-14 14:08:49,496]DEBUG  7283[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 14:08:49,527]DEBUG  7314[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 14:08:49,527]DEBUG  7314[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:49,528]DEBUG  7315[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@56ecfc9d] after transaction
[2017-10-14 14:08:49,528]DEBUG  7315[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 14:08:49,528]DEBUG  7315[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 14:08:49,528]DEBUG  7315[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:49,528] INFO  7315[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@7e062eda testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@17654aef, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2017-10-14 14:08:49,530]DEBUG  7317[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@7e062eda testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@17654aef, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 14:08:49,530]DEBUG  7317[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestClass(DirtiesContextTestExecutionListener.java:113) - After test class: context [[TestContext@7e062eda testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = [null], testMethod = [null], testException = [null]]], dirtiesContext [false].
[2017-10-14 14:08:49,534]DEBUG  7321[main] - org.springframework.test.context.junit4.SpringJUnit4ClassRunner.<init>(SpringJUnit4ClassRunner.java:106) - SpringJUnit4ClassRunner constructor called with [class com.softserveinc.edu.oms.persistence.dao.OrderDaoTest].
[2017-10-14 14:08:49,534] INFO  7321[main] - org.springframework.test.context.TestContextManager.retrieveTestExecutionListeners(TestContextManager.java:185) - @TestExecutionListeners is not present for class [class com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]: using defaults.
[2017-10-14 14:08:49,535]DEBUG  7322[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2017-10-14 14:08:49,535]DEBUG  7322[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2017-10-14 14:08:49,538]DEBUG  7325[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2017-10-14 14:08:49,538]DEBUG  7325[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2017-10-14 14:08:49,539]DEBUG  7326[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2017-10-14 14:08:49,539]DEBUG  7326[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2017-10-14 14:08:49,560]DEBUG  7347[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2017-10-14 14:08:49,560]DEBUG  7347[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2017-10-14 14:08:49,561]DEBUG  7348[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@33721fb4 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@97f7ccf, testMethod = [null], testException = [null]]].
[2017-10-14 14:08:49,566]DEBUG  7353[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 14:08:49,566]DEBUG  7353[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 14:08:49,566]DEBUG  7353[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 14:08:49,566]DEBUG  7353[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 14:08:49,566]DEBUG  7353[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 14:08:49,566]DEBUG  7353[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 14:08:49,567]DEBUG  7354[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 14:08:49,567]DEBUG  7354[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 14:08:49,567]DEBUG  7354[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 14:08:49,567]DEBUG  7354[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]: AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 14:08:49,567]DEBUG  7354[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 14:08:49,567]DEBUG  7354[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 14:08:49,567]DEBUG  7354[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest' to bean named 'customerTypeDao'
[2017-10-14 14:08:49,567]DEBUG  7354[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 14:08:49,568]DEBUG  7355[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 14:08:49,568]DEBUG  7355[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest' to bean named 'dimensionDao'
[2017-10-14 14:08:49,568]DEBUG  7355[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 14:08:49,568]DEBUG  7355[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 14:08:49,568]DEBUG  7355[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest' to bean named 'orderDao'
[2017-10-14 14:08:49,568]DEBUG  7355[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 14:08:49,569]DEBUG  7356[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 14:08:49,569]DEBUG  7356[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest' to bean named 'orderItemDao'
[2017-10-14 14:08:49,569]DEBUG  7356[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 14:08:49,569]DEBUG  7356[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 14:08:49,569]DEBUG  7356[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest' to bean named 'orderStatusDao'
[2017-10-14 14:08:49,569]DEBUG  7356[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 14:08:49,570]DEBUG  7357[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 14:08:49,570]DEBUG  7357[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest' to bean named 'productDao'
[2017-10-14 14:08:49,570]DEBUG  7357[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 14:08:49,570]DEBUG  7357[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 14:08:49,570]DEBUG  7357[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest' to bean named 'regionDao'
[2017-10-14 14:08:49,570]DEBUG  7357[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 14:08:49,571]DEBUG  7358[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 14:08:49,571]DEBUG  7358[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest' to bean named 'roleDao'
[2017-10-14 14:08:49,571]DEBUG  7358[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 14:08:49,571]DEBUG  7358[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 14:08:49,571]DEBUG  7358[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest' to bean named 'userDao'
[2017-10-14 14:08:49,571]DEBUG  7358[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 14:08:49,572]DEBUG  7359[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 14:08:49,572]DEBUG  7359[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest' to bean named 'sessionFactory'
[2017-10-14 14:08:49,572]DEBUG  7359[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 14:08:49,573]DEBUG  7360[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindAll' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:49,573]DEBUG  7360[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 14:08:49,573]DEBUG  7360[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@97f7ccf]
[2017-10-14 14:08:49,574]DEBUG  7361[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderDaoTest.testFindAll()
[2017-10-14 14:08:49,574]DEBUG  7361[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testInsertOrUpdate' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:49,574]DEBUG  7361[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderDaoTest.testInsertOrUpdate()
[2017-10-14 14:08:49,574]DEBUG  7361[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testDelete' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:49,574]DEBUG  7361[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderDaoTest.testDelete()
[2017-10-14 14:08:49,575]DEBUG  7362[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'setUp' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:49,575]DEBUG  7362[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderDaoTest.setUp() throws java.lang.Exception
[2017-10-14 14:08:49,575]DEBUG  7362[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'tearDown' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:49,575]DEBUG  7362[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderDaoTest.tearDown()
[2017-10-14 14:08:49,575]DEBUG  7362[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindFindById' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:49,575]DEBUG  7362[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderDaoTest.testFindFindById()
[2017-10-14 14:08:49,575]DEBUG  7362[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByTotalPriceEquals' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:49,576]DEBUG  7363[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderDaoTest.testFindByTotalPriceEquals()
[2017-10-14 14:08:49,576]DEBUG  7363[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByTotalPriceLess' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:49,576]DEBUG  7363[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderDaoTest.testFindByTotalPriceLess()
[2017-10-14 14:08:49,577]DEBUG  7364[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByTotalPriceMore' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:49,577]DEBUG  7364[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderDaoTest.testFindByTotalPriceMore()
[2017-10-14 14:08:49,577]DEBUG  7364[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByDeliveryDateEquals' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:49,577]DEBUG  7364[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderDaoTest.testFindByDeliveryDateEquals()
[2017-10-14 14:08:49,577]DEBUG  7364[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByDeliveryDateMore' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:49,577]DEBUG  7364[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderDaoTest.testFindByDeliveryDateMore()
[2017-10-14 14:08:49,578]DEBUG  7365[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByDeliveryDateLess' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:49,578]DEBUG  7365[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderDaoTest.testFindByDeliveryDateLess()
[2017-10-14 14:08:49,578]DEBUG  7365[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByOrderDateEquals' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:49,578]DEBUG  7365[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderDaoTest.testFindByOrderDateEquals()
[2017-10-14 14:08:49,578]DEBUG  7365[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByOrderDateMore' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:49,578]DEBUG  7365[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderDaoTest.testFindByOrderDateMore()
[2017-10-14 14:08:49,578]DEBUG  7365[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByOrderDateLess' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:49,579]DEBUG  7366[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderDaoTest.testFindByOrderDateLess()
[2017-10-14 14:08:49,579]DEBUG  7366[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByOrderStatus' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:49,579]DEBUG  7366[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderDaoTest.testFindByOrderStatus()
[2017-10-14 14:08:49,579]DEBUG  7366[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanDB()
[2017-10-14 14:08:49,579]DEBUG  7366[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanCustomerType()
[2017-10-14 14:08:49,581]DEBUG  7368[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testContextFile' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:49,581]DEBUG  7368[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.testContextFile()
[2017-10-14 14:08:49,581]DEBUG  7368[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanUser()
[2017-10-14 14:08:49,582]DEBUG  7369[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanRole()
[2017-10-14 14:08:49,582]DEBUG  7369[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanRegion()
[2017-10-14 14:08:49,582]DEBUG  7369[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanProduct()
[2017-10-14 14:08:49,582]DEBUG  7369[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrderStatus()
[2017-10-14 14:08:49,582]DEBUG  7369[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrderItem()
[2017-10-14 14:08:49,582]DEBUG  7369[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrder()
[2017-10-14 14:08:49,582]DEBUG  7369[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanDimension()
[2017-10-14 14:08:49,582]DEBUG  7369[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:749) - Found finalize() method - using NO_OVERRIDE
[2017-10-14 14:08:49,582]DEBUG  7369[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:761) - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
[2017-10-14 14:08:49,583]DEBUG  7370[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
[2017-10-14 14:08:49,583]DEBUG  7370[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:766) - Found 'hashCode' method: public native int java.lang.Object.hashCode()
[2017-10-14 14:08:49,583]DEBUG  7370[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
[2017-10-14 14:08:49,583]DEBUG  7370[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
[2017-10-14 14:08:49,583]DEBUG  7370[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
[2017-10-14 14:08:49,583]DEBUG  7370[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2017-10-14 14:08:49,583]DEBUG  7370[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2017-10-14 14:08:49,583]DEBUG  7370[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
[2017-10-14 14:08:49,583]DEBUG  7370[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
[2017-10-14 14:08:49,584]DEBUG  7371[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
[2017-10-14 14:08:49,584]DEBUG  7371[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
[2017-10-14 14:08:49,584]DEBUG  7371[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
[2017-10-14 14:08:49,584]DEBUG  7371[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
[2017-10-14 14:08:49,584]DEBUG  7371[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
[2017-10-14 14:08:49,584]DEBUG  7371[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
[2017-10-14 14:08:49,584]DEBUG  7371[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
[2017-10-14 14:08:49,584]DEBUG  7371[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
[2017-10-14 14:08:49,584]DEBUG  7371[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
[2017-10-14 14:08:49,585]DEBUG  7372[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
[2017-10-14 14:08:49,585]DEBUG  7372[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
[2017-10-14 14:08:49,585]DEBUG  7372[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
[2017-10-14 14:08:49,585]DEBUG  7372[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2017-10-14 14:08:49,585]DEBUG  7372[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
[2017-10-14 14:08:49,585]DEBUG  7372[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
[2017-10-14 14:08:49,585]DEBUG  7372[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
[2017-10-14 14:08:49,585]DEBUG  7372[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
[2017-10-14 14:08:49,598]DEBUG  7385[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindAll' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:49,598]DEBUG  7385[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@33721fb4 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@97f7ccf, testMethod = testFindAll@OrderDaoTest, testException = [null]]]
[2017-10-14 14:08:49,598]DEBUG  7385[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.retrieveConfigurationAttributes(TransactionalTestExecutionListener.java:466) - Retrieved @TransactionConfiguration [@org.springframework.test.context.transaction.TransactionConfiguration(transactionManager=transactionManager, defaultRollback=true)] for test class [class com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2017-10-14 14:08:49,598]DEBUG  7385[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.retrieveConfigurationAttributes(TransactionalTestExecutionListener.java:483) - Retrieved TransactionConfigurationAttributes [[TransactionConfigurationAttributes@f30f176 transactionManagerName = 'transactionManager', defaultRollback = true]] for class [class com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2017-10-14 14:08:49,598]DEBUG  7385[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 14:08:49,599]DEBUG  7386[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:49,599]DEBUG  7386[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15079793295
[2017-10-14 14:08:49,599]DEBUG  7386[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@4b23deb6] for Hibernate transaction
[2017-10-14 14:08:49,599]DEBUG  7386[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@4b23deb6]
[2017-10-14 14:08:49,599]DEBUG  7386[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 14:08:49,599]DEBUG  7386[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 14:08:49,600]DEBUG  7387[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 14:08:49,600]DEBUG  7387[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@33721fb4 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@97f7ccf, testMethod = testFindAll@OrderDaoTest, testException = [null]]]
[2017-10-14 14:08:49,600] INFO  7387[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (1): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@48ad0abe]; rollback [true]
[2017-10-14 14:08:49,600]DEBUG  7387[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,600]DEBUG  7387[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 14:08:49,600]DEBUG  7387[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,601]DEBUG  7388[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,601]DEBUG  7388[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 14:08:49,601]DEBUG  7388[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,601]DEBUG  7388[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,601]DEBUG  7388[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 14:08:49,601]DEBUG  7388[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,602]DEBUG  7389[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,602]DEBUG  7389[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 14:08:49,602]DEBUG  7389[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,602]DEBUG  7389[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,602]DEBUG  7389[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 14:08:49,602]DEBUG  7389[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,603]DEBUG  7390[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,603]DEBUG  7390[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 14:08:49,603]DEBUG  7390[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,603]DEBUG  7390[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,603]DEBUG  7390[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 14:08:49,603]DEBUG  7390[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,604]DEBUG  7391[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,604]DEBUG  7391[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 14:08:49,604]DEBUG  7391[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,604]DEBUG  7391[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,604]DEBUG  7391[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 14:08:49,605]DEBUG  7392[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,605]DEBUG  7392[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:49,606]DEBUG  7393[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,606]DEBUG  7393[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName) values (?)
[2017-10-14 14:08:49,607]DEBUG  7394[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 1
[2017-10-14 14:08:49,607]DEBUG  7394[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,607]DEBUG  7394[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:49,608]DEBUG  7395[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,608]DEBUG  7395[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 14:08:49,608]DEBUG  7395[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 73
[2017-10-14 14:08:49,608]DEBUG  7395[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,609]DEBUG  7396[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:49,611]DEBUG  7398[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,611]DEBUG  7398[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Users (IsUserActive, Balance, CustomerTypeRef, Email, FirstName, LastName, Login, Password, RegionRef, RoleRef) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:49,612]DEBUG  7399[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 1
[2017-10-14 14:08:49,612]DEBUG  7399[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,613]DEBUG  7400[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:49,615]DEBUG  7402[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,615]DEBUG  7402[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:49,619]DEBUG  7406[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 1
[2017-10-14 14:08:49,620]DEBUG  7407[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,620]DEBUG  7407[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:49,620]DEBUG  7407[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,620]DEBUG  7407[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:49,621]DEBUG  7408[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 2
[2017-10-14 14:08:49,621]DEBUG  7408[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,621]DEBUG  7408[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:49,621]DEBUG  7408[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,621]DEBUG  7408[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:49,622]DEBUG  7409[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 3
[2017-10-14 14:08:49,622]DEBUG  7409[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,623]DEBUG  7410[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:49,623]DEBUG  7410[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:49,624]DEBUG  7411[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:49,624]DEBUG  7411[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:49,624]DEBUG  7411[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:49,624]DEBUG  7411[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=73, roleName=Administrator}
[2017-10-14 14:08:49,624]DEBUG  7411[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#1, id=3, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#1, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#1, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,624]DEBUG  7411[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#1, id=2, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#1, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#1, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,624]DEBUG  7411[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=1, orderStatusName=Pending}
[2017-10-14 14:08:49,625]DEBUG  7412[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#1, id=1, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#1, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#1, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,625]DEBUG  7412[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=1, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#73, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:49,625]DEBUG  7412[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,625]DEBUG  7412[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID5_6_, this_.Assigne as Assigne5_6_, this_.Customer as Customer5_6_, this_.DeliveryDate as Delivery2_5_6_, this_.IsGift as IsGift5_6_, this_.MaxDiscount as MaxDisco4_5_6_, this_.OrderDate as OrderDate5_6_, this_.OrderName as OrderName5_6_, this_.OrderNumber as OrderNum7_5_6_, this_.OrderStatusRef as OrderSt12_5_6_, this_.PreferableDeliveryDate as Preferab8_5_6_, this_.TotalPrice as TotalPrice5_6_, user2_.ID as ID3_0_, user2_.IsUserActive as IsUserAc2_3_0_, user2_.Balance as Balance3_0_, user2_.CustomerTypeRef as Customer9_3_0_, user2_.Email as Email3_0_, user2_.FirstName as FirstName3_0_, user2_.LastName as LastName3_0_, user2_.Login as Login3_0_, user2_.Password as Password3_0_, user2_.RegionRef as RegionRef3_0_, user2_.RoleRef as RoleRef3_0_, customerty3_.ID as ID2_1_, customerty3_.Discount as Discount2_1_, customerty3_.MaxRange as MaxRange2_1_, customerty3_.MinRange as MinRange2_1_, customerty3_.TypeName as TypeName2_1_, region4_.ID as ID1_2_, region4_.RegionName as RegionName1_2_, role5_.ID as ID0_3_, role5_.RoleName as RoleName0_3_, user6_.ID as ID3_4_, user6_.IsUserActive as IsUserAc2_3_4_, user6_.Balance as Balance3_4_, user6_.CustomerTypeRef as Customer9_3_4_, user6_.Email as Email3_4_, user6_.FirstName as FirstName3_4_, user6_.LastName as LastName3_4_, user6_.Login as Login3_4_, user6_.Password as Password3_4_, user6_.RegionRef as RegionRef3_4_, user6_.RoleRef as RoleRef3_4_, orderstatu7_.ID as ID4_5_, orderstatu7_.OrederStatusName as OrederSt2_4_5_ from Orders this_ left outer join Users user2_ on this_.Assigne=user2_.ID left outer join CustomerTypes customerty3_ on user2_.CustomerTypeRef=customerty3_.ID left outer join Regions region4_ on user2_.RegionRef=region4_.ID left outer join Roles role5_ on user2_.RoleRef=role5_.ID left outer join Users user6_ on this_.Customer=user6_.ID left outer join OrderStatuses orderstatu7_ on this_.OrderStatusRef=orderstatu7_.ID
[2017-10-14 14:08:49,627]DEBUG  7414[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:49,628]DEBUG  7415[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#1], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#73], EntityKey[com.softserveinc.edu.oms.domain.entities.User#1], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#1], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#1]
[2017-10-14 14:08:49,628]DEBUG  7415[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#1], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#73], EntityKey[com.softserveinc.edu.oms.domain.entities.User#1], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#1], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#2]
[2017-10-14 14:08:49,629]DEBUG  7416[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#1], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#73], EntityKey[com.softserveinc.edu.oms.domain.entities.User#1], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#1], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#3]
[2017-10-14 14:08:49,629]DEBUG  7416[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:49,629]DEBUG  7416[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,629]DEBUG  7416[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:49,629]DEBUG  7416[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:49,630]DEBUG  7417[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:49,630]DEBUG  7417[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:49,630]DEBUG  7417[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:49,630]DEBUG  7417[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:49,630]DEBUG  7417[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=73, roleName=Administrator}
[2017-10-14 14:08:49,631]DEBUG  7418[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#1, id=3, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#1, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#1, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,631]DEBUG  7418[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#1, id=2, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#1, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#1, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,631]DEBUG  7418[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=1, orderStatusName=Pending}
[2017-10-14 14:08:49,631]DEBUG  7418[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#1, id=1, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#1, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#1, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,632]DEBUG  7419[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=1, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#73, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:49,632]DEBUG  7419[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,632]DEBUG  7419[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 14:08:49,632]DEBUG  7419[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,633]DEBUG  7420[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:49,633]DEBUG  7420[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:49,635]DEBUG  7422[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:49,635]DEBUG  7422[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:49,635]DEBUG  7422[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:49,635]DEBUG  7422[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=73, roleName=Administrator}
[2017-10-14 14:08:49,636]DEBUG  7423[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#1, id=3, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#1, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#1, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,636]DEBUG  7423[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#1, id=2, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#1, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#1, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,636]DEBUG  7423[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=1, orderStatusName=Pending}
[2017-10-14 14:08:49,637]DEBUG  7424[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#1, id=1, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#1, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#1, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,637]DEBUG  7424[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=1, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#73, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:49,637]DEBUG  7424[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,637]DEBUG  7424[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 14:08:49,638]DEBUG  7425[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,638]DEBUG  7425[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:49,638]DEBUG  7425[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:49,638]DEBUG  7425[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:49,638]DEBUG  7425[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:49,638]DEBUG  7425[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:49,639]DEBUG  7426[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=73, roleName=Administrator}
[2017-10-14 14:08:49,639]DEBUG  7426[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#1, id=3, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#1, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#1, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,639]DEBUG  7426[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#1, id=2, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#1, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#1, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,639]DEBUG  7426[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=1, orderStatusName=Pending}
[2017-10-14 14:08:49,639]DEBUG  7426[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#1, id=1, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#1, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#1, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,639]DEBUG  7426[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=1, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#73, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:49,639]DEBUG  7426[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,640]DEBUG  7427[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 14:08:49,640]DEBUG  7427[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,640]DEBUG  7427[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:49,640]DEBUG  7427[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:49,640]DEBUG  7427[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:49,640]DEBUG  7427[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:49,641]DEBUG  7428[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:49,641]DEBUG  7428[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=73, roleName=Administrator}
[2017-10-14 14:08:49,641]DEBUG  7428[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#1, id=3, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#1, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#1, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,641]DEBUG  7428[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#1, id=2, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#1, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#1, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,641]DEBUG  7428[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=1, orderStatusName=Pending}
[2017-10-14 14:08:49,641]DEBUG  7428[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#1, id=1, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#1, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#1, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,641]DEBUG  7428[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=1, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#73, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:49,642]DEBUG  7429[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,642]DEBUG  7429[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 14:08:49,642]DEBUG  7429[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,642]DEBUG  7429[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:49,642]DEBUG  7429[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:49,643]DEBUG  7430[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:49,643]DEBUG  7430[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:49,643]DEBUG  7430[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:49,643]DEBUG  7430[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=73, roleName=Administrator}
[2017-10-14 14:08:49,643]DEBUG  7430[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#1, id=3, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#1, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#1, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,643]DEBUG  7430[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#1, id=2, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#1, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#1, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,643]DEBUG  7430[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=1, orderStatusName=Pending}
[2017-10-14 14:08:49,643]DEBUG  7430[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#1, id=1, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#1, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#1, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,644]DEBUG  7431[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=1, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#73, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:49,644]DEBUG  7431[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,644]DEBUG  7431[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 14:08:49,644]DEBUG  7431[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,644]DEBUG  7431[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:49,644]DEBUG  7431[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:49,644]DEBUG  7431[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:49,645]DEBUG  7432[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:49,645]DEBUG  7432[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:49,645]DEBUG  7432[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=73, roleName=Administrator}
[2017-10-14 14:08:49,645]DEBUG  7432[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#1, id=3, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#1, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#1, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,645]DEBUG  7432[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#1, id=2, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#1, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#1, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,645]DEBUG  7432[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=1, orderStatusName=Pending}
[2017-10-14 14:08:49,645]DEBUG  7432[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#1, id=1, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#1, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#1, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,645]DEBUG  7432[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=1, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#73, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:49,646]DEBUG  7433[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,646]DEBUG  7433[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 14:08:49,646]DEBUG  7433[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,646]DEBUG  7433[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:49,646]DEBUG  7433[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:49,648]DEBUG  7435[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:49,648]DEBUG  7435[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:49,648]DEBUG  7435[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:49,648]DEBUG  7435[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=73, roleName=Administrator}
[2017-10-14 14:08:49,648]DEBUG  7435[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#1, id=3, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#1, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#1, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,649]DEBUG  7436[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#1, id=2, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#1, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#1, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,649]DEBUG  7436[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=1, orderStatusName=Pending}
[2017-10-14 14:08:49,649]DEBUG  7436[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#1, id=1, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#1, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#1, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,649]DEBUG  7436[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=1, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#73, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:49,649]DEBUG  7436[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,649]DEBUG  7436[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 14:08:49,650]DEBUG  7437[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,650]DEBUG  7437[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:49,650]DEBUG  7437[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:49,650]DEBUG  7437[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:49,650]DEBUG  7437[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:49,650]DEBUG  7437[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:49,650]DEBUG  7437[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=73, roleName=Administrator}
[2017-10-14 14:08:49,651]DEBUG  7438[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#1, id=3, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#1, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#1, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,651]DEBUG  7438[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#1, id=2, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#1, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#1, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,651]DEBUG  7438[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=1, orderStatusName=Pending}
[2017-10-14 14:08:49,651]DEBUG  7438[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#1, id=1, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#1, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#1, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,651]DEBUG  7438[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=1, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#73, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:49,651]DEBUG  7438[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,651]DEBUG  7438[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 14:08:49,652]DEBUG  7439[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,652]DEBUG  7439[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:49,652]DEBUG  7439[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:49,652]DEBUG  7439[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:49,652]DEBUG  7439[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:49,652]DEBUG  7439[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:49,652]DEBUG  7439[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=73, roleName=Administrator}
[2017-10-14 14:08:49,652]DEBUG  7439[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#1, id=3, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#1, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#1, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,653]DEBUG  7440[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#1, id=2, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#1, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#1, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,653]DEBUG  7440[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=1, orderStatusName=Pending}
[2017-10-14 14:08:49,653]DEBUG  7440[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#1, id=1, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#1, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#1, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,653]DEBUG  7440[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=1, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#73, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:49,653]DEBUG  7440[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,653]DEBUG  7440[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 14:08:49,653]DEBUG  7440[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,654]DEBUG  7441[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@33721fb4 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@97f7ccf, testMethod = testFindAll@OrderDaoTest, testException = [null]]]
[2017-10-14 14:08:49,654]DEBUG  7441[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 14:08:49,654]DEBUG  7441[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@4b23deb6]
[2017-10-14 14:08:49,654]DEBUG  7441[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 14:08:49,685]DEBUG  7472[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 14:08:49,686]DEBUG  7473[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:49,686]DEBUG  7473[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@4b23deb6] after transaction
[2017-10-14 14:08:49,686]DEBUG  7473[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 14:08:49,686]DEBUG  7473[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 14:08:49,687]DEBUG  7474[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:49,687] INFO  7474[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@33721fb4 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@97f7ccf, testMethod = testFindAll@OrderDaoTest, testException = [null]]]
[2017-10-14 14:08:49,688]DEBUG  7475[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@33721fb4 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@97f7ccf, testMethod = testFindAll@OrderDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 14:08:49,689]DEBUG  7476[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2017-10-14 14:08:49,689]DEBUG  7476[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2017-10-14 14:08:49,690]DEBUG  7477[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@33721fb4 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@a5c6601, testMethod = [null], testException = [null]]].
[2017-10-14 14:08:49,690]DEBUG  7477[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 14:08:49,690]DEBUG  7477[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 14:08:49,690]DEBUG  7477[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 14:08:49,691]DEBUG  7478[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 14:08:49,691]DEBUG  7478[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 14:08:49,691]DEBUG  7478[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 14:08:49,691]DEBUG  7478[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 14:08:49,691]DEBUG  7478[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 14:08:49,692]DEBUG  7479[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 14:08:49,692]DEBUG  7479[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 14:08:49,692]DEBUG  7479[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 14:08:49,692]DEBUG  7479[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 14:08:49,692]DEBUG  7479[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 14:08:49,693]DEBUG  7480[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 14:08:49,693]DEBUG  7480[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 14:08:49,693]DEBUG  7480[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 14:08:49,693]DEBUG  7480[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 14:08:49,693]DEBUG  7480[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 14:08:49,694]DEBUG  7481[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 14:08:49,694]DEBUG  7481[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 14:08:49,694]DEBUG  7481[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 14:08:49,694]DEBUG  7481[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 14:08:49,695]DEBUG  7482[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@a5c6601]
[2017-10-14 14:08:49,695]DEBUG  7482[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testInsertOrUpdate' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:49,696]DEBUG  7483[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@33721fb4 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@a5c6601, testMethod = testInsertOrUpdate@OrderDaoTest, testException = [null]]]
[2017-10-14 14:08:49,696]DEBUG  7483[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 14:08:49,697]DEBUG  7484[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testInsertOrUpdate]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:49,697]DEBUG  7484[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15079793296
[2017-10-14 14:08:49,698]DEBUG  7485[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@4504e330] for Hibernate transaction
[2017-10-14 14:08:49,698]DEBUG  7485[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@4504e330]
[2017-10-14 14:08:49,698]DEBUG  7485[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 14:08:49,698]DEBUG  7485[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 14:08:49,698]DEBUG  7485[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 14:08:49,699]DEBUG  7486[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@33721fb4 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@a5c6601, testMethod = testInsertOrUpdate@OrderDaoTest, testException = [null]]]
[2017-10-14 14:08:49,699] INFO  7486[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (2): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@48ad0abe]; rollback [true]
[2017-10-14 14:08:49,699]DEBUG  7486[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,699]DEBUG  7486[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 14:08:49,700]DEBUG  7487[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,700]DEBUG  7487[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,701]DEBUG  7488[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 14:08:49,701]DEBUG  7488[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,702]DEBUG  7489[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,702]DEBUG  7489[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 14:08:49,702]DEBUG  7489[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,703]DEBUG  7490[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,703]DEBUG  7490[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 14:08:49,703]DEBUG  7490[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,704]DEBUG  7491[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,704]DEBUG  7491[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 14:08:49,704]DEBUG  7491[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,705]DEBUG  7492[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,705]DEBUG  7492[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 14:08:49,706]DEBUG  7493[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,706]DEBUG  7493[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,706]DEBUG  7493[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 14:08:49,707]DEBUG  7494[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,707]DEBUG  7494[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,707]DEBUG  7494[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 14:08:49,708]DEBUG  7495[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,708]DEBUG  7495[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,708]DEBUG  7495[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 14:08:49,709]DEBUG  7496[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,709]DEBUG  7496[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:49,710]DEBUG  7497[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,710]DEBUG  7497[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName) values (?)
[2017-10-14 14:08:49,711]DEBUG  7498[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 2
[2017-10-14 14:08:49,711]DEBUG  7498[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,711]DEBUG  7498[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:49,712]DEBUG  7499[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,712]DEBUG  7499[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 14:08:49,713]DEBUG  7500[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 74
[2017-10-14 14:08:49,713]DEBUG  7500[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,713]DEBUG  7500[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:49,714]DEBUG  7501[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,714]DEBUG  7501[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Users (IsUserActive, Balance, CustomerTypeRef, Email, FirstName, LastName, Login, Password, RegionRef, RoleRef) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:49,715]DEBUG  7502[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 2
[2017-10-14 14:08:49,715]DEBUG  7502[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,716]DEBUG  7503[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:49,716]DEBUG  7503[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,716]DEBUG  7503[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:49,718]DEBUG  7505[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 4
[2017-10-14 14:08:49,718]DEBUG  7505[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,718]DEBUG  7505[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:49,718]DEBUG  7505[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,718]DEBUG  7505[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:49,719]DEBUG  7506[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 5
[2017-10-14 14:08:49,719]DEBUG  7506[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,719]DEBUG  7506[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:49,719]DEBUG  7506[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,720]DEBUG  7507[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:49,720]DEBUG  7507[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 6
[2017-10-14 14:08:49,720]DEBUG  7507[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,720]DEBUG  7507[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:49,721]DEBUG  7508[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,721]DEBUG  7508[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:49,721]DEBUG  7508[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 7
[2017-10-14 14:08:49,721]DEBUG  7508[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,722]DEBUG  7509[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:49,722]DEBUG  7509[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:49,723]DEBUG  7510[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 7 objects
[2017-10-14 14:08:49,723]DEBUG  7510[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:49,723]DEBUG  7510[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:49,723]DEBUG  7510[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=2, orderStatusName=Pending}
[2017-10-14 14:08:49,723]DEBUG  7510[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=7, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,723]DEBUG  7510[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=6, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,724]DEBUG  7511[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=5, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,724]DEBUG  7511[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=4, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,724]DEBUG  7511[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=74, roleName=Administrator}
[2017-10-14 14:08:49,724]DEBUG  7511[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=2, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#74, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:49,724]DEBUG  7511[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,724]DEBUG  7511[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID5_6_, this_.Assigne as Assigne5_6_, this_.Customer as Customer5_6_, this_.DeliveryDate as Delivery2_5_6_, this_.IsGift as IsGift5_6_, this_.MaxDiscount as MaxDisco4_5_6_, this_.OrderDate as OrderDate5_6_, this_.OrderName as OrderName5_6_, this_.OrderNumber as OrderNum7_5_6_, this_.OrderStatusRef as OrderSt12_5_6_, this_.PreferableDeliveryDate as Preferab8_5_6_, this_.TotalPrice as TotalPrice5_6_, user2_.ID as ID3_0_, user2_.IsUserActive as IsUserAc2_3_0_, user2_.Balance as Balance3_0_, user2_.CustomerTypeRef as Customer9_3_0_, user2_.Email as Email3_0_, user2_.FirstName as FirstName3_0_, user2_.LastName as LastName3_0_, user2_.Login as Login3_0_, user2_.Password as Password3_0_, user2_.RegionRef as RegionRef3_0_, user2_.RoleRef as RoleRef3_0_, customerty3_.ID as ID2_1_, customerty3_.Discount as Discount2_1_, customerty3_.MaxRange as MaxRange2_1_, customerty3_.MinRange as MinRange2_1_, customerty3_.TypeName as TypeName2_1_, region4_.ID as ID1_2_, region4_.RegionName as RegionName1_2_, role5_.ID as ID0_3_, role5_.RoleName as RoleName0_3_, user6_.ID as ID3_4_, user6_.IsUserActive as IsUserAc2_3_4_, user6_.Balance as Balance3_4_, user6_.CustomerTypeRef as Customer9_3_4_, user6_.Email as Email3_4_, user6_.FirstName as FirstName3_4_, user6_.LastName as LastName3_4_, user6_.Login as Login3_4_, user6_.Password as Password3_4_, user6_.RegionRef as RegionRef3_4_, user6_.RoleRef as RoleRef3_4_, orderstatu7_.ID as ID4_5_, orderstatu7_.OrederStatusName as OrederSt2_4_5_ from Orders this_ left outer join Users user2_ on this_.Assigne=user2_.ID left outer join CustomerTypes customerty3_ on user2_.CustomerTypeRef=customerty3_.ID left outer join Regions region4_ on user2_.RegionRef=region4_.ID left outer join Roles role5_ on user2_.RoleRef=role5_.ID left outer join Users user6_ on this_.Customer=user6_.ID left outer join OrderStatuses orderstatu7_ on this_.OrderStatusRef=orderstatu7_.ID
[2017-10-14 14:08:49,726]DEBUG  7513[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:49,728]DEBUG  7515[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#2], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#74], EntityKey[com.softserveinc.edu.oms.domain.entities.User#2], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#2], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#4]
[2017-10-14 14:08:49,728]DEBUG  7515[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#2], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#74], EntityKey[com.softserveinc.edu.oms.domain.entities.User#2], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#2], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#5]
[2017-10-14 14:08:49,728]DEBUG  7515[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#2], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#74], EntityKey[com.softserveinc.edu.oms.domain.entities.User#2], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#2], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#6]
[2017-10-14 14:08:49,728]DEBUG  7515[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#2], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#74], EntityKey[com.softserveinc.edu.oms.domain.entities.User#2], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#2], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#7]
[2017-10-14 14:08:49,728]DEBUG  7515[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:49,729]DEBUG  7516[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,729]DEBUG  7516[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:49,729]DEBUG  7516[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:49,729]DEBUG  7516[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:49,729]DEBUG  7516[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 7 objects
[2017-10-14 14:08:49,729]DEBUG  7516[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:49,730]DEBUG  7517[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:49,730]DEBUG  7517[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=2, orderStatusName=Pending}
[2017-10-14 14:08:49,730]DEBUG  7517[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=7, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,730]DEBUG  7517[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=6, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,730]DEBUG  7517[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=5, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,730]DEBUG  7517[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=4, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,731]DEBUG  7518[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=74, roleName=Administrator}
[2017-10-14 14:08:49,731]DEBUG  7518[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=2, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#74, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:49,731]DEBUG  7518[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,731]DEBUG  7518[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 14:08:49,731]DEBUG  7518[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,732]DEBUG  7519[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:49,732]DEBUG  7519[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:49,732]DEBUG  7519[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 7 objects
[2017-10-14 14:08:49,732]DEBUG  7519[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:49,732]DEBUG  7519[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:49,732]DEBUG  7519[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=2, orderStatusName=Pending}
[2017-10-14 14:08:49,733]DEBUG  7520[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=7, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,733]DEBUG  7520[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=6, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,733]DEBUG  7520[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=5, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,733]DEBUG  7520[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=4, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,733]DEBUG  7520[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=74, roleName=Administrator}
[2017-10-14 14:08:49,733]DEBUG  7520[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=2, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#74, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:49,733]DEBUG  7520[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,734]DEBUG  7521[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 14:08:49,734]DEBUG  7521[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,734]DEBUG  7521[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:49,734]DEBUG  7521[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:49,735]DEBUG  7522[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 7 objects
[2017-10-14 14:08:49,735]DEBUG  7522[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:49,735]DEBUG  7522[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:49,735]DEBUG  7522[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=2, orderStatusName=Pending}
[2017-10-14 14:08:49,735]DEBUG  7522[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=7, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,735]DEBUG  7522[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=6, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,736]DEBUG  7523[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=5, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,736]DEBUG  7523[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=4, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,736]DEBUG  7523[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=74, roleName=Administrator}
[2017-10-14 14:08:49,736]DEBUG  7523[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=2, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#74, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:49,736]DEBUG  7523[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,736]DEBUG  7523[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 14:08:49,737]DEBUG  7524[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,737]DEBUG  7524[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:49,737]DEBUG  7524[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:49,737]DEBUG  7524[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 7 objects
[2017-10-14 14:08:49,737]DEBUG  7524[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:49,737]DEBUG  7524[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:49,738]DEBUG  7525[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=2, orderStatusName=Pending}
[2017-10-14 14:08:49,738]DEBUG  7525[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=7, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,738]DEBUG  7525[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=6, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,738]DEBUG  7525[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=5, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,738]DEBUG  7525[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=4, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,738]DEBUG  7525[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=74, roleName=Administrator}
[2017-10-14 14:08:49,739]DEBUG  7526[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=2, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#74, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:49,739]DEBUG  7526[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,739]DEBUG  7526[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 14:08:49,739]DEBUG  7526[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,740]DEBUG  7527[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:49,740]DEBUG  7527[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:49,740]DEBUG  7527[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 7 objects
[2017-10-14 14:08:49,740]DEBUG  7527[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:49,740]DEBUG  7527[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:49,740]DEBUG  7527[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=2, orderStatusName=Pending}
[2017-10-14 14:08:49,741]DEBUG  7528[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=7, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,741]DEBUG  7528[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=6, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,741]DEBUG  7528[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=5, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,741]DEBUG  7528[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=4, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,741]DEBUG  7528[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=74, roleName=Administrator}
[2017-10-14 14:08:49,741]DEBUG  7528[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=2, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#74, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:49,742]DEBUG  7529[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,742]DEBUG  7529[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 14:08:49,742]DEBUG  7529[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,742]DEBUG  7529[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:49,742]DEBUG  7529[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:49,743]DEBUG  7530[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 7 objects
[2017-10-14 14:08:49,743]DEBUG  7530[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:49,743]DEBUG  7530[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:49,743]DEBUG  7530[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=2, orderStatusName=Pending}
[2017-10-14 14:08:49,743]DEBUG  7530[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=7, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,743]DEBUG  7530[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=6, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,744]DEBUG  7531[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=5, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,744]DEBUG  7531[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=4, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,744]DEBUG  7531[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=74, roleName=Administrator}
[2017-10-14 14:08:49,744]DEBUG  7531[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=2, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#74, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:49,744]DEBUG  7531[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,744]DEBUG  7531[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 14:08:49,745]DEBUG  7532[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,745]DEBUG  7532[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:49,745]DEBUG  7532[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:49,745]DEBUG  7532[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 7 objects
[2017-10-14 14:08:49,746]DEBUG  7533[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:49,746]DEBUG  7533[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:49,746]DEBUG  7533[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=2, orderStatusName=Pending}
[2017-10-14 14:08:49,746]DEBUG  7533[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=7, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,746]DEBUG  7533[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=6, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,746]DEBUG  7533[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=5, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,747]DEBUG  7534[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=4, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,747]DEBUG  7534[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=74, roleName=Administrator}
[2017-10-14 14:08:49,747]DEBUG  7534[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=2, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#74, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:49,747]DEBUG  7534[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,747]DEBUG  7534[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 14:08:49,747]DEBUG  7534[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,748]DEBUG  7535[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:49,748]DEBUG  7535[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:49,748]DEBUG  7535[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 7 objects
[2017-10-14 14:08:49,748]DEBUG  7535[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:49,748]DEBUG  7535[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:49,748]DEBUG  7535[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=2, orderStatusName=Pending}
[2017-10-14 14:08:49,749]DEBUG  7536[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=7, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,749]DEBUG  7536[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=6, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,749]DEBUG  7536[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=5, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,749]DEBUG  7536[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=4, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,749]DEBUG  7536[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=74, roleName=Administrator}
[2017-10-14 14:08:49,749]DEBUG  7536[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=2, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#74, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:49,750]DEBUG  7537[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,750]DEBUG  7537[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 14:08:49,750]DEBUG  7537[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,750]DEBUG  7537[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:49,750]DEBUG  7537[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:49,751]DEBUG  7538[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 7 objects
[2017-10-14 14:08:49,751]DEBUG  7538[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:49,751]DEBUG  7538[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:49,751]DEBUG  7538[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=2, orderStatusName=Pending}
[2017-10-14 14:08:49,751]DEBUG  7538[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=7, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,751]DEBUG  7538[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=6, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,752]DEBUG  7539[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=5, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,752]DEBUG  7539[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=4, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,752]DEBUG  7539[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=74, roleName=Administrator}
[2017-10-14 14:08:49,752]DEBUG  7539[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=2, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#74, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:49,752]DEBUG  7539[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,752]DEBUG  7539[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 14:08:49,753]DEBUG  7540[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,753]DEBUG  7540[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@33721fb4 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@a5c6601, testMethod = testInsertOrUpdate@OrderDaoTest, testException = [null]]]
[2017-10-14 14:08:49,753]DEBUG  7540[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 14:08:49,753]DEBUG  7540[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@4504e330]
[2017-10-14 14:08:49,753]DEBUG  7540[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 14:08:49,786]DEBUG  7573[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 14:08:49,786]DEBUG  7573[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:49,786]DEBUG  7573[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@4504e330] after transaction
[2017-10-14 14:08:49,786]DEBUG  7573[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 14:08:49,787]DEBUG  7574[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 14:08:49,787]DEBUG  7574[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:49,787] INFO  7574[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@33721fb4 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@a5c6601, testMethod = testInsertOrUpdate@OrderDaoTest, testException = [null]]]
[2017-10-14 14:08:49,789]DEBUG  7576[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@33721fb4 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@a5c6601, testMethod = testInsertOrUpdate@OrderDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 14:08:49,789]DEBUG  7576[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2017-10-14 14:08:49,789]DEBUG  7576[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2017-10-14 14:08:49,790]DEBUG  7577[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@33721fb4 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@67ddcd34, testMethod = [null], testException = [null]]].
[2017-10-14 14:08:49,790]DEBUG  7577[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 14:08:49,790]DEBUG  7577[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 14:08:49,791]DEBUG  7578[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 14:08:49,791]DEBUG  7578[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 14:08:49,791]DEBUG  7578[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 14:08:49,791]DEBUG  7578[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 14:08:49,791]DEBUG  7578[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 14:08:49,792]DEBUG  7579[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 14:08:49,792]DEBUG  7579[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 14:08:49,792]DEBUG  7579[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 14:08:49,792]DEBUG  7579[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 14:08:49,792]DEBUG  7579[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 14:08:49,793]DEBUG  7580[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 14:08:49,793]DEBUG  7580[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 14:08:49,793]DEBUG  7580[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 14:08:49,793]DEBUG  7580[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 14:08:49,793]DEBUG  7580[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 14:08:49,794]DEBUG  7581[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 14:08:49,794]DEBUG  7581[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 14:08:49,794]DEBUG  7581[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 14:08:49,794]DEBUG  7581[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 14:08:49,795]DEBUG  7582[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 14:08:49,795]DEBUG  7582[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@67ddcd34]
[2017-10-14 14:08:49,796]DEBUG  7583[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testDelete' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:49,796]DEBUG  7583[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@33721fb4 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@67ddcd34, testMethod = testDelete@OrderDaoTest, testException = [null]]]
[2017-10-14 14:08:49,796]DEBUG  7583[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 14:08:49,797]DEBUG  7584[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testDelete]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:49,798]DEBUG  7585[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15079793297
[2017-10-14 14:08:49,798]DEBUG  7585[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@42493424] for Hibernate transaction
[2017-10-14 14:08:49,798]DEBUG  7585[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@42493424]
[2017-10-14 14:08:49,798]DEBUG  7585[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 14:08:49,798]DEBUG  7585[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 14:08:49,799]DEBUG  7586[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 14:08:49,799]DEBUG  7586[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@33721fb4 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@67ddcd34, testMethod = testDelete@OrderDaoTest, testException = [null]]]
[2017-10-14 14:08:49,799] INFO  7586[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (3): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@48ad0abe]; rollback [true]
[2017-10-14 14:08:49,799]DEBUG  7586[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,800]DEBUG  7587[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 14:08:49,800]DEBUG  7587[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,801]DEBUG  7588[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,801]DEBUG  7588[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 14:08:49,801]DEBUG  7588[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,802]DEBUG  7589[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,802]DEBUG  7589[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 14:08:49,803]DEBUG  7590[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,803]DEBUG  7590[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,803]DEBUG  7590[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 14:08:49,804]DEBUG  7591[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,804]DEBUG  7591[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,804]DEBUG  7591[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 14:08:49,805]DEBUG  7592[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,805]DEBUG  7592[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,805]DEBUG  7592[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 14:08:49,806]DEBUG  7593[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,806]DEBUG  7593[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,807]DEBUG  7594[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 14:08:49,807]DEBUG  7594[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,808]DEBUG  7595[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,808]DEBUG  7595[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 14:08:49,808]DEBUG  7595[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,809]DEBUG  7596[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,809]DEBUG  7596[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 14:08:49,809]DEBUG  7596[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,810]DEBUG  7597[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:49,810]DEBUG  7597[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,810]DEBUG  7597[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName) values (?)
[2017-10-14 14:08:49,811]DEBUG  7598[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 3
[2017-10-14 14:08:49,812]DEBUG  7599[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,812]DEBUG  7599[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:49,812]DEBUG  7599[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,813]DEBUG  7600[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 14:08:49,813]DEBUG  7600[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 75
[2017-10-14 14:08:49,814]DEBUG  7601[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,814]DEBUG  7601[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:49,814]DEBUG  7601[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,815]DEBUG  7602[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Users (IsUserActive, Balance, CustomerTypeRef, Email, FirstName, LastName, Login, Password, RegionRef, RoleRef) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:49,816]DEBUG  7603[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 3
[2017-10-14 14:08:49,816]DEBUG  7603[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,817]DEBUG  7604[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:49,817]DEBUG  7604[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,817]DEBUG  7604[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:49,818]DEBUG  7605[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 8
[2017-10-14 14:08:49,818]DEBUG  7605[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,819]DEBUG  7606[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:49,819]DEBUG  7606[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,819]DEBUG  7606[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:49,820]DEBUG  7607[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 9
[2017-10-14 14:08:49,822]DEBUG  7609[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,822]DEBUG  7609[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:49,823]DEBUG  7610[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,823]DEBUG  7610[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:49,824]DEBUG  7611[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 10
[2017-10-14 14:08:49,824]DEBUG  7611[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,825]DEBUG  7612[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:49,825]DEBUG  7612[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:49,825]DEBUG  7612[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:49,825]DEBUG  7612[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:49,825]DEBUG  7612[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:49,826]DEBUG  7613[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#3, id=10, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#3, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#3, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,826]DEBUG  7613[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=75, roleName=Administrator}
[2017-10-14 14:08:49,826]DEBUG  7613[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#3, id=9, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#3, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#3, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,826]DEBUG  7613[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#3, id=8, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#3, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#3, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,826]DEBUG  7613[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=3, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#75, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:49,826]DEBUG  7613[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=3, orderStatusName=Pending}
[2017-10-14 14:08:49,826]DEBUG  7613[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,826]DEBUG  7613[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID5_6_, this_.Assigne as Assigne5_6_, this_.Customer as Customer5_6_, this_.DeliveryDate as Delivery2_5_6_, this_.IsGift as IsGift5_6_, this_.MaxDiscount as MaxDisco4_5_6_, this_.OrderDate as OrderDate5_6_, this_.OrderName as OrderName5_6_, this_.OrderNumber as OrderNum7_5_6_, this_.OrderStatusRef as OrderSt12_5_6_, this_.PreferableDeliveryDate as Preferab8_5_6_, this_.TotalPrice as TotalPrice5_6_, user2_.ID as ID3_0_, user2_.IsUserActive as IsUserAc2_3_0_, user2_.Balance as Balance3_0_, user2_.CustomerTypeRef as Customer9_3_0_, user2_.Email as Email3_0_, user2_.FirstName as FirstName3_0_, user2_.LastName as LastName3_0_, user2_.Login as Login3_0_, user2_.Password as Password3_0_, user2_.RegionRef as RegionRef3_0_, user2_.RoleRef as RoleRef3_0_, customerty3_.ID as ID2_1_, customerty3_.Discount as Discount2_1_, customerty3_.MaxRange as MaxRange2_1_, customerty3_.MinRange as MinRange2_1_, customerty3_.TypeName as TypeName2_1_, region4_.ID as ID1_2_, region4_.RegionName as RegionName1_2_, role5_.ID as ID0_3_, role5_.RoleName as RoleName0_3_, user6_.ID as ID3_4_, user6_.IsUserActive as IsUserAc2_3_4_, user6_.Balance as Balance3_4_, user6_.CustomerTypeRef as Customer9_3_4_, user6_.Email as Email3_4_, user6_.FirstName as FirstName3_4_, user6_.LastName as LastName3_4_, user6_.Login as Login3_4_, user6_.Password as Password3_4_, user6_.RegionRef as RegionRef3_4_, user6_.RoleRef as RoleRef3_4_, orderstatu7_.ID as ID4_5_, orderstatu7_.OrederStatusName as OrederSt2_4_5_ from Orders this_ left outer join Users user2_ on this_.Assigne=user2_.ID left outer join CustomerTypes customerty3_ on user2_.CustomerTypeRef=customerty3_.ID left outer join Regions region4_ on user2_.RegionRef=region4_.ID left outer join Roles role5_ on user2_.RoleRef=role5_.ID left outer join Users user6_ on this_.Customer=user6_.ID left outer join OrderStatuses orderstatu7_ on this_.OrderStatusRef=orderstatu7_.ID
[2017-10-14 14:08:49,828]DEBUG  7615[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:49,829]DEBUG  7616[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#3], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#75], EntityKey[com.softserveinc.edu.oms.domain.entities.User#3], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#3], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#8]
[2017-10-14 14:08:49,829]DEBUG  7616[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#3], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#75], EntityKey[com.softserveinc.edu.oms.domain.entities.User#3], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#3], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#9]
[2017-10-14 14:08:49,829]DEBUG  7616[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#3], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#75], EntityKey[com.softserveinc.edu.oms.domain.entities.User#3], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#3], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#10]
[2017-10-14 14:08:49,830]DEBUG  7617[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:49,830]DEBUG  7617[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,830]DEBUG  7617[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:49,831]DEBUG  7618[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:49,832]DEBUG  7619[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:49,832]DEBUG  7619[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 6 objects
[2017-10-14 14:08:49,832]DEBUG  7619[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:49,832]DEBUG  7619[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:49,832]DEBUG  7619[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#3, id=10, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#3, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#3, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,832]DEBUG  7619[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=75, roleName=Administrator}
[2017-10-14 14:08:49,833]DEBUG  7620[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#3, id=9, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#3, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#3, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,833]DEBUG  7620[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#3, id=8, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#3, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#3, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,833]DEBUG  7620[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=3, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#75, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:49,833]DEBUG  7620[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=3, orderStatusName=Pending}
[2017-10-14 14:08:49,833]DEBUG  7620[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Orders
[2017-10-14 14:08:49,833]DEBUG  7620[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,833]DEBUG  7620[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders where ID=?
[2017-10-14 14:08:49,834]DEBUG  7621[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
[2017-10-14 14:08:49,834]DEBUG  7621[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,834]DEBUG  7621[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,835]DEBUG  7622[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID5_6_, this_.Assigne as Assigne5_6_, this_.Customer as Customer5_6_, this_.DeliveryDate as Delivery2_5_6_, this_.IsGift as IsGift5_6_, this_.MaxDiscount as MaxDisco4_5_6_, this_.OrderDate as OrderDate5_6_, this_.OrderName as OrderName5_6_, this_.OrderNumber as OrderNum7_5_6_, this_.OrderStatusRef as OrderSt12_5_6_, this_.PreferableDeliveryDate as Preferab8_5_6_, this_.TotalPrice as TotalPrice5_6_, user2_.ID as ID3_0_, user2_.IsUserActive as IsUserAc2_3_0_, user2_.Balance as Balance3_0_, user2_.CustomerTypeRef as Customer9_3_0_, user2_.Email as Email3_0_, user2_.FirstName as FirstName3_0_, user2_.LastName as LastName3_0_, user2_.Login as Login3_0_, user2_.Password as Password3_0_, user2_.RegionRef as RegionRef3_0_, user2_.RoleRef as RoleRef3_0_, customerty3_.ID as ID2_1_, customerty3_.Discount as Discount2_1_, customerty3_.MaxRange as MaxRange2_1_, customerty3_.MinRange as MinRange2_1_, customerty3_.TypeName as TypeName2_1_, region4_.ID as ID1_2_, region4_.RegionName as RegionName1_2_, role5_.ID as ID0_3_, role5_.RoleName as RoleName0_3_, user6_.ID as ID3_4_, user6_.IsUserActive as IsUserAc2_3_4_, user6_.Balance as Balance3_4_, user6_.CustomerTypeRef as Customer9_3_4_, user6_.Email as Email3_4_, user6_.FirstName as FirstName3_4_, user6_.LastName as LastName3_4_, user6_.Login as Login3_4_, user6_.Password as Password3_4_, user6_.RegionRef as RegionRef3_4_, user6_.RoleRef as RoleRef3_4_, orderstatu7_.ID as ID4_5_, orderstatu7_.OrederStatusName as OrederSt2_4_5_ from Orders this_ left outer join Users user2_ on this_.Assigne=user2_.ID left outer join CustomerTypes customerty3_ on user2_.CustomerTypeRef=customerty3_.ID left outer join Regions region4_ on user2_.RegionRef=region4_.ID left outer join Roles role5_ on user2_.RoleRef=role5_.ID left outer join Users user6_ on this_.Customer=user6_.ID left outer join OrderStatuses orderstatu7_ on this_.OrderStatusRef=orderstatu7_.ID
[2017-10-14 14:08:49,836]DEBUG  7623[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:49,837]DEBUG  7624[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#3], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#75], EntityKey[com.softserveinc.edu.oms.domain.entities.User#3], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#3], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#9]
[2017-10-14 14:08:49,837]DEBUG  7624[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#3], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#75], EntityKey[com.softserveinc.edu.oms.domain.entities.User#3], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#3], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#10]
[2017-10-14 14:08:49,837]DEBUG  7624[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:49,838]DEBUG  7625[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,838]DEBUG  7625[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:49,838]DEBUG  7625[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:49,838]DEBUG  7625[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:49,838]DEBUG  7625[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2017-10-14 14:08:49,838]DEBUG  7625[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:49,838]DEBUG  7625[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:49,839]DEBUG  7626[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#3, id=10, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#3, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#3, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,839]DEBUG  7626[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=75, roleName=Administrator}
[2017-10-14 14:08:49,839]DEBUG  7626[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#3, id=9, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#3, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#3, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,839]DEBUG  7626[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=3, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#75, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:49,839]DEBUG  7626[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=3, orderStatusName=Pending}
[2017-10-14 14:08:49,839]DEBUG  7626[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,839]DEBUG  7626[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 14:08:49,840]DEBUG  7627[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,840]DEBUG  7627[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:49,840]DEBUG  7627[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:49,840]DEBUG  7627[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2017-10-14 14:08:49,841]DEBUG  7628[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:49,841]DEBUG  7628[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:49,841]DEBUG  7628[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#3, id=10, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#3, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#3, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,841]DEBUG  7628[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=75, roleName=Administrator}
[2017-10-14 14:08:49,841]DEBUG  7628[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#3, id=9, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#3, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#3, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,841]DEBUG  7628[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=3, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#75, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:49,841]DEBUG  7628[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=3, orderStatusName=Pending}
[2017-10-14 14:08:49,841]DEBUG  7628[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,842]DEBUG  7629[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 14:08:49,842]DEBUG  7629[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,842]DEBUG  7629[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:49,842]DEBUG  7629[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:49,842]DEBUG  7629[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2017-10-14 14:08:49,842]DEBUG  7629[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:49,843]DEBUG  7630[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:49,843]DEBUG  7630[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#3, id=10, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#3, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#3, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,843]DEBUG  7630[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=75, roleName=Administrator}
[2017-10-14 14:08:49,843]DEBUG  7630[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#3, id=9, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#3, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#3, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,843]DEBUG  7630[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=3, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#75, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:49,843]DEBUG  7630[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=3, orderStatusName=Pending}
[2017-10-14 14:08:49,843]DEBUG  7630[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,843]DEBUG  7630[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 14:08:49,844]DEBUG  7631[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,844]DEBUG  7631[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:49,844]DEBUG  7631[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:49,844]DEBUG  7631[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2017-10-14 14:08:49,844]DEBUG  7631[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:49,844]DEBUG  7631[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:49,845]DEBUG  7632[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#3, id=10, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#3, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#3, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,845]DEBUG  7632[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=75, roleName=Administrator}
[2017-10-14 14:08:49,845]DEBUG  7632[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#3, id=9, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#3, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#3, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,845]DEBUG  7632[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=3, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#75, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:49,845]DEBUG  7632[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=3, orderStatusName=Pending}
[2017-10-14 14:08:49,845]DEBUG  7632[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,845]DEBUG  7632[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 14:08:49,846]DEBUG  7633[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,846]DEBUG  7633[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:49,846]DEBUG  7633[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:49,846]DEBUG  7633[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2017-10-14 14:08:49,846]DEBUG  7633[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:49,846]DEBUG  7633[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:49,847]DEBUG  7634[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#3, id=10, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#3, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#3, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,847]DEBUG  7634[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=75, roleName=Administrator}
[2017-10-14 14:08:49,847]DEBUG  7634[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#3, id=9, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#3, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#3, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,847]DEBUG  7634[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=3, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#75, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:49,847]DEBUG  7634[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=3, orderStatusName=Pending}
[2017-10-14 14:08:49,847]DEBUG  7634[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,847]DEBUG  7634[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 14:08:49,848]DEBUG  7635[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,848]DEBUG  7635[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:49,848]DEBUG  7635[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:49,848]DEBUG  7635[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2017-10-14 14:08:49,848]DEBUG  7635[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:49,848]DEBUG  7635[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:49,849]DEBUG  7636[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#3, id=10, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#3, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#3, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,849]DEBUG  7636[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=75, roleName=Administrator}
[2017-10-14 14:08:49,849]DEBUG  7636[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#3, id=9, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#3, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#3, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,849]DEBUG  7636[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=3, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#75, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:49,849]DEBUG  7636[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=3, orderStatusName=Pending}
[2017-10-14 14:08:49,849]DEBUG  7636[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,849]DEBUG  7636[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 14:08:49,850]DEBUG  7637[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,850]DEBUG  7637[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:49,850]DEBUG  7637[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:49,850]DEBUG  7637[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2017-10-14 14:08:49,850]DEBUG  7637[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:49,850]DEBUG  7637[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:49,851]DEBUG  7638[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#3, id=10, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#3, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#3, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,851]DEBUG  7638[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=75, roleName=Administrator}
[2017-10-14 14:08:49,851]DEBUG  7638[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#3, id=9, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#3, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#3, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,851]DEBUG  7638[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=3, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#75, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:49,851]DEBUG  7638[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=3, orderStatusName=Pending}
[2017-10-14 14:08:49,851]DEBUG  7638[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,851]DEBUG  7638[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 14:08:49,852]DEBUG  7639[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,852]DEBUG  7639[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:49,852]DEBUG  7639[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:49,852]DEBUG  7639[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2017-10-14 14:08:49,852]DEBUG  7639[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:49,852]DEBUG  7639[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:49,852]DEBUG  7639[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#3, id=10, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#3, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#3, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,853]DEBUG  7640[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=75, roleName=Administrator}
[2017-10-14 14:08:49,853]DEBUG  7640[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#3, id=9, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#3, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#3, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,853]DEBUG  7640[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=3, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#75, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:49,853]DEBUG  7640[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=3, orderStatusName=Pending}
[2017-10-14 14:08:49,853]DEBUG  7640[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,853]DEBUG  7640[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 14:08:49,853]DEBUG  7640[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,854]DEBUG  7641[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:49,854]DEBUG  7641[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:49,854]DEBUG  7641[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2017-10-14 14:08:49,854]DEBUG  7641[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:49,854]DEBUG  7641[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:49,854]DEBUG  7641[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#3, id=10, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#3, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#3, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,855]DEBUG  7642[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=75, roleName=Administrator}
[2017-10-14 14:08:49,855]DEBUG  7642[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#3, id=9, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#3, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#3, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,855]DEBUG  7642[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=3, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#75, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:49,855]DEBUG  7642[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=3, orderStatusName=Pending}
[2017-10-14 14:08:49,855]DEBUG  7642[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,855]DEBUG  7642[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 14:08:49,856]DEBUG  7643[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,856]DEBUG  7643[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@33721fb4 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@67ddcd34, testMethod = testDelete@OrderDaoTest, testException = [null]]]
[2017-10-14 14:08:49,856]DEBUG  7643[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 14:08:49,856]DEBUG  7643[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@42493424]
[2017-10-14 14:08:49,856]DEBUG  7643[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 14:08:49,886]DEBUG  7673[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 14:08:49,886]DEBUG  7673[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:49,886]DEBUG  7673[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@42493424] after transaction
[2017-10-14 14:08:49,887]DEBUG  7674[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 14:08:49,887]DEBUG  7674[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 14:08:49,887]DEBUG  7674[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:49,887] INFO  7674[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@33721fb4 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@67ddcd34, testMethod = testDelete@OrderDaoTest, testException = [null]]]
[2017-10-14 14:08:49,889]DEBUG  7676[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@33721fb4 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@67ddcd34, testMethod = testDelete@OrderDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 14:08:49,889]DEBUG  7676[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2017-10-14 14:08:49,890]DEBUG  7677[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2017-10-14 14:08:49,890]DEBUG  7677[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@33721fb4 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@7992fd15, testMethod = [null], testException = [null]]].
[2017-10-14 14:08:49,890]DEBUG  7677[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 14:08:49,890]DEBUG  7677[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 14:08:49,891]DEBUG  7678[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 14:08:49,891]DEBUG  7678[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 14:08:49,891]DEBUG  7678[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 14:08:49,891]DEBUG  7678[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 14:08:49,891]DEBUG  7678[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 14:08:49,892]DEBUG  7679[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 14:08:49,892]DEBUG  7679[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 14:08:49,892]DEBUG  7679[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 14:08:49,892]DEBUG  7679[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 14:08:49,892]DEBUG  7679[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 14:08:49,893]DEBUG  7680[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 14:08:49,893]DEBUG  7680[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 14:08:49,893]DEBUG  7680[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 14:08:49,893]DEBUG  7680[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 14:08:49,893]DEBUG  7680[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 14:08:49,894]DEBUG  7681[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 14:08:49,894]DEBUG  7681[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 14:08:49,894]DEBUG  7681[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 14:08:49,894]DEBUG  7681[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 14:08:49,895]DEBUG  7682[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 14:08:49,895]DEBUG  7682[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@7992fd15]
[2017-10-14 14:08:49,896]DEBUG  7683[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindFindById' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:49,896]DEBUG  7683[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@33721fb4 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@7992fd15, testMethod = testFindFindById@OrderDaoTest, testException = [null]]]
[2017-10-14 14:08:49,896]DEBUG  7683[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 14:08:49,898]DEBUG  7685[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindFindById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:49,898]DEBUG  7685[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15079793298
[2017-10-14 14:08:49,898]DEBUG  7685[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@602bfb7c] for Hibernate transaction
[2017-10-14 14:08:49,898]DEBUG  7685[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@602bfb7c]
[2017-10-14 14:08:49,899]DEBUG  7686[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 14:08:49,899]DEBUG  7686[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 14:08:49,899]DEBUG  7686[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 14:08:49,899]DEBUG  7686[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@33721fb4 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@7992fd15, testMethod = testFindFindById@OrderDaoTest, testException = [null]]]
[2017-10-14 14:08:49,899] INFO  7686[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (4): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@48ad0abe]; rollback [true]
[2017-10-14 14:08:49,900]DEBUG  7687[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,900]DEBUG  7687[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 14:08:49,901]DEBUG  7688[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,901]DEBUG  7688[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,901]DEBUG  7688[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 14:08:49,902]DEBUG  7689[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,902]DEBUG  7689[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,902]DEBUG  7689[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 14:08:49,903]DEBUG  7690[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,903]DEBUG  7690[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,903]DEBUG  7690[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 14:08:49,904]DEBUG  7691[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,904]DEBUG  7691[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,904]DEBUG  7691[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 14:08:49,905]DEBUG  7692[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,905]DEBUG  7692[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,906]DEBUG  7693[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 14:08:49,906]DEBUG  7693[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,906]DEBUG  7693[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,907]DEBUG  7694[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 14:08:49,907]DEBUG  7694[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,907]DEBUG  7694[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,908]DEBUG  7695[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 14:08:49,908]DEBUG  7695[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,909]DEBUG  7696[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,909]DEBUG  7696[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 14:08:49,909]DEBUG  7696[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,910]DEBUG  7697[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:49,910]DEBUG  7697[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,910]DEBUG  7697[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName) values (?)
[2017-10-14 14:08:49,911]DEBUG  7698[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 4
[2017-10-14 14:08:49,911]DEBUG  7698[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,912]DEBUG  7699[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:49,912]DEBUG  7699[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,912]DEBUG  7699[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 14:08:49,913]DEBUG  7700[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 76
[2017-10-14 14:08:49,913]DEBUG  7700[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,914]DEBUG  7701[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:49,914]DEBUG  7701[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,914]DEBUG  7701[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Users (IsUserActive, Balance, CustomerTypeRef, Email, FirstName, LastName, Login, Password, RegionRef, RoleRef) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:49,915]DEBUG  7702[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 4
[2017-10-14 14:08:49,916]DEBUG  7703[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,916]DEBUG  7703[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:49,916]DEBUG  7703[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,917]DEBUG  7704[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:49,918]DEBUG  7705[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 11
[2017-10-14 14:08:49,918]DEBUG  7705[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,918]DEBUG  7705[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:49,918]DEBUG  7705[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,918]DEBUG  7705[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:49,919]DEBUG  7706[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 12
[2017-10-14 14:08:49,919]DEBUG  7706[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,919]DEBUG  7706[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:49,919]DEBUG  7706[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,920]DEBUG  7707[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:49,920]DEBUG  7707[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 13
[2017-10-14 14:08:49,920]DEBUG  7707[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,921]DEBUG  7708[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:49,921]DEBUG  7708[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:49,921]DEBUG  7708[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:49,921]DEBUG  7708[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:49,922]DEBUG  7709[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:49,922]DEBUG  7709[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#4, id=12, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#4, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#4, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,922]DEBUG  7709[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#4, id=11, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#4, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#4, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,922]DEBUG  7709[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=4, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#76, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:49,922]DEBUG  7709[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=76, roleName=Administrator}
[2017-10-14 14:08:49,922]DEBUG  7709[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#4, id=13, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#4, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#4, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,922]DEBUG  7709[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=4, orderStatusName=Pending}
[2017-10-14 14:08:49,923]DEBUG  7710[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,923]DEBUG  7710[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID5_6_, this_.Assigne as Assigne5_6_, this_.Customer as Customer5_6_, this_.DeliveryDate as Delivery2_5_6_, this_.IsGift as IsGift5_6_, this_.MaxDiscount as MaxDisco4_5_6_, this_.OrderDate as OrderDate5_6_, this_.OrderName as OrderName5_6_, this_.OrderNumber as OrderNum7_5_6_, this_.OrderStatusRef as OrderSt12_5_6_, this_.PreferableDeliveryDate as Preferab8_5_6_, this_.TotalPrice as TotalPrice5_6_, user2_.ID as ID3_0_, user2_.IsUserActive as IsUserAc2_3_0_, user2_.Balance as Balance3_0_, user2_.CustomerTypeRef as Customer9_3_0_, user2_.Email as Email3_0_, user2_.FirstName as FirstName3_0_, user2_.LastName as LastName3_0_, user2_.Login as Login3_0_, user2_.Password as Password3_0_, user2_.RegionRef as RegionRef3_0_, user2_.RoleRef as RoleRef3_0_, customerty3_.ID as ID2_1_, customerty3_.Discount as Discount2_1_, customerty3_.MaxRange as MaxRange2_1_, customerty3_.MinRange as MinRange2_1_, customerty3_.TypeName as TypeName2_1_, region4_.ID as ID1_2_, region4_.RegionName as RegionName1_2_, role5_.ID as ID0_3_, role5_.RoleName as RoleName0_3_, user6_.ID as ID3_4_, user6_.IsUserActive as IsUserAc2_3_4_, user6_.Balance as Balance3_4_, user6_.CustomerTypeRef as Customer9_3_4_, user6_.Email as Email3_4_, user6_.FirstName as FirstName3_4_, user6_.LastName as LastName3_4_, user6_.Login as Login3_4_, user6_.Password as Password3_4_, user6_.RegionRef as RegionRef3_4_, user6_.RoleRef as RoleRef3_4_, orderstatu7_.ID as ID4_5_, orderstatu7_.OrederStatusName as OrederSt2_4_5_ from Orders this_ left outer join Users user2_ on this_.Assigne=user2_.ID left outer join CustomerTypes customerty3_ on user2_.CustomerTypeRef=customerty3_.ID left outer join Regions region4_ on user2_.RegionRef=region4_.ID left outer join Roles role5_ on user2_.RoleRef=role5_.ID left outer join Users user6_ on this_.Customer=user6_.ID left outer join OrderStatuses orderstatu7_ on this_.OrderStatusRef=orderstatu7_.ID
[2017-10-14 14:08:49,924]DEBUG  7711[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:49,925]DEBUG  7712[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#4], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#76], EntityKey[com.softserveinc.edu.oms.domain.entities.User#4], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#4], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#11]
[2017-10-14 14:08:49,925]DEBUG  7712[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#4], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#76], EntityKey[com.softserveinc.edu.oms.domain.entities.User#4], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#4], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#12]
[2017-10-14 14:08:49,925]DEBUG  7712[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#4], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#76], EntityKey[com.softserveinc.edu.oms.domain.entities.User#4], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#4], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#13]
[2017-10-14 14:08:49,925]DEBUG  7712[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:49,925]DEBUG  7712[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,926]DEBUG  7713[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:49,926]DEBUG  7713[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:49,926]DEBUG  7713[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:49,926]DEBUG  7713[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:49,926]DEBUG  7713[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:49,926]DEBUG  7713[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:49,927]DEBUG  7714[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#4, id=12, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#4, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#4, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,927]DEBUG  7714[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#4, id=11, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#4, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#4, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,927]DEBUG  7714[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=4, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#76, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:49,927]DEBUG  7714[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=76, roleName=Administrator}
[2017-10-14 14:08:49,927]DEBUG  7714[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#4, id=13, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#4, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#4, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,927]DEBUG  7714[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=4, orderStatusName=Pending}
[2017-10-14 14:08:49,927]DEBUG  7714[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,927]DEBUG  7714[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 14:08:49,928]DEBUG  7715[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,928]DEBUG  7715[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:49,928]DEBUG  7715[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:49,928]DEBUG  7715[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:49,928]DEBUG  7715[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:49,928]DEBUG  7715[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:49,928]DEBUG  7715[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#4, id=12, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#4, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#4, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,929]DEBUG  7716[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#4, id=11, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#4, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#4, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,929]DEBUG  7716[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=4, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#76, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:49,929]DEBUG  7716[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=76, roleName=Administrator}
[2017-10-14 14:08:49,929]DEBUG  7716[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#4, id=13, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#4, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#4, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,929]DEBUG  7716[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=4, orderStatusName=Pending}
[2017-10-14 14:08:49,929]DEBUG  7716[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,929]DEBUG  7716[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 14:08:49,930]DEBUG  7717[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,930]DEBUG  7717[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:49,930]DEBUG  7717[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:49,930]DEBUG  7717[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:49,930]DEBUG  7717[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:49,930]DEBUG  7717[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:49,930]DEBUG  7717[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#4, id=12, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#4, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#4, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,931]DEBUG  7718[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#4, id=11, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#4, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#4, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,931]DEBUG  7718[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=4, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#76, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:49,931]DEBUG  7718[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=76, roleName=Administrator}
[2017-10-14 14:08:49,931]DEBUG  7718[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#4, id=13, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#4, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#4, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,931]DEBUG  7718[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=4, orderStatusName=Pending}
[2017-10-14 14:08:49,931]DEBUG  7718[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,931]DEBUG  7718[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 14:08:49,931]DEBUG  7718[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,932]DEBUG  7719[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:49,932]DEBUG  7719[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:49,932]DEBUG  7719[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:49,932]DEBUG  7719[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:49,932]DEBUG  7719[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:49,932]DEBUG  7719[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#4, id=12, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#4, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#4, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,932]DEBUG  7719[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#4, id=11, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#4, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#4, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,933]DEBUG  7720[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=4, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#76, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:49,933]DEBUG  7720[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=76, roleName=Administrator}
[2017-10-14 14:08:49,933]DEBUG  7720[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#4, id=13, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#4, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#4, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,933]DEBUG  7720[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=4, orderStatusName=Pending}
[2017-10-14 14:08:49,933]DEBUG  7720[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,933]DEBUG  7720[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 14:08:49,933]DEBUG  7720[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,933]DEBUG  7720[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:49,934]DEBUG  7721[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:49,934]DEBUG  7721[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:49,934]DEBUG  7721[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:49,934]DEBUG  7721[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:49,934]DEBUG  7721[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#4, id=12, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#4, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#4, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,934]DEBUG  7721[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#4, id=11, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#4, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#4, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,935]DEBUG  7722[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=4, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#76, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:49,935]DEBUG  7722[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=76, roleName=Administrator}
[2017-10-14 14:08:49,935]DEBUG  7722[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#4, id=13, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#4, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#4, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,935]DEBUG  7722[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=4, orderStatusName=Pending}
[2017-10-14 14:08:49,935]DEBUG  7722[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,935]DEBUG  7722[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 14:08:49,935]DEBUG  7722[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,936]DEBUG  7723[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:49,936]DEBUG  7723[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:49,936]DEBUG  7723[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:49,936]DEBUG  7723[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:49,936]DEBUG  7723[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:49,936]DEBUG  7723[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#4, id=12, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#4, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#4, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,936]DEBUG  7723[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#4, id=11, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#4, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#4, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,937]DEBUG  7724[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=4, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#76, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:49,937]DEBUG  7724[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=76, roleName=Administrator}
[2017-10-14 14:08:49,937]DEBUG  7724[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#4, id=13, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#4, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#4, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,937]DEBUG  7724[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=4, orderStatusName=Pending}
[2017-10-14 14:08:49,937]DEBUG  7724[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,937]DEBUG  7724[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 14:08:49,937]DEBUG  7724[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,938]DEBUG  7725[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:49,938]DEBUG  7725[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:49,938]DEBUG  7725[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:49,938]DEBUG  7725[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:49,938]DEBUG  7725[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:49,938]DEBUG  7725[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#4, id=12, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#4, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#4, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,938]DEBUG  7725[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#4, id=11, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#4, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#4, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,939]DEBUG  7726[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=4, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#76, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:49,939]DEBUG  7726[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=76, roleName=Administrator}
[2017-10-14 14:08:49,939]DEBUG  7726[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#4, id=13, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#4, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#4, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,939]DEBUG  7726[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=4, orderStatusName=Pending}
[2017-10-14 14:08:49,939]DEBUG  7726[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,939]DEBUG  7726[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 14:08:49,939]DEBUG  7726[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,940]DEBUG  7727[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:49,940]DEBUG  7727[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:49,940]DEBUG  7727[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:49,940]DEBUG  7727[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:49,940]DEBUG  7727[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:49,940]DEBUG  7727[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#4, id=12, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#4, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#4, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,940]DEBUG  7727[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#4, id=11, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#4, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#4, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,941]DEBUG  7728[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=4, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#76, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:49,941]DEBUG  7728[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=76, roleName=Administrator}
[2017-10-14 14:08:49,941]DEBUG  7728[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#4, id=13, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#4, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#4, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,941]DEBUG  7728[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=4, orderStatusName=Pending}
[2017-10-14 14:08:49,941]DEBUG  7728[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,941]DEBUG  7728[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 14:08:49,941]DEBUG  7728[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,941]DEBUG  7728[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:49,942]DEBUG  7729[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:49,942]DEBUG  7729[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:49,942]DEBUG  7729[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:49,942]DEBUG  7729[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:49,942]DEBUG  7729[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#4, id=12, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#4, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#4, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,942]DEBUG  7729[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#4, id=11, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#4, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#4, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,942]DEBUG  7729[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=4, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#76, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:49,943]DEBUG  7730[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=76, roleName=Administrator}
[2017-10-14 14:08:49,943]DEBUG  7730[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#4, id=13, orderDate=Sat Oct 14 14:08:49 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:49 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#4, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#4, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:49,943]DEBUG  7730[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=4, orderStatusName=Pending}
[2017-10-14 14:08:49,943]DEBUG  7730[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,943]DEBUG  7730[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 14:08:49,943]DEBUG  7730[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,943]DEBUG  7730[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@33721fb4 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@7992fd15, testMethod = testFindFindById@OrderDaoTest, testException = [null]]]
[2017-10-14 14:08:49,943]DEBUG  7730[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 14:08:49,944]DEBUG  7731[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@602bfb7c]
[2017-10-14 14:08:49,944]DEBUG  7731[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 14:08:49,977]DEBUG  7764[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 14:08:49,978]DEBUG  7765[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:49,978]DEBUG  7765[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@602bfb7c] after transaction
[2017-10-14 14:08:49,978]DEBUG  7765[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 14:08:49,978]DEBUG  7765[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 14:08:49,979]DEBUG  7766[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:49,979] INFO  7766[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@33721fb4 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@7992fd15, testMethod = testFindFindById@OrderDaoTest, testException = [null]]]
[2017-10-14 14:08:49,980]DEBUG  7767[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@33721fb4 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@7992fd15, testMethod = testFindFindById@OrderDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 14:08:49,981]DEBUG  7768[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2017-10-14 14:08:49,981]DEBUG  7768[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2017-10-14 14:08:49,982]DEBUG  7769[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@33721fb4 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@6aff6bd5, testMethod = [null], testException = [null]]].
[2017-10-14 14:08:49,982]DEBUG  7769[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 14:08:49,982]DEBUG  7769[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 14:08:49,982]DEBUG  7769[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 14:08:49,982]DEBUG  7769[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 14:08:49,983]DEBUG  7770[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 14:08:49,983]DEBUG  7770[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 14:08:49,983]DEBUG  7770[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 14:08:49,983]DEBUG  7770[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 14:08:49,983]DEBUG  7770[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 14:08:49,984]DEBUG  7771[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 14:08:49,984]DEBUG  7771[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 14:08:49,984]DEBUG  7771[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 14:08:49,984]DEBUG  7771[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 14:08:49,984]DEBUG  7771[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 14:08:49,985]DEBUG  7772[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 14:08:49,985]DEBUG  7772[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 14:08:49,985]DEBUG  7772[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 14:08:49,985]DEBUG  7772[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 14:08:49,985]DEBUG  7772[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 14:08:49,986]DEBUG  7773[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 14:08:49,986]DEBUG  7773[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 14:08:49,986]DEBUG  7773[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 14:08:49,986]DEBUG  7773[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@6aff6bd5]
[2017-10-14 14:08:49,987]DEBUG  7774[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByTotalPriceEquals' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:49,987]DEBUG  7774[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@33721fb4 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@6aff6bd5, testMethod = testFindByTotalPriceEquals@OrderDaoTest, testException = [null]]]
[2017-10-14 14:08:49,988]DEBUG  7775[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 14:08:49,989]DEBUG  7776[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByTotalPriceEquals]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:49,989]DEBUG  7776[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15079793299
[2017-10-14 14:08:49,989]DEBUG  7776[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@23d6a184] for Hibernate transaction
[2017-10-14 14:08:49,990]DEBUG  7777[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@23d6a184]
[2017-10-14 14:08:49,990]DEBUG  7777[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 14:08:49,990]DEBUG  7777[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 14:08:49,990]DEBUG  7777[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 14:08:49,990]DEBUG  7777[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@33721fb4 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@6aff6bd5, testMethod = testFindByTotalPriceEquals@OrderDaoTest, testException = [null]]]
[2017-10-14 14:08:49,991] INFO  7778[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (5): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@48ad0abe]; rollback [true]
[2017-10-14 14:08:49,991]DEBUG  7778[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,991]DEBUG  7778[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 14:08:49,992]DEBUG  7779[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,992]DEBUG  7779[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,992]DEBUG  7779[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 14:08:49,993]DEBUG  7780[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,993]DEBUG  7780[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,994]DEBUG  7781[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 14:08:49,994]DEBUG  7781[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,994]DEBUG  7781[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,995]DEBUG  7782[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 14:08:49,995]DEBUG  7782[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,996]DEBUG  7783[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,996]DEBUG  7783[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 14:08:49,996]DEBUG  7783[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,997]DEBUG  7784[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,997]DEBUG  7784[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 14:08:49,997]DEBUG  7784[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,998]DEBUG  7785[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,998]DEBUG  7785[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 14:08:49,998]DEBUG  7785[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,998]DEBUG  7785[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,998]DEBUG  7785[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 14:08:49,999]DEBUG  7786[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,999]DEBUG  7786[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:49,999]DEBUG  7786[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 14:08:49,999]DEBUG  7786[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:49,999]DEBUG  7786[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:49,999]DEBUG  7786[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,000]DEBUG  7787[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName) values (?)
[2017-10-14 14:08:50,000]DEBUG  7787[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 5
[2017-10-14 14:08:50,000]DEBUG  7787[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,000]DEBUG  7787[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:50,000]DEBUG  7787[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,001]DEBUG  7788[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 14:08:50,001]DEBUG  7788[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 77
[2017-10-14 14:08:50,001]DEBUG  7788[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,001]DEBUG  7788[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:50,001]DEBUG  7788[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,001]DEBUG  7788[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Users (IsUserActive, Balance, CustomerTypeRef, Email, FirstName, LastName, Login, Password, RegionRef, RoleRef) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:50,002]DEBUG  7789[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 5
[2017-10-14 14:08:50,002]DEBUG  7789[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,002]DEBUG  7789[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:50,002]DEBUG  7789[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,002]DEBUG  7789[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:50,003]DEBUG  7790[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 14
[2017-10-14 14:08:50,003]DEBUG  7790[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,003]DEBUG  7790[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:50,003]DEBUG  7790[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,003]DEBUG  7790[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:50,004]DEBUG  7791[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 15
[2017-10-14 14:08:50,004]DEBUG  7791[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,004]DEBUG  7791[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:50,004]DEBUG  7791[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,005]DEBUG  7792[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:50,005]DEBUG  7792[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 16
[2017-10-14 14:08:50,005]DEBUG  7792[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,007]DEBUG  7794[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:50,007]DEBUG  7794[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:50,007]DEBUG  7794[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:50,008]DEBUG  7795[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:50,008]DEBUG  7795[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:50,008]DEBUG  7795[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=5, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#77, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:50,008]DEBUG  7795[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#5, id=15, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#5, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#5, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,008]DEBUG  7795[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#5, id=16, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#5, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#5, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,008]DEBUG  7795[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=77, roleName=Administrator}
[2017-10-14 14:08:50,008]DEBUG  7795[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=5, orderStatusName=Pending}
[2017-10-14 14:08:50,008]DEBUG  7795[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#5, id=14, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#5, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#5, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,009]DEBUG  7796[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,009]DEBUG  7796[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID5_6_, this_.Assigne as Assigne5_6_, this_.Customer as Customer5_6_, this_.DeliveryDate as Delivery2_5_6_, this_.IsGift as IsGift5_6_, this_.MaxDiscount as MaxDisco4_5_6_, this_.OrderDate as OrderDate5_6_, this_.OrderName as OrderName5_6_, this_.OrderNumber as OrderNum7_5_6_, this_.OrderStatusRef as OrderSt12_5_6_, this_.PreferableDeliveryDate as Preferab8_5_6_, this_.TotalPrice as TotalPrice5_6_, user2_.ID as ID3_0_, user2_.IsUserActive as IsUserAc2_3_0_, user2_.Balance as Balance3_0_, user2_.CustomerTypeRef as Customer9_3_0_, user2_.Email as Email3_0_, user2_.FirstName as FirstName3_0_, user2_.LastName as LastName3_0_, user2_.Login as Login3_0_, user2_.Password as Password3_0_, user2_.RegionRef as RegionRef3_0_, user2_.RoleRef as RoleRef3_0_, customerty3_.ID as ID2_1_, customerty3_.Discount as Discount2_1_, customerty3_.MaxRange as MaxRange2_1_, customerty3_.MinRange as MinRange2_1_, customerty3_.TypeName as TypeName2_1_, region4_.ID as ID1_2_, region4_.RegionName as RegionName1_2_, role5_.ID as ID0_3_, role5_.RoleName as RoleName0_3_, user6_.ID as ID3_4_, user6_.IsUserActive as IsUserAc2_3_4_, user6_.Balance as Balance3_4_, user6_.CustomerTypeRef as Customer9_3_4_, user6_.Email as Email3_4_, user6_.FirstName as FirstName3_4_, user6_.LastName as LastName3_4_, user6_.Login as Login3_4_, user6_.Password as Password3_4_, user6_.RegionRef as RegionRef3_4_, user6_.RoleRef as RoleRef3_4_, orderstatu7_.ID as ID4_5_, orderstatu7_.OrederStatusName as OrederSt2_4_5_ from Orders this_ left outer join Users user2_ on this_.Assigne=user2_.ID left outer join CustomerTypes customerty3_ on user2_.CustomerTypeRef=customerty3_.ID left outer join Regions region4_ on user2_.RegionRef=region4_.ID left outer join Roles role5_ on user2_.RoleRef=role5_.ID left outer join Users user6_ on this_.Customer=user6_.ID left outer join OrderStatuses orderstatu7_ on this_.OrderStatusRef=orderstatu7_.ID where this_.TotalPrice=?
[2017-10-14 14:08:50,010]DEBUG  7797[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:50,011]DEBUG  7798[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#5], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#77], EntityKey[com.softserveinc.edu.oms.domain.entities.User#5], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#5], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#14]
[2017-10-14 14:08:50,011]DEBUG  7798[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#5], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#77], EntityKey[com.softserveinc.edu.oms.domain.entities.User#5], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#5], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#15]
[2017-10-14 14:08:50,012]DEBUG  7799[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#5], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#77], EntityKey[com.softserveinc.edu.oms.domain.entities.User#5], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#5], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#16]
[2017-10-14 14:08:50,012]DEBUG  7799[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:50,012]DEBUG  7799[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,012]DEBUG  7799[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:50,012]DEBUG  7799[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:50,012]DEBUG  7799[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:50,013]DEBUG  7800[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:50,013]DEBUG  7800[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:50,013]DEBUG  7800[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:50,013]DEBUG  7800[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=5, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#77, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:50,013]DEBUG  7800[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#5, id=15, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#5, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#5, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,013]DEBUG  7800[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#5, id=16, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#5, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#5, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,013]DEBUG  7800[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=77, roleName=Administrator}
[2017-10-14 14:08:50,013]DEBUG  7800[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=5, orderStatusName=Pending}
[2017-10-14 14:08:50,014]DEBUG  7801[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#5, id=14, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#5, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#5, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,014]DEBUG  7801[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,014]DEBUG  7801[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 14:08:50,014]DEBUG  7801[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,014]DEBUG  7801[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:50,014]DEBUG  7801[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:50,015]DEBUG  7802[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:50,015]DEBUG  7802[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:50,015]DEBUG  7802[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:50,015]DEBUG  7802[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=5, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#77, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:50,015]DEBUG  7802[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#5, id=15, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#5, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#5, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,015]DEBUG  7802[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#5, id=16, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#5, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#5, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,015]DEBUG  7802[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=77, roleName=Administrator}
[2017-10-14 14:08:50,015]DEBUG  7802[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=5, orderStatusName=Pending}
[2017-10-14 14:08:50,016]DEBUG  7803[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#5, id=14, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#5, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#5, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,016]DEBUG  7803[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,016]DEBUG  7803[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 14:08:50,016]DEBUG  7803[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,016]DEBUG  7803[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:50,016]DEBUG  7803[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:50,017]DEBUG  7804[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:50,017]DEBUG  7804[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:50,017]DEBUG  7804[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:50,017]DEBUG  7804[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=5, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#77, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:50,017]DEBUG  7804[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#5, id=15, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#5, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#5, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,017]DEBUG  7804[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#5, id=16, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#5, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#5, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,017]DEBUG  7804[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=77, roleName=Administrator}
[2017-10-14 14:08:50,018]DEBUG  7805[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=5, orderStatusName=Pending}
[2017-10-14 14:08:50,018]DEBUG  7805[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#5, id=14, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#5, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#5, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,018]DEBUG  7805[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,018]DEBUG  7805[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 14:08:50,018]DEBUG  7805[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,018]DEBUG  7805[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:50,018]DEBUG  7805[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:50,019]DEBUG  7806[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:50,019]DEBUG  7806[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:50,019]DEBUG  7806[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:50,019]DEBUG  7806[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=5, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#77, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:50,019]DEBUG  7806[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#5, id=15, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#5, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#5, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,019]DEBUG  7806[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#5, id=16, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#5, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#5, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,019]DEBUG  7806[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=77, roleName=Administrator}
[2017-10-14 14:08:50,020]DEBUG  7807[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=5, orderStatusName=Pending}
[2017-10-14 14:08:50,020]DEBUG  7807[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#5, id=14, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#5, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#5, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,020]DEBUG  7807[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,020]DEBUG  7807[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 14:08:50,020]DEBUG  7807[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,020]DEBUG  7807[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:50,021]DEBUG  7808[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:50,021]DEBUG  7808[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:50,021]DEBUG  7808[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:50,021]DEBUG  7808[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:50,021]DEBUG  7808[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=5, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#77, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:50,021]DEBUG  7808[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#5, id=15, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#5, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#5, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,021]DEBUG  7808[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#5, id=16, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#5, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#5, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,022]DEBUG  7809[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=77, roleName=Administrator}
[2017-10-14 14:08:50,022]DEBUG  7809[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=5, orderStatusName=Pending}
[2017-10-14 14:08:50,022]DEBUG  7809[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#5, id=14, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#5, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#5, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,022]DEBUG  7809[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,022]DEBUG  7809[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 14:08:50,022]DEBUG  7809[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,023]DEBUG  7810[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:50,023]DEBUG  7810[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:50,023]DEBUG  7810[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:50,023]DEBUG  7810[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:50,023]DEBUG  7810[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:50,023]DEBUG  7810[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=5, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#77, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:50,023]DEBUG  7810[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#5, id=15, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#5, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#5, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,024]DEBUG  7811[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#5, id=16, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#5, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#5, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,024]DEBUG  7811[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=77, roleName=Administrator}
[2017-10-14 14:08:50,024]DEBUG  7811[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=5, orderStatusName=Pending}
[2017-10-14 14:08:50,024]DEBUG  7811[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#5, id=14, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#5, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#5, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,024]DEBUG  7811[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,024]DEBUG  7811[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 14:08:50,024]DEBUG  7811[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,025]DEBUG  7812[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:50,025]DEBUG  7812[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:50,025]DEBUG  7812[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:50,025]DEBUG  7812[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:50,025]DEBUG  7812[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:50,025]DEBUG  7812[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=5, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#77, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:50,025]DEBUG  7812[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#5, id=15, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#5, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#5, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,026]DEBUG  7813[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#5, id=16, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#5, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#5, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,026]DEBUG  7813[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=77, roleName=Administrator}
[2017-10-14 14:08:50,026]DEBUG  7813[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=5, orderStatusName=Pending}
[2017-10-14 14:08:50,026]DEBUG  7813[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#5, id=14, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#5, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#5, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,026]DEBUG  7813[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,026]DEBUG  7813[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 14:08:50,026]DEBUG  7813[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,026]DEBUG  7813[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:50,027]DEBUG  7814[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:50,027]DEBUG  7814[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:50,027]DEBUG  7814[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:50,027]DEBUG  7814[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:50,027]DEBUG  7814[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=5, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#77, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:50,027]DEBUG  7814[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#5, id=15, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#5, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#5, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,027]DEBUG  7814[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#5, id=16, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#5, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#5, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,028]DEBUG  7815[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=77, roleName=Administrator}
[2017-10-14 14:08:50,028]DEBUG  7815[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=5, orderStatusName=Pending}
[2017-10-14 14:08:50,028]DEBUG  7815[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#5, id=14, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#5, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#5, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,028]DEBUG  7815[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,028]DEBUG  7815[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 14:08:50,028]DEBUG  7815[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,028]DEBUG  7815[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:50,029]DEBUG  7816[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:50,029]DEBUG  7816[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:50,029]DEBUG  7816[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:50,029]DEBUG  7816[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:50,029]DEBUG  7816[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=5, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#77, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:50,029]DEBUG  7816[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#5, id=15, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#5, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#5, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,029]DEBUG  7816[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#5, id=16, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#5, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#5, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,030]DEBUG  7817[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=77, roleName=Administrator}
[2017-10-14 14:08:50,030]DEBUG  7817[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=5, orderStatusName=Pending}
[2017-10-14 14:08:50,030]DEBUG  7817[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#5, id=14, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#5, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#5, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,030]DEBUG  7817[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,030]DEBUG  7817[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 14:08:50,030]DEBUG  7817[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,030]DEBUG  7817[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@33721fb4 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@6aff6bd5, testMethod = testFindByTotalPriceEquals@OrderDaoTest, testException = [null]]]
[2017-10-14 14:08:50,030]DEBUG  7817[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 14:08:50,031]DEBUG  7818[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@23d6a184]
[2017-10-14 14:08:50,031]DEBUG  7818[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 14:08:50,069]DEBUG  7856[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 14:08:50,069]DEBUG  7856[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:50,070]DEBUG  7857[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@23d6a184] after transaction
[2017-10-14 14:08:50,070]DEBUG  7857[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 14:08:50,070]DEBUG  7857[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 14:08:50,070]DEBUG  7857[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:50,071] INFO  7858[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@33721fb4 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@6aff6bd5, testMethod = testFindByTotalPriceEquals@OrderDaoTest, testException = [null]]]
[2017-10-14 14:08:50,072]DEBUG  7859[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@33721fb4 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@6aff6bd5, testMethod = testFindByTotalPriceEquals@OrderDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 14:08:50,073]DEBUG  7860[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2017-10-14 14:08:50,073]DEBUG  7860[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2017-10-14 14:08:50,073]DEBUG  7860[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@33721fb4 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@12eeb6b4, testMethod = [null], testException = [null]]].
[2017-10-14 14:08:50,074]DEBUG  7861[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 14:08:50,074]DEBUG  7861[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 14:08:50,074]DEBUG  7861[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 14:08:50,074]DEBUG  7861[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 14:08:50,074]DEBUG  7861[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 14:08:50,075]DEBUG  7862[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 14:08:50,075]DEBUG  7862[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 14:08:50,075]DEBUG  7862[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 14:08:50,075]DEBUG  7862[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 14:08:50,075]DEBUG  7862[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 14:08:50,076]DEBUG  7863[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 14:08:50,076]DEBUG  7863[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 14:08:50,076]DEBUG  7863[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 14:08:50,076]DEBUG  7863[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 14:08:50,076]DEBUG  7863[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 14:08:50,077]DEBUG  7864[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 14:08:50,077]DEBUG  7864[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 14:08:50,077]DEBUG  7864[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 14:08:50,077]DEBUG  7864[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 14:08:50,077]DEBUG  7864[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 14:08:50,078]DEBUG  7865[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 14:08:50,078]DEBUG  7865[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 14:08:50,078]DEBUG  7865[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@12eeb6b4]
[2017-10-14 14:08:50,078]DEBUG  7865[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByTotalPriceLess' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:50,078]DEBUG  7865[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@33721fb4 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@12eeb6b4, testMethod = testFindByTotalPriceLess@OrderDaoTest, testException = [null]]]
[2017-10-14 14:08:50,079]DEBUG  7866[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 14:08:50,079]DEBUG  7866[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByTotalPriceLess]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:50,080]DEBUG  7867[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15079793300
[2017-10-14 14:08:50,080]DEBUG  7867[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@1cc99212] for Hibernate transaction
[2017-10-14 14:08:50,080]DEBUG  7867[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@1cc99212]
[2017-10-14 14:08:50,080]DEBUG  7867[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 14:08:50,080]DEBUG  7867[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 14:08:50,080]DEBUG  7867[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 14:08:50,080]DEBUG  7867[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@33721fb4 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@12eeb6b4, testMethod = testFindByTotalPriceLess@OrderDaoTest, testException = [null]]]
[2017-10-14 14:08:50,080] INFO  7867[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (6): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@48ad0abe]; rollback [true]
[2017-10-14 14:08:50,080]DEBUG  7867[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,081]DEBUG  7868[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 14:08:50,081]DEBUG  7868[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,081]DEBUG  7868[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,081]DEBUG  7868[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 14:08:50,081]DEBUG  7868[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,082]DEBUG  7869[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,082]DEBUG  7869[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 14:08:50,082]DEBUG  7869[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,082]DEBUG  7869[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,082]DEBUG  7869[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 14:08:50,082]DEBUG  7869[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,083]DEBUG  7870[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,083]DEBUG  7870[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 14:08:50,083]DEBUG  7870[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,083]DEBUG  7870[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,083]DEBUG  7870[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 14:08:50,084]DEBUG  7871[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,084]DEBUG  7871[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,084]DEBUG  7871[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 14:08:50,084]DEBUG  7871[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,084]DEBUG  7871[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,084]DEBUG  7871[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 14:08:50,084]DEBUG  7871[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,085]DEBUG  7872[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,085]DEBUG  7872[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 14:08:50,085]DEBUG  7872[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,085]DEBUG  7872[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:50,085]DEBUG  7872[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,085]DEBUG  7872[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName) values (?)
[2017-10-14 14:08:50,086]DEBUG  7873[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 6
[2017-10-14 14:08:50,086]DEBUG  7873[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,086]DEBUG  7873[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:50,086]DEBUG  7873[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,086]DEBUG  7873[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 14:08:50,087]DEBUG  7874[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 78
[2017-10-14 14:08:50,087]DEBUG  7874[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,087]DEBUG  7874[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:50,087]DEBUG  7874[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,087]DEBUG  7874[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Users (IsUserActive, Balance, CustomerTypeRef, Email, FirstName, LastName, Login, Password, RegionRef, RoleRef) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:50,088]DEBUG  7875[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 6
[2017-10-14 14:08:50,088]DEBUG  7875[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,088]DEBUG  7875[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:50,088]DEBUG  7875[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,088]DEBUG  7875[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:50,089]DEBUG  7876[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 17
[2017-10-14 14:08:50,089]DEBUG  7876[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,089]DEBUG  7876[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:50,089]DEBUG  7876[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,089]DEBUG  7876[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:50,090]DEBUG  7877[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 18
[2017-10-14 14:08:50,090]DEBUG  7877[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,090]DEBUG  7877[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:50,091]DEBUG  7878[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,091]DEBUG  7878[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:50,091]DEBUG  7878[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 19
[2017-10-14 14:08:50,091]DEBUG  7878[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,092]DEBUG  7879[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:50,092]DEBUG  7879[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:50,093]DEBUG  7880[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:50,093]DEBUG  7880[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:50,093]DEBUG  7880[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:50,093]DEBUG  7880[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#6, id=19, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#6, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#6, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,093]DEBUG  7880[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=6, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#78, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:50,093]DEBUG  7880[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#6, id=17, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#6, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#6, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,094]DEBUG  7881[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#6, id=18, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#6, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#6, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,094]DEBUG  7881[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=78, roleName=Administrator}
[2017-10-14 14:08:50,094]DEBUG  7881[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=6, orderStatusName=Pending}
[2017-10-14 14:08:50,094]DEBUG  7881[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,094]DEBUG  7881[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID5_6_, this_.Assigne as Assigne5_6_, this_.Customer as Customer5_6_, this_.DeliveryDate as Delivery2_5_6_, this_.IsGift as IsGift5_6_, this_.MaxDiscount as MaxDisco4_5_6_, this_.OrderDate as OrderDate5_6_, this_.OrderName as OrderName5_6_, this_.OrderNumber as OrderNum7_5_6_, this_.OrderStatusRef as OrderSt12_5_6_, this_.PreferableDeliveryDate as Preferab8_5_6_, this_.TotalPrice as TotalPrice5_6_, user2_.ID as ID3_0_, user2_.IsUserActive as IsUserAc2_3_0_, user2_.Balance as Balance3_0_, user2_.CustomerTypeRef as Customer9_3_0_, user2_.Email as Email3_0_, user2_.FirstName as FirstName3_0_, user2_.LastName as LastName3_0_, user2_.Login as Login3_0_, user2_.Password as Password3_0_, user2_.RegionRef as RegionRef3_0_, user2_.RoleRef as RoleRef3_0_, customerty3_.ID as ID2_1_, customerty3_.Discount as Discount2_1_, customerty3_.MaxRange as MaxRange2_1_, customerty3_.MinRange as MinRange2_1_, customerty3_.TypeName as TypeName2_1_, region4_.ID as ID1_2_, region4_.RegionName as RegionName1_2_, role5_.ID as ID0_3_, role5_.RoleName as RoleName0_3_, user6_.ID as ID3_4_, user6_.IsUserActive as IsUserAc2_3_4_, user6_.Balance as Balance3_4_, user6_.CustomerTypeRef as Customer9_3_4_, user6_.Email as Email3_4_, user6_.FirstName as FirstName3_4_, user6_.LastName as LastName3_4_, user6_.Login as Login3_4_, user6_.Password as Password3_4_, user6_.RegionRef as RegionRef3_4_, user6_.RoleRef as RoleRef3_4_, orderstatu7_.ID as ID4_5_, orderstatu7_.OrederStatusName as OrederSt2_4_5_ from Orders this_ left outer join Users user2_ on this_.Assigne=user2_.ID left outer join CustomerTypes customerty3_ on user2_.CustomerTypeRef=customerty3_.ID left outer join Regions region4_ on user2_.RegionRef=region4_.ID left outer join Roles role5_ on user2_.RoleRef=role5_.ID left outer join Users user6_ on this_.Customer=user6_.ID left outer join OrderStatuses orderstatu7_ on this_.OrderStatusRef=orderstatu7_.ID where this_.TotalPrice<?
[2017-10-14 14:08:50,095]DEBUG  7882[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:50,096]DEBUG  7883[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#6], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#78], EntityKey[com.softserveinc.edu.oms.domain.entities.User#6], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#6], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#17]
[2017-10-14 14:08:50,096]DEBUG  7883[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#6], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#78], EntityKey[com.softserveinc.edu.oms.domain.entities.User#6], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#6], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#18]
[2017-10-14 14:08:50,096]DEBUG  7883[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#6], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#78], EntityKey[com.softserveinc.edu.oms.domain.entities.User#6], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#6], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#19]
[2017-10-14 14:08:50,096]DEBUG  7883[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:50,097]DEBUG  7884[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,097]DEBUG  7884[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:50,097]DEBUG  7884[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:50,097]DEBUG  7884[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:50,097]DEBUG  7884[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:50,097]DEBUG  7884[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:50,097]DEBUG  7884[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:50,098]DEBUG  7885[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#6, id=19, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#6, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#6, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,098]DEBUG  7885[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=6, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#78, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:50,098]DEBUG  7885[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#6, id=17, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#6, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#6, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,098]DEBUG  7885[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#6, id=18, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#6, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#6, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,098]DEBUG  7885[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=78, roleName=Administrator}
[2017-10-14 14:08:50,098]DEBUG  7885[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=6, orderStatusName=Pending}
[2017-10-14 14:08:50,098]DEBUG  7885[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,098]DEBUG  7885[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 14:08:50,099]DEBUG  7886[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,099]DEBUG  7886[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:50,099]DEBUG  7886[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:50,099]DEBUG  7886[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:50,099]DEBUG  7886[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:50,099]DEBUG  7886[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:50,099]DEBUG  7886[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#6, id=19, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#6, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#6, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,100]DEBUG  7887[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=6, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#78, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:50,100]DEBUG  7887[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#6, id=17, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#6, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#6, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,100]DEBUG  7887[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#6, id=18, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#6, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#6, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,100]DEBUG  7887[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=78, roleName=Administrator}
[2017-10-14 14:08:50,100]DEBUG  7887[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=6, orderStatusName=Pending}
[2017-10-14 14:08:50,100]DEBUG  7887[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,100]DEBUG  7887[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 14:08:50,100]DEBUG  7887[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,101]DEBUG  7888[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:50,101]DEBUG  7888[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:50,101]DEBUG  7888[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:50,101]DEBUG  7888[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:50,101]DEBUG  7888[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:50,101]DEBUG  7888[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#6, id=19, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#6, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#6, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,101]DEBUG  7888[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=6, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#78, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:50,102]DEBUG  7889[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#6, id=17, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#6, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#6, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,102]DEBUG  7889[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#6, id=18, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#6, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#6, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,102]DEBUG  7889[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=78, roleName=Administrator}
[2017-10-14 14:08:50,102]DEBUG  7889[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=6, orderStatusName=Pending}
[2017-10-14 14:08:50,102]DEBUG  7889[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,102]DEBUG  7889[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 14:08:50,102]DEBUG  7889[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,102]DEBUG  7889[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:50,103]DEBUG  7890[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:50,103]DEBUG  7890[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:50,103]DEBUG  7890[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:50,103]DEBUG  7890[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:50,103]DEBUG  7890[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#6, id=19, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#6, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#6, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,103]DEBUG  7890[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=6, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#78, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:50,103]DEBUG  7890[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#6, id=17, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#6, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#6, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,104]DEBUG  7891[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#6, id=18, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#6, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#6, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,104]DEBUG  7891[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=78, roleName=Administrator}
[2017-10-14 14:08:50,104]DEBUG  7891[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=6, orderStatusName=Pending}
[2017-10-14 14:08:50,104]DEBUG  7891[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,104]DEBUG  7891[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 14:08:50,104]DEBUG  7891[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,104]DEBUG  7891[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:50,105]DEBUG  7892[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:50,105]DEBUG  7892[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:50,105]DEBUG  7892[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:50,105]DEBUG  7892[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:50,105]DEBUG  7892[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#6, id=19, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#6, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#6, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,105]DEBUG  7892[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=6, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#78, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:50,105]DEBUG  7892[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#6, id=17, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#6, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#6, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,105]DEBUG  7892[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#6, id=18, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#6, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#6, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,106]DEBUG  7893[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=78, roleName=Administrator}
[2017-10-14 14:08:50,106]DEBUG  7893[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=6, orderStatusName=Pending}
[2017-10-14 14:08:50,106]DEBUG  7893[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,106]DEBUG  7893[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 14:08:50,106]DEBUG  7893[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,106]DEBUG  7893[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:50,106]DEBUG  7893[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:50,107]DEBUG  7894[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:50,107]DEBUG  7894[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:50,107]DEBUG  7894[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:50,107]DEBUG  7894[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#6, id=19, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#6, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#6, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,107]DEBUG  7894[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=6, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#78, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:50,107]DEBUG  7894[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#6, id=17, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#6, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#6, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,107]DEBUG  7894[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#6, id=18, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#6, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#6, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,107]DEBUG  7894[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=78, roleName=Administrator}
[2017-10-14 14:08:50,108]DEBUG  7895[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=6, orderStatusName=Pending}
[2017-10-14 14:08:50,108]DEBUG  7895[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,108]DEBUG  7895[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 14:08:50,108]DEBUG  7895[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,108]DEBUG  7895[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:50,108]DEBUG  7895[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:50,108]DEBUG  7895[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:50,109]DEBUG  7896[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:50,109]DEBUG  7896[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:50,109]DEBUG  7896[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#6, id=19, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#6, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#6, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,109]DEBUG  7896[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=6, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#78, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:50,109]DEBUG  7896[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#6, id=17, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#6, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#6, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,109]DEBUG  7896[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#6, id=18, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#6, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#6, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,109]DEBUG  7896[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=78, roleName=Administrator}
[2017-10-14 14:08:50,109]DEBUG  7896[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=6, orderStatusName=Pending}
[2017-10-14 14:08:50,109]DEBUG  7896[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,110]DEBUG  7897[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 14:08:50,110]DEBUG  7897[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,110]DEBUG  7897[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:50,110]DEBUG  7897[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:50,110]DEBUG  7897[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:50,110]DEBUG  7897[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:50,110]DEBUG  7897[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:50,111]DEBUG  7898[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#6, id=19, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#6, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#6, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,111]DEBUG  7898[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=6, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#78, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:50,111]DEBUG  7898[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#6, id=17, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#6, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#6, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,111]DEBUG  7898[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#6, id=18, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#6, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#6, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,111]DEBUG  7898[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=78, roleName=Administrator}
[2017-10-14 14:08:50,111]DEBUG  7898[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=6, orderStatusName=Pending}
[2017-10-14 14:08:50,111]DEBUG  7898[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,111]DEBUG  7898[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 14:08:50,112]DEBUG  7899[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,112]DEBUG  7899[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:50,112]DEBUG  7899[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:50,112]DEBUG  7899[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:50,112]DEBUG  7899[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:50,112]DEBUG  7899[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:50,112]DEBUG  7899[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#6, id=19, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#6, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#6, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,113]DEBUG  7900[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=6, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#78, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:50,113]DEBUG  7900[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#6, id=17, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#6, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#6, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,113]DEBUG  7900[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#6, id=18, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#6, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#6, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,113]DEBUG  7900[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=78, roleName=Administrator}
[2017-10-14 14:08:50,113]DEBUG  7900[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=6, orderStatusName=Pending}
[2017-10-14 14:08:50,113]DEBUG  7900[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,113]DEBUG  7900[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 14:08:50,113]DEBUG  7900[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,114]DEBUG  7901[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@33721fb4 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@12eeb6b4, testMethod = testFindByTotalPriceLess@OrderDaoTest, testException = [null]]]
[2017-10-14 14:08:50,114]DEBUG  7901[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 14:08:50,114]DEBUG  7901[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@1cc99212]
[2017-10-14 14:08:50,114]DEBUG  7901[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 14:08:50,153]DEBUG  7940[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 14:08:50,153]DEBUG  7940[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:50,153]DEBUG  7940[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@1cc99212] after transaction
[2017-10-14 14:08:50,153]DEBUG  7940[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 14:08:50,154]DEBUG  7941[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 14:08:50,154]DEBUG  7941[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:50,154] INFO  7941[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@33721fb4 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@12eeb6b4, testMethod = testFindByTotalPriceLess@OrderDaoTest, testException = [null]]]
[2017-10-14 14:08:50,156]DEBUG  7943[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@33721fb4 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@12eeb6b4, testMethod = testFindByTotalPriceLess@OrderDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 14:08:50,156]DEBUG  7943[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2017-10-14 14:08:50,156]DEBUG  7943[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2017-10-14 14:08:50,157]DEBUG  7944[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@33721fb4 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@2bc0f4c7, testMethod = [null], testException = [null]]].
[2017-10-14 14:08:50,157]DEBUG  7944[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 14:08:50,157]DEBUG  7944[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 14:08:50,157]DEBUG  7944[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 14:08:50,158]DEBUG  7945[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 14:08:50,158]DEBUG  7945[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 14:08:50,158]DEBUG  7945[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 14:08:50,158]DEBUG  7945[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 14:08:50,158]DEBUG  7945[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 14:08:50,159]DEBUG  7946[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 14:08:50,159]DEBUG  7946[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 14:08:50,159]DEBUG  7946[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 14:08:50,159]DEBUG  7946[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 14:08:50,160]DEBUG  7947[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 14:08:50,160]DEBUG  7947[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 14:08:50,160]DEBUG  7947[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 14:08:50,160]DEBUG  7947[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 14:08:50,160]DEBUG  7947[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 14:08:50,161]DEBUG  7948[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 14:08:50,161]DEBUG  7948[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 14:08:50,161]DEBUG  7948[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 14:08:50,161]DEBUG  7948[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 14:08:50,161]DEBUG  7948[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 14:08:50,162]DEBUG  7949[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@2bc0f4c7]
[2017-10-14 14:08:50,162]DEBUG  7949[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByTotalPriceMore' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:50,163]DEBUG  7950[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@33721fb4 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@2bc0f4c7, testMethod = testFindByTotalPriceMore@OrderDaoTest, testException = [null]]]
[2017-10-14 14:08:50,163]DEBUG  7950[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 14:08:50,164]DEBUG  7951[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByTotalPriceMore]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:50,164]DEBUG  7951[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15079793301
[2017-10-14 14:08:50,165]DEBUG  7952[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@5277da5] for Hibernate transaction
[2017-10-14 14:08:50,165]DEBUG  7952[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@5277da5]
[2017-10-14 14:08:50,165]DEBUG  7952[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 14:08:50,165]DEBUG  7952[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 14:08:50,165]DEBUG  7952[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 14:08:50,166]DEBUG  7953[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@33721fb4 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@2bc0f4c7, testMethod = testFindByTotalPriceMore@OrderDaoTest, testException = [null]]]
[2017-10-14 14:08:50,166] INFO  7953[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (7): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@48ad0abe]; rollback [true]
[2017-10-14 14:08:50,166]DEBUG  7953[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,166]DEBUG  7953[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 14:08:50,167]DEBUG  7954[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,168]DEBUG  7955[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,168]DEBUG  7955[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 14:08:50,168]DEBUG  7955[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,169]DEBUG  7956[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,169]DEBUG  7956[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 14:08:50,170]DEBUG  7957[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,171]DEBUG  7958[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,171]DEBUG  7958[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 14:08:50,172]DEBUG  7959[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,172]DEBUG  7959[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,172]DEBUG  7959[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 14:08:50,173]DEBUG  7960[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,173]DEBUG  7960[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,173]DEBUG  7960[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 14:08:50,174]DEBUG  7961[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,174]DEBUG  7961[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,174]DEBUG  7961[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 14:08:50,175]DEBUG  7962[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,175]DEBUG  7962[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,176]DEBUG  7963[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 14:08:50,176]DEBUG  7963[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,176]DEBUG  7963[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,177]DEBUG  7964[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 14:08:50,177]DEBUG  7964[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,178]DEBUG  7965[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:50,178]DEBUG  7965[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,178]DEBUG  7965[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName) values (?)
[2017-10-14 14:08:50,178]DEBUG  7965[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 7
[2017-10-14 14:08:50,179]DEBUG  7966[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,179]DEBUG  7966[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:50,179]DEBUG  7966[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,179]DEBUG  7966[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 14:08:50,179]DEBUG  7966[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 79
[2017-10-14 14:08:50,179]DEBUG  7966[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,180]DEBUG  7967[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:50,180]DEBUG  7967[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,180]DEBUG  7967[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Users (IsUserActive, Balance, CustomerTypeRef, Email, FirstName, LastName, Login, Password, RegionRef, RoleRef) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:50,181]DEBUG  7968[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 7
[2017-10-14 14:08:50,181]DEBUG  7968[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,181]DEBUG  7968[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:50,181]DEBUG  7968[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,181]DEBUG  7968[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:50,182]DEBUG  7969[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 20
[2017-10-14 14:08:50,182]DEBUG  7969[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,182]DEBUG  7969[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:50,182]DEBUG  7969[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,182]DEBUG  7969[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:50,183]DEBUG  7970[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 21
[2017-10-14 14:08:50,183]DEBUG  7970[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,183]DEBUG  7970[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:50,183]DEBUG  7970[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,184]DEBUG  7971[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:50,184]DEBUG  7971[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 22
[2017-10-14 14:08:50,184]DEBUG  7971[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,185]DEBUG  7972[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:50,185]DEBUG  7972[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:50,185]DEBUG  7972[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:50,186]DEBUG  7973[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:50,186]DEBUG  7973[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:50,186]DEBUG  7973[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#7, id=20, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#7, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#7, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,186]DEBUG  7973[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=7, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#79, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:50,186]DEBUG  7973[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=7, orderStatusName=Pending}
[2017-10-14 14:08:50,186]DEBUG  7973[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#7, id=21, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#7, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#7, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,186]DEBUG  7973[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#7, id=22, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#7, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#7, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,186]DEBUG  7973[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=79, roleName=Administrator}
[2017-10-14 14:08:50,187]DEBUG  7974[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,187]DEBUG  7974[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID5_6_, this_.Assigne as Assigne5_6_, this_.Customer as Customer5_6_, this_.DeliveryDate as Delivery2_5_6_, this_.IsGift as IsGift5_6_, this_.MaxDiscount as MaxDisco4_5_6_, this_.OrderDate as OrderDate5_6_, this_.OrderName as OrderName5_6_, this_.OrderNumber as OrderNum7_5_6_, this_.OrderStatusRef as OrderSt12_5_6_, this_.PreferableDeliveryDate as Preferab8_5_6_, this_.TotalPrice as TotalPrice5_6_, user2_.ID as ID3_0_, user2_.IsUserActive as IsUserAc2_3_0_, user2_.Balance as Balance3_0_, user2_.CustomerTypeRef as Customer9_3_0_, user2_.Email as Email3_0_, user2_.FirstName as FirstName3_0_, user2_.LastName as LastName3_0_, user2_.Login as Login3_0_, user2_.Password as Password3_0_, user2_.RegionRef as RegionRef3_0_, user2_.RoleRef as RoleRef3_0_, customerty3_.ID as ID2_1_, customerty3_.Discount as Discount2_1_, customerty3_.MaxRange as MaxRange2_1_, customerty3_.MinRange as MinRange2_1_, customerty3_.TypeName as TypeName2_1_, region4_.ID as ID1_2_, region4_.RegionName as RegionName1_2_, role5_.ID as ID0_3_, role5_.RoleName as RoleName0_3_, user6_.ID as ID3_4_, user6_.IsUserActive as IsUserAc2_3_4_, user6_.Balance as Balance3_4_, user6_.CustomerTypeRef as Customer9_3_4_, user6_.Email as Email3_4_, user6_.FirstName as FirstName3_4_, user6_.LastName as LastName3_4_, user6_.Login as Login3_4_, user6_.Password as Password3_4_, user6_.RegionRef as RegionRef3_4_, user6_.RoleRef as RoleRef3_4_, orderstatu7_.ID as ID4_5_, orderstatu7_.OrederStatusName as OrederSt2_4_5_ from Orders this_ left outer join Users user2_ on this_.Assigne=user2_.ID left outer join CustomerTypes customerty3_ on user2_.CustomerTypeRef=customerty3_.ID left outer join Regions region4_ on user2_.RegionRef=region4_.ID left outer join Roles role5_ on user2_.RoleRef=role5_.ID left outer join Users user6_ on this_.Customer=user6_.ID left outer join OrderStatuses orderstatu7_ on this_.OrderStatusRef=orderstatu7_.ID where this_.TotalPrice>?
[2017-10-14 14:08:50,188]DEBUG  7975[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:50,188]DEBUG  7975[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#7], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#79], EntityKey[com.softserveinc.edu.oms.domain.entities.User#7], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#7], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#20]
[2017-10-14 14:08:50,189]DEBUG  7976[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#7], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#79], EntityKey[com.softserveinc.edu.oms.domain.entities.User#7], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#7], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#21]
[2017-10-14 14:08:50,189]DEBUG  7976[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#7], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#79], EntityKey[com.softserveinc.edu.oms.domain.entities.User#7], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#7], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#22]
[2017-10-14 14:08:50,189]DEBUG  7976[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:50,189]DEBUG  7976[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,189]DEBUG  7976[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:50,189]DEBUG  7976[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:50,189]DEBUG  7976[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:50,190]DEBUG  7977[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:50,190]DEBUG  7977[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:50,190]DEBUG  7977[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:50,190]DEBUG  7977[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#7, id=20, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#7, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#7, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,190]DEBUG  7977[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=7, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#79, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:50,190]DEBUG  7977[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=7, orderStatusName=Pending}
[2017-10-14 14:08:50,190]DEBUG  7977[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#7, id=21, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#7, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#7, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,191]DEBUG  7978[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#7, id=22, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#7, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#7, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,191]DEBUG  7978[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=79, roleName=Administrator}
[2017-10-14 14:08:50,191]DEBUG  7978[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,191]DEBUG  7978[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 14:08:50,191]DEBUG  7978[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,191]DEBUG  7978[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:50,191]DEBUG  7978[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:50,192]DEBUG  7979[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:50,192]DEBUG  7979[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:50,192]DEBUG  7979[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:50,192]DEBUG  7979[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#7, id=20, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#7, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#7, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,192]DEBUG  7979[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=7, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#79, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:50,192]DEBUG  7979[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=7, orderStatusName=Pending}
[2017-10-14 14:08:50,192]DEBUG  7979[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#7, id=21, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#7, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#7, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,192]DEBUG  7979[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#7, id=22, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#7, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#7, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,193]DEBUG  7980[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=79, roleName=Administrator}
[2017-10-14 14:08:50,193]DEBUG  7980[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,193]DEBUG  7980[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 14:08:50,193]DEBUG  7980[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,193]DEBUG  7980[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:50,193]DEBUG  7980[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:50,194]DEBUG  7981[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:50,194]DEBUG  7981[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:50,194]DEBUG  7981[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:50,194]DEBUG  7981[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#7, id=20, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#7, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#7, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,194]DEBUG  7981[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=7, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#79, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:50,194]DEBUG  7981[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=7, orderStatusName=Pending}
[2017-10-14 14:08:50,194]DEBUG  7981[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#7, id=21, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#7, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#7, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,194]DEBUG  7981[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#7, id=22, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#7, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#7, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,194]DEBUG  7981[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=79, roleName=Administrator}
[2017-10-14 14:08:50,195]DEBUG  7982[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,195]DEBUG  7982[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 14:08:50,195]DEBUG  7982[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,195]DEBUG  7982[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:50,195]DEBUG  7982[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:50,195]DEBUG  7982[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:50,195]DEBUG  7982[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:50,196]DEBUG  7983[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:50,196]DEBUG  7983[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#7, id=20, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#7, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#7, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,196]DEBUG  7983[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=7, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#79, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:50,196]DEBUG  7983[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=7, orderStatusName=Pending}
[2017-10-14 14:08:50,196]DEBUG  7983[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#7, id=21, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#7, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#7, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,196]DEBUG  7983[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#7, id=22, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#7, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#7, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,196]DEBUG  7983[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=79, roleName=Administrator}
[2017-10-14 14:08:50,196]DEBUG  7983[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,197]DEBUG  7984[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 14:08:50,197]DEBUG  7984[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,197]DEBUG  7984[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:50,197]DEBUG  7984[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:50,197]DEBUG  7984[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:50,197]DEBUG  7984[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:50,197]DEBUG  7984[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:50,198]DEBUG  7985[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#7, id=20, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#7, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#7, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,198]DEBUG  7985[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=7, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#79, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:50,198]DEBUG  7985[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=7, orderStatusName=Pending}
[2017-10-14 14:08:50,198]DEBUG  7985[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#7, id=21, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#7, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#7, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,198]DEBUG  7985[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#7, id=22, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#7, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#7, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,198]DEBUG  7985[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=79, roleName=Administrator}
[2017-10-14 14:08:50,199]DEBUG  7986[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,199]DEBUG  7986[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 14:08:50,199]DEBUG  7986[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,199]DEBUG  7986[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:50,199]DEBUG  7986[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:50,200]DEBUG  7987[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:50,200]DEBUG  7987[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:50,200]DEBUG  7987[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:50,200]DEBUG  7987[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#7, id=20, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#7, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#7, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,200]DEBUG  7987[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=7, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#79, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:50,200]DEBUG  7987[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=7, orderStatusName=Pending}
[2017-10-14 14:08:50,201]DEBUG  7988[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#7, id=21, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#7, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#7, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,201]DEBUG  7988[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#7, id=22, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#7, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#7, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,201]DEBUG  7988[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=79, roleName=Administrator}
[2017-10-14 14:08:50,201]DEBUG  7988[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,201]DEBUG  7988[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 14:08:50,201]DEBUG  7988[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,202]DEBUG  7989[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:50,202]DEBUG  7989[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:50,202]DEBUG  7989[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:50,202]DEBUG  7989[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:50,202]DEBUG  7989[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:50,203]DEBUG  7990[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#7, id=20, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#7, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#7, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,203]DEBUG  7990[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=7, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#79, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:50,203]DEBUG  7990[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=7, orderStatusName=Pending}
[2017-10-14 14:08:50,203]DEBUG  7990[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#7, id=21, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#7, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#7, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,203]DEBUG  7990[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#7, id=22, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#7, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#7, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,203]DEBUG  7990[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=79, roleName=Administrator}
[2017-10-14 14:08:50,203]DEBUG  7990[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,204]DEBUG  7991[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 14:08:50,204]DEBUG  7991[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,204]DEBUG  7991[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:50,204]DEBUG  7991[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:50,205]DEBUG  7992[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:50,205]DEBUG  7992[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:50,205]DEBUG  7992[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:50,205]DEBUG  7992[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#7, id=20, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#7, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#7, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,205]DEBUG  7992[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=7, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#79, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:50,205]DEBUG  7992[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=7, orderStatusName=Pending}
[2017-10-14 14:08:50,205]DEBUG  7992[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#7, id=21, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#7, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#7, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,206]DEBUG  7993[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#7, id=22, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#7, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#7, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,206]DEBUG  7993[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=79, roleName=Administrator}
[2017-10-14 14:08:50,206]DEBUG  7993[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,206]DEBUG  7993[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 14:08:50,206]DEBUG  7993[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,207]DEBUG  7994[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:50,207]DEBUG  7994[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:50,207]DEBUG  7994[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:50,207]DEBUG  7994[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:50,207]DEBUG  7994[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:50,207]DEBUG  7994[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#7, id=20, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#7, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#7, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,208]DEBUG  7995[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=7, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#79, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:50,208]DEBUG  7995[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=7, orderStatusName=Pending}
[2017-10-14 14:08:50,208]DEBUG  7995[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#7, id=21, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#7, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#7, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,208]DEBUG  7995[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#7, id=22, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#7, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#7, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,208]DEBUG  7995[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=79, roleName=Administrator}
[2017-10-14 14:08:50,208]DEBUG  7995[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,208]DEBUG  7995[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 14:08:50,209]DEBUG  7996[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,209]DEBUG  7996[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@33721fb4 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@2bc0f4c7, testMethod = testFindByTotalPriceMore@OrderDaoTest, testException = [null]]]
[2017-10-14 14:08:50,209]DEBUG  7996[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 14:08:50,209]DEBUG  7996[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@5277da5]
[2017-10-14 14:08:50,209]DEBUG  7996[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 14:08:50,244]DEBUG  8031[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 14:08:50,245]DEBUG  8032[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:50,245]DEBUG  8032[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@5277da5] after transaction
[2017-10-14 14:08:50,245]DEBUG  8032[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 14:08:50,246]DEBUG  8033[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 14:08:50,246]DEBUG  8033[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:50,246] INFO  8033[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@33721fb4 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@2bc0f4c7, testMethod = testFindByTotalPriceMore@OrderDaoTest, testException = [null]]]
[2017-10-14 14:08:50,248]DEBUG  8035[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@33721fb4 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@2bc0f4c7, testMethod = testFindByTotalPriceMore@OrderDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 14:08:50,248]DEBUG  8035[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2017-10-14 14:08:50,248]DEBUG  8035[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2017-10-14 14:08:50,249]DEBUG  8036[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@33721fb4 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@62225a59, testMethod = [null], testException = [null]]].
[2017-10-14 14:08:50,249]DEBUG  8036[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 14:08:50,249]DEBUG  8036[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 14:08:50,249]DEBUG  8036[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 14:08:50,250]DEBUG  8037[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 14:08:50,250]DEBUG  8037[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 14:08:50,250]DEBUG  8037[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 14:08:50,250]DEBUG  8037[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 14:08:50,250]DEBUG  8037[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 14:08:50,251]DEBUG  8038[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 14:08:50,251]DEBUG  8038[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 14:08:50,251]DEBUG  8038[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 14:08:50,251]DEBUG  8038[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 14:08:50,251]DEBUG  8038[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 14:08:50,252]DEBUG  8039[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 14:08:50,252]DEBUG  8039[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 14:08:50,252]DEBUG  8039[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 14:08:50,252]DEBUG  8039[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 14:08:50,252]DEBUG  8039[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 14:08:50,253]DEBUG  8040[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 14:08:50,253]DEBUG  8040[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 14:08:50,253]DEBUG  8040[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 14:08:50,253]DEBUG  8040[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 14:08:50,254]DEBUG  8041[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@62225a59]
[2017-10-14 14:08:50,255]DEBUG  8042[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByDeliveryDateEquals' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:50,255]DEBUG  8042[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@33721fb4 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@62225a59, testMethod = testFindByDeliveryDateEquals@OrderDaoTest, testException = [null]]]
[2017-10-14 14:08:50,255]DEBUG  8042[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 14:08:50,257]DEBUG  8044[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByDeliveryDateEquals]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:50,257]DEBUG  8044[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15079793302
[2017-10-14 14:08:50,257]DEBUG  8044[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@548e0fd5] for Hibernate transaction
[2017-10-14 14:08:50,257]DEBUG  8044[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@548e0fd5]
[2017-10-14 14:08:50,257]DEBUG  8044[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 14:08:50,258]DEBUG  8045[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 14:08:50,258]DEBUG  8045[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 14:08:50,258]DEBUG  8045[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@33721fb4 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@62225a59, testMethod = testFindByDeliveryDateEquals@OrderDaoTest, testException = [null]]]
[2017-10-14 14:08:50,258] INFO  8045[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (8): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@48ad0abe]; rollback [true]
[2017-10-14 14:08:50,258]DEBUG  8045[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,258]DEBUG  8045[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 14:08:50,259]DEBUG  8046[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,259]DEBUG  8046[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,259]DEBUG  8046[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 14:08:50,259]DEBUG  8046[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,259]DEBUG  8046[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,260]DEBUG  8047[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 14:08:50,260]DEBUG  8047[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,260]DEBUG  8047[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,260]DEBUG  8047[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 14:08:50,260]DEBUG  8047[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,260]DEBUG  8047[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,261]DEBUG  8048[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 14:08:50,261]DEBUG  8048[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,261]DEBUG  8048[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,261]DEBUG  8048[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 14:08:50,261]DEBUG  8048[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,261]DEBUG  8048[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,262]DEBUG  8049[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 14:08:50,262]DEBUG  8049[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,262]DEBUG  8049[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,262]DEBUG  8049[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 14:08:50,262]DEBUG  8049[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,262]DEBUG  8049[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,263]DEBUG  8050[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 14:08:50,263]DEBUG  8050[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,263]DEBUG  8050[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:50,263]DEBUG  8050[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,263]DEBUG  8050[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName) values (?)
[2017-10-14 14:08:50,264]DEBUG  8051[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 8
[2017-10-14 14:08:50,264]DEBUG  8051[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,264]DEBUG  8051[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:50,264]DEBUG  8051[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,264]DEBUG  8051[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 14:08:50,265]DEBUG  8052[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 80
[2017-10-14 14:08:50,265]DEBUG  8052[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,265]DEBUG  8052[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:50,265]DEBUG  8052[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,265]DEBUG  8052[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Users (IsUserActive, Balance, CustomerTypeRef, Email, FirstName, LastName, Login, Password, RegionRef, RoleRef) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:50,266]DEBUG  8053[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 8
[2017-10-14 14:08:50,266]DEBUG  8053[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,266]DEBUG  8053[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:50,266]DEBUG  8053[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,266]DEBUG  8053[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:50,267]DEBUG  8054[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 23
[2017-10-14 14:08:50,267]DEBUG  8054[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,267]DEBUG  8054[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:50,267]DEBUG  8054[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,267]DEBUG  8054[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:50,268]DEBUG  8055[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 24
[2017-10-14 14:08:50,268]DEBUG  8055[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,268]DEBUG  8055[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:50,268]DEBUG  8055[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,268]DEBUG  8055[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:50,269]DEBUG  8056[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 25
[2017-10-14 14:08:50,269]DEBUG  8056[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,270]DEBUG  8057[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:50,270]DEBUG  8057[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:50,270]DEBUG  8057[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:50,270]DEBUG  8057[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:50,270]DEBUG  8057[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:50,271]DEBUG  8058[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#8, id=25, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#8, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#8, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,271]DEBUG  8058[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=8, orderStatusName=Pending}
[2017-10-14 14:08:50,271]DEBUG  8058[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#8, id=23, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#8, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#8, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,271]DEBUG  8058[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#8, id=24, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#8, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#8, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,271]DEBUG  8058[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=8, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#80, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:50,271]DEBUG  8058[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=80, roleName=Administrator}
[2017-10-14 14:08:50,271]DEBUG  8058[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,272]DEBUG  8059[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID5_6_, this_.Assigne as Assigne5_6_, this_.Customer as Customer5_6_, this_.DeliveryDate as Delivery2_5_6_, this_.IsGift as IsGift5_6_, this_.MaxDiscount as MaxDisco4_5_6_, this_.OrderDate as OrderDate5_6_, this_.OrderName as OrderName5_6_, this_.OrderNumber as OrderNum7_5_6_, this_.OrderStatusRef as OrderSt12_5_6_, this_.PreferableDeliveryDate as Preferab8_5_6_, this_.TotalPrice as TotalPrice5_6_, user2_.ID as ID3_0_, user2_.IsUserActive as IsUserAc2_3_0_, user2_.Balance as Balance3_0_, user2_.CustomerTypeRef as Customer9_3_0_, user2_.Email as Email3_0_, user2_.FirstName as FirstName3_0_, user2_.LastName as LastName3_0_, user2_.Login as Login3_0_, user2_.Password as Password3_0_, user2_.RegionRef as RegionRef3_0_, user2_.RoleRef as RoleRef3_0_, customerty3_.ID as ID2_1_, customerty3_.Discount as Discount2_1_, customerty3_.MaxRange as MaxRange2_1_, customerty3_.MinRange as MinRange2_1_, customerty3_.TypeName as TypeName2_1_, region4_.ID as ID1_2_, region4_.RegionName as RegionName1_2_, role5_.ID as ID0_3_, role5_.RoleName as RoleName0_3_, user6_.ID as ID3_4_, user6_.IsUserActive as IsUserAc2_3_4_, user6_.Balance as Balance3_4_, user6_.CustomerTypeRef as Customer9_3_4_, user6_.Email as Email3_4_, user6_.FirstName as FirstName3_4_, user6_.LastName as LastName3_4_, user6_.Login as Login3_4_, user6_.Password as Password3_4_, user6_.RegionRef as RegionRef3_4_, user6_.RoleRef as RoleRef3_4_, orderstatu7_.ID as ID4_5_, orderstatu7_.OrederStatusName as OrederSt2_4_5_ from Orders this_ left outer join Users user2_ on this_.Assigne=user2_.ID left outer join CustomerTypes customerty3_ on user2_.CustomerTypeRef=customerty3_.ID left outer join Regions region4_ on user2_.RegionRef=region4_.ID left outer join Roles role5_ on user2_.RoleRef=role5_.ID left outer join Users user6_ on this_.Customer=user6_.ID left outer join OrderStatuses orderstatu7_ on this_.OrderStatusRef=orderstatu7_.ID where this_.DeliveryDate=?
[2017-10-14 14:08:50,273]DEBUG  8060[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:50,274]DEBUG  8061[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#8], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#80], EntityKey[com.softserveinc.edu.oms.domain.entities.User#8], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#8], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#23]
[2017-10-14 14:08:50,274]DEBUG  8061[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#8], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#80], EntityKey[com.softserveinc.edu.oms.domain.entities.User#8], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#8], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#24]
[2017-10-14 14:08:50,274]DEBUG  8061[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#8], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#80], EntityKey[com.softserveinc.edu.oms.domain.entities.User#8], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#8], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#25]
[2017-10-14 14:08:50,275]DEBUG  8062[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:50,275]DEBUG  8062[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,275]DEBUG  8062[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:50,275]DEBUG  8062[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:50,275]DEBUG  8062[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:50,275]DEBUG  8062[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:50,275]DEBUG  8062[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:50,275]DEBUG  8062[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:50,276]DEBUG  8063[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#8, id=25, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#8, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#8, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,276]DEBUG  8063[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=8, orderStatusName=Pending}
[2017-10-14 14:08:50,276]DEBUG  8063[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#8, id=23, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#8, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#8, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,276]DEBUG  8063[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#8, id=24, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#8, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#8, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,276]DEBUG  8063[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=8, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#80, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:50,276]DEBUG  8063[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=80, roleName=Administrator}
[2017-10-14 14:08:50,276]DEBUG  8063[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,276]DEBUG  8063[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 14:08:50,277]DEBUG  8064[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,277]DEBUG  8064[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:50,277]DEBUG  8064[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:50,277]DEBUG  8064[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:50,277]DEBUG  8064[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:50,277]DEBUG  8064[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:50,278]DEBUG  8065[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#8, id=25, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#8, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#8, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,278]DEBUG  8065[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=8, orderStatusName=Pending}
[2017-10-14 14:08:50,278]DEBUG  8065[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#8, id=23, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#8, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#8, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,278]DEBUG  8065[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#8, id=24, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#8, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#8, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,278]DEBUG  8065[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=8, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#80, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:50,278]DEBUG  8065[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=80, roleName=Administrator}
[2017-10-14 14:08:50,278]DEBUG  8065[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,278]DEBUG  8065[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 14:08:50,279]DEBUG  8066[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,279]DEBUG  8066[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:50,279]DEBUG  8066[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:50,279]DEBUG  8066[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:50,279]DEBUG  8066[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:50,279]DEBUG  8066[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:50,279]DEBUG  8066[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#8, id=25, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#8, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#8, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,280]DEBUG  8067[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=8, orderStatusName=Pending}
[2017-10-14 14:08:50,280]DEBUG  8067[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#8, id=23, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#8, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#8, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,280]DEBUG  8067[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#8, id=24, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#8, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#8, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,280]DEBUG  8067[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=8, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#80, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:50,280]DEBUG  8067[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=80, roleName=Administrator}
[2017-10-14 14:08:50,280]DEBUG  8067[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,280]DEBUG  8067[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 14:08:50,281]DEBUG  8068[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,281]DEBUG  8068[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:50,281]DEBUG  8068[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:50,281]DEBUG  8068[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:50,281]DEBUG  8068[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:50,281]DEBUG  8068[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:50,281]DEBUG  8068[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#8, id=25, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#8, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#8, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,281]DEBUG  8068[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=8, orderStatusName=Pending}
[2017-10-14 14:08:50,282]DEBUG  8069[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#8, id=23, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#8, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#8, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,282]DEBUG  8069[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#8, id=24, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#8, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#8, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,282]DEBUG  8069[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=8, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#80, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:50,282]DEBUG  8069[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=80, roleName=Administrator}
[2017-10-14 14:08:50,282]DEBUG  8069[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,282]DEBUG  8069[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 14:08:50,282]DEBUG  8069[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,283]DEBUG  8070[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:50,283]DEBUG  8070[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:50,283]DEBUG  8070[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:50,283]DEBUG  8070[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:50,283]DEBUG  8070[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:50,283]DEBUG  8070[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#8, id=25, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#8, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#8, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,283]DEBUG  8070[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=8, orderStatusName=Pending}
[2017-10-14 14:08:50,283]DEBUG  8070[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#8, id=23, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#8, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#8, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,284]DEBUG  8071[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#8, id=24, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#8, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#8, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,284]DEBUG  8071[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=8, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#80, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:50,284]DEBUG  8071[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=80, roleName=Administrator}
[2017-10-14 14:08:50,284]DEBUG  8071[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,284]DEBUG  8071[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 14:08:50,284]DEBUG  8071[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,284]DEBUG  8071[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:50,285]DEBUG  8072[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:50,285]DEBUG  8072[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:50,285]DEBUG  8072[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:50,285]DEBUG  8072[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:50,285]DEBUG  8072[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#8, id=25, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#8, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#8, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,285]DEBUG  8072[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=8, orderStatusName=Pending}
[2017-10-14 14:08:50,285]DEBUG  8072[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#8, id=23, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#8, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#8, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,285]DEBUG  8072[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#8, id=24, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#8, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#8, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,286]DEBUG  8073[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=8, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#80, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:50,286]DEBUG  8073[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=80, roleName=Administrator}
[2017-10-14 14:08:50,286]DEBUG  8073[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,286]DEBUG  8073[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 14:08:50,286]DEBUG  8073[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,286]DEBUG  8073[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:50,286]DEBUG  8073[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:50,287]DEBUG  8074[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:50,287]DEBUG  8074[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:50,287]DEBUG  8074[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:50,287]DEBUG  8074[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#8, id=25, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#8, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#8, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,287]DEBUG  8074[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=8, orderStatusName=Pending}
[2017-10-14 14:08:50,287]DEBUG  8074[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#8, id=23, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#8, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#8, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,287]DEBUG  8074[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#8, id=24, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#8, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#8, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,287]DEBUG  8074[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=8, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#80, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:50,288]DEBUG  8075[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=80, roleName=Administrator}
[2017-10-14 14:08:50,288]DEBUG  8075[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,288]DEBUG  8075[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 14:08:50,288]DEBUG  8075[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,288]DEBUG  8075[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:50,288]DEBUG  8075[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:50,288]DEBUG  8075[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:50,289]DEBUG  8076[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:50,289]DEBUG  8076[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:50,289]DEBUG  8076[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#8, id=25, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#8, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#8, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,289]DEBUG  8076[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=8, orderStatusName=Pending}
[2017-10-14 14:08:50,289]DEBUG  8076[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#8, id=23, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#8, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#8, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,289]DEBUG  8076[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#8, id=24, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#8, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#8, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,289]DEBUG  8076[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=8, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#80, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:50,289]DEBUG  8076[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=80, roleName=Administrator}
[2017-10-14 14:08:50,289]DEBUG  8076[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,290]DEBUG  8077[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 14:08:50,290]DEBUG  8077[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,290]DEBUG  8077[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:50,290]DEBUG  8077[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:50,290]DEBUG  8077[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:50,290]DEBUG  8077[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:50,290]DEBUG  8077[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:50,291]DEBUG  8078[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#8, id=25, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#8, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#8, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,291]DEBUG  8078[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=8, orderStatusName=Pending}
[2017-10-14 14:08:50,291]DEBUG  8078[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#8, id=23, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#8, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#8, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,291]DEBUG  8078[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#8, id=24, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#8, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#8, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,291]DEBUG  8078[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=8, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#80, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:50,291]DEBUG  8078[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=80, roleName=Administrator}
[2017-10-14 14:08:50,291]DEBUG  8078[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,291]DEBUG  8078[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 14:08:50,292]DEBUG  8079[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,292]DEBUG  8079[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@33721fb4 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@62225a59, testMethod = testFindByDeliveryDateEquals@OrderDaoTest, testException = [null]]]
[2017-10-14 14:08:50,292]DEBUG  8079[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 14:08:50,292]DEBUG  8079[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@548e0fd5]
[2017-10-14 14:08:50,292]DEBUG  8079[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 14:08:50,328]DEBUG  8115[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 14:08:50,328]DEBUG  8115[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:50,328]DEBUG  8115[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@548e0fd5] after transaction
[2017-10-14 14:08:50,329]DEBUG  8116[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 14:08:50,329]DEBUG  8116[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 14:08:50,329]DEBUG  8116[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:50,329] INFO  8116[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@33721fb4 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@62225a59, testMethod = testFindByDeliveryDateEquals@OrderDaoTest, testException = [null]]]
[2017-10-14 14:08:50,331]DEBUG  8118[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@33721fb4 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@62225a59, testMethod = testFindByDeliveryDateEquals@OrderDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 14:08:50,331]DEBUG  8118[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2017-10-14 14:08:50,331]DEBUG  8118[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2017-10-14 14:08:50,332]DEBUG  8119[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@33721fb4 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@27cb4b33, testMethod = [null], testException = [null]]].
[2017-10-14 14:08:50,332]DEBUG  8119[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 14:08:50,332]DEBUG  8119[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 14:08:50,332]DEBUG  8119[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 14:08:50,332]DEBUG  8119[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 14:08:50,333]DEBUG  8120[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 14:08:50,333]DEBUG  8120[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 14:08:50,333]DEBUG  8120[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 14:08:50,333]DEBUG  8120[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 14:08:50,333]DEBUG  8120[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 14:08:50,334]DEBUG  8121[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 14:08:50,334]DEBUG  8121[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 14:08:50,334]DEBUG  8121[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 14:08:50,334]DEBUG  8121[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 14:08:50,334]DEBUG  8121[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 14:08:50,335]DEBUG  8122[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 14:08:50,335]DEBUG  8122[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 14:08:50,335]DEBUG  8122[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 14:08:50,335]DEBUG  8122[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 14:08:50,335]DEBUG  8122[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 14:08:50,336]DEBUG  8123[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 14:08:50,336]DEBUG  8123[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 14:08:50,336]DEBUG  8123[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 14:08:50,336]DEBUG  8123[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@27cb4b33]
[2017-10-14 14:08:50,337]DEBUG  8124[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByDeliveryDateMore' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:50,337]DEBUG  8124[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@33721fb4 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@27cb4b33, testMethod = testFindByDeliveryDateMore@OrderDaoTest, testException = [null]]]
[2017-10-14 14:08:50,338]DEBUG  8125[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 14:08:50,339]DEBUG  8126[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByDeliveryDateMore]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:50,339]DEBUG  8126[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15079793303
[2017-10-14 14:08:50,339]DEBUG  8126[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@3989224] for Hibernate transaction
[2017-10-14 14:08:50,340]DEBUG  8127[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@3989224]
[2017-10-14 14:08:50,340]DEBUG  8127[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 14:08:50,340]DEBUG  8127[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 14:08:50,340]DEBUG  8127[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 14:08:50,340]DEBUG  8127[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@33721fb4 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@27cb4b33, testMethod = testFindByDeliveryDateMore@OrderDaoTest, testException = [null]]]
[2017-10-14 14:08:50,341] INFO  8128[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (9): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@48ad0abe]; rollback [true]
[2017-10-14 14:08:50,341]DEBUG  8128[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,341]DEBUG  8128[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 14:08:50,342]DEBUG  8129[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,342]DEBUG  8129[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,342]DEBUG  8129[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 14:08:50,343]DEBUG  8130[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,343]DEBUG  8130[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,343]DEBUG  8130[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 14:08:50,344]DEBUG  8131[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,344]DEBUG  8131[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,345]DEBUG  8132[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 14:08:50,345]DEBUG  8132[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,345]DEBUG  8132[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,346]DEBUG  8133[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 14:08:50,346]DEBUG  8133[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,346]DEBUG  8133[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,347]DEBUG  8134[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 14:08:50,347]DEBUG  8134[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,348]DEBUG  8135[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,348]DEBUG  8135[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 14:08:50,348]DEBUG  8135[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,349]DEBUG  8136[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,349]DEBUG  8136[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 14:08:50,349]DEBUG  8136[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,350]DEBUG  8137[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,350]DEBUG  8137[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 14:08:50,350]DEBUG  8137[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,351]DEBUG  8138[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:50,351]DEBUG  8138[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,351]DEBUG  8138[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName) values (?)
[2017-10-14 14:08:50,352]DEBUG  8139[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 9
[2017-10-14 14:08:50,352]DEBUG  8139[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,353]DEBUG  8140[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:50,353]DEBUG  8140[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,353]DEBUG  8140[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 14:08:50,354]DEBUG  8141[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 81
[2017-10-14 14:08:50,354]DEBUG  8141[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,355]DEBUG  8142[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:50,355]DEBUG  8142[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,355]DEBUG  8142[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Users (IsUserActive, Balance, CustomerTypeRef, Email, FirstName, LastName, Login, Password, RegionRef, RoleRef) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:50,356]DEBUG  8143[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 9
[2017-10-14 14:08:50,357]DEBUG  8144[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,357]DEBUG  8144[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:50,357]DEBUG  8144[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,358]DEBUG  8145[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:50,358]DEBUG  8145[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 26
[2017-10-14 14:08:50,358]DEBUG  8145[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,359]DEBUG  8146[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:50,359]DEBUG  8146[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,359]DEBUG  8146[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:50,359]DEBUG  8146[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 27
[2017-10-14 14:08:50,360]DEBUG  8147[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,360]DEBUG  8147[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:50,360]DEBUG  8147[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,360]DEBUG  8147[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:50,360]DEBUG  8147[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 28
[2017-10-14 14:08:50,361]DEBUG  8148[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,361]DEBUG  8148[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:50,362]DEBUG  8149[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:50,362]DEBUG  8149[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:50,362]DEBUG  8149[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:50,362]DEBUG  8149[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:50,362]DEBUG  8149[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#9, id=27, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#9, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#9, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,362]DEBUG  8149[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#9, id=28, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#9, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#9, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,362]DEBUG  8149[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=81, roleName=Administrator}
[2017-10-14 14:08:50,363]DEBUG  8150[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=9, orderStatusName=Pending}
[2017-10-14 14:08:50,363]DEBUG  8150[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#9, id=26, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#9, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#9, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,363]DEBUG  8150[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=9, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#81, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:50,363]DEBUG  8150[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,363]DEBUG  8150[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID5_6_, this_.Assigne as Assigne5_6_, this_.Customer as Customer5_6_, this_.DeliveryDate as Delivery2_5_6_, this_.IsGift as IsGift5_6_, this_.MaxDiscount as MaxDisco4_5_6_, this_.OrderDate as OrderDate5_6_, this_.OrderName as OrderName5_6_, this_.OrderNumber as OrderNum7_5_6_, this_.OrderStatusRef as OrderSt12_5_6_, this_.PreferableDeliveryDate as Preferab8_5_6_, this_.TotalPrice as TotalPrice5_6_, user2_.ID as ID3_0_, user2_.IsUserActive as IsUserAc2_3_0_, user2_.Balance as Balance3_0_, user2_.CustomerTypeRef as Customer9_3_0_, user2_.Email as Email3_0_, user2_.FirstName as FirstName3_0_, user2_.LastName as LastName3_0_, user2_.Login as Login3_0_, user2_.Password as Password3_0_, user2_.RegionRef as RegionRef3_0_, user2_.RoleRef as RoleRef3_0_, customerty3_.ID as ID2_1_, customerty3_.Discount as Discount2_1_, customerty3_.MaxRange as MaxRange2_1_, customerty3_.MinRange as MinRange2_1_, customerty3_.TypeName as TypeName2_1_, region4_.ID as ID1_2_, region4_.RegionName as RegionName1_2_, role5_.ID as ID0_3_, role5_.RoleName as RoleName0_3_, user6_.ID as ID3_4_, user6_.IsUserActive as IsUserAc2_3_4_, user6_.Balance as Balance3_4_, user6_.CustomerTypeRef as Customer9_3_4_, user6_.Email as Email3_4_, user6_.FirstName as FirstName3_4_, user6_.LastName as LastName3_4_, user6_.Login as Login3_4_, user6_.Password as Password3_4_, user6_.RegionRef as RegionRef3_4_, user6_.RoleRef as RoleRef3_4_, orderstatu7_.ID as ID4_5_, orderstatu7_.OrederStatusName as OrederSt2_4_5_ from Orders this_ left outer join Users user2_ on this_.Assigne=user2_.ID left outer join CustomerTypes customerty3_ on user2_.CustomerTypeRef=customerty3_.ID left outer join Regions region4_ on user2_.RegionRef=region4_.ID left outer join Roles role5_ on user2_.RoleRef=role5_.ID left outer join Users user6_ on this_.Customer=user6_.ID left outer join OrderStatuses orderstatu7_ on this_.OrderStatusRef=orderstatu7_.ID where this_.DeliveryDate>?
[2017-10-14 14:08:50,364]DEBUG  8151[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:50,364]DEBUG  8151[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:50,364]DEBUG  8151[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,364]DEBUG  8151[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:50,365]DEBUG  8152[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:50,365]DEBUG  8152[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:50,365]DEBUG  8152[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:50,366]DEBUG  8153[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:50,366]DEBUG  8153[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:50,366]DEBUG  8153[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#9, id=27, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#9, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#9, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,366]DEBUG  8153[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#9, id=28, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#9, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#9, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,366]DEBUG  8153[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=81, roleName=Administrator}
[2017-10-14 14:08:50,366]DEBUG  8153[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=9, orderStatusName=Pending}
[2017-10-14 14:08:50,366]DEBUG  8153[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#9, id=26, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#9, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#9, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,366]DEBUG  8153[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=9, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#81, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:50,367]DEBUG  8154[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,367]DEBUG  8154[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 14:08:50,367]DEBUG  8154[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,367]DEBUG  8154[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:50,367]DEBUG  8154[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:50,368]DEBUG  8155[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:50,368]DEBUG  8155[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:50,368]DEBUG  8155[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:50,368]DEBUG  8155[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#9, id=27, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#9, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#9, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,368]DEBUG  8155[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#9, id=28, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#9, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#9, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,368]DEBUG  8155[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=81, roleName=Administrator}
[2017-10-14 14:08:50,368]DEBUG  8155[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=9, orderStatusName=Pending}
[2017-10-14 14:08:50,368]DEBUG  8155[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#9, id=26, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#9, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#9, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,368]DEBUG  8155[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=9, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#81, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:50,369]DEBUG  8156[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,369]DEBUG  8156[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 14:08:50,369]DEBUG  8156[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,369]DEBUG  8156[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:50,369]DEBUG  8156[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:50,369]DEBUG  8156[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:50,370]DEBUG  8157[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:50,370]DEBUG  8157[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:50,370]DEBUG  8157[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#9, id=27, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#9, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#9, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,370]DEBUG  8157[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#9, id=28, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#9, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#9, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,370]DEBUG  8157[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=81, roleName=Administrator}
[2017-10-14 14:08:50,370]DEBUG  8157[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=9, orderStatusName=Pending}
[2017-10-14 14:08:50,370]DEBUG  8157[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#9, id=26, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#9, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#9, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,370]DEBUG  8157[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=9, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#81, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:50,370]DEBUG  8157[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,371]DEBUG  8158[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 14:08:50,371]DEBUG  8158[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,371]DEBUG  8158[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:50,371]DEBUG  8158[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:50,371]DEBUG  8158[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:50,371]DEBUG  8158[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:50,372]DEBUG  8159[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:50,372]DEBUG  8159[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#9, id=27, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#9, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#9, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,372]DEBUG  8159[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#9, id=28, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#9, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#9, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,372]DEBUG  8159[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=81, roleName=Administrator}
[2017-10-14 14:08:50,372]DEBUG  8159[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=9, orderStatusName=Pending}
[2017-10-14 14:08:50,372]DEBUG  8159[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#9, id=26, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#9, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#9, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,372]DEBUG  8159[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=9, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#81, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:50,372]DEBUG  8159[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,372]DEBUG  8159[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 14:08:50,373]DEBUG  8160[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,373]DEBUG  8160[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:50,373]DEBUG  8160[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:50,373]DEBUG  8160[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:50,373]DEBUG  8160[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:50,373]DEBUG  8160[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:50,374]DEBUG  8161[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#9, id=27, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#9, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#9, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,374]DEBUG  8161[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#9, id=28, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#9, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#9, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,374]DEBUG  8161[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=81, roleName=Administrator}
[2017-10-14 14:08:50,374]DEBUG  8161[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=9, orderStatusName=Pending}
[2017-10-14 14:08:50,374]DEBUG  8161[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#9, id=26, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#9, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#9, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,374]DEBUG  8161[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=9, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#81, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:50,374]DEBUG  8161[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,374]DEBUG  8161[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 14:08:50,375]DEBUG  8162[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,375]DEBUG  8162[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:50,375]DEBUG  8162[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:50,375]DEBUG  8162[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:50,375]DEBUG  8162[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:50,375]DEBUG  8162[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:50,376]DEBUG  8163[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#9, id=27, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#9, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#9, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,376]DEBUG  8163[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#9, id=28, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#9, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#9, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,376]DEBUG  8163[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=81, roleName=Administrator}
[2017-10-14 14:08:50,376]DEBUG  8163[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=9, orderStatusName=Pending}
[2017-10-14 14:08:50,376]DEBUG  8163[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#9, id=26, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#9, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#9, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,376]DEBUG  8163[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=9, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#81, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:50,376]DEBUG  8163[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,376]DEBUG  8163[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 14:08:50,377]DEBUG  8164[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,377]DEBUG  8164[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:50,377]DEBUG  8164[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:50,377]DEBUG  8164[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:50,377]DEBUG  8164[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:50,377]DEBUG  8164[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:50,377]DEBUG  8164[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#9, id=27, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#9, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#9, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,378]DEBUG  8165[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#9, id=28, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#9, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#9, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,378]DEBUG  8165[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=81, roleName=Administrator}
[2017-10-14 14:08:50,378]DEBUG  8165[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=9, orderStatusName=Pending}
[2017-10-14 14:08:50,378]DEBUG  8165[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#9, id=26, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#9, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#9, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,378]DEBUG  8165[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=9, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#81, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:50,378]DEBUG  8165[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,378]DEBUG  8165[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 14:08:50,378]DEBUG  8165[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,379]DEBUG  8166[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:50,379]DEBUG  8166[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:50,379]DEBUG  8166[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:50,379]DEBUG  8166[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:50,379]DEBUG  8166[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:50,379]DEBUG  8166[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#9, id=27, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#9, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#9, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,379]DEBUG  8166[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#9, id=28, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#9, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#9, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,380]DEBUG  8167[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=81, roleName=Administrator}
[2017-10-14 14:08:50,380]DEBUG  8167[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=9, orderStatusName=Pending}
[2017-10-14 14:08:50,380]DEBUG  8167[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#9, id=26, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#9, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#9, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,380]DEBUG  8167[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=9, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#81, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:50,380]DEBUG  8167[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,380]DEBUG  8167[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 14:08:50,380]DEBUG  8167[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,380]DEBUG  8167[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:50,381]DEBUG  8168[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:50,381]DEBUG  8168[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:50,381]DEBUG  8168[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:50,381]DEBUG  8168[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:50,381]DEBUG  8168[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#9, id=27, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#9, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#9, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,381]DEBUG  8168[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#9, id=28, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#9, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#9, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,381]DEBUG  8168[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=81, roleName=Administrator}
[2017-10-14 14:08:50,381]DEBUG  8168[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=9, orderStatusName=Pending}
[2017-10-14 14:08:50,382]DEBUG  8169[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#9, id=26, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#9, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#9, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,382]DEBUG  8169[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=9, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#81, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:50,382]DEBUG  8169[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,382]DEBUG  8169[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 14:08:50,382]DEBUG  8169[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,382]DEBUG  8169[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@33721fb4 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@27cb4b33, testMethod = testFindByDeliveryDateMore@OrderDaoTest, testException = [null]]]
[2017-10-14 14:08:50,382]DEBUG  8169[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 14:08:50,382]DEBUG  8169[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@3989224]
[2017-10-14 14:08:50,383]DEBUG  8170[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 14:08:50,411]DEBUG  8198[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 14:08:50,412]DEBUG  8199[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:50,412]DEBUG  8199[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@3989224] after transaction
[2017-10-14 14:08:50,412]DEBUG  8199[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 14:08:50,412]DEBUG  8199[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 14:08:50,413]DEBUG  8200[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:50,413] INFO  8200[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@33721fb4 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@27cb4b33, testMethod = testFindByDeliveryDateMore@OrderDaoTest, testException = [null]]]
[2017-10-14 14:08:50,414]DEBUG  8201[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@33721fb4 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@27cb4b33, testMethod = testFindByDeliveryDateMore@OrderDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 14:08:50,415]DEBUG  8202[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2017-10-14 14:08:50,415]DEBUG  8202[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2017-10-14 14:08:50,415]DEBUG  8202[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@33721fb4 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@4d3aca61, testMethod = [null], testException = [null]]].
[2017-10-14 14:08:50,416]DEBUG  8203[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 14:08:50,416]DEBUG  8203[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 14:08:50,416]DEBUG  8203[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 14:08:50,416]DEBUG  8203[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 14:08:50,416]DEBUG  8203[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 14:08:50,417]DEBUG  8204[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 14:08:50,417]DEBUG  8204[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 14:08:50,417]DEBUG  8204[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 14:08:50,417]DEBUG  8204[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 14:08:50,417]DEBUG  8204[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 14:08:50,418]DEBUG  8205[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 14:08:50,418]DEBUG  8205[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 14:08:50,418]DEBUG  8205[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 14:08:50,418]DEBUG  8205[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 14:08:50,418]DEBUG  8205[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 14:08:50,419]DEBUG  8206[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 14:08:50,419]DEBUG  8206[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 14:08:50,419]DEBUG  8206[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 14:08:50,419]DEBUG  8206[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 14:08:50,419]DEBUG  8206[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 14:08:50,420]DEBUG  8207[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 14:08:50,420]DEBUG  8207[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 14:08:50,420]DEBUG  8207[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@4d3aca61]
[2017-10-14 14:08:50,421]DEBUG  8208[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByDeliveryDateLess' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:50,421]DEBUG  8208[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@33721fb4 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@4d3aca61, testMethod = testFindByDeliveryDateLess@OrderDaoTest, testException = [null]]]
[2017-10-14 14:08:50,421]DEBUG  8208[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 14:08:50,423]DEBUG  8210[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByDeliveryDateLess]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:50,423]DEBUG  8210[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15079793304
[2017-10-14 14:08:50,423]DEBUG  8210[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@7de39b29] for Hibernate transaction
[2017-10-14 14:08:50,423]DEBUG  8210[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7de39b29]
[2017-10-14 14:08:50,423]DEBUG  8210[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 14:08:50,424]DEBUG  8211[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 14:08:50,424]DEBUG  8211[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 14:08:50,424]DEBUG  8211[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@33721fb4 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@4d3aca61, testMethod = testFindByDeliveryDateLess@OrderDaoTest, testException = [null]]]
[2017-10-14 14:08:50,424] INFO  8211[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (10): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@48ad0abe]; rollback [true]
[2017-10-14 14:08:50,425]DEBUG  8212[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,425]DEBUG  8212[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 14:08:50,425]DEBUG  8212[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,426]DEBUG  8213[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,426]DEBUG  8213[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 14:08:50,427]DEBUG  8214[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,427]DEBUG  8214[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,427]DEBUG  8214[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 14:08:50,428]DEBUG  8215[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,428]DEBUG  8215[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,428]DEBUG  8215[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 14:08:50,429]DEBUG  8216[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,429]DEBUG  8216[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,429]DEBUG  8216[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 14:08:50,430]DEBUG  8217[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,430]DEBUG  8217[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,430]DEBUG  8217[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 14:08:50,431]DEBUG  8218[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,431]DEBUG  8218[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,431]DEBUG  8218[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 14:08:50,432]DEBUG  8219[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,432]DEBUG  8219[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,433]DEBUG  8220[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 14:08:50,433]DEBUG  8220[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,433]DEBUG  8220[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,434]DEBUG  8221[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 14:08:50,434]DEBUG  8221[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,434]DEBUG  8221[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:50,435]DEBUG  8222[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,435]DEBUG  8222[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName) values (?)
[2017-10-14 14:08:50,436]DEBUG  8223[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 10
[2017-10-14 14:08:50,436]DEBUG  8223[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,436]DEBUG  8223[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:50,437]DEBUG  8224[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,437]DEBUG  8224[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 14:08:50,438]DEBUG  8225[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 82
[2017-10-14 14:08:50,438]DEBUG  8225[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,438]DEBUG  8225[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:50,438]DEBUG  8225[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,438]DEBUG  8225[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Users (IsUserActive, Balance, CustomerTypeRef, Email, FirstName, LastName, Login, Password, RegionRef, RoleRef) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:50,439]DEBUG  8226[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 10
[2017-10-14 14:08:50,439]DEBUG  8226[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,439]DEBUG  8226[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:50,439]DEBUG  8226[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,439]DEBUG  8226[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:50,440]DEBUG  8227[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 29
[2017-10-14 14:08:50,440]DEBUG  8227[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,440]DEBUG  8227[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:50,440]DEBUG  8227[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,440]DEBUG  8227[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:50,441]DEBUG  8228[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 30
[2017-10-14 14:08:50,441]DEBUG  8228[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,441]DEBUG  8228[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:50,441]DEBUG  8228[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,442]DEBUG  8229[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:50,442]DEBUG  8229[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 31
[2017-10-14 14:08:50,442]DEBUG  8229[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,443]DEBUG  8230[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:50,443]DEBUG  8230[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:50,443]DEBUG  8230[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:50,444]DEBUG  8231[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:50,444]DEBUG  8231[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:50,444]DEBUG  8231[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=82, roleName=Administrator}
[2017-10-14 14:08:50,444]DEBUG  8231[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=10, orderStatusName=Pending}
[2017-10-14 14:08:50,444]DEBUG  8231[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#10, id=30, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#10, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#10, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,444]DEBUG  8231[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=10, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#82, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:50,444]DEBUG  8231[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#10, id=29, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#10, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#10, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,444]DEBUG  8231[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#10, id=31, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#10, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#10, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,445]DEBUG  8232[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,445]DEBUG  8232[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID5_6_, this_.Assigne as Assigne5_6_, this_.Customer as Customer5_6_, this_.DeliveryDate as Delivery2_5_6_, this_.IsGift as IsGift5_6_, this_.MaxDiscount as MaxDisco4_5_6_, this_.OrderDate as OrderDate5_6_, this_.OrderName as OrderName5_6_, this_.OrderNumber as OrderNum7_5_6_, this_.OrderStatusRef as OrderSt12_5_6_, this_.PreferableDeliveryDate as Preferab8_5_6_, this_.TotalPrice as TotalPrice5_6_, user2_.ID as ID3_0_, user2_.IsUserActive as IsUserAc2_3_0_, user2_.Balance as Balance3_0_, user2_.CustomerTypeRef as Customer9_3_0_, user2_.Email as Email3_0_, user2_.FirstName as FirstName3_0_, user2_.LastName as LastName3_0_, user2_.Login as Login3_0_, user2_.Password as Password3_0_, user2_.RegionRef as RegionRef3_0_, user2_.RoleRef as RoleRef3_0_, customerty3_.ID as ID2_1_, customerty3_.Discount as Discount2_1_, customerty3_.MaxRange as MaxRange2_1_, customerty3_.MinRange as MinRange2_1_, customerty3_.TypeName as TypeName2_1_, region4_.ID as ID1_2_, region4_.RegionName as RegionName1_2_, role5_.ID as ID0_3_, role5_.RoleName as RoleName0_3_, user6_.ID as ID3_4_, user6_.IsUserActive as IsUserAc2_3_4_, user6_.Balance as Balance3_4_, user6_.CustomerTypeRef as Customer9_3_4_, user6_.Email as Email3_4_, user6_.FirstName as FirstName3_4_, user6_.LastName as LastName3_4_, user6_.Login as Login3_4_, user6_.Password as Password3_4_, user6_.RegionRef as RegionRef3_4_, user6_.RoleRef as RoleRef3_4_, orderstatu7_.ID as ID4_5_, orderstatu7_.OrederStatusName as OrederSt2_4_5_ from Orders this_ left outer join Users user2_ on this_.Assigne=user2_.ID left outer join CustomerTypes customerty3_ on user2_.CustomerTypeRef=customerty3_.ID left outer join Regions region4_ on user2_.RegionRef=region4_.ID left outer join Roles role5_ on user2_.RoleRef=role5_.ID left outer join Users user6_ on this_.Customer=user6_.ID left outer join OrderStatuses orderstatu7_ on this_.OrderStatusRef=orderstatu7_.ID where this_.DeliveryDate<?
[2017-10-14 14:08:50,446]DEBUG  8233[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:50,446]DEBUG  8233[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#10], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#82], EntityKey[com.softserveinc.edu.oms.domain.entities.User#10], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#10], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#29]
[2017-10-14 14:08:50,447]DEBUG  8234[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#10], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#82], EntityKey[com.softserveinc.edu.oms.domain.entities.User#10], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#10], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#30]
[2017-10-14 14:08:50,447]DEBUG  8234[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#10], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#82], EntityKey[com.softserveinc.edu.oms.domain.entities.User#10], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#10], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#31]
[2017-10-14 14:08:50,447]DEBUG  8234[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:50,447]DEBUG  8234[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,447]DEBUG  8234[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:50,447]DEBUG  8234[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:50,447]DEBUG  8234[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:50,448]DEBUG  8235[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:50,448]DEBUG  8235[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:50,448]DEBUG  8235[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:50,448]DEBUG  8235[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=82, roleName=Administrator}
[2017-10-14 14:08:50,448]DEBUG  8235[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=10, orderStatusName=Pending}
[2017-10-14 14:08:50,448]DEBUG  8235[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#10, id=30, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#10, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#10, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,448]DEBUG  8235[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=10, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#82, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:50,448]DEBUG  8235[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#10, id=29, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#10, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#10, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,448]DEBUG  8235[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#10, id=31, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#10, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#10, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,449]DEBUG  8236[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,449]DEBUG  8236[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 14:08:50,449]DEBUG  8236[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,449]DEBUG  8236[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:50,449]DEBUG  8236[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:50,450]DEBUG  8237[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:50,450]DEBUG  8237[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:50,450]DEBUG  8237[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:50,450]DEBUG  8237[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=82, roleName=Administrator}
[2017-10-14 14:08:50,450]DEBUG  8237[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=10, orderStatusName=Pending}
[2017-10-14 14:08:50,450]DEBUG  8237[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#10, id=30, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#10, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#10, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,450]DEBUG  8237[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=10, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#82, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:50,450]DEBUG  8237[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#10, id=29, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#10, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#10, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,450]DEBUG  8237[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#10, id=31, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#10, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#10, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,451]DEBUG  8238[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,451]DEBUG  8238[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 14:08:50,451]DEBUG  8238[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,451]DEBUG  8238[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:50,451]DEBUG  8238[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:50,451]DEBUG  8238[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:50,452]DEBUG  8239[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:50,452]DEBUG  8239[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:50,452]DEBUG  8239[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=82, roleName=Administrator}
[2017-10-14 14:08:50,452]DEBUG  8239[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=10, orderStatusName=Pending}
[2017-10-14 14:08:50,452]DEBUG  8239[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#10, id=30, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#10, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#10, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,452]DEBUG  8239[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=10, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#82, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:50,452]DEBUG  8239[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#10, id=29, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#10, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#10, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,452]DEBUG  8239[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#10, id=31, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#10, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#10, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,453]DEBUG  8240[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,453]DEBUG  8240[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 14:08:50,453]DEBUG  8240[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,453]DEBUG  8240[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:50,453]DEBUG  8240[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:50,454]DEBUG  8241[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:50,454]DEBUG  8241[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:50,454]DEBUG  8241[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:50,454]DEBUG  8241[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=82, roleName=Administrator}
[2017-10-14 14:08:50,454]DEBUG  8241[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=10, orderStatusName=Pending}
[2017-10-14 14:08:50,454]DEBUG  8241[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#10, id=30, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#10, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#10, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,454]DEBUG  8241[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=10, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#82, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:50,454]DEBUG  8241[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#10, id=29, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#10, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#10, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,455]DEBUG  8242[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#10, id=31, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#10, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#10, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,455]DEBUG  8242[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,455]DEBUG  8242[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 14:08:50,455]DEBUG  8242[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,455]DEBUG  8242[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:50,456]DEBUG  8243[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:50,456]DEBUG  8243[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:50,456]DEBUG  8243[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:50,456]DEBUG  8243[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:50,456]DEBUG  8243[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=82, roleName=Administrator}
[2017-10-14 14:08:50,456]DEBUG  8243[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=10, orderStatusName=Pending}
[2017-10-14 14:08:50,456]DEBUG  8243[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#10, id=30, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#10, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#10, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,457]DEBUG  8244[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=10, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#82, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:50,457]DEBUG  8244[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#10, id=29, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#10, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#10, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,457]DEBUG  8244[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#10, id=31, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#10, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#10, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,457]DEBUG  8244[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,457]DEBUG  8244[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 14:08:50,457]DEBUG  8244[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,458]DEBUG  8245[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:50,458]DEBUG  8245[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:50,458]DEBUG  8245[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:50,458]DEBUG  8245[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:50,458]DEBUG  8245[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:50,458]DEBUG  8245[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=82, roleName=Administrator}
[2017-10-14 14:08:50,458]DEBUG  8245[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=10, orderStatusName=Pending}
[2017-10-14 14:08:50,459]DEBUG  8246[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#10, id=30, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#10, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#10, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,459]DEBUG  8246[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=10, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#82, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:50,459]DEBUG  8246[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#10, id=29, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#10, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#10, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,459]DEBUG  8246[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#10, id=31, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#10, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#10, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,459]DEBUG  8246[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,459]DEBUG  8246[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 14:08:50,460]DEBUG  8247[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,460]DEBUG  8247[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:50,460]DEBUG  8247[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:50,460]DEBUG  8247[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:50,460]DEBUG  8247[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:50,460]DEBUG  8247[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:50,461]DEBUG  8248[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=82, roleName=Administrator}
[2017-10-14 14:08:50,461]DEBUG  8248[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=10, orderStatusName=Pending}
[2017-10-14 14:08:50,461]DEBUG  8248[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#10, id=30, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#10, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#10, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,461]DEBUG  8248[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=10, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#82, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:50,461]DEBUG  8248[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#10, id=29, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#10, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#10, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,461]DEBUG  8248[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#10, id=31, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#10, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#10, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,461]DEBUG  8248[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,462]DEBUG  8249[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 14:08:50,462]DEBUG  8249[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,462]DEBUG  8249[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:50,462]DEBUG  8249[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:50,462]DEBUG  8249[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:50,463]DEBUG  8250[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:50,463]DEBUG  8250[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:50,463]DEBUG  8250[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=82, roleName=Administrator}
[2017-10-14 14:08:50,463]DEBUG  8250[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=10, orderStatusName=Pending}
[2017-10-14 14:08:50,463]DEBUG  8250[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#10, id=30, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#10, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#10, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,463]DEBUG  8250[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=10, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#82, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:50,463]DEBUG  8250[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#10, id=29, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#10, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#10, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,464]DEBUG  8251[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#10, id=31, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#10, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#10, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,464]DEBUG  8251[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,464]DEBUG  8251[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 14:08:50,464]DEBUG  8251[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,465]DEBUG  8252[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:50,465]DEBUG  8252[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:50,465]DEBUG  8252[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:50,465]DEBUG  8252[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:50,465]DEBUG  8252[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:50,465]DEBUG  8252[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=82, roleName=Administrator}
[2017-10-14 14:08:50,466]DEBUG  8253[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=10, orderStatusName=Pending}
[2017-10-14 14:08:50,466]DEBUG  8253[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#10, id=30, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#10, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#10, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,466]DEBUG  8253[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=10, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#82, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:50,466]DEBUG  8253[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#10, id=29, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#10, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#10, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,466]DEBUG  8253[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#10, id=31, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#10, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#10, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,466]DEBUG  8253[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,467]DEBUG  8254[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 14:08:50,467]DEBUG  8254[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,467]DEBUG  8254[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@33721fb4 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@4d3aca61, testMethod = testFindByDeliveryDateLess@OrderDaoTest, testException = [null]]]
[2017-10-14 14:08:50,467]DEBUG  8254[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 14:08:50,468]DEBUG  8255[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7de39b29]
[2017-10-14 14:08:50,468]DEBUG  8255[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 14:08:50,695]DEBUG  8482[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 14:08:50,696]DEBUG  8483[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:50,696]DEBUG  8483[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@7de39b29] after transaction
[2017-10-14 14:08:50,696]DEBUG  8483[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 14:08:50,696]DEBUG  8483[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 14:08:50,697]DEBUG  8484[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:50,697] INFO  8484[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@33721fb4 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@4d3aca61, testMethod = testFindByDeliveryDateLess@OrderDaoTest, testException = [null]]]
[2017-10-14 14:08:50,699]DEBUG  8486[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@33721fb4 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@4d3aca61, testMethod = testFindByDeliveryDateLess@OrderDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 14:08:50,699]DEBUG  8486[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2017-10-14 14:08:50,699]DEBUG  8486[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2017-10-14 14:08:50,700]DEBUG  8487[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@33721fb4 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@65a26081, testMethod = [null], testException = [null]]].
[2017-10-14 14:08:50,700]DEBUG  8487[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 14:08:50,700]DEBUG  8487[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 14:08:50,701]DEBUG  8488[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 14:08:50,701]DEBUG  8488[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 14:08:50,701]DEBUG  8488[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 14:08:50,701]DEBUG  8488[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 14:08:50,702]DEBUG  8489[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 14:08:50,702]DEBUG  8489[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 14:08:50,702]DEBUG  8489[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 14:08:50,702]DEBUG  8489[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 14:08:50,703]DEBUG  8490[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 14:08:50,703]DEBUG  8490[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 14:08:50,703]DEBUG  8490[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 14:08:50,703]DEBUG  8490[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 14:08:50,704]DEBUG  8491[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 14:08:50,704]DEBUG  8491[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 14:08:50,704]DEBUG  8491[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 14:08:50,704]DEBUG  8491[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 14:08:50,705]DEBUG  8492[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 14:08:50,705]DEBUG  8492[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 14:08:50,705]DEBUG  8492[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 14:08:50,706]DEBUG  8493[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 14:08:50,706]DEBUG  8493[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@65a26081]
[2017-10-14 14:08:50,707]DEBUG  8494[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByOrderDateEquals' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:50,707]DEBUG  8494[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@33721fb4 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@65a26081, testMethod = testFindByOrderDateEquals@OrderDaoTest, testException = [null]]]
[2017-10-14 14:08:50,707]DEBUG  8494[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 14:08:50,709]DEBUG  8496[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByOrderDateEquals]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:50,709]DEBUG  8496[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15079793307
[2017-10-14 14:08:50,709]DEBUG  8496[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@1f482327] for Hibernate transaction
[2017-10-14 14:08:50,709]DEBUG  8496[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@1f482327]
[2017-10-14 14:08:50,710]DEBUG  8497[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 14:08:50,710]DEBUG  8497[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 14:08:50,710]DEBUG  8497[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 14:08:50,710]DEBUG  8497[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@33721fb4 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@65a26081, testMethod = testFindByOrderDateEquals@OrderDaoTest, testException = [null]]]
[2017-10-14 14:08:50,711] INFO  8498[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (11): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@48ad0abe]; rollback [true]
[2017-10-14 14:08:50,711]DEBUG  8498[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,711]DEBUG  8498[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 14:08:50,712]DEBUG  8499[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,712]DEBUG  8499[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,713]DEBUG  8500[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 14:08:50,713]DEBUG  8500[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,714]DEBUG  8501[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,714]DEBUG  8501[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 14:08:50,715]DEBUG  8502[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,715]DEBUG  8502[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,715]DEBUG  8502[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 14:08:50,716]DEBUG  8503[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,716]DEBUG  8503[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,716]DEBUG  8503[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 14:08:50,717]DEBUG  8504[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,717]DEBUG  8504[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,718]DEBUG  8505[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 14:08:50,718]DEBUG  8505[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,718]DEBUG  8505[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,718]DEBUG  8505[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 14:08:50,719]DEBUG  8506[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,719]DEBUG  8506[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,719]DEBUG  8506[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 14:08:50,719]DEBUG  8506[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,719]DEBUG  8506[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,720]DEBUG  8507[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 14:08:50,720]DEBUG  8507[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,720]DEBUG  8507[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:50,720]DEBUG  8507[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,720]DEBUG  8507[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName) values (?)
[2017-10-14 14:08:50,721]DEBUG  8508[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 11
[2017-10-14 14:08:50,721]DEBUG  8508[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,721]DEBUG  8508[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:50,721]DEBUG  8508[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,721]DEBUG  8508[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 14:08:50,722]DEBUG  8509[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 83
[2017-10-14 14:08:50,722]DEBUG  8509[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,722]DEBUG  8509[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:50,722]DEBUG  8509[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,722]DEBUG  8509[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Users (IsUserActive, Balance, CustomerTypeRef, Email, FirstName, LastName, Login, Password, RegionRef, RoleRef) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:50,723]DEBUG  8510[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 11
[2017-10-14 14:08:50,723]DEBUG  8510[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,723]DEBUG  8510[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:50,723]DEBUG  8510[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,724]DEBUG  8511[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:50,724]DEBUG  8511[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 32
[2017-10-14 14:08:50,724]DEBUG  8511[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,725]DEBUG  8512[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:50,725]DEBUG  8512[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,725]DEBUG  8512[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:50,726]DEBUG  8513[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 33
[2017-10-14 14:08:50,726]DEBUG  8513[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,726]DEBUG  8513[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:50,726]DEBUG  8513[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,727]DEBUG  8514[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:50,727]DEBUG  8514[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 34
[2017-10-14 14:08:50,727]DEBUG  8514[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,728]DEBUG  8515[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:50,728]DEBUG  8515[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:50,729]DEBUG  8516[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:50,729]DEBUG  8516[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:50,729]DEBUG  8516[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:50,729]DEBUG  8516[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#11, id=34, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#11, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#11, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,729]DEBUG  8516[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#11, id=33, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#11, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#11, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,730]DEBUG  8517[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=83, roleName=Administrator}
[2017-10-14 14:08:50,730]DEBUG  8517[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=11, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#83, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:50,730]DEBUG  8517[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#11, id=32, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#11, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#11, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,730]DEBUG  8517[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=11, orderStatusName=Pending}
[2017-10-14 14:08:50,730]DEBUG  8517[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,730]DEBUG  8517[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID5_6_, this_.Assigne as Assigne5_6_, this_.Customer as Customer5_6_, this_.DeliveryDate as Delivery2_5_6_, this_.IsGift as IsGift5_6_, this_.MaxDiscount as MaxDisco4_5_6_, this_.OrderDate as OrderDate5_6_, this_.OrderName as OrderName5_6_, this_.OrderNumber as OrderNum7_5_6_, this_.OrderStatusRef as OrderSt12_5_6_, this_.PreferableDeliveryDate as Preferab8_5_6_, this_.TotalPrice as TotalPrice5_6_, user2_.ID as ID3_0_, user2_.IsUserActive as IsUserAc2_3_0_, user2_.Balance as Balance3_0_, user2_.CustomerTypeRef as Customer9_3_0_, user2_.Email as Email3_0_, user2_.FirstName as FirstName3_0_, user2_.LastName as LastName3_0_, user2_.Login as Login3_0_, user2_.Password as Password3_0_, user2_.RegionRef as RegionRef3_0_, user2_.RoleRef as RoleRef3_0_, customerty3_.ID as ID2_1_, customerty3_.Discount as Discount2_1_, customerty3_.MaxRange as MaxRange2_1_, customerty3_.MinRange as MinRange2_1_, customerty3_.TypeName as TypeName2_1_, region4_.ID as ID1_2_, region4_.RegionName as RegionName1_2_, role5_.ID as ID0_3_, role5_.RoleName as RoleName0_3_, user6_.ID as ID3_4_, user6_.IsUserActive as IsUserAc2_3_4_, user6_.Balance as Balance3_4_, user6_.CustomerTypeRef as Customer9_3_4_, user6_.Email as Email3_4_, user6_.FirstName as FirstName3_4_, user6_.LastName as LastName3_4_, user6_.Login as Login3_4_, user6_.Password as Password3_4_, user6_.RegionRef as RegionRef3_4_, user6_.RoleRef as RoleRef3_4_, orderstatu7_.ID as ID4_5_, orderstatu7_.OrederStatusName as OrederSt2_4_5_ from Orders this_ left outer join Users user2_ on this_.Assigne=user2_.ID left outer join CustomerTypes customerty3_ on user2_.CustomerTypeRef=customerty3_.ID left outer join Regions region4_ on user2_.RegionRef=region4_.ID left outer join Roles role5_ on user2_.RoleRef=role5_.ID left outer join Users user6_ on this_.Customer=user6_.ID left outer join OrderStatuses orderstatu7_ on this_.OrderStatusRef=orderstatu7_.ID where this_.OrderDate=?
[2017-10-14 14:08:50,732]DEBUG  8519[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:50,733]DEBUG  8520[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#11], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#83], EntityKey[com.softserveinc.edu.oms.domain.entities.User#11], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#11], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#32]
[2017-10-14 14:08:50,733]DEBUG  8520[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#11], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#83], EntityKey[com.softserveinc.edu.oms.domain.entities.User#11], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#11], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#33]
[2017-10-14 14:08:50,733]DEBUG  8520[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#11], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#83], EntityKey[com.softserveinc.edu.oms.domain.entities.User#11], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#11], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#34]
[2017-10-14 14:08:50,733]DEBUG  8520[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:50,733]DEBUG  8520[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,734]DEBUG  8521[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:50,734]DEBUG  8521[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:50,734]DEBUG  8521[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:50,734]DEBUG  8521[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:50,734]DEBUG  8521[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:50,734]DEBUG  8521[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:50,735]DEBUG  8522[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#11, id=34, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#11, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#11, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,735]DEBUG  8522[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#11, id=33, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#11, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#11, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,735]DEBUG  8522[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=83, roleName=Administrator}
[2017-10-14 14:08:50,735]DEBUG  8522[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=11, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#83, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:50,735]DEBUG  8522[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#11, id=32, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#11, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#11, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,736]DEBUG  8523[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=11, orderStatusName=Pending}
[2017-10-14 14:08:50,736]DEBUG  8523[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,736]DEBUG  8523[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 14:08:50,736]DEBUG  8523[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,736]DEBUG  8523[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:50,737]DEBUG  8524[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:50,737]DEBUG  8524[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:50,737]DEBUG  8524[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:50,737]DEBUG  8524[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:50,737]DEBUG  8524[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#11, id=34, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#11, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#11, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,738]DEBUG  8525[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#11, id=33, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#11, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#11, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,738]DEBUG  8525[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=83, roleName=Administrator}
[2017-10-14 14:08:50,738]DEBUG  8525[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=11, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#83, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:50,738]DEBUG  8525[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#11, id=32, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#11, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#11, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,738]DEBUG  8525[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=11, orderStatusName=Pending}
[2017-10-14 14:08:50,738]DEBUG  8525[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,738]DEBUG  8525[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 14:08:50,739]DEBUG  8526[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,739]DEBUG  8526[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:50,739]DEBUG  8526[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:50,740]DEBUG  8527[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:50,740]DEBUG  8527[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:50,740]DEBUG  8527[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:50,740]DEBUG  8527[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#11, id=34, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#11, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#11, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,740]DEBUG  8527[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#11, id=33, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#11, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#11, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,740]DEBUG  8527[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=83, roleName=Administrator}
[2017-10-14 14:08:50,740]DEBUG  8527[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=11, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#83, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:50,741]DEBUG  8528[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#11, id=32, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#11, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#11, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,741]DEBUG  8528[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=11, orderStatusName=Pending}
[2017-10-14 14:08:50,741]DEBUG  8528[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,741]DEBUG  8528[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 14:08:50,741]DEBUG  8528[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,742]DEBUG  8529[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:50,742]DEBUG  8529[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:50,742]DEBUG  8529[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:50,742]DEBUG  8529[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:50,742]DEBUG  8529[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:50,742]DEBUG  8529[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#11, id=34, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#11, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#11, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,743]DEBUG  8530[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#11, id=33, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#11, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#11, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,743]DEBUG  8530[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=83, roleName=Administrator}
[2017-10-14 14:08:50,743]DEBUG  8530[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=11, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#83, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:50,743]DEBUG  8530[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#11, id=32, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#11, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#11, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,743]DEBUG  8530[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=11, orderStatusName=Pending}
[2017-10-14 14:08:50,743]DEBUG  8530[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,743]DEBUG  8530[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 14:08:50,744]DEBUG  8531[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,744]DEBUG  8531[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:50,744]DEBUG  8531[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:50,745]DEBUG  8532[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:50,745]DEBUG  8532[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:50,745]DEBUG  8532[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:50,745]DEBUG  8532[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#11, id=34, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#11, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#11, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,745]DEBUG  8532[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#11, id=33, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#11, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#11, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,745]DEBUG  8532[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=83, roleName=Administrator}
[2017-10-14 14:08:50,745]DEBUG  8532[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=11, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#83, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:50,746]DEBUG  8533[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#11, id=32, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#11, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#11, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,746]DEBUG  8533[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=11, orderStatusName=Pending}
[2017-10-14 14:08:50,746]DEBUG  8533[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,746]DEBUG  8533[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 14:08:50,746]DEBUG  8533[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,747]DEBUG  8534[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:50,747]DEBUG  8534[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:50,747]DEBUG  8534[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:50,747]DEBUG  8534[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:50,747]DEBUG  8534[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:50,748]DEBUG  8535[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#11, id=34, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#11, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#11, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,748]DEBUG  8535[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#11, id=33, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#11, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#11, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,748]DEBUG  8535[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=83, roleName=Administrator}
[2017-10-14 14:08:50,748]DEBUG  8535[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=11, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#83, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:50,748]DEBUG  8535[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#11, id=32, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#11, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#11, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,748]DEBUG  8535[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=11, orderStatusName=Pending}
[2017-10-14 14:08:50,748]DEBUG  8535[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,749]DEBUG  8536[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 14:08:50,749]DEBUG  8536[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,749]DEBUG  8536[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:50,749]DEBUG  8536[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:50,750]DEBUG  8537[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:50,750]DEBUG  8537[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:50,750]DEBUG  8537[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:50,750]DEBUG  8537[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#11, id=34, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#11, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#11, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,751]DEBUG  8538[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#11, id=33, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#11, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#11, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,751]DEBUG  8538[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=83, roleName=Administrator}
[2017-10-14 14:08:50,751]DEBUG  8538[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=11, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#83, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:50,751]DEBUG  8538[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#11, id=32, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#11, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#11, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,751]DEBUG  8538[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=11, orderStatusName=Pending}
[2017-10-14 14:08:50,752]DEBUG  8539[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,752]DEBUG  8539[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 14:08:50,752]DEBUG  8539[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,752]DEBUG  8539[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:50,752]DEBUG  8539[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:50,753]DEBUG  8540[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:50,753]DEBUG  8540[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:50,753]DEBUG  8540[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:50,753]DEBUG  8540[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#11, id=34, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#11, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#11, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,753]DEBUG  8540[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#11, id=33, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#11, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#11, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,754]DEBUG  8541[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=83, roleName=Administrator}
[2017-10-14 14:08:50,754]DEBUG  8541[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=11, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#83, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:50,754]DEBUG  8541[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#11, id=32, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#11, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#11, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,754]DEBUG  8541[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=11, orderStatusName=Pending}
[2017-10-14 14:08:50,754]DEBUG  8541[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,754]DEBUG  8541[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 14:08:50,755]DEBUG  8542[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,755]DEBUG  8542[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:50,755]DEBUG  8542[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:50,755]DEBUG  8542[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:50,755]DEBUG  8542[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:50,756]DEBUG  8543[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:50,756]DEBUG  8543[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#11, id=34, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#11, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#11, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,756]DEBUG  8543[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#11, id=33, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#11, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#11, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,756]DEBUG  8543[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=83, roleName=Administrator}
[2017-10-14 14:08:50,756]DEBUG  8543[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=11, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#83, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:50,757]DEBUG  8544[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#11, id=32, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#11, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#11, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,757]DEBUG  8544[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=11, orderStatusName=Pending}
[2017-10-14 14:08:50,757]DEBUG  8544[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,757]DEBUG  8544[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 14:08:50,757]DEBUG  8544[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,758]DEBUG  8545[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@33721fb4 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@65a26081, testMethod = testFindByOrderDateEquals@OrderDaoTest, testException = [null]]]
[2017-10-14 14:08:50,758]DEBUG  8545[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 14:08:50,758]DEBUG  8545[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@1f482327]
[2017-10-14 14:08:50,758]DEBUG  8545[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 14:08:50,903]DEBUG  8690[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 14:08:50,904]DEBUG  8691[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:50,904]DEBUG  8691[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@1f482327] after transaction
[2017-10-14 14:08:50,904]DEBUG  8691[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 14:08:50,904]DEBUG  8691[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 14:08:50,905]DEBUG  8692[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:50,905] INFO  8692[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@33721fb4 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@65a26081, testMethod = testFindByOrderDateEquals@OrderDaoTest, testException = [null]]]
[2017-10-14 14:08:50,906]DEBUG  8693[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@33721fb4 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@65a26081, testMethod = testFindByOrderDateEquals@OrderDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 14:08:50,907]DEBUG  8694[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2017-10-14 14:08:50,907]DEBUG  8694[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2017-10-14 14:08:50,907]DEBUG  8694[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@33721fb4 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@3cf21ac1, testMethod = [null], testException = [null]]].
[2017-10-14 14:08:50,907]DEBUG  8694[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 14:08:50,908]DEBUG  8695[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 14:08:50,908]DEBUG  8695[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 14:08:50,908]DEBUG  8695[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 14:08:50,908]DEBUG  8695[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 14:08:50,908]DEBUG  8695[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 14:08:50,909]DEBUG  8696[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 14:08:50,909]DEBUG  8696[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 14:08:50,909]DEBUG  8696[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 14:08:50,909]DEBUG  8696[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 14:08:50,910]DEBUG  8697[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 14:08:50,910]DEBUG  8697[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 14:08:50,910]DEBUG  8697[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 14:08:50,910]DEBUG  8697[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 14:08:50,911]DEBUG  8698[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 14:08:50,911]DEBUG  8698[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 14:08:50,911]DEBUG  8698[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 14:08:50,911]DEBUG  8698[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 14:08:50,912]DEBUG  8699[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 14:08:50,912]DEBUG  8699[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 14:08:50,912]DEBUG  8699[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 14:08:50,913]DEBUG  8700[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 14:08:50,913]DEBUG  8700[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@3cf21ac1]
[2017-10-14 14:08:50,914]DEBUG  8701[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByOrderDateMore' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:50,914]DEBUG  8701[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@33721fb4 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@3cf21ac1, testMethod = testFindByOrderDateMore@OrderDaoTest, testException = [null]]]
[2017-10-14 14:08:50,914]DEBUG  8701[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 14:08:50,916]DEBUG  8703[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByOrderDateMore]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:50,916]DEBUG  8703[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15079793309
[2017-10-14 14:08:50,916]DEBUG  8703[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@10e54d0e] for Hibernate transaction
[2017-10-14 14:08:50,916]DEBUG  8703[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@10e54d0e]
[2017-10-14 14:08:50,917]DEBUG  8704[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 14:08:50,917]DEBUG  8704[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 14:08:50,917]DEBUG  8704[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 14:08:50,917]DEBUG  8704[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@33721fb4 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@3cf21ac1, testMethod = testFindByOrderDateMore@OrderDaoTest, testException = [null]]]
[2017-10-14 14:08:50,918] INFO  8705[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (12): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@48ad0abe]; rollback [true]
[2017-10-14 14:08:50,918]DEBUG  8705[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,918]DEBUG  8705[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 14:08:50,919]DEBUG  8706[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,919]DEBUG  8706[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,919]DEBUG  8706[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 14:08:50,919]DEBUG  8706[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,919]DEBUG  8706[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,919]DEBUG  8706[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 14:08:50,920]DEBUG  8707[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,920]DEBUG  8707[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,920]DEBUG  8707[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 14:08:50,920]DEBUG  8707[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,920]DEBUG  8707[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,920]DEBUG  8707[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 14:08:50,921]DEBUG  8708[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,921]DEBUG  8708[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,921]DEBUG  8708[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 14:08:50,921]DEBUG  8708[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,921]DEBUG  8708[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,922]DEBUG  8709[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 14:08:50,922]DEBUG  8709[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,922]DEBUG  8709[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,922]DEBUG  8709[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 14:08:50,922]DEBUG  8709[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,923]DEBUG  8710[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,923]DEBUG  8710[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 14:08:50,923]DEBUG  8710[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,923]DEBUG  8710[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:50,923]DEBUG  8710[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,924]DEBUG  8711[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName) values (?)
[2017-10-14 14:08:50,924]DEBUG  8711[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 12
[2017-10-14 14:08:50,924]DEBUG  8711[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,924]DEBUG  8711[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:50,924]DEBUG  8711[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,925]DEBUG  8712[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 14:08:50,925]DEBUG  8712[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 84
[2017-10-14 14:08:50,925]DEBUG  8712[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,925]DEBUG  8712[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:50,925]DEBUG  8712[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,926]DEBUG  8713[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Users (IsUserActive, Balance, CustomerTypeRef, Email, FirstName, LastName, Login, Password, RegionRef, RoleRef) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:50,926]DEBUG  8713[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 12
[2017-10-14 14:08:50,926]DEBUG  8713[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,926]DEBUG  8713[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:50,927]DEBUG  8714[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,927]DEBUG  8714[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:50,927]DEBUG  8714[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 35
[2017-10-14 14:08:50,928]DEBUG  8715[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,928]DEBUG  8715[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:50,928]DEBUG  8715[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,928]DEBUG  8715[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:50,929]DEBUG  8716[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 36
[2017-10-14 14:08:50,929]DEBUG  8716[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,929]DEBUG  8716[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:50,929]DEBUG  8716[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,929]DEBUG  8716[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:50,930]DEBUG  8717[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 37
[2017-10-14 14:08:50,930]DEBUG  8717[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,931]DEBUG  8718[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:50,931]DEBUG  8718[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:50,931]DEBUG  8718[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:50,932]DEBUG  8719[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:50,932]DEBUG  8719[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:50,932]DEBUG  8719[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#12, id=36, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#12, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#12, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,932]DEBUG  8719[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=12, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#84, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:50,932]DEBUG  8719[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=84, roleName=Administrator}
[2017-10-14 14:08:50,932]DEBUG  8719[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#12, id=35, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#12, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#12, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,933]DEBUG  8720[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#12, id=37, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#12, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#12, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,933]DEBUG  8720[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=12, orderStatusName=Pending}
[2017-10-14 14:08:50,933]DEBUG  8720[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,933]DEBUG  8720[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID5_6_, this_.Assigne as Assigne5_6_, this_.Customer as Customer5_6_, this_.DeliveryDate as Delivery2_5_6_, this_.IsGift as IsGift5_6_, this_.MaxDiscount as MaxDisco4_5_6_, this_.OrderDate as OrderDate5_6_, this_.OrderName as OrderName5_6_, this_.OrderNumber as OrderNum7_5_6_, this_.OrderStatusRef as OrderSt12_5_6_, this_.PreferableDeliveryDate as Preferab8_5_6_, this_.TotalPrice as TotalPrice5_6_, user2_.ID as ID3_0_, user2_.IsUserActive as IsUserAc2_3_0_, user2_.Balance as Balance3_0_, user2_.CustomerTypeRef as Customer9_3_0_, user2_.Email as Email3_0_, user2_.FirstName as FirstName3_0_, user2_.LastName as LastName3_0_, user2_.Login as Login3_0_, user2_.Password as Password3_0_, user2_.RegionRef as RegionRef3_0_, user2_.RoleRef as RoleRef3_0_, customerty3_.ID as ID2_1_, customerty3_.Discount as Discount2_1_, customerty3_.MaxRange as MaxRange2_1_, customerty3_.MinRange as MinRange2_1_, customerty3_.TypeName as TypeName2_1_, region4_.ID as ID1_2_, region4_.RegionName as RegionName1_2_, role5_.ID as ID0_3_, role5_.RoleName as RoleName0_3_, user6_.ID as ID3_4_, user6_.IsUserActive as IsUserAc2_3_4_, user6_.Balance as Balance3_4_, user6_.CustomerTypeRef as Customer9_3_4_, user6_.Email as Email3_4_, user6_.FirstName as FirstName3_4_, user6_.LastName as LastName3_4_, user6_.Login as Login3_4_, user6_.Password as Password3_4_, user6_.RegionRef as RegionRef3_4_, user6_.RoleRef as RoleRef3_4_, orderstatu7_.ID as ID4_5_, orderstatu7_.OrederStatusName as OrederSt2_4_5_ from Orders this_ left outer join Users user2_ on this_.Assigne=user2_.ID left outer join CustomerTypes customerty3_ on user2_.CustomerTypeRef=customerty3_.ID left outer join Regions region4_ on user2_.RegionRef=region4_.ID left outer join Roles role5_ on user2_.RoleRef=role5_.ID left outer join Users user6_ on this_.Customer=user6_.ID left outer join OrderStatuses orderstatu7_ on this_.OrderStatusRef=orderstatu7_.ID where this_.OrderDate>?
[2017-10-14 14:08:50,934]DEBUG  8721[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:50,934]DEBUG  8721[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:50,934]DEBUG  8721[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,934]DEBUG  8721[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:50,935]DEBUG  8722[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:50,935]DEBUG  8722[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:50,935]DEBUG  8722[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:50,935]DEBUG  8722[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:50,935]DEBUG  8722[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:50,935]DEBUG  8722[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#12, id=36, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#12, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#12, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,936]DEBUG  8723[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=12, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#84, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:50,936]DEBUG  8723[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=84, roleName=Administrator}
[2017-10-14 14:08:50,936]DEBUG  8723[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#12, id=35, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#12, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#12, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,936]DEBUG  8723[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#12, id=37, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#12, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#12, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,936]DEBUG  8723[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=12, orderStatusName=Pending}
[2017-10-14 14:08:50,936]DEBUG  8723[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,936]DEBUG  8723[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 14:08:50,937]DEBUG  8724[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,937]DEBUG  8724[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:50,937]DEBUG  8724[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:50,937]DEBUG  8724[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:50,937]DEBUG  8724[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:50,938]DEBUG  8725[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:50,938]DEBUG  8725[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#12, id=36, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#12, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#12, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,938]DEBUG  8725[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=12, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#84, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:50,938]DEBUG  8725[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=84, roleName=Administrator}
[2017-10-14 14:08:50,938]DEBUG  8725[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#12, id=35, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#12, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#12, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,938]DEBUG  8725[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#12, id=37, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#12, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#12, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,938]DEBUG  8725[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=12, orderStatusName=Pending}
[2017-10-14 14:08:50,939]DEBUG  8726[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,939]DEBUG  8726[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 14:08:50,939]DEBUG  8726[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,939]DEBUG  8726[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:50,939]DEBUG  8726[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:50,940]DEBUG  8727[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:50,940]DEBUG  8727[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:50,940]DEBUG  8727[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:50,940]DEBUG  8727[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#12, id=36, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#12, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#12, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,940]DEBUG  8727[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=12, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#84, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:50,940]DEBUG  8727[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=84, roleName=Administrator}
[2017-10-14 14:08:50,940]DEBUG  8727[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#12, id=35, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#12, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#12, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,941]DEBUG  8728[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#12, id=37, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#12, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#12, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,941]DEBUG  8728[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=12, orderStatusName=Pending}
[2017-10-14 14:08:50,941]DEBUG  8728[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,941]DEBUG  8728[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 14:08:50,941]DEBUG  8728[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,942]DEBUG  8729[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:50,942]DEBUG  8729[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:50,942]DEBUG  8729[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:50,942]DEBUG  8729[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:50,942]DEBUG  8729[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:50,942]DEBUG  8729[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#12, id=36, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#12, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#12, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,943]DEBUG  8730[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=12, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#84, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:50,943]DEBUG  8730[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=84, roleName=Administrator}
[2017-10-14 14:08:50,943]DEBUG  8730[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#12, id=35, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#12, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#12, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,943]DEBUG  8730[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#12, id=37, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#12, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#12, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,943]DEBUG  8730[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=12, orderStatusName=Pending}
[2017-10-14 14:08:50,943]DEBUG  8730[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,943]DEBUG  8730[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 14:08:50,944]DEBUG  8731[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,944]DEBUG  8731[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:50,944]DEBUG  8731[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:50,944]DEBUG  8731[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:50,944]DEBUG  8731[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:50,945]DEBUG  8732[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:50,945]DEBUG  8732[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#12, id=36, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#12, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#12, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,945]DEBUG  8732[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=12, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#84, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:50,945]DEBUG  8732[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=84, roleName=Administrator}
[2017-10-14 14:08:50,945]DEBUG  8732[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#12, id=35, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#12, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#12, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,945]DEBUG  8732[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#12, id=37, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#12, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#12, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,945]DEBUG  8732[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=12, orderStatusName=Pending}
[2017-10-14 14:08:50,946]DEBUG  8733[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,946]DEBUG  8733[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 14:08:50,946]DEBUG  8733[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,946]DEBUG  8733[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:50,946]DEBUG  8733[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:50,947]DEBUG  8734[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:50,947]DEBUG  8734[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:50,947]DEBUG  8734[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:50,947]DEBUG  8734[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#12, id=36, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#12, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#12, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,947]DEBUG  8734[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=12, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#84, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:50,947]DEBUG  8734[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=84, roleName=Administrator}
[2017-10-14 14:08:50,947]DEBUG  8734[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#12, id=35, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#12, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#12, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,948]DEBUG  8735[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#12, id=37, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#12, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#12, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,948]DEBUG  8735[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=12, orderStatusName=Pending}
[2017-10-14 14:08:50,948]DEBUG  8735[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,948]DEBUG  8735[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 14:08:50,948]DEBUG  8735[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,948]DEBUG  8735[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:50,949]DEBUG  8736[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:50,949]DEBUG  8736[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:50,949]DEBUG  8736[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:50,949]DEBUG  8736[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:50,949]DEBUG  8736[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#12, id=36, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#12, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#12, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,949]DEBUG  8736[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=12, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#84, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:50,950]DEBUG  8737[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=84, roleName=Administrator}
[2017-10-14 14:08:50,950]DEBUG  8737[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#12, id=35, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#12, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#12, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,950]DEBUG  8737[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#12, id=37, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#12, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#12, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,950]DEBUG  8737[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=12, orderStatusName=Pending}
[2017-10-14 14:08:50,950]DEBUG  8737[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,950]DEBUG  8737[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 14:08:50,951]DEBUG  8738[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,951]DEBUG  8738[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:50,951]DEBUG  8738[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:50,951]DEBUG  8738[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:50,951]DEBUG  8738[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:50,951]DEBUG  8738[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:50,952]DEBUG  8739[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#12, id=36, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#12, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#12, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,952]DEBUG  8739[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=12, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#84, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:50,952]DEBUG  8739[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=84, roleName=Administrator}
[2017-10-14 14:08:50,952]DEBUG  8739[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#12, id=35, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#12, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#12, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,952]DEBUG  8739[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#12, id=37, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#12, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#12, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,952]DEBUG  8739[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=12, orderStatusName=Pending}
[2017-10-14 14:08:50,952]DEBUG  8739[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,953]DEBUG  8740[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 14:08:50,953]DEBUG  8740[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,953]DEBUG  8740[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:50,953]DEBUG  8740[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:50,953]DEBUG  8740[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:50,954]DEBUG  8741[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:50,954]DEBUG  8741[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:50,954]DEBUG  8741[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#12, id=36, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#12, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#12, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,954]DEBUG  8741[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=12, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#84, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:50,954]DEBUG  8741[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=84, roleName=Administrator}
[2017-10-14 14:08:50,954]DEBUG  8741[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#12, id=35, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#12, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#12, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,954]DEBUG  8741[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#12, id=37, orderDate=Sat Oct 14 14:08:50 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:50 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#12, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#12, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:50,955]DEBUG  8742[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=12, orderStatusName=Pending}
[2017-10-14 14:08:50,955]DEBUG  8742[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:50,955]DEBUG  8742[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 14:08:50,955]DEBUG  8742[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:50,955]DEBUG  8742[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@33721fb4 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@3cf21ac1, testMethod = testFindByOrderDateMore@OrderDaoTest, testException = [null]]]
[2017-10-14 14:08:50,955]DEBUG  8742[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 14:08:50,956]DEBUG  8743[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@10e54d0e]
[2017-10-14 14:08:50,956]DEBUG  8743[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 14:08:50,986]DEBUG  8773[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 14:08:50,987]DEBUG  8774[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:50,987]DEBUG  8774[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@10e54d0e] after transaction
[2017-10-14 14:08:50,987]DEBUG  8774[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 14:08:50,988]DEBUG  8775[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 14:08:50,988]DEBUG  8775[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:50,989] INFO  8776[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@33721fb4 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@3cf21ac1, testMethod = testFindByOrderDateMore@OrderDaoTest, testException = [null]]]
[2017-10-14 14:08:50,991]DEBUG  8778[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@33721fb4 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@3cf21ac1, testMethod = testFindByOrderDateMore@OrderDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 14:08:50,991]DEBUG  8778[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2017-10-14 14:08:50,992]DEBUG  8779[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2017-10-14 14:08:50,992]DEBUG  8779[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@33721fb4 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@56a12a00, testMethod = [null], testException = [null]]].
[2017-10-14 14:08:50,992]DEBUG  8779[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 14:08:50,993]DEBUG  8780[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 14:08:50,993]DEBUG  8780[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 14:08:50,993]DEBUG  8780[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 14:08:50,994]DEBUG  8781[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 14:08:50,994]DEBUG  8781[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 14:08:50,994]DEBUG  8781[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 14:08:50,995]DEBUG  8782[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 14:08:50,995]DEBUG  8782[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 14:08:50,995]DEBUG  8782[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 14:08:50,995]DEBUG  8782[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 14:08:50,996]DEBUG  8783[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 14:08:50,996]DEBUG  8783[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 14:08:50,996]DEBUG  8783[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 14:08:50,996]DEBUG  8783[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 14:08:50,997]DEBUG  8784[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 14:08:50,997]DEBUG  8784[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 14:08:50,997]DEBUG  8784[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 14:08:50,997]DEBUG  8784[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 14:08:50,998]DEBUG  8785[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 14:08:50,998]DEBUG  8785[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 14:08:50,998]DEBUG  8785[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 14:08:50,998]DEBUG  8785[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@56a12a00]
[2017-10-14 14:08:50,999]DEBUG  8786[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByOrderDateLess' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:50,999]DEBUG  8786[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@33721fb4 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@56a12a00, testMethod = testFindByOrderDateLess@OrderDaoTest, testException = [null]]]
[2017-10-14 14:08:50,999]DEBUG  8786[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 14:08:51,000]DEBUG  8787[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByOrderDateLess]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:51,000]DEBUG  8787[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15079793310
[2017-10-14 14:08:51,000]DEBUG  8787[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@5b966f9b] for Hibernate transaction
[2017-10-14 14:08:51,000]DEBUG  8787[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@5b966f9b]
[2017-10-14 14:08:51,000]DEBUG  8787[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 14:08:51,000]DEBUG  8787[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 14:08:51,000]DEBUG  8787[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 14:08:51,000]DEBUG  8787[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@33721fb4 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@56a12a00, testMethod = testFindByOrderDateLess@OrderDaoTest, testException = [null]]]
[2017-10-14 14:08:51,001] INFO  8788[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (13): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@48ad0abe]; rollback [true]
[2017-10-14 14:08:51,001]DEBUG  8788[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,001]DEBUG  8788[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 14:08:51,001]DEBUG  8788[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,002]DEBUG  8789[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,002]DEBUG  8789[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 14:08:51,002]DEBUG  8789[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,002]DEBUG  8789[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,002]DEBUG  8789[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 14:08:51,003]DEBUG  8790[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,003]DEBUG  8790[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,003]DEBUG  8790[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 14:08:51,003]DEBUG  8790[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,003]DEBUG  8790[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,003]DEBUG  8790[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 14:08:51,004]DEBUG  8791[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,004]DEBUG  8791[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,004]DEBUG  8791[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 14:08:51,004]DEBUG  8791[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,004]DEBUG  8791[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,005]DEBUG  8792[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 14:08:51,005]DEBUG  8792[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,005]DEBUG  8792[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,005]DEBUG  8792[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 14:08:51,005]DEBUG  8792[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,006]DEBUG  8793[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,006]DEBUG  8793[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 14:08:51,006]DEBUG  8793[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,006]DEBUG  8793[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:51,006]DEBUG  8793[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,007]DEBUG  8794[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName) values (?)
[2017-10-14 14:08:51,007]DEBUG  8794[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 13
[2017-10-14 14:08:51,007]DEBUG  8794[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,007]DEBUG  8794[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:51,008]DEBUG  8795[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,008]DEBUG  8795[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 14:08:51,008]DEBUG  8795[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 85
[2017-10-14 14:08:51,008]DEBUG  8795[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,008]DEBUG  8795[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:51,009]DEBUG  8796[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,009]DEBUG  8796[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Users (IsUserActive, Balance, CustomerTypeRef, Email, FirstName, LastName, Login, Password, RegionRef, RoleRef) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:51,009]DEBUG  8796[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 13
[2017-10-14 14:08:51,009]DEBUG  8796[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,010]DEBUG  8797[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:51,010]DEBUG  8797[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,010]DEBUG  8797[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:51,011]DEBUG  8798[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 38
[2017-10-14 14:08:51,017]DEBUG  8804[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,017]DEBUG  8804[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:51,018]DEBUG  8805[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,018]DEBUG  8805[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:51,019]DEBUG  8806[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 39
[2017-10-14 14:08:51,019]DEBUG  8806[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,019]DEBUG  8806[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:51,019]DEBUG  8806[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,019]DEBUG  8806[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:51,020]DEBUG  8807[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 40
[2017-10-14 14:08:51,020]DEBUG  8807[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,021]DEBUG  8808[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:51,021]DEBUG  8808[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:51,022]DEBUG  8809[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:51,022]DEBUG  8809[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:51,022]DEBUG  8809[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:51,022]DEBUG  8809[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=13, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#85, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:51,022]DEBUG  8809[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#13, id=38, orderDate=Sat Oct 14 14:08:51 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:51 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#13, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#13, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:51,022]DEBUG  8809[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=85, roleName=Administrator}
[2017-10-14 14:08:51,022]DEBUG  8809[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=13, orderStatusName=Pending}
[2017-10-14 14:08:51,022]DEBUG  8809[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#13, id=40, orderDate=Sat Oct 14 14:08:51 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:51 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#13, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#13, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:51,023]DEBUG  8810[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#13, id=39, orderDate=Sat Oct 14 14:08:51 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:51 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#13, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#13, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:51,023]DEBUG  8810[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,023]DEBUG  8810[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID5_6_, this_.Assigne as Assigne5_6_, this_.Customer as Customer5_6_, this_.DeliveryDate as Delivery2_5_6_, this_.IsGift as IsGift5_6_, this_.MaxDiscount as MaxDisco4_5_6_, this_.OrderDate as OrderDate5_6_, this_.OrderName as OrderName5_6_, this_.OrderNumber as OrderNum7_5_6_, this_.OrderStatusRef as OrderSt12_5_6_, this_.PreferableDeliveryDate as Preferab8_5_6_, this_.TotalPrice as TotalPrice5_6_, user2_.ID as ID3_0_, user2_.IsUserActive as IsUserAc2_3_0_, user2_.Balance as Balance3_0_, user2_.CustomerTypeRef as Customer9_3_0_, user2_.Email as Email3_0_, user2_.FirstName as FirstName3_0_, user2_.LastName as LastName3_0_, user2_.Login as Login3_0_, user2_.Password as Password3_0_, user2_.RegionRef as RegionRef3_0_, user2_.RoleRef as RoleRef3_0_, customerty3_.ID as ID2_1_, customerty3_.Discount as Discount2_1_, customerty3_.MaxRange as MaxRange2_1_, customerty3_.MinRange as MinRange2_1_, customerty3_.TypeName as TypeName2_1_, region4_.ID as ID1_2_, region4_.RegionName as RegionName1_2_, role5_.ID as ID0_3_, role5_.RoleName as RoleName0_3_, user6_.ID as ID3_4_, user6_.IsUserActive as IsUserAc2_3_4_, user6_.Balance as Balance3_4_, user6_.CustomerTypeRef as Customer9_3_4_, user6_.Email as Email3_4_, user6_.FirstName as FirstName3_4_, user6_.LastName as LastName3_4_, user6_.Login as Login3_4_, user6_.Password as Password3_4_, user6_.RegionRef as RegionRef3_4_, user6_.RoleRef as RoleRef3_4_, orderstatu7_.ID as ID4_5_, orderstatu7_.OrederStatusName as OrederSt2_4_5_ from Orders this_ left outer join Users user2_ on this_.Assigne=user2_.ID left outer join CustomerTypes customerty3_ on user2_.CustomerTypeRef=customerty3_.ID left outer join Regions region4_ on user2_.RegionRef=region4_.ID left outer join Roles role5_ on user2_.RoleRef=role5_.ID left outer join Users user6_ on this_.Customer=user6_.ID left outer join OrderStatuses orderstatu7_ on this_.OrderStatusRef=orderstatu7_.ID where this_.OrderDate<?
[2017-10-14 14:08:51,024]DEBUG  8811[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:51,025]DEBUG  8812[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#13], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#85], EntityKey[com.softserveinc.edu.oms.domain.entities.User#13], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#13], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#38]
[2017-10-14 14:08:51,025]DEBUG  8812[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#13], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#85], EntityKey[com.softserveinc.edu.oms.domain.entities.User#13], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#13], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#39]
[2017-10-14 14:08:51,025]DEBUG  8812[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#13], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#85], EntityKey[com.softserveinc.edu.oms.domain.entities.User#13], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#13], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#40]
[2017-10-14 14:08:51,025]DEBUG  8812[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:51,025]DEBUG  8812[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,025]DEBUG  8812[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:51,026]DEBUG  8813[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:51,026]DEBUG  8813[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:51,026]DEBUG  8813[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:51,026]DEBUG  8813[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:51,026]DEBUG  8813[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:51,026]DEBUG  8813[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=13, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#85, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:51,026]DEBUG  8813[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#13, id=38, orderDate=Sat Oct 14 14:08:51 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:51 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#13, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#13, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:51,027]DEBUG  8814[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=85, roleName=Administrator}
[2017-10-14 14:08:51,027]DEBUG  8814[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=13, orderStatusName=Pending}
[2017-10-14 14:08:51,027]DEBUG  8814[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#13, id=40, orderDate=Sat Oct 14 14:08:51 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:51 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#13, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#13, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:51,027]DEBUG  8814[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#13, id=39, orderDate=Sat Oct 14 14:08:51 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:51 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#13, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#13, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:51,027]DEBUG  8814[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,027]DEBUG  8814[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 14:08:51,027]DEBUG  8814[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,028]DEBUG  8815[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:51,028]DEBUG  8815[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:51,028]DEBUG  8815[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:51,028]DEBUG  8815[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:51,028]DEBUG  8815[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:51,028]DEBUG  8815[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=13, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#85, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:51,029]DEBUG  8816[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#13, id=38, orderDate=Sat Oct 14 14:08:51 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:51 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#13, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#13, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:51,029]DEBUG  8816[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=85, roleName=Administrator}
[2017-10-14 14:08:51,029]DEBUG  8816[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=13, orderStatusName=Pending}
[2017-10-14 14:08:51,029]DEBUG  8816[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#13, id=40, orderDate=Sat Oct 14 14:08:51 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:51 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#13, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#13, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:51,029]DEBUG  8816[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#13, id=39, orderDate=Sat Oct 14 14:08:51 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:51 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#13, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#13, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:51,029]DEBUG  8816[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,029]DEBUG  8816[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 14:08:51,032]DEBUG  8819[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,032]DEBUG  8819[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:51,033]DEBUG  8820[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:51,033]DEBUG  8820[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:51,033]DEBUG  8820[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:51,033]DEBUG  8820[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:51,033]DEBUG  8820[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=13, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#85, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:51,033]DEBUG  8820[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#13, id=38, orderDate=Sat Oct 14 14:08:51 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:51 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#13, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#13, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:51,033]DEBUG  8820[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=85, roleName=Administrator}
[2017-10-14 14:08:51,033]DEBUG  8820[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=13, orderStatusName=Pending}
[2017-10-14 14:08:51,034]DEBUG  8821[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#13, id=40, orderDate=Sat Oct 14 14:08:51 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:51 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#13, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#13, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:51,034]DEBUG  8821[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#13, id=39, orderDate=Sat Oct 14 14:08:51 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:51 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#13, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#13, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:51,034]DEBUG  8821[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,034]DEBUG  8821[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 14:08:51,034]DEBUG  8821[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,034]DEBUG  8821[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:51,035]DEBUG  8822[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:51,035]DEBUG  8822[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:51,035]DEBUG  8822[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:51,035]DEBUG  8822[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:51,035]DEBUG  8822[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=13, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#85, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:51,035]DEBUG  8822[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#13, id=38, orderDate=Sat Oct 14 14:08:51 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:51 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#13, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#13, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:51,035]DEBUG  8822[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=85, roleName=Administrator}
[2017-10-14 14:08:51,035]DEBUG  8822[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=13, orderStatusName=Pending}
[2017-10-14 14:08:51,036]DEBUG  8823[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#13, id=40, orderDate=Sat Oct 14 14:08:51 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:51 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#13, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#13, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:51,036]DEBUG  8823[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#13, id=39, orderDate=Sat Oct 14 14:08:51 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:51 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#13, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#13, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:51,036]DEBUG  8823[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,036]DEBUG  8823[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 14:08:51,036]DEBUG  8823[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,036]DEBUG  8823[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:51,036]DEBUG  8823[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:51,037]DEBUG  8824[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:51,037]DEBUG  8824[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:51,037]DEBUG  8824[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:51,037]DEBUG  8824[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=13, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#85, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:51,037]DEBUG  8824[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#13, id=38, orderDate=Sat Oct 14 14:08:51 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:51 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#13, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#13, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:51,037]DEBUG  8824[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=85, roleName=Administrator}
[2017-10-14 14:08:51,037]DEBUG  8824[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=13, orderStatusName=Pending}
[2017-10-14 14:08:51,038]DEBUG  8825[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#13, id=40, orderDate=Sat Oct 14 14:08:51 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:51 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#13, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#13, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:51,038]DEBUG  8825[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#13, id=39, orderDate=Sat Oct 14 14:08:51 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:51 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#13, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#13, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:51,038]DEBUG  8825[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,038]DEBUG  8825[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 14:08:51,038]DEBUG  8825[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,038]DEBUG  8825[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:51,038]DEBUG  8825[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:51,039]DEBUG  8826[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:51,039]DEBUG  8826[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:51,039]DEBUG  8826[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:51,039]DEBUG  8826[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=13, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#85, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:51,039]DEBUG  8826[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#13, id=38, orderDate=Sat Oct 14 14:08:51 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:51 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#13, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#13, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:51,039]DEBUG  8826[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=85, roleName=Administrator}
[2017-10-14 14:08:51,039]DEBUG  8826[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=13, orderStatusName=Pending}
[2017-10-14 14:08:51,039]DEBUG  8826[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#13, id=40, orderDate=Sat Oct 14 14:08:51 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:51 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#13, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#13, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:51,040]DEBUG  8827[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#13, id=39, orderDate=Sat Oct 14 14:08:51 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:51 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#13, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#13, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:51,040]DEBUG  8827[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,040]DEBUG  8827[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 14:08:51,040]DEBUG  8827[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,040]DEBUG  8827[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:51,040]DEBUG  8827[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:51,040]DEBUG  8827[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:51,041]DEBUG  8828[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:51,041]DEBUG  8828[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:51,041]DEBUG  8828[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=13, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#85, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:51,041]DEBUG  8828[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#13, id=38, orderDate=Sat Oct 14 14:08:51 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:51 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#13, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#13, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:51,041]DEBUG  8828[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=85, roleName=Administrator}
[2017-10-14 14:08:51,041]DEBUG  8828[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=13, orderStatusName=Pending}
[2017-10-14 14:08:51,041]DEBUG  8828[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#13, id=40, orderDate=Sat Oct 14 14:08:51 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:51 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#13, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#13, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:51,041]DEBUG  8828[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#13, id=39, orderDate=Sat Oct 14 14:08:51 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:51 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#13, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#13, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:51,042]DEBUG  8829[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,042]DEBUG  8829[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 14:08:51,042]DEBUG  8829[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,042]DEBUG  8829[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:51,042]DEBUG  8829[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:51,042]DEBUG  8829[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:51,042]DEBUG  8829[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:51,042]DEBUG  8829[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:51,043]DEBUG  8830[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=13, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#85, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:51,043]DEBUG  8830[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#13, id=38, orderDate=Sat Oct 14 14:08:51 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:51 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#13, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#13, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:51,043]DEBUG  8830[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=85, roleName=Administrator}
[2017-10-14 14:08:51,043]DEBUG  8830[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=13, orderStatusName=Pending}
[2017-10-14 14:08:51,043]DEBUG  8830[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#13, id=40, orderDate=Sat Oct 14 14:08:51 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:51 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#13, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#13, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:51,043]DEBUG  8830[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#13, id=39, orderDate=Sat Oct 14 14:08:51 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:51 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#13, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#13, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:51,043]DEBUG  8830[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,043]DEBUG  8830[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 14:08:51,044]DEBUG  8831[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,044]DEBUG  8831[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:51,044]DEBUG  8831[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:51,044]DEBUG  8831[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:51,044]DEBUG  8831[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:51,044]DEBUG  8831[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:51,044]DEBUG  8831[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=13, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#85, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:51,045]DEBUG  8832[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#13, id=38, orderDate=Sat Oct 14 14:08:51 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:51 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#13, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#13, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:51,045]DEBUG  8832[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=85, roleName=Administrator}
[2017-10-14 14:08:51,045]DEBUG  8832[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=13, orderStatusName=Pending}
[2017-10-14 14:08:51,045]DEBUG  8832[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#13, id=40, orderDate=Sat Oct 14 14:08:51 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:51 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#13, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#13, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:51,045]DEBUG  8832[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#13, id=39, orderDate=Sat Oct 14 14:08:51 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:51 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#13, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#13, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:51,045]DEBUG  8832[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,045]DEBUG  8832[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 14:08:51,046]DEBUG  8833[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,046]DEBUG  8833[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@33721fb4 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@56a12a00, testMethod = testFindByOrderDateLess@OrderDaoTest, testException = [null]]]
[2017-10-14 14:08:51,046]DEBUG  8833[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 14:08:51,046]DEBUG  8833[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@5b966f9b]
[2017-10-14 14:08:51,046]DEBUG  8833[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 14:08:51,170]DEBUG  8957[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 14:08:51,170]DEBUG  8957[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:51,171]DEBUG  8958[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@5b966f9b] after transaction
[2017-10-14 14:08:51,171]DEBUG  8958[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 14:08:51,171]DEBUG  8958[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 14:08:51,171]DEBUG  8958[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:51,172] INFO  8959[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@33721fb4 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@56a12a00, testMethod = testFindByOrderDateLess@OrderDaoTest, testException = [null]]]
[2017-10-14 14:08:51,173]DEBUG  8960[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@33721fb4 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@56a12a00, testMethod = testFindByOrderDateLess@OrderDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 14:08:51,173]DEBUG  8960[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2017-10-14 14:08:51,174]DEBUG  8961[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2017-10-14 14:08:51,174]DEBUG  8961[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@33721fb4 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@69ce82e9, testMethod = [null], testException = [null]]].
[2017-10-14 14:08:51,174]DEBUG  8961[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 14:08:51,174]DEBUG  8961[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 14:08:51,175]DEBUG  8962[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 14:08:51,175]DEBUG  8962[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 14:08:51,175]DEBUG  8962[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 14:08:51,175]DEBUG  8962[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 14:08:51,175]DEBUG  8962[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 14:08:51,176]DEBUG  8963[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 14:08:51,176]DEBUG  8963[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 14:08:51,176]DEBUG  8963[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 14:08:51,176]DEBUG  8963[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 14:08:51,176]DEBUG  8963[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 14:08:51,177]DEBUG  8964[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 14:08:51,177]DEBUG  8964[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 14:08:51,177]DEBUG  8964[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 14:08:51,177]DEBUG  8964[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 14:08:51,177]DEBUG  8964[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 14:08:51,177]DEBUG  8964[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 14:08:51,178]DEBUG  8965[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 14:08:51,178]DEBUG  8965[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 14:08:51,178]DEBUG  8965[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 14:08:51,178]DEBUG  8965[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 14:08:51,179]DEBUG  8966[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@69ce82e9]
[2017-10-14 14:08:51,179]DEBUG  8966[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByOrderStatus' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:51,180]DEBUG  8967[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@33721fb4 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@69ce82e9, testMethod = testFindByOrderStatus@OrderDaoTest, testException = [null]]]
[2017-10-14 14:08:51,180]DEBUG  8967[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 14:08:51,181]DEBUG  8968[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByOrderStatus]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:51,182]DEBUG  8969[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15079793311
[2017-10-14 14:08:51,182]DEBUG  8969[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@5eedaba0] for Hibernate transaction
[2017-10-14 14:08:51,182]DEBUG  8969[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@5eedaba0]
[2017-10-14 14:08:51,182]DEBUG  8969[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 14:08:51,182]DEBUG  8969[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 14:08:51,183]DEBUG  8970[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 14:08:51,183]DEBUG  8970[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@33721fb4 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@69ce82e9, testMethod = testFindByOrderStatus@OrderDaoTest, testException = [null]]]
[2017-10-14 14:08:51,183] INFO  8970[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (14): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@48ad0abe]; rollback [true]
[2017-10-14 14:08:51,183]DEBUG  8970[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,184]DEBUG  8971[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 14:08:51,184]DEBUG  8971[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,185]DEBUG  8972[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,185]DEBUG  8972[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 14:08:51,186]DEBUG  8973[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,186]DEBUG  8973[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,186]DEBUG  8973[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 14:08:51,187]DEBUG  8974[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,187]DEBUG  8974[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,187]DEBUG  8974[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 14:08:51,188]DEBUG  8975[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,188]DEBUG  8975[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,188]DEBUG  8975[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 14:08:51,189]DEBUG  8976[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,189]DEBUG  8976[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,189]DEBUG  8976[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 14:08:51,190]DEBUG  8977[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,190]DEBUG  8977[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,190]DEBUG  8977[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 14:08:51,191]DEBUG  8978[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,191]DEBUG  8978[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,191]DEBUG  8978[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 14:08:51,192]DEBUG  8979[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,192]DEBUG  8979[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,193]DEBUG  8980[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 14:08:51,193]DEBUG  8980[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,194]DEBUG  8981[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:51,194]DEBUG  8981[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,194]DEBUG  8981[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName) values (?)
[2017-10-14 14:08:51,195]DEBUG  8982[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 14
[2017-10-14 14:08:51,195]DEBUG  8982[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,196]DEBUG  8983[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:51,196]DEBUG  8983[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,196]DEBUG  8983[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 14:08:51,197]DEBUG  8984[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 86
[2017-10-14 14:08:51,197]DEBUG  8984[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,198]DEBUG  8985[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:51,198]DEBUG  8985[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,198]DEBUG  8985[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Users (IsUserActive, Balance, CustomerTypeRef, Email, FirstName, LastName, Login, Password, RegionRef, RoleRef) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:51,198]DEBUG  8985[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 14
[2017-10-14 14:08:51,199]DEBUG  8986[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,199]DEBUG  8986[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:51,199]DEBUG  8986[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,199]DEBUG  8986[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:51,200]DEBUG  8987[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 41
[2017-10-14 14:08:51,200]DEBUG  8987[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,201]DEBUG  8988[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:51,201]DEBUG  8988[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,201]DEBUG  8988[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:51,201]DEBUG  8988[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 42
[2017-10-14 14:08:51,202]DEBUG  8989[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,202]DEBUG  8989[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:51,202]DEBUG  8989[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,202]DEBUG  8989[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:51,203]DEBUG  8990[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 43
[2017-10-14 14:08:51,203]DEBUG  8990[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,204]DEBUG  8991[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:51,204]DEBUG  8991[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:51,204]DEBUG  8991[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:51,204]DEBUG  8991[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:51,204]DEBUG  8991[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:51,204]DEBUG  8991[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#14, id=42, orderDate=Sat Oct 14 14:08:51 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:51 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#14, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#14, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:51,205]DEBUG  8992[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=14, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#86, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:51,205]DEBUG  8992[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#14, id=41, orderDate=Sat Oct 14 14:08:51 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:51 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#14, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#14, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:51,205]DEBUG  8992[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#14, id=43, orderDate=Sat Oct 14 14:08:51 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:51 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#14, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#14, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:51,205]DEBUG  8992[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=86, roleName=Administrator}
[2017-10-14 14:08:51,205]DEBUG  8992[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=14, orderStatusName=Pending}
[2017-10-14 14:08:51,205]DEBUG  8992[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,205]DEBUG  8992[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID5_6_, this_.Assigne as Assigne5_6_, this_.Customer as Customer5_6_, this_.DeliveryDate as Delivery2_5_6_, this_.IsGift as IsGift5_6_, this_.MaxDiscount as MaxDisco4_5_6_, this_.OrderDate as OrderDate5_6_, this_.OrderName as OrderName5_6_, this_.OrderNumber as OrderNum7_5_6_, this_.OrderStatusRef as OrderSt12_5_6_, this_.PreferableDeliveryDate as Preferab8_5_6_, this_.TotalPrice as TotalPrice5_6_, user2_.ID as ID3_0_, user2_.IsUserActive as IsUserAc2_3_0_, user2_.Balance as Balance3_0_, user2_.CustomerTypeRef as Customer9_3_0_, user2_.Email as Email3_0_, user2_.FirstName as FirstName3_0_, user2_.LastName as LastName3_0_, user2_.Login as Login3_0_, user2_.Password as Password3_0_, user2_.RegionRef as RegionRef3_0_, user2_.RoleRef as RoleRef3_0_, customerty3_.ID as ID2_1_, customerty3_.Discount as Discount2_1_, customerty3_.MaxRange as MaxRange2_1_, customerty3_.MinRange as MinRange2_1_, customerty3_.TypeName as TypeName2_1_, region4_.ID as ID1_2_, region4_.RegionName as RegionName1_2_, role5_.ID as ID0_3_, role5_.RoleName as RoleName0_3_, user6_.ID as ID3_4_, user6_.IsUserActive as IsUserAc2_3_4_, user6_.Balance as Balance3_4_, user6_.CustomerTypeRef as Customer9_3_4_, user6_.Email as Email3_4_, user6_.FirstName as FirstName3_4_, user6_.LastName as LastName3_4_, user6_.Login as Login3_4_, user6_.Password as Password3_4_, user6_.RegionRef as RegionRef3_4_, user6_.RoleRef as RoleRef3_4_, orderstatu7_.ID as ID4_5_, orderstatu7_.OrederStatusName as OrederSt2_4_5_ from Orders this_ left outer join Users user2_ on this_.Assigne=user2_.ID left outer join CustomerTypes customerty3_ on user2_.CustomerTypeRef=customerty3_.ID left outer join Regions region4_ on user2_.RegionRef=region4_.ID left outer join Roles role5_ on user2_.RoleRef=role5_.ID left outer join Users user6_ on this_.Customer=user6_.ID left outer join OrderStatuses orderstatu7_ on this_.OrderStatusRef=orderstatu7_.ID where this_.OrderStatusRef=?
[2017-10-14 14:08:51,206]DEBUG  8993[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:51,207]DEBUG  8994[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#14], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#86], EntityKey[com.softserveinc.edu.oms.domain.entities.User#14], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#14], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#41]
[2017-10-14 14:08:51,207]DEBUG  8994[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#14], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#86], EntityKey[com.softserveinc.edu.oms.domain.entities.User#14], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#14], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#42]
[2017-10-14 14:08:51,208]DEBUG  8995[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#14], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#86], EntityKey[com.softserveinc.edu.oms.domain.entities.User#14], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#14], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#43]
[2017-10-14 14:08:51,208]DEBUG  8995[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:51,208]DEBUG  8995[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,208]DEBUG  8995[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:51,208]DEBUG  8995[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:51,208]DEBUG  8995[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:51,208]DEBUG  8995[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:51,209]DEBUG  8996[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:51,209]DEBUG  8996[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:51,209]DEBUG  8996[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#14, id=42, orderDate=Sat Oct 14 14:08:51 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:51 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#14, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#14, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:51,209]DEBUG  8996[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=14, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#86, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:51,209]DEBUG  8996[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#14, id=41, orderDate=Sat Oct 14 14:08:51 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:51 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#14, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#14, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:51,209]DEBUG  8996[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#14, id=43, orderDate=Sat Oct 14 14:08:51 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:51 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#14, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#14, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:51,209]DEBUG  8996[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=86, roleName=Administrator}
[2017-10-14 14:08:51,209]DEBUG  8996[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=14, orderStatusName=Pending}
[2017-10-14 14:08:51,209]DEBUG  8996[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,210]DEBUG  8997[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 14:08:51,210]DEBUG  8997[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,210]DEBUG  8997[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:51,210]DEBUG  8997[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:51,210]DEBUG  8997[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:51,210]DEBUG  8997[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:51,211]DEBUG  8998[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:51,211]DEBUG  8998[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#14, id=42, orderDate=Sat Oct 14 14:08:51 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:51 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#14, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#14, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:51,211]DEBUG  8998[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=14, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#86, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:51,211]DEBUG  8998[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#14, id=41, orderDate=Sat Oct 14 14:08:51 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:51 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#14, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#14, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:51,211]DEBUG  8998[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#14, id=43, orderDate=Sat Oct 14 14:08:51 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:51 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#14, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#14, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:51,211]DEBUG  8998[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=86, roleName=Administrator}
[2017-10-14 14:08:51,211]DEBUG  8998[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=14, orderStatusName=Pending}
[2017-10-14 14:08:51,211]DEBUG  8998[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,212]DEBUG  8999[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 14:08:51,212]DEBUG  8999[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,212]DEBUG  8999[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:51,212]DEBUG  8999[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:51,212]DEBUG  8999[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:51,212]DEBUG  8999[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:51,212]DEBUG  8999[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:51,213]DEBUG  9000[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#14, id=42, orderDate=Sat Oct 14 14:08:51 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:51 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#14, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#14, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:51,213]DEBUG  9000[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=14, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#86, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:51,213]DEBUG  9000[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#14, id=41, orderDate=Sat Oct 14 14:08:51 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:51 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#14, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#14, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:51,213]DEBUG  9000[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#14, id=43, orderDate=Sat Oct 14 14:08:51 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:51 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#14, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#14, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:51,213]DEBUG  9000[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=86, roleName=Administrator}
[2017-10-14 14:08:51,213]DEBUG  9000[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=14, orderStatusName=Pending}
[2017-10-14 14:08:51,213]DEBUG  9000[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,214]DEBUG  9001[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 14:08:51,214]DEBUG  9001[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,214]DEBUG  9001[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:51,214]DEBUG  9001[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:51,214]DEBUG  9001[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:51,214]DEBUG  9001[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:51,215]DEBUG  9002[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:51,215]DEBUG  9002[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#14, id=42, orderDate=Sat Oct 14 14:08:51 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:51 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#14, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#14, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:51,215]DEBUG  9002[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=14, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#86, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:51,215]DEBUG  9002[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#14, id=41, orderDate=Sat Oct 14 14:08:51 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:51 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#14, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#14, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:51,215]DEBUG  9002[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#14, id=43, orderDate=Sat Oct 14 14:08:51 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:51 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#14, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#14, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:51,215]DEBUG  9002[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=86, roleName=Administrator}
[2017-10-14 14:08:51,215]DEBUG  9002[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=14, orderStatusName=Pending}
[2017-10-14 14:08:51,215]DEBUG  9002[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,216]DEBUG  9003[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 14:08:51,216]DEBUG  9003[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,216]DEBUG  9003[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:51,216]DEBUG  9003[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:51,216]DEBUG  9003[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:51,216]DEBUG  9003[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:51,217]DEBUG  9004[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:51,217]DEBUG  9004[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#14, id=42, orderDate=Sat Oct 14 14:08:51 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:51 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#14, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#14, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:51,217]DEBUG  9004[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=14, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#86, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:51,217]DEBUG  9004[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#14, id=41, orderDate=Sat Oct 14 14:08:51 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:51 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#14, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#14, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:51,217]DEBUG  9004[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#14, id=43, orderDate=Sat Oct 14 14:08:51 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:51 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#14, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#14, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:51,217]DEBUG  9004[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=86, roleName=Administrator}
[2017-10-14 14:08:51,217]DEBUG  9004[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=14, orderStatusName=Pending}
[2017-10-14 14:08:51,217]DEBUG  9004[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,218]DEBUG  9005[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 14:08:51,219]DEBUG  9006[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,219]DEBUG  9006[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:51,219]DEBUG  9006[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:51,219]DEBUG  9006[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:51,219]DEBUG  9006[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:51,220]DEBUG  9007[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:51,220]DEBUG  9007[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#14, id=42, orderDate=Sat Oct 14 14:08:51 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:51 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#14, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#14, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:51,220]DEBUG  9007[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=14, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#86, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:51,220]DEBUG  9007[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#14, id=41, orderDate=Sat Oct 14 14:08:51 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:51 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#14, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#14, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:51,220]DEBUG  9007[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#14, id=43, orderDate=Sat Oct 14 14:08:51 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:51 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#14, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#14, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:51,220]DEBUG  9007[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=86, roleName=Administrator}
[2017-10-14 14:08:51,220]DEBUG  9007[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=14, orderStatusName=Pending}
[2017-10-14 14:08:51,220]DEBUG  9007[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,221]DEBUG  9008[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 14:08:51,221]DEBUG  9008[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,221]DEBUG  9008[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:51,221]DEBUG  9008[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:51,221]DEBUG  9008[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:51,222]DEBUG  9009[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:51,222]DEBUG  9009[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:51,222]DEBUG  9009[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#14, id=42, orderDate=Sat Oct 14 14:08:51 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:51 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#14, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#14, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:51,222]DEBUG  9009[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=14, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#86, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:51,222]DEBUG  9009[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#14, id=41, orderDate=Sat Oct 14 14:08:51 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:51 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#14, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#14, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:51,222]DEBUG  9009[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#14, id=43, orderDate=Sat Oct 14 14:08:51 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:51 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#14, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#14, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:51,222]DEBUG  9009[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=86, roleName=Administrator}
[2017-10-14 14:08:51,222]DEBUG  9009[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=14, orderStatusName=Pending}
[2017-10-14 14:08:51,223]DEBUG  9010[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,223]DEBUG  9010[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 14:08:51,223]DEBUG  9010[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,223]DEBUG  9010[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:51,223]DEBUG  9010[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:51,223]DEBUG  9010[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:51,224]DEBUG  9011[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:51,224]DEBUG  9011[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:51,224]DEBUG  9011[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#14, id=42, orderDate=Sat Oct 14 14:08:51 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:51 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#14, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#14, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:51,224]DEBUG  9011[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=14, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#86, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:51,224]DEBUG  9011[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#14, id=41, orderDate=Sat Oct 14 14:08:51 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:51 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#14, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#14, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:51,224]DEBUG  9011[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#14, id=43, orderDate=Sat Oct 14 14:08:51 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:51 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#14, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#14, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:51,224]DEBUG  9011[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=86, roleName=Administrator}
[2017-10-14 14:08:51,224]DEBUG  9011[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=14, orderStatusName=Pending}
[2017-10-14 14:08:51,224]DEBUG  9011[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,225]DEBUG  9012[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 14:08:51,225]DEBUG  9012[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,225]DEBUG  9012[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:51,225]DEBUG  9012[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:51,225]DEBUG  9012[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:51,225]DEBUG  9012[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:51,225]DEBUG  9012[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:51,226]DEBUG  9013[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#14, id=42, orderDate=Sat Oct 14 14:08:51 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:51 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#14, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#14, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:51,226]DEBUG  9013[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=14, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#86, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:51,226]DEBUG  9013[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#14, id=41, orderDate=Sat Oct 14 14:08:51 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:51 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#14, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#14, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:51,226]DEBUG  9013[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#14, id=43, orderDate=Sat Oct 14 14:08:51 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:51 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#14, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#14, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:51,226]DEBUG  9013[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=86, roleName=Administrator}
[2017-10-14 14:08:51,226]DEBUG  9013[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=14, orderStatusName=Pending}
[2017-10-14 14:08:51,226]DEBUG  9013[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,226]DEBUG  9013[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 14:08:51,227]DEBUG  9014[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,227]DEBUG  9014[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@33721fb4 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@69ce82e9, testMethod = testFindByOrderStatus@OrderDaoTest, testException = [null]]]
[2017-10-14 14:08:51,227]DEBUG  9014[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 14:08:51,227]DEBUG  9014[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@5eedaba0]
[2017-10-14 14:08:51,227]DEBUG  9014[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 14:08:51,262]DEBUG  9049[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 14:08:51,262]DEBUG  9049[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:51,262]DEBUG  9049[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@5eedaba0] after transaction
[2017-10-14 14:08:51,263]DEBUG  9050[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 14:08:51,263]DEBUG  9050[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 14:08:51,263]DEBUG  9050[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:51,263] INFO  9050[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@33721fb4 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@69ce82e9, testMethod = testFindByOrderStatus@OrderDaoTest, testException = [null]]]
[2017-10-14 14:08:51,265]DEBUG  9052[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@33721fb4 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@69ce82e9, testMethod = testFindByOrderStatus@OrderDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 14:08:51,266]DEBUG  9053[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2017-10-14 14:08:51,266]DEBUG  9053[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2017-10-14 14:08:51,266]DEBUG  9053[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@33721fb4 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@173b5d4c, testMethod = [null], testException = [null]]].
[2017-10-14 14:08:51,266]DEBUG  9053[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 14:08:51,267]DEBUG  9054[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 14:08:51,267]DEBUG  9054[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 14:08:51,267]DEBUG  9054[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 14:08:51,267]DEBUG  9054[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 14:08:51,267]DEBUG  9054[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 14:08:51,268]DEBUG  9055[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 14:08:51,268]DEBUG  9055[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 14:08:51,268]DEBUG  9055[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 14:08:51,268]DEBUG  9055[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 14:08:51,269]DEBUG  9056[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 14:08:51,269]DEBUG  9056[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 14:08:51,269]DEBUG  9056[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 14:08:51,269]DEBUG  9056[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 14:08:51,269]DEBUG  9056[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 14:08:51,269]DEBUG  9056[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 14:08:51,270]DEBUG  9057[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 14:08:51,270]DEBUG  9057[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 14:08:51,270]DEBUG  9057[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 14:08:51,270]DEBUG  9057[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 14:08:51,270]DEBUG  9057[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 14:08:51,271]DEBUG  9058[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 14:08:51,271]DEBUG  9058[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@173b5d4c]
[2017-10-14 14:08:51,272]DEBUG  9059[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testContextFile' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:51,272]DEBUG  9059[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@33721fb4 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@173b5d4c, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2017-10-14 14:08:51,272]DEBUG  9059[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 14:08:51,274]DEBUG  9061[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testContextFile]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:51,274]DEBUG  9061[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15079793312
[2017-10-14 14:08:51,274]DEBUG  9061[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@108e74ea] for Hibernate transaction
[2017-10-14 14:08:51,274]DEBUG  9061[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@108e74ea]
[2017-10-14 14:08:51,274]DEBUG  9061[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 14:08:51,275]DEBUG  9062[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 14:08:51,275]DEBUG  9062[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 14:08:51,275]DEBUG  9062[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@33721fb4 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@173b5d4c, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2017-10-14 14:08:51,275] INFO  9062[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (15): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@48ad0abe]; rollback [true]
[2017-10-14 14:08:51,275]DEBUG  9062[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,276]DEBUG  9063[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 14:08:51,276]DEBUG  9063[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,277]DEBUG  9064[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,277]DEBUG  9064[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 14:08:51,277]DEBUG  9064[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,278]DEBUG  9065[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,278]DEBUG  9065[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 14:08:51,278]DEBUG  9065[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,278]DEBUG  9065[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,278]DEBUG  9065[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 14:08:51,279]DEBUG  9066[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,279]DEBUG  9066[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,279]DEBUG  9066[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 14:08:51,279]DEBUG  9066[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,279]DEBUG  9066[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,279]DEBUG  9066[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 14:08:51,280]DEBUG  9067[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,280]DEBUG  9067[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,280]DEBUG  9067[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 14:08:51,280]DEBUG  9067[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,280]DEBUG  9067[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,280]DEBUG  9067[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 14:08:51,281]DEBUG  9068[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,281]DEBUG  9068[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,281]DEBUG  9068[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 14:08:51,281]DEBUG  9068[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,281]DEBUG  9068[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:51,281]DEBUG  9068[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,281]DEBUG  9068[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName) values (?)
[2017-10-14 14:08:51,282]DEBUG  9069[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 15
[2017-10-14 14:08:51,282]DEBUG  9069[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,282]DEBUG  9069[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:51,282]DEBUG  9069[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,282]DEBUG  9069[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 14:08:51,283]DEBUG  9070[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 87
[2017-10-14 14:08:51,283]DEBUG  9070[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,283]DEBUG  9070[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:51,283]DEBUG  9070[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,283]DEBUG  9070[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Users (IsUserActive, Balance, CustomerTypeRef, Email, FirstName, LastName, Login, Password, RegionRef, RoleRef) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:51,284]DEBUG  9071[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 15
[2017-10-14 14:08:51,284]DEBUG  9071[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,284]DEBUG  9071[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:51,284]DEBUG  9071[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,284]DEBUG  9071[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:51,285]DEBUG  9072[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 44
[2017-10-14 14:08:51,285]DEBUG  9072[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,285]DEBUG  9072[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:51,285]DEBUG  9072[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,285]DEBUG  9072[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:51,286]DEBUG  9073[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 45
[2017-10-14 14:08:51,286]DEBUG  9073[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,286]DEBUG  9073[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:51,286]DEBUG  9073[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,287]DEBUG  9074[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:51,287]DEBUG  9074[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 46
[2017-10-14 14:08:51,287]DEBUG  9074[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,287]DEBUG  9074[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:51,288]DEBUG  9075[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:51,288]DEBUG  9075[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:51,288]DEBUG  9075[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:51,288]DEBUG  9075[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:51,288]DEBUG  9075[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=15, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#87, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:51,288]DEBUG  9075[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#15, id=44, orderDate=Sat Oct 14 14:08:51 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:51 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#15, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#15, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:51,288]DEBUG  9075[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=15, orderStatusName=Pending}
[2017-10-14 14:08:51,289]DEBUG  9076[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#15, id=45, orderDate=Sat Oct 14 14:08:51 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:51 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#15, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#15, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:51,289]DEBUG  9076[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#15, id=46, orderDate=Sat Oct 14 14:08:51 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:51 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#15, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#15, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:51,289]DEBUG  9076[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=87, roleName=Administrator}
[2017-10-14 14:08:51,289]DEBUG  9076[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,289]DEBUG  9076[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 14:08:51,289]DEBUG  9076[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,289]DEBUG  9076[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:51,289]DEBUG  9076[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:51,290]DEBUG  9077[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:51,290]DEBUG  9077[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:51,290]DEBUG  9077[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:51,290]DEBUG  9077[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=15, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#87, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:51,290]DEBUG  9077[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#15, id=44, orderDate=Sat Oct 14 14:08:51 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:51 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#15, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#15, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:51,290]DEBUG  9077[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=15, orderStatusName=Pending}
[2017-10-14 14:08:51,290]DEBUG  9077[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#15, id=45, orderDate=Sat Oct 14 14:08:51 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:51 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#15, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#15, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:51,291]DEBUG  9078[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#15, id=46, orderDate=Sat Oct 14 14:08:51 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:51 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#15, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#15, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:51,291]DEBUG  9078[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=87, roleName=Administrator}
[2017-10-14 14:08:51,291]DEBUG  9078[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,291]DEBUG  9078[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 14:08:51,291]DEBUG  9078[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,291]DEBUG  9078[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:51,291]DEBUG  9078[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:51,292]DEBUG  9079[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:51,292]DEBUG  9079[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:51,292]DEBUG  9079[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:51,292]DEBUG  9079[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=15, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#87, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:51,292]DEBUG  9079[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#15, id=44, orderDate=Sat Oct 14 14:08:51 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:51 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#15, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#15, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:51,292]DEBUG  9079[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=15, orderStatusName=Pending}
[2017-10-14 14:08:51,292]DEBUG  9079[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#15, id=45, orderDate=Sat Oct 14 14:08:51 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:51 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#15, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#15, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:51,292]DEBUG  9079[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#15, id=46, orderDate=Sat Oct 14 14:08:51 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:51 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#15, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#15, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:51,293]DEBUG  9080[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=87, roleName=Administrator}
[2017-10-14 14:08:51,293]DEBUG  9080[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,293]DEBUG  9080[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 14:08:51,293]DEBUG  9080[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,293]DEBUG  9080[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:51,293]DEBUG  9080[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:51,294]DEBUG  9081[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:51,294]DEBUG  9081[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:51,294]DEBUG  9081[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:51,294]DEBUG  9081[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=15, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#87, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:51,294]DEBUG  9081[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#15, id=44, orderDate=Sat Oct 14 14:08:51 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:51 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#15, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#15, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:51,294]DEBUG  9081[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=15, orderStatusName=Pending}
[2017-10-14 14:08:51,294]DEBUG  9081[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#15, id=45, orderDate=Sat Oct 14 14:08:51 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:51 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#15, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#15, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:51,294]DEBUG  9081[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#15, id=46, orderDate=Sat Oct 14 14:08:51 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:51 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#15, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#15, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:51,294]DEBUG  9081[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=87, roleName=Administrator}
[2017-10-14 14:08:51,295]DEBUG  9082[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,295]DEBUG  9082[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 14:08:51,295]DEBUG  9082[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,295]DEBUG  9082[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:51,295]DEBUG  9082[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:51,296]DEBUG  9083[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:51,296]DEBUG  9083[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:51,296]DEBUG  9083[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:51,296]DEBUG  9083[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=15, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#87, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:51,296]DEBUG  9083[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#15, id=44, orderDate=Sat Oct 14 14:08:51 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:51 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#15, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#15, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:51,296]DEBUG  9083[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=15, orderStatusName=Pending}
[2017-10-14 14:08:51,296]DEBUG  9083[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#15, id=45, orderDate=Sat Oct 14 14:08:51 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:51 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#15, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#15, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:51,296]DEBUG  9083[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#15, id=46, orderDate=Sat Oct 14 14:08:51 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:51 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#15, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#15, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:51,296]DEBUG  9083[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=87, roleName=Administrator}
[2017-10-14 14:08:51,297]DEBUG  9084[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,297]DEBUG  9084[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 14:08:51,297]DEBUG  9084[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,297]DEBUG  9084[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:51,297]DEBUG  9084[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:51,297]DEBUG  9084[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:51,298]DEBUG  9085[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:51,298]DEBUG  9085[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:51,298]DEBUG  9085[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=15, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#87, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:51,298]DEBUG  9085[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#15, id=44, orderDate=Sat Oct 14 14:08:51 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:51 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#15, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#15, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:51,298]DEBUG  9085[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=15, orderStatusName=Pending}
[2017-10-14 14:08:51,298]DEBUG  9085[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#15, id=45, orderDate=Sat Oct 14 14:08:51 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:51 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#15, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#15, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:51,298]DEBUG  9085[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#15, id=46, orderDate=Sat Oct 14 14:08:51 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:51 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#15, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#15, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:51,298]DEBUG  9085[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=87, roleName=Administrator}
[2017-10-14 14:08:51,299]DEBUG  9086[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,299]DEBUG  9086[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 14:08:51,299]DEBUG  9086[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,299]DEBUG  9086[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:51,299]DEBUG  9086[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:51,299]DEBUG  9086[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:51,300]DEBUG  9087[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:51,300]DEBUG  9087[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:51,300]DEBUG  9087[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=15, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#87, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:51,300]DEBUG  9087[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#15, id=44, orderDate=Sat Oct 14 14:08:51 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:51 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#15, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#15, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:51,300]DEBUG  9087[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=15, orderStatusName=Pending}
[2017-10-14 14:08:51,300]DEBUG  9087[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#15, id=45, orderDate=Sat Oct 14 14:08:51 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:51 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#15, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#15, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:51,300]DEBUG  9087[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#15, id=46, orderDate=Sat Oct 14 14:08:51 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:51 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#15, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#15, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:51,300]DEBUG  9087[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=87, roleName=Administrator}
[2017-10-14 14:08:51,300]DEBUG  9087[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,301]DEBUG  9088[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 14:08:51,301]DEBUG  9088[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,301]DEBUG  9088[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:51,301]DEBUG  9088[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:51,301]DEBUG  9088[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:51,301]DEBUG  9088[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:51,302]DEBUG  9089[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:51,302]DEBUG  9089[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=15, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#87, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:51,302]DEBUG  9089[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#15, id=44, orderDate=Sat Oct 14 14:08:51 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:51 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#15, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#15, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:51,302]DEBUG  9089[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=15, orderStatusName=Pending}
[2017-10-14 14:08:51,302]DEBUG  9089[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#15, id=45, orderDate=Sat Oct 14 14:08:51 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:51 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#15, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#15, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:51,302]DEBUG  9089[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#15, id=46, orderDate=Sat Oct 14 14:08:51 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:51 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#15, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#15, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:51,302]DEBUG  9089[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=87, roleName=Administrator}
[2017-10-14 14:08:51,302]DEBUG  9089[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,302]DEBUG  9089[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 14:08:51,303]DEBUG  9090[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,303]DEBUG  9090[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:51,303]DEBUG  9090[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:51,303]DEBUG  9090[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:51,303]DEBUG  9090[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:51,303]DEBUG  9090[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:51,304]DEBUG  9091[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=15, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#87, active=true, login=test, firstName=test, password=test}
[2017-10-14 14:08:51,304]DEBUG  9091[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#15, id=44, orderDate=Sat Oct 14 14:08:51 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:51 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#15, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#15, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:51,304]DEBUG  9091[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=15, orderStatusName=Pending}
[2017-10-14 14:08:51,304]DEBUG  9091[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#15, id=45, orderDate=Sat Oct 14 14:08:51 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:51 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#15, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#15, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:51,304]DEBUG  9091[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#15, id=46, orderDate=Sat Oct 14 14:08:51 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 14:08:51 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#15, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#15, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 14:08:51,304]DEBUG  9091[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=87, roleName=Administrator}
[2017-10-14 14:08:51,304]DEBUG  9091[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,304]DEBUG  9091[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 14:08:51,305]DEBUG  9092[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,305]DEBUG  9092[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@33721fb4 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@173b5d4c, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2017-10-14 14:08:51,305]DEBUG  9092[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 14:08:51,305]DEBUG  9092[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@108e74ea]
[2017-10-14 14:08:51,305]DEBUG  9092[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 14:08:51,353]DEBUG  9140[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 14:08:51,354]DEBUG  9141[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:51,354]DEBUG  9141[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@108e74ea] after transaction
[2017-10-14 14:08:51,354]DEBUG  9141[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 14:08:51,354]DEBUG  9141[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 14:08:51,354]DEBUG  9141[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:51,354] INFO  9141[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@33721fb4 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@173b5d4c, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2017-10-14 14:08:51,355]DEBUG  9142[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@33721fb4 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@173b5d4c, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 14:08:51,355]DEBUG  9142[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestClass(DirtiesContextTestExecutionListener.java:113) - After test class: context [[TestContext@33721fb4 testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = [null], testMethod = [null], testException = [null]]], dirtiesContext [false].
[2017-10-14 14:08:51,356]DEBUG  9143[main] - org.springframework.test.context.junit4.SpringJUnit4ClassRunner.<init>(SpringJUnit4ClassRunner.java:106) - SpringJUnit4ClassRunner constructor called with [class com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase].
[2017-10-14 14:08:51,356] INFO  9143[main] - org.springframework.test.context.TestContextManager.retrieveTestExecutionListeners(TestContextManager.java:185) - @TestExecutionListeners is not present for class [class com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase]: using defaults.
[2017-10-14 14:08:51,356]DEBUG  9143[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase]
[2017-10-14 14:08:51,356]DEBUG  9143[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase]
[2017-10-14 14:08:51,356]DEBUG  9143[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase]
[2017-10-14 14:08:51,357]DEBUG  9144[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase]
[2017-10-14 14:08:51,357]DEBUG  9144[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase]
[2017-10-14 14:08:51,357]DEBUG  9144[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase]
[2017-10-14 14:08:51,357]DEBUG  9144[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase]
[2017-10-14 14:08:51,357]DEBUG  9144[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase]
[2017-10-14 14:08:51,357]DEBUG  9144[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@6bbc32ed testClass = CleanUpDBTestCase, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase@10b39cdd, testMethod = [null], testException = [null]]].
[2017-10-14 14:08:51,361]DEBUG  9148[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 14:08:51,362]DEBUG  9149[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 14:08:51,362]DEBUG  9149[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 14:08:51,362]DEBUG  9149[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 14:08:51,362]DEBUG  9149[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 14:08:51,363]DEBUG  9150[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 14:08:51,363]DEBUG  9150[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 14:08:51,363]DEBUG  9150[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 14:08:51,363]DEBUG  9150[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 14:08:51,363]DEBUG  9150[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase]: AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 14:08:51,364]DEBUG  9151[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 14:08:51,364]DEBUG  9151[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 14:08:51,365]DEBUG  9152[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase' to bean named 'customerTypeDao'
[2017-10-14 14:08:51,365]DEBUG  9152[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 14:08:51,365]DEBUG  9152[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 14:08:51,366]DEBUG  9153[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase' to bean named 'dimensionDao'
[2017-10-14 14:08:51,366]DEBUG  9153[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 14:08:51,366]DEBUG  9153[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 14:08:51,366]DEBUG  9153[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase' to bean named 'orderDao'
[2017-10-14 14:08:51,367]DEBUG  9154[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 14:08:51,367]DEBUG  9154[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 14:08:51,367]DEBUG  9154[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase' to bean named 'orderItemDao'
[2017-10-14 14:08:51,367]DEBUG  9154[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 14:08:51,367]DEBUG  9154[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 14:08:51,367]DEBUG  9154[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase' to bean named 'orderStatusDao'
[2017-10-14 14:08:51,368]DEBUG  9155[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 14:08:51,368]DEBUG  9155[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 14:08:51,368]DEBUG  9155[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase' to bean named 'productDao'
[2017-10-14 14:08:51,368]DEBUG  9155[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 14:08:51,368]DEBUG  9155[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 14:08:51,368]DEBUG  9155[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase' to bean named 'regionDao'
[2017-10-14 14:08:51,368]DEBUG  9155[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 14:08:51,369]DEBUG  9156[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 14:08:51,369]DEBUG  9156[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase' to bean named 'roleDao'
[2017-10-14 14:08:51,369]DEBUG  9156[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 14:08:51,369]DEBUG  9156[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 14:08:51,369]DEBUG  9156[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase' to bean named 'userDao'
[2017-10-14 14:08:51,369]DEBUG  9156[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 14:08:51,370]DEBUG  9157[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 14:08:51,370]DEBUG  9157[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase' to bean named 'sessionFactory'
[2017-10-14 14:08:51,370]DEBUG  9157[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 14:08:51,370]DEBUG  9157[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testContextFile' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:51,370]DEBUG  9157[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase' with 0 common interceptors and 1 specific interceptors
[2017-10-14 14:08:51,370]DEBUG  9157[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase@10b39cdd]
[2017-10-14 14:08:51,371]DEBUG  9158[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanDB()
[2017-10-14 14:08:51,371]DEBUG  9158[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanCustomerType()
[2017-10-14 14:08:51,371]DEBUG  9158[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.testContextFile()
[2017-10-14 14:08:51,372]DEBUG  9159[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanUser()
[2017-10-14 14:08:51,372]DEBUG  9159[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanRole()
[2017-10-14 14:08:51,372]DEBUG  9159[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanRegion()
[2017-10-14 14:08:51,372]DEBUG  9159[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanProduct()
[2017-10-14 14:08:51,372]DEBUG  9159[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrderStatus()
[2017-10-14 14:08:51,372]DEBUG  9159[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrderItem()
[2017-10-14 14:08:51,372]DEBUG  9159[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrder()
[2017-10-14 14:08:51,372]DEBUG  9159[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanDimension()
[2017-10-14 14:08:51,372]DEBUG  9159[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:749) - Found finalize() method - using NO_OVERRIDE
[2017-10-14 14:08:51,373]DEBUG  9160[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:761) - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
[2017-10-14 14:08:51,373]DEBUG  9160[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
[2017-10-14 14:08:51,373]DEBUG  9160[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:766) - Found 'hashCode' method: public native int java.lang.Object.hashCode()
[2017-10-14 14:08:51,373]DEBUG  9160[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
[2017-10-14 14:08:51,373]DEBUG  9160[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
[2017-10-14 14:08:51,373]DEBUG  9160[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
[2017-10-14 14:08:51,373]DEBUG  9160[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2017-10-14 14:08:51,373]DEBUG  9160[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2017-10-14 14:08:51,373]DEBUG  9160[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
[2017-10-14 14:08:51,374]DEBUG  9161[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
[2017-10-14 14:08:51,374]DEBUG  9161[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
[2017-10-14 14:08:51,374]DEBUG  9161[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
[2017-10-14 14:08:51,374]DEBUG  9161[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
[2017-10-14 14:08:51,374]DEBUG  9161[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
[2017-10-14 14:08:51,374]DEBUG  9161[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
[2017-10-14 14:08:51,374]DEBUG  9161[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
[2017-10-14 14:08:51,374]DEBUG  9161[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
[2017-10-14 14:08:51,376]DEBUG  9163[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
[2017-10-14 14:08:51,376]DEBUG  9163[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
[2017-10-14 14:08:51,376]DEBUG  9163[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
[2017-10-14 14:08:51,377]DEBUG  9164[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
[2017-10-14 14:08:51,377]DEBUG  9164[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
[2017-10-14 14:08:51,377]DEBUG  9164[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2017-10-14 14:08:51,377]DEBUG  9164[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
[2017-10-14 14:08:51,377]DEBUG  9164[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
[2017-10-14 14:08:51,377]DEBUG  9164[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
[2017-10-14 14:08:51,377]DEBUG  9164[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
[2017-10-14 14:08:51,395]DEBUG  9182[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testContextFile' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:51,395]DEBUG  9182[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@6bbc32ed testClass = CleanUpDBTestCase, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase@10b39cdd, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2017-10-14 14:08:51,395]DEBUG  9182[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.retrieveConfigurationAttributes(TransactionalTestExecutionListener.java:466) - Retrieved @TransactionConfiguration [@org.springframework.test.context.transaction.TransactionConfiguration(transactionManager=transactionManager, defaultRollback=true)] for test class [class com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase]
[2017-10-14 14:08:51,395]DEBUG  9182[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.retrieveConfigurationAttributes(TransactionalTestExecutionListener.java:483) - Retrieved TransactionConfigurationAttributes [[TransactionConfigurationAttributes@6fcca643 transactionManagerName = 'transactionManager', defaultRollback = true]] for class [class com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase]
[2017-10-14 14:08:51,395]DEBUG  9182[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 14:08:51,396]DEBUG  9183[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testContextFile]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:51,396]DEBUG  9183[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15079793313
[2017-10-14 14:08:51,396]DEBUG  9183[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@6b2977f9] for Hibernate transaction
[2017-10-14 14:08:51,396]DEBUG  9183[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@6b2977f9]
[2017-10-14 14:08:51,396]DEBUG  9183[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 14:08:51,396]DEBUG  9183[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 14:08:51,396]DEBUG  9183[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 14:08:51,396]DEBUG  9183[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@6bbc32ed testClass = CleanUpDBTestCase, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase@10b39cdd, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2017-10-14 14:08:51,396] INFO  9183[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (1): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@48ad0abe]; rollback [true]
[2017-10-14 14:08:51,396]DEBUG  9183[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@6bbc32ed testClass = CleanUpDBTestCase, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase@10b39cdd, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2017-10-14 14:08:51,396]DEBUG  9183[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 14:08:51,397]DEBUG  9184[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@6b2977f9]
[2017-10-14 14:08:51,397]DEBUG  9184[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 14:08:51,407]DEBUG  9194[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 14:08:51,408]DEBUG  9195[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:51,408]DEBUG  9195[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@6b2977f9] after transaction
[2017-10-14 14:08:51,408]DEBUG  9195[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 14:08:51,408]DEBUG  9195[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 14:08:51,408]DEBUG  9195[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:51,408] INFO  9195[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@6bbc32ed testClass = CleanUpDBTestCase, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase@10b39cdd, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2017-10-14 14:08:51,408]DEBUG  9195[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@6bbc32ed testClass = CleanUpDBTestCase, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase@10b39cdd, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 14:08:51,409]DEBUG  9196[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestClass(DirtiesContextTestExecutionListener.java:113) - After test class: context [[TestContext@6bbc32ed testClass = CleanUpDBTestCase, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = [null], testMethod = [null], testException = [null]]], dirtiesContext [false].
[2017-10-14 14:08:51,410]DEBUG  9197[main] - org.springframework.test.context.junit4.SpringJUnit4ClassRunner.<init>(SpringJUnit4ClassRunner.java:106) - SpringJUnit4ClassRunner constructor called with [class com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest].
[2017-10-14 14:08:51,410] INFO  9197[main] - org.springframework.test.context.TestContextManager.retrieveTestExecutionListeners(TestContextManager.java:185) - @TestExecutionListeners is not present for class [class com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]: using defaults.
[2017-10-14 14:08:51,410]DEBUG  9197[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2017-10-14 14:08:51,410]DEBUG  9197[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2017-10-14 14:08:51,411]DEBUG  9198[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2017-10-14 14:08:51,411]DEBUG  9198[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2017-10-14 14:08:51,411]DEBUG  9198[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2017-10-14 14:08:51,411]DEBUG  9198[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2017-10-14 14:08:51,412]DEBUG  9199[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2017-10-14 14:08:51,412]DEBUG  9199[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2017-10-14 14:08:51,412]DEBUG  9199[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@74c63c6d testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@2a95400, testMethod = [null], testException = [null]]].
[2017-10-14 14:08:51,416]DEBUG  9203[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 14:08:51,417]DEBUG  9204[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 14:08:51,417]DEBUG  9204[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 14:08:51,417]DEBUG  9204[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 14:08:51,417]DEBUG  9204[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 14:08:51,417]DEBUG  9204[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 14:08:51,417]DEBUG  9204[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 14:08:51,417]DEBUG  9204[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 14:08:51,417]DEBUG  9204[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 14:08:51,417]DEBUG  9204[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]: AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 14:08:51,417]DEBUG  9204[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 14:08:51,418]DEBUG  9205[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 14:08:51,418]DEBUG  9205[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest' to bean named 'customerTypeDao'
[2017-10-14 14:08:51,418]DEBUG  9205[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 14:08:51,418]DEBUG  9205[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 14:08:51,418]DEBUG  9205[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest' to bean named 'dimensionDao'
[2017-10-14 14:08:51,418]DEBUG  9205[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 14:08:51,419]DEBUG  9206[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 14:08:51,419]DEBUG  9206[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest' to bean named 'orderDao'
[2017-10-14 14:08:51,419]DEBUG  9206[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 14:08:51,419]DEBUG  9206[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 14:08:51,419]DEBUG  9206[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest' to bean named 'orderItemDao'
[2017-10-14 14:08:51,419]DEBUG  9206[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 14:08:51,420]DEBUG  9207[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 14:08:51,420]DEBUG  9207[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest' to bean named 'orderStatusDao'
[2017-10-14 14:08:51,420]DEBUG  9207[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 14:08:51,420]DEBUG  9207[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 14:08:51,420]DEBUG  9207[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest' to bean named 'productDao'
[2017-10-14 14:08:51,420]DEBUG  9207[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 14:08:51,420]DEBUG  9207[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 14:08:51,421]DEBUG  9208[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest' to bean named 'regionDao'
[2017-10-14 14:08:51,421]DEBUG  9208[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 14:08:51,421]DEBUG  9208[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 14:08:51,421]DEBUG  9208[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest' to bean named 'roleDao'
[2017-10-14 14:08:51,421]DEBUG  9208[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 14:08:51,421]DEBUG  9208[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 14:08:51,421]DEBUG  9208[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest' to bean named 'userDao'
[2017-10-14 14:08:51,422]DEBUG  9209[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 14:08:51,422]DEBUG  9209[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 14:08:51,422]DEBUG  9209[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest' to bean named 'sessionFactory'
[2017-10-14 14:08:51,422]DEBUG  9209[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 14:08:51,422]DEBUG  9209[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindAll' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:51,423]DEBUG  9210[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 14:08:51,423]DEBUG  9210[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@2a95400]
[2017-10-14 14:08:51,423]DEBUG  9210[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest.testFindAll()
[2017-10-14 14:08:51,424]DEBUG  9211[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'setUp' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:51,424]DEBUG  9211[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest.setUp()
[2017-10-14 14:08:51,424]DEBUG  9211[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'tearDown' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:51,424]DEBUG  9211[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest.tearDown() throws java.lang.Exception
[2017-10-14 14:08:51,424]DEBUG  9211[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindAllWithSorting' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:51,424]DEBUG  9211[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest.testFindAllWithSorting()
[2017-10-14 14:08:51,425]DEBUG  9212[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testRowCountWithCriterions' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:51,425]DEBUG  9212[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest.testRowCountWithCriterions()
[2017-10-14 14:08:51,425]DEBUG  9212[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testPaging' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:51,425]DEBUG  9212[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest.testPaging()
[2017-10-14 14:08:51,425]DEBUG  9212[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByOrder' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:51,425]DEBUG  9212[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest.testFindByOrder()
[2017-10-14 14:08:51,425]DEBUG  9212[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindById' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:51,426]DEBUG  9213[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest.testFindById()
[2017-10-14 14:08:51,426]DEBUG  9213[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanDB()
[2017-10-14 14:08:51,426]DEBUG  9213[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanCustomerType()
[2017-10-14 14:08:51,426]DEBUG  9213[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testContextFile' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:51,426]DEBUG  9213[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.testContextFile()
[2017-10-14 14:08:51,426]DEBUG  9213[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanUser()
[2017-10-14 14:08:51,426]DEBUG  9213[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanRole()
[2017-10-14 14:08:51,427]DEBUG  9214[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanRegion()
[2017-10-14 14:08:51,427]DEBUG  9214[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanProduct()
[2017-10-14 14:08:51,427]DEBUG  9214[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrderStatus()
[2017-10-14 14:08:51,427]DEBUG  9214[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrderItem()
[2017-10-14 14:08:51,427]DEBUG  9214[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrder()
[2017-10-14 14:08:51,427]DEBUG  9214[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanDimension()
[2017-10-14 14:08:51,427]DEBUG  9214[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:749) - Found finalize() method - using NO_OVERRIDE
[2017-10-14 14:08:51,427]DEBUG  9214[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:761) - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
[2017-10-14 14:08:51,427]DEBUG  9214[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
[2017-10-14 14:08:51,428]DEBUG  9215[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:766) - Found 'hashCode' method: public native int java.lang.Object.hashCode()
[2017-10-14 14:08:51,428]DEBUG  9215[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
[2017-10-14 14:08:51,428]DEBUG  9215[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
[2017-10-14 14:08:51,428]DEBUG  9215[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
[2017-10-14 14:08:51,428]DEBUG  9215[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2017-10-14 14:08:51,428]DEBUG  9215[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2017-10-14 14:08:51,428]DEBUG  9215[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
[2017-10-14 14:08:51,428]DEBUG  9215[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
[2017-10-14 14:08:51,428]DEBUG  9215[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
[2017-10-14 14:08:51,428]DEBUG  9215[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
[2017-10-14 14:08:51,429]DEBUG  9216[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
[2017-10-14 14:08:51,429]DEBUG  9216[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
[2017-10-14 14:08:51,429]DEBUG  9216[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
[2017-10-14 14:08:51,429]DEBUG  9216[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
[2017-10-14 14:08:51,429]DEBUG  9216[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
[2017-10-14 14:08:51,429]DEBUG  9216[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
[2017-10-14 14:08:51,429]DEBUG  9216[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
[2017-10-14 14:08:51,429]DEBUG  9216[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
[2017-10-14 14:08:51,429]DEBUG  9216[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
[2017-10-14 14:08:51,429]DEBUG  9216[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
[2017-10-14 14:08:51,430]DEBUG  9217[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2017-10-14 14:08:51,430]DEBUG  9217[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
[2017-10-14 14:08:51,430]DEBUG  9217[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
[2017-10-14 14:08:51,430]DEBUG  9217[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
[2017-10-14 14:08:51,430]DEBUG  9217[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
[2017-10-14 14:08:51,440]DEBUG  9227[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindAll' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:51,440]DEBUG  9227[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@74c63c6d testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@2a95400, testMethod = testFindAll@OrderItemDaoTest, testException = [null]]]
[2017-10-14 14:08:51,440]DEBUG  9227[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.retrieveConfigurationAttributes(TransactionalTestExecutionListener.java:466) - Retrieved @TransactionConfiguration [@org.springframework.test.context.transaction.TransactionConfiguration(transactionManager=transactionManager, defaultRollback=true)] for test class [class com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2017-10-14 14:08:51,441]DEBUG  9228[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.retrieveConfigurationAttributes(TransactionalTestExecutionListener.java:483) - Retrieved TransactionConfigurationAttributes [[TransactionConfigurationAttributes@f3d02a6 transactionManagerName = 'transactionManager', defaultRollback = true]] for class [class com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2017-10-14 14:08:51,441]DEBUG  9228[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 14:08:51,441]DEBUG  9228[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:51,441]DEBUG  9228[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15079793314
[2017-10-14 14:08:51,441]DEBUG  9228[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@7bc456e7] for Hibernate transaction
[2017-10-14 14:08:51,441]DEBUG  9228[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7bc456e7]
[2017-10-14 14:08:51,442]DEBUG  9229[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 14:08:51,442]DEBUG  9229[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 14:08:51,442]DEBUG  9229[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 14:08:51,442]DEBUG  9229[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@74c63c6d testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@2a95400, testMethod = testFindAll@OrderItemDaoTest, testException = [null]]]
[2017-10-14 14:08:51,442] INFO  9229[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (1): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@48ad0abe]; rollback [true]
[2017-10-14 14:08:51,442]DEBUG  9229[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,442]DEBUG  9229[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 14:08:51,444]DEBUG  9231[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,444]DEBUG  9231[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,444]DEBUG  9231[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 14:08:51,444]DEBUG  9231[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,444]DEBUG  9231[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,444]DEBUG  9231[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 14:08:51,445]DEBUG  9232[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,445]DEBUG  9232[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,445]DEBUG  9232[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 14:08:51,445]DEBUG  9232[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,445]DEBUG  9232[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,446]DEBUG  9233[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 14:08:51,446]DEBUG  9233[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,446]DEBUG  9233[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,446]DEBUG  9233[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 14:08:51,447]DEBUG  9234[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,447]DEBUG  9234[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,447]DEBUG  9234[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 14:08:51,447]DEBUG  9234[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,447]DEBUG  9234[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,448]DEBUG  9235[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 14:08:51,451]DEBUG  9238[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,452]DEBUG  9239[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,452]DEBUG  9239[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 14:08:51,452]DEBUG  9239[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,452]DEBUG  9239[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:51,453]DEBUG  9240[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,453]DEBUG  9240[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:51,453]DEBUG  9240[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 47
[2017-10-14 14:08:51,453]DEBUG  9240[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,454]DEBUG  9241[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:51,454]DEBUG  9241[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,454]DEBUG  9241[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:51,454]DEBUG  9241[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 48
[2017-10-14 14:08:51,455]DEBUG  9242[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,455]DEBUG  9242[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:51,456]DEBUG  9243[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,456]DEBUG  9243[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 14:08:51,457]DEBUG  9244[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 1
[2017-10-14 14:08:51,457]DEBUG  9244[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,457]DEBUG  9244[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:51,458]DEBUG  9245[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,458]DEBUG  9245[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Dimensions (DimensionName, NumberOfProducts) values (?, ?)
[2017-10-14 14:08:51,459]DEBUG  9246[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 1
[2017-10-14 14:08:51,459]DEBUG  9246[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,459]DEBUG  9246[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:51,461]DEBUG  9248[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,461]DEBUG  9248[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderItems (Cost, DimensionRef, ItemPrice, OrderRef, ProductRef, Quantity) values (?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:51,461]DEBUG  9248[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 1
[2017-10-14 14:08:51,462]DEBUG  9249[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,462]DEBUG  9249[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:51,462]DEBUG  9249[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,462]DEBUG  9249[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderItems (Cost, DimensionRef, ItemPrice, OrderRef, ProductRef, Quantity) values (?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:51,463]DEBUG  9250[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 2
[2017-10-14 14:08:51,463]DEBUG  9250[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,464]DEBUG  9251[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:51,464]DEBUG  9251[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:51,464]DEBUG  9251[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:51,464]DEBUG  9251[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:51,464]DEBUG  9251[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:51,464]DEBUG  9251[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#1, id=1, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#1, order=com.softserveinc.edu.oms.domain.entities.Order#47, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 14:08:51,465]DEBUG  9252[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#1, id=2, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#1, order=com.softserveinc.edu.oms.domain.entities.Order#48, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 14:08:51,465]DEBUG  9252[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=1, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 14:08:51,465]DEBUG  9252[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=1, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 14:08:51,465]DEBUG  9252[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=47, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,465]DEBUG  9252[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=48, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,465]DEBUG  9252[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,465]DEBUG  9252[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID8_6_, this_.Cost as Cost8_6_, this_.DimensionRef as Dimensio5_8_6_, this_.ItemPrice as ItemPrice8_6_, this_.OrderRef as OrderRef8_6_, this_.ProductRef as ProductRef8_6_, this_.Quantity as Quantity8_6_, dimension2_.ID as ID7_0_, dimension2_.DimensionName as Dimensio2_7_0_, dimension2_.NumberOfProducts as NumberOf3_7_0_, order3_.ID as ID5_1_, order3_.Assigne as Assigne5_1_, order3_.Customer as Customer5_1_, order3_.DeliveryDate as Delivery2_5_1_, order3_.IsGift as IsGift5_1_, order3_.MaxDiscount as MaxDisco4_5_1_, order3_.OrderDate as OrderDate5_1_, order3_.OrderName as OrderName5_1_, order3_.OrderNumber as OrderNum7_5_1_, order3_.OrderStatusRef as OrderSt12_5_1_, order3_.PreferableDeliveryDate as Preferab8_5_1_, order3_.TotalPrice as TotalPrice5_1_, user4_.ID as ID3_2_, user4_.IsUserActive as IsUserAc2_3_2_, user4_.Balance as Balance3_2_, user4_.CustomerTypeRef as Customer9_3_2_, user4_.Email as Email3_2_, user4_.FirstName as FirstName3_2_, user4_.LastName as LastName3_2_, user4_.Login as Login3_2_, user4_.Password as Password3_2_, user4_.RegionRef as RegionRef3_2_, user4_.RoleRef as RoleRef3_2_, user5_.ID as ID3_3_, user5_.IsUserActive as IsUserAc2_3_3_, user5_.Balance as Balance3_3_, user5_.CustomerTypeRef as Customer9_3_3_, user5_.Email as Email3_3_, user5_.FirstName as FirstName3_3_, user5_.LastName as LastName3_3_, user5_.Login as Login3_3_, user5_.Password as Password3_3_, user5_.RegionRef as RegionRef3_3_, user5_.RoleRef as RoleRef3_3_, orderstatu6_.ID as ID4_4_, orderstatu6_.OrederStatusName as OrederSt2_4_4_, product7_.ID as ID6_5_, product7_.IsProductActive as IsProduc2_6_5_, product7_.ProductDescription as ProductD3_6_5_, product7_.ProductName as ProductN4_6_5_, product7_.ProductPrice as ProductP5_6_5_ from OrderItems this_ left outer join Dimensions dimension2_ on this_.DimensionRef=dimension2_.ID left outer join Orders order3_ on this_.OrderRef=order3_.ID left outer join Users user4_ on order3_.Assigne=user4_.ID left outer join Users user5_ on order3_.Customer=user5_.ID left outer join OrderStatuses orderstatu6_ on order3_.OrderStatusRef=orderstatu6_.ID left outer join Products product7_ on this_.ProductRef=product7_.ID
[2017-10-14 14:08:51,466]DEBUG  9253[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:51,467]DEBUG  9254[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Dimension#1], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#47], null, null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Product#1], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderItem#1]
[2017-10-14 14:08:51,467]DEBUG  9254[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Dimension#1], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#48], null, null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Product#1], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderItem#2]
[2017-10-14 14:08:51,467]DEBUG  9254[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:51,468]DEBUG  9255[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,468]DEBUG  9255[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:51,468]DEBUG  9255[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:51,468]DEBUG  9255[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:51,468]DEBUG  9255[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:51,468]DEBUG  9255[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:51,468]DEBUG  9255[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:51,468]DEBUG  9255[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#1, id=1, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#1, order=com.softserveinc.edu.oms.domain.entities.Order#47, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 14:08:51,469]DEBUG  9256[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#1, id=2, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#1, order=com.softserveinc.edu.oms.domain.entities.Order#48, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 14:08:51,469]DEBUG  9256[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=1, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 14:08:51,469]DEBUG  9256[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=1, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 14:08:51,469]DEBUG  9256[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=47, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,469]DEBUG  9256[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=48, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,469]DEBUG  9256[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,469]DEBUG  9256[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 14:08:51,470]DEBUG  9257[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,470]DEBUG  9257[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:51,470]DEBUG  9257[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:51,470]DEBUG  9257[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:51,470]DEBUG  9257[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:51,470]DEBUG  9257[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:51,470]DEBUG  9257[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#1, id=1, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#1, order=com.softserveinc.edu.oms.domain.entities.Order#47, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 14:08:51,471]DEBUG  9258[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#1, id=2, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#1, order=com.softserveinc.edu.oms.domain.entities.Order#48, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 14:08:51,471]DEBUG  9258[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=1, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 14:08:51,471]DEBUG  9258[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=1, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 14:08:51,471]DEBUG  9258[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=47, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,471]DEBUG  9258[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=48, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,471]DEBUG  9258[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,471]DEBUG  9258[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 14:08:51,471]DEBUG  9258[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,472]DEBUG  9259[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:51,472]DEBUG  9259[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:51,473]DEBUG  9260[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:51,473]DEBUG  9260[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:51,473]DEBUG  9260[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:51,473]DEBUG  9260[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#1, id=1, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#1, order=com.softserveinc.edu.oms.domain.entities.Order#47, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 14:08:51,474]DEBUG  9261[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#1, id=2, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#1, order=com.softserveinc.edu.oms.domain.entities.Order#48, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 14:08:51,474]DEBUG  9261[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=1, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 14:08:51,474]DEBUG  9261[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=1, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 14:08:51,474]DEBUG  9261[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=47, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,474]DEBUG  9261[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=48, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,474]DEBUG  9261[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,474]DEBUG  9261[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 14:08:51,483]DEBUG  9270[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,484]DEBUG  9271[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:51,484]DEBUG  9271[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:51,484]DEBUG  9271[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:51,484]DEBUG  9271[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:51,484]DEBUG  9271[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:51,484]DEBUG  9271[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#1, id=1, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#1, order=com.softserveinc.edu.oms.domain.entities.Order#47, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 14:08:51,485]DEBUG  9272[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#1, id=2, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#1, order=com.softserveinc.edu.oms.domain.entities.Order#48, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 14:08:51,485]DEBUG  9272[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=1, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 14:08:51,485]DEBUG  9272[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=1, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 14:08:51,485]DEBUG  9272[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=47, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,485]DEBUG  9272[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=48, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,485]DEBUG  9272[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,485]DEBUG  9272[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 14:08:51,486]DEBUG  9273[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,486]DEBUG  9273[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:51,486]DEBUG  9273[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:51,486]DEBUG  9273[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:51,486]DEBUG  9273[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:51,486]DEBUG  9273[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:51,486]DEBUG  9273[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#1, id=1, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#1, order=com.softserveinc.edu.oms.domain.entities.Order#47, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 14:08:51,487]DEBUG  9274[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#1, id=2, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#1, order=com.softserveinc.edu.oms.domain.entities.Order#48, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 14:08:51,487]DEBUG  9274[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=1, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 14:08:51,487]DEBUG  9274[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=1, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 14:08:51,487]DEBUG  9274[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=47, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,487]DEBUG  9274[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=48, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,487]DEBUG  9274[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,487]DEBUG  9274[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 14:08:51,487]DEBUG  9274[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,488]DEBUG  9275[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:51,488]DEBUG  9275[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:51,488]DEBUG  9275[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:51,488]DEBUG  9275[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:51,488]DEBUG  9275[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:51,488]DEBUG  9275[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#1, id=1, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#1, order=com.softserveinc.edu.oms.domain.entities.Order#47, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 14:08:51,488]DEBUG  9275[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#1, id=2, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#1, order=com.softserveinc.edu.oms.domain.entities.Order#48, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 14:08:51,488]DEBUG  9275[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=1, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 14:08:51,489]DEBUG  9276[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=1, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 14:08:51,489]DEBUG  9276[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=47, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,489]DEBUG  9276[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=48, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,489]DEBUG  9276[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,489]DEBUG  9276[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 14:08:51,489]DEBUG  9276[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,489]DEBUG  9276[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:51,490]DEBUG  9277[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:51,491]DEBUG  9278[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:51,491]DEBUG  9278[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:51,491]DEBUG  9278[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:51,491]DEBUG  9278[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#1, id=1, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#1, order=com.softserveinc.edu.oms.domain.entities.Order#47, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 14:08:51,491]DEBUG  9278[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#1, id=2, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#1, order=com.softserveinc.edu.oms.domain.entities.Order#48, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 14:08:51,491]DEBUG  9278[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=1, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 14:08:51,491]DEBUG  9278[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=1, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 14:08:51,491]DEBUG  9278[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=47, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,492]DEBUG  9279[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=48, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,492]DEBUG  9279[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,492]DEBUG  9279[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 14:08:51,492]DEBUG  9279[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,492]DEBUG  9279[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:51,492]DEBUG  9279[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:51,492]DEBUG  9279[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:51,493]DEBUG  9280[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:51,493]DEBUG  9280[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:51,493]DEBUG  9280[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#1, id=1, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#1, order=com.softserveinc.edu.oms.domain.entities.Order#47, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 14:08:51,493]DEBUG  9280[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#1, id=2, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#1, order=com.softserveinc.edu.oms.domain.entities.Order#48, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 14:08:51,493]DEBUG  9280[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=1, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 14:08:51,493]DEBUG  9280[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=1, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 14:08:51,493]DEBUG  9280[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=47, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,493]DEBUG  9280[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=48, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,493]DEBUG  9280[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,493]DEBUG  9280[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 14:08:51,494]DEBUG  9281[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,494]DEBUG  9281[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:51,494]DEBUG  9281[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:51,494]DEBUG  9281[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:51,494]DEBUG  9281[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:51,494]DEBUG  9281[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:51,494]DEBUG  9281[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#1, id=1, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#1, order=com.softserveinc.edu.oms.domain.entities.Order#47, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 14:08:51,495]DEBUG  9282[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#1, id=2, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#1, order=com.softserveinc.edu.oms.domain.entities.Order#48, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 14:08:51,495]DEBUG  9282[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=1, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 14:08:51,495]DEBUG  9282[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=1, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 14:08:51,495]DEBUG  9282[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=47, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,495]DEBUG  9282[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=48, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,495]DEBUG  9282[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,495]DEBUG  9282[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 14:08:51,495]DEBUG  9282[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,496]DEBUG  9283[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@74c63c6d testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@2a95400, testMethod = testFindAll@OrderItemDaoTest, testException = [null]]]
[2017-10-14 14:08:51,496]DEBUG  9283[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 14:08:51,496]DEBUG  9283[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7bc456e7]
[2017-10-14 14:08:51,496]DEBUG  9283[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 14:08:51,537]DEBUG  9324[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 14:08:51,537]DEBUG  9324[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:51,537]DEBUG  9324[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@7bc456e7] after transaction
[2017-10-14 14:08:51,538]DEBUG  9325[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 14:08:51,538]DEBUG  9325[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 14:08:51,538]DEBUG  9325[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:51,538] INFO  9325[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@74c63c6d testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@2a95400, testMethod = testFindAll@OrderItemDaoTest, testException = [null]]]
[2017-10-14 14:08:51,539]DEBUG  9326[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@74c63c6d testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@2a95400, testMethod = testFindAll@OrderItemDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 14:08:51,540]DEBUG  9327[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2017-10-14 14:08:51,540]DEBUG  9327[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2017-10-14 14:08:51,540]DEBUG  9327[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@74c63c6d testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@73ac4b64, testMethod = [null], testException = [null]]].
[2017-10-14 14:08:51,540]DEBUG  9327[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 14:08:51,541]DEBUG  9328[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 14:08:51,541]DEBUG  9328[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 14:08:51,541]DEBUG  9328[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 14:08:51,541]DEBUG  9328[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 14:08:51,541]DEBUG  9328[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 14:08:51,542]DEBUG  9329[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 14:08:51,542]DEBUG  9329[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 14:08:51,542]DEBUG  9329[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 14:08:51,542]DEBUG  9329[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 14:08:51,542]DEBUG  9329[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 14:08:51,542]DEBUG  9329[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 14:08:51,543]DEBUG  9330[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 14:08:51,543]DEBUG  9330[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 14:08:51,543]DEBUG  9330[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 14:08:51,543]DEBUG  9330[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 14:08:51,543]DEBUG  9330[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 14:08:51,544]DEBUG  9331[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 14:08:51,544]DEBUG  9331[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 14:08:51,544]DEBUG  9331[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 14:08:51,544]DEBUG  9331[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 14:08:51,545]DEBUG  9332[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 14:08:51,545]DEBUG  9332[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@73ac4b64]
[2017-10-14 14:08:51,546]DEBUG  9333[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindAllWithSorting' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:51,546]DEBUG  9333[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@74c63c6d testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@73ac4b64, testMethod = testFindAllWithSorting@OrderItemDaoTest, testException = [null]]]
[2017-10-14 14:08:51,547]DEBUG  9334[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 14:08:51,547]DEBUG  9334[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindAllWithSorting]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:51,548]DEBUG  9335[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15079793315
[2017-10-14 14:08:51,548]DEBUG  9335[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@53accf06] for Hibernate transaction
[2017-10-14 14:08:51,548]DEBUG  9335[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@53accf06]
[2017-10-14 14:08:51,548]DEBUG  9335[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 14:08:51,549]DEBUG  9336[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 14:08:51,549]DEBUG  9336[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 14:08:51,549]DEBUG  9336[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@74c63c6d testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@73ac4b64, testMethod = testFindAllWithSorting@OrderItemDaoTest, testException = [null]]]
[2017-10-14 14:08:51,549] INFO  9336[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (2): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@48ad0abe]; rollback [true]
[2017-10-14 14:08:51,549]DEBUG  9336[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,550]DEBUG  9337[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 14:08:51,550]DEBUG  9337[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,551]DEBUG  9338[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,551]DEBUG  9338[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 14:08:51,551]DEBUG  9338[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,552]DEBUG  9339[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,552]DEBUG  9339[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 14:08:51,553]DEBUG  9340[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,553]DEBUG  9340[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,553]DEBUG  9340[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 14:08:51,554]DEBUG  9341[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,554]DEBUG  9341[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,554]DEBUG  9341[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 14:08:51,555]DEBUG  9342[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,555]DEBUG  9342[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,555]DEBUG  9342[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 14:08:51,556]DEBUG  9343[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,556]DEBUG  9343[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,556]DEBUG  9343[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 14:08:51,557]DEBUG  9344[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,557]DEBUG  9344[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,557]DEBUG  9344[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 14:08:51,558]DEBUG  9345[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,558]DEBUG  9345[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,558]DEBUG  9345[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 14:08:51,558]DEBUG  9345[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,559]DEBUG  9346[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:51,559]DEBUG  9346[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,559]DEBUG  9346[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:51,559]DEBUG  9346[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 49
[2017-10-14 14:08:51,560]DEBUG  9347[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,560]DEBUG  9347[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:51,560]DEBUG  9347[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,560]DEBUG  9347[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:51,560]DEBUG  9347[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 50
[2017-10-14 14:08:51,561]DEBUG  9348[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,561]DEBUG  9348[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:51,561]DEBUG  9348[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,561]DEBUG  9348[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 14:08:51,561]DEBUG  9348[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 2
[2017-10-14 14:08:51,561]DEBUG  9348[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,562]DEBUG  9349[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:51,562]DEBUG  9349[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,562]DEBUG  9349[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Dimensions (DimensionName, NumberOfProducts) values (?, ?)
[2017-10-14 14:08:51,562]DEBUG  9349[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 2
[2017-10-14 14:08:51,562]DEBUG  9349[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,563]DEBUG  9350[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:51,563]DEBUG  9350[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,563]DEBUG  9350[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderItems (Cost, DimensionRef, ItemPrice, OrderRef, ProductRef, Quantity) values (?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:51,563]DEBUG  9350[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 3
[2017-10-14 14:08:51,563]DEBUG  9350[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,563]DEBUG  9350[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:51,564]DEBUG  9351[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,564]DEBUG  9351[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderItems (Cost, DimensionRef, ItemPrice, OrderRef, ProductRef, Quantity) values (?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:51,564]DEBUG  9351[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 4
[2017-10-14 14:08:51,564]DEBUG  9351[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,565]DEBUG  9352[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:51,565]DEBUG  9352[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:51,566]DEBUG  9353[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:51,566]DEBUG  9353[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:51,566]DEBUG  9353[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:51,566]DEBUG  9353[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=49, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,566]DEBUG  9353[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=50, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,566]DEBUG  9353[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#2, id=3, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#2, order=com.softserveinc.edu.oms.domain.entities.Order#49, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 14:08:51,566]DEBUG  9353[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=2, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 14:08:51,566]DEBUG  9353[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=2, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 14:08:51,566]DEBUG  9353[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#2, id=4, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#2, order=com.softserveinc.edu.oms.domain.entities.Order#50, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 14:08:51,567]DEBUG  9354[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,567]DEBUG  9354[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID8_6_, this_.Cost as Cost8_6_, this_.DimensionRef as Dimensio5_8_6_, this_.ItemPrice as ItemPrice8_6_, this_.OrderRef as OrderRef8_6_, this_.ProductRef as ProductRef8_6_, this_.Quantity as Quantity8_6_, dimension2_.ID as ID7_0_, dimension2_.DimensionName as Dimensio2_7_0_, dimension2_.NumberOfProducts as NumberOf3_7_0_, order3_.ID as ID5_1_, order3_.Assigne as Assigne5_1_, order3_.Customer as Customer5_1_, order3_.DeliveryDate as Delivery2_5_1_, order3_.IsGift as IsGift5_1_, order3_.MaxDiscount as MaxDisco4_5_1_, order3_.OrderDate as OrderDate5_1_, order3_.OrderName as OrderName5_1_, order3_.OrderNumber as OrderNum7_5_1_, order3_.OrderStatusRef as OrderSt12_5_1_, order3_.PreferableDeliveryDate as Preferab8_5_1_, order3_.TotalPrice as TotalPrice5_1_, user4_.ID as ID3_2_, user4_.IsUserActive as IsUserAc2_3_2_, user4_.Balance as Balance3_2_, user4_.CustomerTypeRef as Customer9_3_2_, user4_.Email as Email3_2_, user4_.FirstName as FirstName3_2_, user4_.LastName as LastName3_2_, user4_.Login as Login3_2_, user4_.Password as Password3_2_, user4_.RegionRef as RegionRef3_2_, user4_.RoleRef as RoleRef3_2_, user5_.ID as ID3_3_, user5_.IsUserActive as IsUserAc2_3_3_, user5_.Balance as Balance3_3_, user5_.CustomerTypeRef as Customer9_3_3_, user5_.Email as Email3_3_, user5_.FirstName as FirstName3_3_, user5_.LastName as LastName3_3_, user5_.Login as Login3_3_, user5_.Password as Password3_3_, user5_.RegionRef as RegionRef3_3_, user5_.RoleRef as RoleRef3_3_, orderstatu6_.ID as ID4_4_, orderstatu6_.OrederStatusName as OrederSt2_4_4_, product7_.ID as ID6_5_, product7_.IsProductActive as IsProduc2_6_5_, product7_.ProductDescription as ProductD3_6_5_, product7_.ProductName as ProductN4_6_5_, product7_.ProductPrice as ProductP5_6_5_ from OrderItems this_ left outer join Dimensions dimension2_ on this_.DimensionRef=dimension2_.ID left outer join Orders order3_ on this_.OrderRef=order3_.ID left outer join Users user4_ on order3_.Assigne=user4_.ID left outer join Users user5_ on order3_.Customer=user5_.ID left outer join OrderStatuses orderstatu6_ on order3_.OrderStatusRef=orderstatu6_.ID left outer join Products product7_ on this_.ProductRef=product7_.ID order by this_.Cost desc
[2017-10-14 14:08:51,568]DEBUG  9355[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:51,568]DEBUG  9355[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Dimension#2], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#50], null, null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Product#2], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderItem#4]
[2017-10-14 14:08:51,569]DEBUG  9356[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Dimension#2], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#49], null, null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Product#2], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderItem#3]
[2017-10-14 14:08:51,569]DEBUG  9356[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:51,569]DEBUG  9356[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,569]DEBUG  9356[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:51,569]DEBUG  9356[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:51,569]DEBUG  9356[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:51,569]DEBUG  9356[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:51,570]DEBUG  9357[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:51,570]DEBUG  9357[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:51,570]DEBUG  9357[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=49, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,570]DEBUG  9357[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=50, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,570]DEBUG  9357[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#2, id=3, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#2, order=com.softserveinc.edu.oms.domain.entities.Order#49, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 14:08:51,570]DEBUG  9357[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=2, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 14:08:51,570]DEBUG  9357[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=2, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 14:08:51,570]DEBUG  9357[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#2, id=4, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#2, order=com.softserveinc.edu.oms.domain.entities.Order#50, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 14:08:51,570]DEBUG  9357[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,570]DEBUG  9357[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 14:08:51,571]DEBUG  9358[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,571]DEBUG  9358[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:51,571]DEBUG  9358[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:51,571]DEBUG  9358[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:51,571]DEBUG  9358[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:51,571]DEBUG  9358[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:51,572]DEBUG  9359[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=49, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,572]DEBUG  9359[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=50, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,572]DEBUG  9359[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#2, id=3, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#2, order=com.softserveinc.edu.oms.domain.entities.Order#49, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 14:08:51,572]DEBUG  9359[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=2, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 14:08:51,572]DEBUG  9359[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=2, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 14:08:51,572]DEBUG  9359[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#2, id=4, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#2, order=com.softserveinc.edu.oms.domain.entities.Order#50, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 14:08:51,572]DEBUG  9359[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,572]DEBUG  9359[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 14:08:51,572]DEBUG  9359[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,573]DEBUG  9360[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:51,573]DEBUG  9360[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:51,573]DEBUG  9360[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:51,573]DEBUG  9360[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:51,573]DEBUG  9360[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:51,573]DEBUG  9360[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=49, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,573]DEBUG  9360[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=50, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,573]DEBUG  9360[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#2, id=3, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#2, order=com.softserveinc.edu.oms.domain.entities.Order#49, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 14:08:51,574]DEBUG  9361[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=2, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 14:08:51,574]DEBUG  9361[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=2, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 14:08:51,574]DEBUG  9361[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#2, id=4, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#2, order=com.softserveinc.edu.oms.domain.entities.Order#50, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 14:08:51,574]DEBUG  9361[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,574]DEBUG  9361[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 14:08:51,574]DEBUG  9361[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,574]DEBUG  9361[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:51,574]DEBUG  9361[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:51,575]DEBUG  9362[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:51,575]DEBUG  9362[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:51,575]DEBUG  9362[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:51,575]DEBUG  9362[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=49, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,575]DEBUG  9362[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=50, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,575]DEBUG  9362[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#2, id=3, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#2, order=com.softserveinc.edu.oms.domain.entities.Order#49, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 14:08:51,575]DEBUG  9362[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=2, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 14:08:51,575]DEBUG  9362[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=2, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 14:08:51,575]DEBUG  9362[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#2, id=4, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#2, order=com.softserveinc.edu.oms.domain.entities.Order#50, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 14:08:51,576]DEBUG  9363[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,576]DEBUG  9363[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 14:08:51,576]DEBUG  9363[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,576]DEBUG  9363[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:51,576]DEBUG  9363[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:51,576]DEBUG  9363[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:51,577]DEBUG  9364[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:51,577]DEBUG  9364[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:51,577]DEBUG  9364[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=49, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,577]DEBUG  9364[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=50, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,577]DEBUG  9364[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#2, id=3, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#2, order=com.softserveinc.edu.oms.domain.entities.Order#49, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 14:08:51,577]DEBUG  9364[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=2, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 14:08:51,577]DEBUG  9364[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=2, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 14:08:51,577]DEBUG  9364[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#2, id=4, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#2, order=com.softserveinc.edu.oms.domain.entities.Order#50, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 14:08:51,577]DEBUG  9364[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,577]DEBUG  9364[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 14:08:51,578]DEBUG  9365[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,578]DEBUG  9365[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:51,578]DEBUG  9365[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:51,578]DEBUG  9365[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:51,578]DEBUG  9365[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:51,578]DEBUG  9365[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:51,578]DEBUG  9365[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=49, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,578]DEBUG  9365[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=50, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,579]DEBUG  9366[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#2, id=3, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#2, order=com.softserveinc.edu.oms.domain.entities.Order#49, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 14:08:51,579]DEBUG  9366[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=2, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 14:08:51,579]DEBUG  9366[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=2, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 14:08:51,579]DEBUG  9366[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#2, id=4, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#2, order=com.softserveinc.edu.oms.domain.entities.Order#50, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 14:08:51,579]DEBUG  9366[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,579]DEBUG  9366[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 14:08:51,579]DEBUG  9366[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,579]DEBUG  9366[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:51,580]DEBUG  9367[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:51,580]DEBUG  9367[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:51,580]DEBUG  9367[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:51,580]DEBUG  9367[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:51,580]DEBUG  9367[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=49, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,580]DEBUG  9367[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=50, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,580]DEBUG  9367[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#2, id=3, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#2, order=com.softserveinc.edu.oms.domain.entities.Order#49, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 14:08:51,580]DEBUG  9367[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=2, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 14:08:51,580]DEBUG  9367[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=2, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 14:08:51,581]DEBUG  9368[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#2, id=4, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#2, order=com.softserveinc.edu.oms.domain.entities.Order#50, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 14:08:51,581]DEBUG  9368[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,581]DEBUG  9368[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 14:08:51,581]DEBUG  9368[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,581]DEBUG  9368[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:51,581]DEBUG  9368[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:51,581]DEBUG  9368[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:51,582]DEBUG  9369[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:51,582]DEBUG  9369[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:51,582]DEBUG  9369[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=49, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,582]DEBUG  9369[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=50, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,582]DEBUG  9369[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#2, id=3, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#2, order=com.softserveinc.edu.oms.domain.entities.Order#49, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 14:08:51,582]DEBUG  9369[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=2, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 14:08:51,582]DEBUG  9369[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=2, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 14:08:51,582]DEBUG  9369[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#2, id=4, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#2, order=com.softserveinc.edu.oms.domain.entities.Order#50, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 14:08:51,582]DEBUG  9369[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,582]DEBUG  9369[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 14:08:51,583]DEBUG  9370[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,583]DEBUG  9370[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:51,583]DEBUG  9370[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:51,583]DEBUG  9370[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:51,583]DEBUG  9370[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:51,583]DEBUG  9370[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:51,583]DEBUG  9370[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=49, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,583]DEBUG  9370[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=50, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,584]DEBUG  9371[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#2, id=3, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#2, order=com.softserveinc.edu.oms.domain.entities.Order#49, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 14:08:51,584]DEBUG  9371[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=2, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 14:08:51,584]DEBUG  9371[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=2, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 14:08:51,584]DEBUG  9371[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#2, id=4, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#2, order=com.softserveinc.edu.oms.domain.entities.Order#50, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 14:08:51,584]DEBUG  9371[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,584]DEBUG  9371[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 14:08:51,584]DEBUG  9371[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,584]DEBUG  9371[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@74c63c6d testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@73ac4b64, testMethod = testFindAllWithSorting@OrderItemDaoTest, testException = [null]]]
[2017-10-14 14:08:51,585]DEBUG  9372[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 14:08:51,585]DEBUG  9372[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@53accf06]
[2017-10-14 14:08:51,585]DEBUG  9372[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 14:08:51,620]DEBUG  9407[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 14:08:51,620]DEBUG  9407[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:51,620]DEBUG  9407[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@53accf06] after transaction
[2017-10-14 14:08:51,620]DEBUG  9407[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 14:08:51,621]DEBUG  9408[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 14:08:51,621]DEBUG  9408[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:51,621] INFO  9408[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@74c63c6d testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@73ac4b64, testMethod = testFindAllWithSorting@OrderItemDaoTest, testException = [null]]]
[2017-10-14 14:08:51,621]DEBUG  9408[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@74c63c6d testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@73ac4b64, testMethod = testFindAllWithSorting@OrderItemDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 14:08:51,621]DEBUG  9408[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2017-10-14 14:08:51,622]DEBUG  9409[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2017-10-14 14:08:51,622]DEBUG  9409[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@74c63c6d testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@7795d3e9, testMethod = [null], testException = [null]]].
[2017-10-14 14:08:51,622]DEBUG  9409[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 14:08:51,622]DEBUG  9409[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 14:08:51,622]DEBUG  9409[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 14:08:51,622]DEBUG  9409[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 14:08:51,623]DEBUG  9410[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 14:08:51,623]DEBUG  9410[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 14:08:51,623]DEBUG  9410[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 14:08:51,623]DEBUG  9410[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 14:08:51,623]DEBUG  9410[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 14:08:51,624]DEBUG  9411[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 14:08:51,624]DEBUG  9411[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 14:08:51,624]DEBUG  9411[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 14:08:51,624]DEBUG  9411[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 14:08:51,624]DEBUG  9411[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 14:08:51,624]DEBUG  9411[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 14:08:51,624]DEBUG  9411[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 14:08:51,625]DEBUG  9412[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 14:08:51,625]DEBUG  9412[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 14:08:51,625]DEBUG  9412[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 14:08:51,625]DEBUG  9412[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 14:08:51,625]DEBUG  9412[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 14:08:51,625]DEBUG  9412[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 14:08:51,626]DEBUG  9413[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@7795d3e9]
[2017-10-14 14:08:51,626]DEBUG  9413[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testRowCountWithCriterions' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:51,626]DEBUG  9413[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@74c63c6d testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@7795d3e9, testMethod = testRowCountWithCriterions@OrderItemDaoTest, testException = [null]]]
[2017-10-14 14:08:51,627]DEBUG  9414[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 14:08:51,627]DEBUG  9414[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testRowCountWithCriterions]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:51,628]DEBUG  9415[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15079793316
[2017-10-14 14:08:51,628]DEBUG  9415[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@183c11f7] for Hibernate transaction
[2017-10-14 14:08:51,628]DEBUG  9415[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@183c11f7]
[2017-10-14 14:08:51,628]DEBUG  9415[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 14:08:51,628]DEBUG  9415[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 14:08:51,629]DEBUG  9416[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 14:08:51,629]DEBUG  9416[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@74c63c6d testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@7795d3e9, testMethod = testRowCountWithCriterions@OrderItemDaoTest, testException = [null]]]
[2017-10-14 14:08:51,629] INFO  9416[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (3): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@48ad0abe]; rollback [true]
[2017-10-14 14:08:51,629]DEBUG  9416[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,629]DEBUG  9416[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 14:08:51,630]DEBUG  9417[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,631]DEBUG  9418[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,631]DEBUG  9418[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 14:08:51,631]DEBUG  9418[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,632]DEBUG  9419[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,632]DEBUG  9419[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 14:08:51,632]DEBUG  9419[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,633]DEBUG  9420[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,633]DEBUG  9420[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 14:08:51,634]DEBUG  9421[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,634]DEBUG  9421[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,634]DEBUG  9421[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 14:08:51,635]DEBUG  9422[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,635]DEBUG  9422[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,635]DEBUG  9422[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 14:08:51,636]DEBUG  9423[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,636]DEBUG  9423[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,636]DEBUG  9423[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 14:08:51,637]DEBUG  9424[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,637]DEBUG  9424[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,637]DEBUG  9424[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 14:08:51,638]DEBUG  9425[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,638]DEBUG  9425[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,638]DEBUG  9425[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 14:08:51,638]DEBUG  9425[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,639]DEBUG  9426[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:51,639]DEBUG  9426[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,639]DEBUG  9426[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:51,639]DEBUG  9426[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 51
[2017-10-14 14:08:51,639]DEBUG  9426[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,640]DEBUG  9427[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:51,640]DEBUG  9427[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,640]DEBUG  9427[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:51,640]DEBUG  9427[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 52
[2017-10-14 14:08:51,640]DEBUG  9427[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,641]DEBUG  9428[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:51,641]DEBUG  9428[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,641]DEBUG  9428[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 14:08:51,641]DEBUG  9428[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 3
[2017-10-14 14:08:51,641]DEBUG  9428[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,642]DEBUG  9429[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:51,642]DEBUG  9429[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,642]DEBUG  9429[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Dimensions (DimensionName, NumberOfProducts) values (?, ?)
[2017-10-14 14:08:51,642]DEBUG  9429[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 3
[2017-10-14 14:08:51,642]DEBUG  9429[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,642]DEBUG  9429[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:51,643]DEBUG  9430[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,643]DEBUG  9430[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderItems (Cost, DimensionRef, ItemPrice, OrderRef, ProductRef, Quantity) values (?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:51,643]DEBUG  9430[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 5
[2017-10-14 14:08:51,643]DEBUG  9430[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,643]DEBUG  9430[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:51,644]DEBUG  9431[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,644]DEBUG  9431[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderItems (Cost, DimensionRef, ItemPrice, OrderRef, ProductRef, Quantity) values (?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:51,644]DEBUG  9431[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 6
[2017-10-14 14:08:51,644]DEBUG  9431[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,647]DEBUG  9434[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:51,647]DEBUG  9434[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:51,647]DEBUG  9434[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:51,647]DEBUG  9434[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:51,647]DEBUG  9434[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:51,647]DEBUG  9434[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#3, id=6, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#3, order=com.softserveinc.edu.oms.domain.entities.Order#52, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 14:08:51,647]DEBUG  9434[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=51, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,648]DEBUG  9435[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=52, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,648]DEBUG  9435[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=3, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 14:08:51,648]DEBUG  9435[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=3, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 14:08:51,648]DEBUG  9435[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#3, id=5, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#3, order=com.softserveinc.edu.oms.domain.entities.Order#51, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 14:08:51,648]DEBUG  9435[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,648]DEBUG  9435[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select count(*) as y0_ from OrderItems this_
[2017-10-14 14:08:51,649]DEBUG  9436[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:51,649]DEBUG  9436[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: 
[2017-10-14 14:08:51,649]DEBUG  9436[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:51,649]DEBUG  9436[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,650]DEBUG  9437[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:51,650]DEBUG  9437[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:51,650]DEBUG  9437[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:51,650]DEBUG  9437[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:51,650]DEBUG  9437[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:51,650]DEBUG  9437[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:51,650]DEBUG  9437[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#3, id=6, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#3, order=com.softserveinc.edu.oms.domain.entities.Order#52, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 14:08:51,651]DEBUG  9438[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=51, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,651]DEBUG  9438[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=52, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,651]DEBUG  9438[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=3, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 14:08:51,651]DEBUG  9438[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=3, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 14:08:51,651]DEBUG  9438[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#3, id=5, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#3, order=com.softserveinc.edu.oms.domain.entities.Order#51, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 14:08:51,651]DEBUG  9438[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,651]DEBUG  9438[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select count(*) as y0_ from OrderItems this_ where this_.OrderRef=?
[2017-10-14 14:08:51,652]DEBUG  9439[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:51,652]DEBUG  9439[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: 
[2017-10-14 14:08:51,652]DEBUG  9439[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:51,652]DEBUG  9439[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,652]DEBUG  9439[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:51,652]DEBUG  9439[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:51,652]DEBUG  9439[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:51,653]DEBUG  9440[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:51,653]DEBUG  9440[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:51,653]DEBUG  9440[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:51,653]DEBUG  9440[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#3, id=6, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#3, order=com.softserveinc.edu.oms.domain.entities.Order#52, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 14:08:51,653]DEBUG  9440[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=51, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,653]DEBUG  9440[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=52, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,653]DEBUG  9440[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=3, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 14:08:51,653]DEBUG  9440[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=3, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 14:08:51,653]DEBUG  9440[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#3, id=5, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#3, order=com.softserveinc.edu.oms.domain.entities.Order#51, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 14:08:51,653]DEBUG  9440[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,654]DEBUG  9441[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 14:08:51,654]DEBUG  9441[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,654]DEBUG  9441[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:51,654]DEBUG  9441[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:51,654]DEBUG  9441[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:51,654]DEBUG  9441[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:51,655]DEBUG  9442[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:51,655]DEBUG  9442[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#3, id=6, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#3, order=com.softserveinc.edu.oms.domain.entities.Order#52, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 14:08:51,655]DEBUG  9442[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=51, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,655]DEBUG  9442[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=52, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,655]DEBUG  9442[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=3, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 14:08:51,655]DEBUG  9442[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=3, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 14:08:51,655]DEBUG  9442[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#3, id=5, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#3, order=com.softserveinc.edu.oms.domain.entities.Order#51, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 14:08:51,655]DEBUG  9442[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,655]DEBUG  9442[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 14:08:51,656]DEBUG  9443[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,656]DEBUG  9443[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:51,656]DEBUG  9443[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:51,656]DEBUG  9443[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:51,656]DEBUG  9443[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:51,656]DEBUG  9443[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:51,656]DEBUG  9443[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#3, id=6, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#3, order=com.softserveinc.edu.oms.domain.entities.Order#52, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 14:08:51,657]DEBUG  9444[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=51, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,657]DEBUG  9444[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=52, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,657]DEBUG  9444[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=3, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 14:08:51,657]DEBUG  9444[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=3, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 14:08:51,657]DEBUG  9444[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#3, id=5, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#3, order=com.softserveinc.edu.oms.domain.entities.Order#51, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 14:08:51,657]DEBUG  9444[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,657]DEBUG  9444[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 14:08:51,657]DEBUG  9444[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,658]DEBUG  9445[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:51,658]DEBUG  9445[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:51,658]DEBUG  9445[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:51,658]DEBUG  9445[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:51,658]DEBUG  9445[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:51,658]DEBUG  9445[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#3, id=6, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#3, order=com.softserveinc.edu.oms.domain.entities.Order#52, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 14:08:51,658]DEBUG  9445[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=51, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,658]DEBUG  9445[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=52, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,658]DEBUG  9445[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=3, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 14:08:51,658]DEBUG  9445[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=3, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 14:08:51,659]DEBUG  9446[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#3, id=5, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#3, order=com.softserveinc.edu.oms.domain.entities.Order#51, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 14:08:51,659]DEBUG  9446[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,659]DEBUG  9446[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 14:08:51,659]DEBUG  9446[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,659]DEBUG  9446[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:51,659]DEBUG  9446[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:51,660]DEBUG  9447[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:51,660]DEBUG  9447[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:51,660]DEBUG  9447[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:51,660]DEBUG  9447[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#3, id=6, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#3, order=com.softserveinc.edu.oms.domain.entities.Order#52, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 14:08:51,660]DEBUG  9447[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=51, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,660]DEBUG  9447[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=52, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,660]DEBUG  9447[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=3, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 14:08:51,660]DEBUG  9447[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=3, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 14:08:51,660]DEBUG  9447[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#3, id=5, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#3, order=com.softserveinc.edu.oms.domain.entities.Order#51, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 14:08:51,660]DEBUG  9447[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,660]DEBUG  9447[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 14:08:51,661]DEBUG  9448[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,661]DEBUG  9448[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:51,661]DEBUG  9448[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:51,661]DEBUG  9448[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:51,661]DEBUG  9448[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:51,661]DEBUG  9448[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:51,661]DEBUG  9448[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#3, id=6, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#3, order=com.softserveinc.edu.oms.domain.entities.Order#52, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 14:08:51,662]DEBUG  9449[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=51, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,662]DEBUG  9449[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=52, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,662]DEBUG  9449[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=3, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 14:08:51,662]DEBUG  9449[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=3, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 14:08:51,662]DEBUG  9449[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#3, id=5, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#3, order=com.softserveinc.edu.oms.domain.entities.Order#51, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 14:08:51,662]DEBUG  9449[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,662]DEBUG  9449[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 14:08:51,662]DEBUG  9449[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,663]DEBUG  9450[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:51,663]DEBUG  9450[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:51,663]DEBUG  9450[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:51,663]DEBUG  9450[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:51,663]DEBUG  9450[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:51,663]DEBUG  9450[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#3, id=6, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#3, order=com.softserveinc.edu.oms.domain.entities.Order#52, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 14:08:51,663]DEBUG  9450[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=51, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,663]DEBUG  9450[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=52, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,663]DEBUG  9450[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=3, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 14:08:51,663]DEBUG  9450[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=3, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 14:08:51,664]DEBUG  9451[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#3, id=5, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#3, order=com.softserveinc.edu.oms.domain.entities.Order#51, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 14:08:51,664]DEBUG  9451[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,664]DEBUG  9451[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 14:08:51,664]DEBUG  9451[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,664]DEBUG  9451[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:51,664]DEBUG  9451[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:51,664]DEBUG  9451[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:51,665]DEBUG  9452[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:51,665]DEBUG  9452[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:51,665]DEBUG  9452[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#3, id=6, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#3, order=com.softserveinc.edu.oms.domain.entities.Order#52, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 14:08:51,665]DEBUG  9452[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=51, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,665]DEBUG  9452[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=52, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,665]DEBUG  9452[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=3, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 14:08:51,665]DEBUG  9452[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=3, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 14:08:51,665]DEBUG  9452[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#3, id=5, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#3, order=com.softserveinc.edu.oms.domain.entities.Order#51, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 14:08:51,665]DEBUG  9452[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,665]DEBUG  9452[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 14:08:51,666]DEBUG  9453[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,666]DEBUG  9453[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:51,666]DEBUG  9453[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:51,666]DEBUG  9453[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:51,666]DEBUG  9453[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:51,666]DEBUG  9453[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:51,666]DEBUG  9453[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#3, id=6, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#3, order=com.softserveinc.edu.oms.domain.entities.Order#52, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 14:08:51,666]DEBUG  9453[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=51, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,667]DEBUG  9454[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=52, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,667]DEBUG  9454[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=3, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 14:08:51,667]DEBUG  9454[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=3, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 14:08:51,667]DEBUG  9454[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#3, id=5, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#3, order=com.softserveinc.edu.oms.domain.entities.Order#51, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 14:08:51,667]DEBUG  9454[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,667]DEBUG  9454[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 14:08:51,667]DEBUG  9454[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,667]DEBUG  9454[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@74c63c6d testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@7795d3e9, testMethod = testRowCountWithCriterions@OrderItemDaoTest, testException = [null]]]
[2017-10-14 14:08:51,667]DEBUG  9454[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 14:08:51,668]DEBUG  9455[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@183c11f7]
[2017-10-14 14:08:51,668]DEBUG  9455[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 14:08:51,712]DEBUG  9499[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 14:08:51,712]DEBUG  9499[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:51,713]DEBUG  9500[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@183c11f7] after transaction
[2017-10-14 14:08:51,713]DEBUG  9500[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 14:08:51,713]DEBUG  9500[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 14:08:51,713]DEBUG  9500[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:51,713] INFO  9500[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@74c63c6d testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@7795d3e9, testMethod = testRowCountWithCriterions@OrderItemDaoTest, testException = [null]]]
[2017-10-14 14:08:51,714]DEBUG  9501[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@74c63c6d testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@7795d3e9, testMethod = testRowCountWithCriterions@OrderItemDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 14:08:51,715]DEBUG  9502[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2017-10-14 14:08:51,715]DEBUG  9502[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2017-10-14 14:08:51,715]DEBUG  9502[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@74c63c6d testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@54a84bab, testMethod = [null], testException = [null]]].
[2017-10-14 14:08:51,715]DEBUG  9502[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 14:08:51,716]DEBUG  9503[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 14:08:51,716]DEBUG  9503[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 14:08:51,716]DEBUG  9503[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 14:08:51,716]DEBUG  9503[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 14:08:51,716]DEBUG  9503[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 14:08:51,717]DEBUG  9504[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 14:08:51,717]DEBUG  9504[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 14:08:51,717]DEBUG  9504[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 14:08:51,717]DEBUG  9504[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 14:08:51,717]DEBUG  9504[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 14:08:51,718]DEBUG  9505[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 14:08:51,718]DEBUG  9505[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 14:08:51,718]DEBUG  9505[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 14:08:51,718]DEBUG  9505[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 14:08:51,718]DEBUG  9505[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 14:08:51,718]DEBUG  9505[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 14:08:51,719]DEBUG  9506[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 14:08:51,719]DEBUG  9506[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 14:08:51,719]DEBUG  9506[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 14:08:51,719]DEBUG  9506[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 14:08:51,720]DEBUG  9507[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 14:08:51,720]DEBUG  9507[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@54a84bab]
[2017-10-14 14:08:51,720]DEBUG  9507[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testPaging' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:51,721]DEBUG  9508[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@74c63c6d testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@54a84bab, testMethod = testPaging@OrderItemDaoTest, testException = [null]]]
[2017-10-14 14:08:51,721]DEBUG  9508[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 14:08:51,722]DEBUG  9509[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testPaging]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:51,722]DEBUG  9509[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15079793317
[2017-10-14 14:08:51,722]DEBUG  9509[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@6f0bc32d] for Hibernate transaction
[2017-10-14 14:08:51,722]DEBUG  9509[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@6f0bc32d]
[2017-10-14 14:08:51,722]DEBUG  9509[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 14:08:51,723]DEBUG  9510[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 14:08:51,723]DEBUG  9510[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 14:08:51,723]DEBUG  9510[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@74c63c6d testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@54a84bab, testMethod = testPaging@OrderItemDaoTest, testException = [null]]]
[2017-10-14 14:08:51,723] INFO  9510[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (4): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@48ad0abe]; rollback [true]
[2017-10-14 14:08:51,724]DEBUG  9511[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,724]DEBUG  9511[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 14:08:51,724]DEBUG  9511[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,725]DEBUG  9512[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,725]DEBUG  9512[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 14:08:51,725]DEBUG  9512[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,726]DEBUG  9513[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,726]DEBUG  9513[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 14:08:51,727]DEBUG  9514[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,727]DEBUG  9514[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,727]DEBUG  9514[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 14:08:51,728]DEBUG  9515[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,728]DEBUG  9515[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,728]DEBUG  9515[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 14:08:51,729]DEBUG  9516[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,729]DEBUG  9516[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,729]DEBUG  9516[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 14:08:51,730]DEBUG  9517[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,730]DEBUG  9517[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,730]DEBUG  9517[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 14:08:51,731]DEBUG  9518[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,731]DEBUG  9518[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,731]DEBUG  9518[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 14:08:51,732]DEBUG  9519[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,732]DEBUG  9519[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,732]DEBUG  9519[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 14:08:51,733]DEBUG  9520[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,733]DEBUG  9520[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:51,734]DEBUG  9521[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,734]DEBUG  9521[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:51,735]DEBUG  9522[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 53
[2017-10-14 14:08:51,735]DEBUG  9522[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,736]DEBUG  9523[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:51,736]DEBUG  9523[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,736]DEBUG  9523[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:51,737]DEBUG  9524[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 54
[2017-10-14 14:08:51,737]DEBUG  9524[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,738]DEBUG  9525[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:51,738]DEBUG  9525[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,738]DEBUG  9525[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 14:08:51,739]DEBUG  9526[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 4
[2017-10-14 14:08:51,739]DEBUG  9526[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,739]DEBUG  9526[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:51,739]DEBUG  9526[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,739]DEBUG  9526[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Dimensions (DimensionName, NumberOfProducts) values (?, ?)
[2017-10-14 14:08:51,740]DEBUG  9527[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 4
[2017-10-14 14:08:51,740]DEBUG  9527[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,740]DEBUG  9527[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:51,740]DEBUG  9527[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,740]DEBUG  9527[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderItems (Cost, DimensionRef, ItemPrice, OrderRef, ProductRef, Quantity) values (?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:51,741]DEBUG  9528[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 7
[2017-10-14 14:08:51,741]DEBUG  9528[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,741]DEBUG  9528[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:51,741]DEBUG  9528[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,741]DEBUG  9528[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderItems (Cost, DimensionRef, ItemPrice, OrderRef, ProductRef, Quantity) values (?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:51,742]DEBUG  9529[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 8
[2017-10-14 14:08:51,742]DEBUG  9529[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,743]DEBUG  9530[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:51,743]DEBUG  9530[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:51,743]DEBUG  9530[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:51,743]DEBUG  9530[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:51,743]DEBUG  9530[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:51,743]DEBUG  9530[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#4, id=7, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#4, order=com.softserveinc.edu.oms.domain.entities.Order#53, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 14:08:51,744]DEBUG  9531[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#4, id=8, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#4, order=com.softserveinc.edu.oms.domain.entities.Order#54, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 14:08:51,744]DEBUG  9531[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=4, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 14:08:51,744]DEBUG  9531[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=53, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,744]DEBUG  9531[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=54, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,744]DEBUG  9531[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=4, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 14:08:51,744]DEBUG  9531[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,744]DEBUG  9531[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID8_6_, this_.Cost as Cost8_6_, this_.DimensionRef as Dimensio5_8_6_, this_.ItemPrice as ItemPrice8_6_, this_.OrderRef as OrderRef8_6_, this_.ProductRef as ProductRef8_6_, this_.Quantity as Quantity8_6_, dimension2_.ID as ID7_0_, dimension2_.DimensionName as Dimensio2_7_0_, dimension2_.NumberOfProducts as NumberOf3_7_0_, order3_.ID as ID5_1_, order3_.Assigne as Assigne5_1_, order3_.Customer as Customer5_1_, order3_.DeliveryDate as Delivery2_5_1_, order3_.IsGift as IsGift5_1_, order3_.MaxDiscount as MaxDisco4_5_1_, order3_.OrderDate as OrderDate5_1_, order3_.OrderName as OrderName5_1_, order3_.OrderNumber as OrderNum7_5_1_, order3_.OrderStatusRef as OrderSt12_5_1_, order3_.PreferableDeliveryDate as Preferab8_5_1_, order3_.TotalPrice as TotalPrice5_1_, user4_.ID as ID3_2_, user4_.IsUserActive as IsUserAc2_3_2_, user4_.Balance as Balance3_2_, user4_.CustomerTypeRef as Customer9_3_2_, user4_.Email as Email3_2_, user4_.FirstName as FirstName3_2_, user4_.LastName as LastName3_2_, user4_.Login as Login3_2_, user4_.Password as Password3_2_, user4_.RegionRef as RegionRef3_2_, user4_.RoleRef as RoleRef3_2_, user5_.ID as ID3_3_, user5_.IsUserActive as IsUserAc2_3_3_, user5_.Balance as Balance3_3_, user5_.CustomerTypeRef as Customer9_3_3_, user5_.Email as Email3_3_, user5_.FirstName as FirstName3_3_, user5_.LastName as LastName3_3_, user5_.Login as Login3_3_, user5_.Password as Password3_3_, user5_.RegionRef as RegionRef3_3_, user5_.RoleRef as RoleRef3_3_, orderstatu6_.ID as ID4_4_, orderstatu6_.OrederStatusName as OrederSt2_4_4_, product7_.ID as ID6_5_, product7_.IsProductActive as IsProduc2_6_5_, product7_.ProductDescription as ProductD3_6_5_, product7_.ProductName as ProductN4_6_5_, product7_.ProductPrice as ProductP5_6_5_ from OrderItems this_ left outer join Dimensions dimension2_ on this_.DimensionRef=dimension2_.ID left outer join Orders order3_ on this_.OrderRef=order3_.ID left outer join Users user4_ on order3_.Assigne=user4_.ID left outer join Users user5_ on order3_.Customer=user5_.ID left outer join OrderStatuses orderstatu6_ on order3_.OrderStatusRef=orderstatu6_.ID left outer join Products product7_ on this_.ProductRef=product7_.ID where this_.OrderRef=? limit ?
[2017-10-14 14:08:51,746]DEBUG  9533[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:51,746]DEBUG  9533[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Dimension#4], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#53], null, null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Product#4], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderItem#7]
[2017-10-14 14:08:51,747]DEBUG  9534[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:51,747]DEBUG  9534[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,747]DEBUG  9534[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:51,748]DEBUG  9535[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:51,748]DEBUG  9535[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:51,748]DEBUG  9535[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:51,748]DEBUG  9535[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:51,748]DEBUG  9535[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:51,748]DEBUG  9535[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#4, id=7, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#4, order=com.softserveinc.edu.oms.domain.entities.Order#53, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 14:08:51,749]DEBUG  9536[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#4, id=8, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#4, order=com.softserveinc.edu.oms.domain.entities.Order#54, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 14:08:51,749]DEBUG  9536[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=4, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 14:08:51,749]DEBUG  9536[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=53, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,749]DEBUG  9536[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=54, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,749]DEBUG  9536[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=4, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 14:08:51,749]DEBUG  9536[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,749]DEBUG  9536[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID8_6_, this_.Cost as Cost8_6_, this_.DimensionRef as Dimensio5_8_6_, this_.ItemPrice as ItemPrice8_6_, this_.OrderRef as OrderRef8_6_, this_.ProductRef as ProductRef8_6_, this_.Quantity as Quantity8_6_, dimension2_.ID as ID7_0_, dimension2_.DimensionName as Dimensio2_7_0_, dimension2_.NumberOfProducts as NumberOf3_7_0_, order3_.ID as ID5_1_, order3_.Assigne as Assigne5_1_, order3_.Customer as Customer5_1_, order3_.DeliveryDate as Delivery2_5_1_, order3_.IsGift as IsGift5_1_, order3_.MaxDiscount as MaxDisco4_5_1_, order3_.OrderDate as OrderDate5_1_, order3_.OrderName as OrderName5_1_, order3_.OrderNumber as OrderNum7_5_1_, order3_.OrderStatusRef as OrderSt12_5_1_, order3_.PreferableDeliveryDate as Preferab8_5_1_, order3_.TotalPrice as TotalPrice5_1_, user4_.ID as ID3_2_, user4_.IsUserActive as IsUserAc2_3_2_, user4_.Balance as Balance3_2_, user4_.CustomerTypeRef as Customer9_3_2_, user4_.Email as Email3_2_, user4_.FirstName as FirstName3_2_, user4_.LastName as LastName3_2_, user4_.Login as Login3_2_, user4_.Password as Password3_2_, user4_.RegionRef as RegionRef3_2_, user4_.RoleRef as RoleRef3_2_, user5_.ID as ID3_3_, user5_.IsUserActive as IsUserAc2_3_3_, user5_.Balance as Balance3_3_, user5_.CustomerTypeRef as Customer9_3_3_, user5_.Email as Email3_3_, user5_.FirstName as FirstName3_3_, user5_.LastName as LastName3_3_, user5_.Login as Login3_3_, user5_.Password as Password3_3_, user5_.RegionRef as RegionRef3_3_, user5_.RoleRef as RoleRef3_3_, orderstatu6_.ID as ID4_4_, orderstatu6_.OrederStatusName as OrederSt2_4_4_, product7_.ID as ID6_5_, product7_.IsProductActive as IsProduc2_6_5_, product7_.ProductDescription as ProductD3_6_5_, product7_.ProductName as ProductN4_6_5_, product7_.ProductPrice as ProductP5_6_5_ from OrderItems this_ left outer join Dimensions dimension2_ on this_.DimensionRef=dimension2_.ID left outer join Orders order3_ on this_.OrderRef=order3_.ID left outer join Users user4_ on order3_.Assigne=user4_.ID left outer join Users user5_ on order3_.Customer=user5_.ID left outer join OrderStatuses orderstatu6_ on order3_.OrderStatusRef=orderstatu6_.ID left outer join Products product7_ on this_.ProductRef=product7_.ID where this_.OrderRef=? limit ?, ?
[2017-10-14 14:08:51,750]DEBUG  9537[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:51,751]DEBUG  9538[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:51,751]DEBUG  9538[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,751]DEBUG  9538[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:51,751]DEBUG  9538[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:51,751]DEBUG  9538[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:51,751]DEBUG  9538[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:51,752]DEBUG  9539[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:51,752]DEBUG  9539[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:51,752]DEBUG  9539[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#4, id=7, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#4, order=com.softserveinc.edu.oms.domain.entities.Order#53, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 14:08:51,752]DEBUG  9539[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#4, id=8, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#4, order=com.softserveinc.edu.oms.domain.entities.Order#54, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 14:08:51,752]DEBUG  9539[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=4, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 14:08:51,752]DEBUG  9539[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=53, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,752]DEBUG  9539[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=54, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,752]DEBUG  9539[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=4, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 14:08:51,752]DEBUG  9539[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,753]DEBUG  9540[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 14:08:51,753]DEBUG  9540[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,753]DEBUG  9540[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:51,753]DEBUG  9540[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:51,754]DEBUG  9541[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:51,754]DEBUG  9541[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:51,754]DEBUG  9541[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:51,754]DEBUG  9541[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#4, id=7, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#4, order=com.softserveinc.edu.oms.domain.entities.Order#53, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 14:08:51,754]DEBUG  9541[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#4, id=8, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#4, order=com.softserveinc.edu.oms.domain.entities.Order#54, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 14:08:51,754]DEBUG  9541[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=4, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 14:08:51,754]DEBUG  9541[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=53, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,754]DEBUG  9541[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=54, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,754]DEBUG  9541[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=4, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 14:08:51,754]DEBUG  9541[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,755]DEBUG  9542[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 14:08:51,755]DEBUG  9542[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,755]DEBUG  9542[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:51,755]DEBUG  9542[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:51,755]DEBUG  9542[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:51,755]DEBUG  9542[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:51,756]DEBUG  9543[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:51,756]DEBUG  9543[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#4, id=7, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#4, order=com.softserveinc.edu.oms.domain.entities.Order#53, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 14:08:51,756]DEBUG  9543[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#4, id=8, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#4, order=com.softserveinc.edu.oms.domain.entities.Order#54, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 14:08:51,756]DEBUG  9543[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=4, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 14:08:51,756]DEBUG  9543[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=53, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,756]DEBUG  9543[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=54, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,756]DEBUG  9543[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=4, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 14:08:51,756]DEBUG  9543[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,756]DEBUG  9543[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 14:08:51,757]DEBUG  9544[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,757]DEBUG  9544[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:51,757]DEBUG  9544[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:51,757]DEBUG  9544[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:51,757]DEBUG  9544[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:51,757]DEBUG  9544[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:51,757]DEBUG  9544[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#4, id=7, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#4, order=com.softserveinc.edu.oms.domain.entities.Order#53, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 14:08:51,758]DEBUG  9545[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#4, id=8, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#4, order=com.softserveinc.edu.oms.domain.entities.Order#54, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 14:08:51,758]DEBUG  9545[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=4, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 14:08:51,758]DEBUG  9545[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=53, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,758]DEBUG  9545[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=54, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,758]DEBUG  9545[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=4, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 14:08:51,758]DEBUG  9545[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,758]DEBUG  9545[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 14:08:51,759]DEBUG  9546[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,759]DEBUG  9546[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:51,759]DEBUG  9546[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:51,759]DEBUG  9546[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:51,759]DEBUG  9546[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:51,759]DEBUG  9546[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:51,759]DEBUG  9546[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#4, id=7, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#4, order=com.softserveinc.edu.oms.domain.entities.Order#53, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 14:08:51,759]DEBUG  9546[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#4, id=8, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#4, order=com.softserveinc.edu.oms.domain.entities.Order#54, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 14:08:51,760]DEBUG  9547[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=4, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 14:08:51,760]DEBUG  9547[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=53, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,760]DEBUG  9547[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=54, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,760]DEBUG  9547[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=4, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 14:08:51,760]DEBUG  9547[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,760]DEBUG  9547[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 14:08:51,760]DEBUG  9547[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,761]DEBUG  9548[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:51,761]DEBUG  9548[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:51,761]DEBUG  9548[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:51,761]DEBUG  9548[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:51,761]DEBUG  9548[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:51,761]DEBUG  9548[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#4, id=7, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#4, order=com.softserveinc.edu.oms.domain.entities.Order#53, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 14:08:51,761]DEBUG  9548[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#4, id=8, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#4, order=com.softserveinc.edu.oms.domain.entities.Order#54, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 14:08:51,761]DEBUG  9548[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=4, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 14:08:51,761]DEBUG  9548[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=53, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,762]DEBUG  9549[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=54, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,762]DEBUG  9549[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=4, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 14:08:51,762]DEBUG  9549[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,762]DEBUG  9549[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 14:08:51,762]DEBUG  9549[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,762]DEBUG  9549[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:51,762]DEBUG  9549[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:51,763]DEBUG  9550[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:51,763]DEBUG  9550[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:51,763]DEBUG  9550[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:51,763]DEBUG  9550[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#4, id=7, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#4, order=com.softserveinc.edu.oms.domain.entities.Order#53, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 14:08:51,763]DEBUG  9550[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#4, id=8, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#4, order=com.softserveinc.edu.oms.domain.entities.Order#54, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 14:08:51,763]DEBUG  9550[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=4, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 14:08:51,763]DEBUG  9550[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=53, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,764]DEBUG  9551[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=54, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,764]DEBUG  9551[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=4, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 14:08:51,764]DEBUG  9551[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,764]DEBUG  9551[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 14:08:51,764]DEBUG  9551[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,764]DEBUG  9551[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:51,764]DEBUG  9551[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:51,765]DEBUG  9552[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:51,765]DEBUG  9552[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:51,765]DEBUG  9552[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:51,765]DEBUG  9552[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#4, id=7, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#4, order=com.softserveinc.edu.oms.domain.entities.Order#53, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 14:08:51,765]DEBUG  9552[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#4, id=8, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#4, order=com.softserveinc.edu.oms.domain.entities.Order#54, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 14:08:51,765]DEBUG  9552[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=4, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 14:08:51,765]DEBUG  9552[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=53, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,765]DEBUG  9552[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=54, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,765]DEBUG  9552[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=4, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 14:08:51,766]DEBUG  9553[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,766]DEBUG  9553[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 14:08:51,766]DEBUG  9553[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,766]DEBUG  9553[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:51,766]DEBUG  9553[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:51,766]DEBUG  9553[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:51,766]DEBUG  9553[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:51,766]DEBUG  9553[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:51,767]DEBUG  9554[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#4, id=7, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#4, order=com.softserveinc.edu.oms.domain.entities.Order#53, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 14:08:51,767]DEBUG  9554[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#4, id=8, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#4, order=com.softserveinc.edu.oms.domain.entities.Order#54, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 14:08:51,767]DEBUG  9554[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=4, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 14:08:51,767]DEBUG  9554[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=53, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,767]DEBUG  9554[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=54, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,767]DEBUG  9554[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=4, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 14:08:51,767]DEBUG  9554[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,767]DEBUG  9554[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 14:08:51,768]DEBUG  9555[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,768]DEBUG  9555[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@74c63c6d testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@54a84bab, testMethod = testPaging@OrderItemDaoTest, testException = [null]]]
[2017-10-14 14:08:51,768]DEBUG  9555[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 14:08:51,768]DEBUG  9555[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@6f0bc32d]
[2017-10-14 14:08:51,768]DEBUG  9555[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 14:08:51,804]DEBUG  9591[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 14:08:51,804]DEBUG  9591[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:51,804]DEBUG  9591[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@6f0bc32d] after transaction
[2017-10-14 14:08:51,805]DEBUG  9592[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 14:08:51,805]DEBUG  9592[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 14:08:51,805]DEBUG  9592[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:51,805] INFO  9592[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@74c63c6d testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@54a84bab, testMethod = testPaging@OrderItemDaoTest, testException = [null]]]
[2017-10-14 14:08:51,806]DEBUG  9593[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@74c63c6d testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@54a84bab, testMethod = testPaging@OrderItemDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 14:08:51,806]DEBUG  9593[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2017-10-14 14:08:51,807]DEBUG  9594[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2017-10-14 14:08:51,807]DEBUG  9594[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@74c63c6d testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@7bb5527f, testMethod = [null], testException = [null]]].
[2017-10-14 14:08:51,807]DEBUG  9594[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 14:08:51,807]DEBUG  9594[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 14:08:51,808]DEBUG  9595[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 14:08:51,808]DEBUG  9595[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 14:08:51,808]DEBUG  9595[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 14:08:51,808]DEBUG  9595[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 14:08:51,808]DEBUG  9595[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 14:08:51,809]DEBUG  9596[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 14:08:51,809]DEBUG  9596[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 14:08:51,809]DEBUG  9596[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 14:08:51,809]DEBUG  9596[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 14:08:51,809]DEBUG  9596[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 14:08:51,810]DEBUG  9597[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 14:08:51,810]DEBUG  9597[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 14:08:51,810]DEBUG  9597[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 14:08:51,810]DEBUG  9597[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 14:08:51,812]DEBUG  9599[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 14:08:51,812]DEBUG  9599[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 14:08:51,812]DEBUG  9599[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 14:08:51,812]DEBUG  9599[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 14:08:51,812]DEBUG  9599[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 14:08:51,813]DEBUG  9600[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 14:08:51,813]DEBUG  9600[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@7bb5527f]
[2017-10-14 14:08:51,814]DEBUG  9601[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByOrder' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:51,814]DEBUG  9601[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@74c63c6d testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@7bb5527f, testMethod = testFindByOrder@OrderItemDaoTest, testException = [null]]]
[2017-10-14 14:08:51,814]DEBUG  9601[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 14:08:51,815]DEBUG  9602[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByOrder]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:51,815]DEBUG  9602[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15079793318
[2017-10-14 14:08:51,815]DEBUG  9602[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@1c30284c] for Hibernate transaction
[2017-10-14 14:08:51,816]DEBUG  9603[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@1c30284c]
[2017-10-14 14:08:51,816]DEBUG  9603[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 14:08:51,816]DEBUG  9603[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 14:08:51,816]DEBUG  9603[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 14:08:51,816]DEBUG  9603[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@74c63c6d testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@7bb5527f, testMethod = testFindByOrder@OrderItemDaoTest, testException = [null]]]
[2017-10-14 14:08:51,817] INFO  9604[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (5): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@48ad0abe]; rollback [true]
[2017-10-14 14:08:51,817]DEBUG  9604[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,817]DEBUG  9604[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 14:08:51,818]DEBUG  9605[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,818]DEBUG  9605[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,818]DEBUG  9605[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 14:08:51,818]DEBUG  9605[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,819]DEBUG  9606[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,819]DEBUG  9606[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 14:08:51,819]DEBUG  9606[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,819]DEBUG  9606[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,819]DEBUG  9606[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 14:08:51,819]DEBUG  9606[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,820]DEBUG  9607[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,820]DEBUG  9607[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 14:08:51,820]DEBUG  9607[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,820]DEBUG  9607[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,820]DEBUG  9607[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 14:08:51,820]DEBUG  9607[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,821]DEBUG  9608[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,821]DEBUG  9608[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 14:08:51,821]DEBUG  9608[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,821]DEBUG  9608[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,821]DEBUG  9608[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 14:08:51,821]DEBUG  9608[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,822]DEBUG  9609[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,822]DEBUG  9609[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 14:08:51,822]DEBUG  9609[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,822]DEBUG  9609[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:51,822]DEBUG  9609[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,822]DEBUG  9609[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:51,823]DEBUG  9610[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 55
[2017-10-14 14:08:51,823]DEBUG  9610[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,823]DEBUG  9610[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:51,823]DEBUG  9610[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,823]DEBUG  9610[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:51,824]DEBUG  9611[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 56
[2017-10-14 14:08:51,824]DEBUG  9611[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,824]DEBUG  9611[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:51,824]DEBUG  9611[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,824]DEBUG  9611[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 14:08:51,825]DEBUG  9612[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 5
[2017-10-14 14:08:51,825]DEBUG  9612[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,825]DEBUG  9612[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:51,825]DEBUG  9612[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,825]DEBUG  9612[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Dimensions (DimensionName, NumberOfProducts) values (?, ?)
[2017-10-14 14:08:51,826]DEBUG  9613[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 5
[2017-10-14 14:08:51,826]DEBUG  9613[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,826]DEBUG  9613[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:51,826]DEBUG  9613[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,826]DEBUG  9613[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderItems (Cost, DimensionRef, ItemPrice, OrderRef, ProductRef, Quantity) values (?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:51,827]DEBUG  9614[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 9
[2017-10-14 14:08:51,827]DEBUG  9614[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,827]DEBUG  9614[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:51,827]DEBUG  9614[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,827]DEBUG  9614[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderItems (Cost, DimensionRef, ItemPrice, OrderRef, ProductRef, Quantity) values (?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:51,828]DEBUG  9615[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 10
[2017-10-14 14:08:51,828]DEBUG  9615[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,829]DEBUG  9616[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:51,829]DEBUG  9616[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:51,829]DEBUG  9616[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:51,829]DEBUG  9616[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:51,829]DEBUG  9616[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:51,829]DEBUG  9616[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=5, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 14:08:51,829]DEBUG  9616[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#5, id=9, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#5, order=com.softserveinc.edu.oms.domain.entities.Order#55, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 14:08:51,829]DEBUG  9616[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#5, id=10, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#5, order=com.softserveinc.edu.oms.domain.entities.Order#56, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 14:08:51,830]DEBUG  9617[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=5, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 14:08:51,830]DEBUG  9617[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=55, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,830]DEBUG  9617[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=56, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,830]DEBUG  9617[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,830]DEBUG  9617[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID8_6_, this_.Cost as Cost8_6_, this_.DimensionRef as Dimensio5_8_6_, this_.ItemPrice as ItemPrice8_6_, this_.OrderRef as OrderRef8_6_, this_.ProductRef as ProductRef8_6_, this_.Quantity as Quantity8_6_, dimension2_.ID as ID7_0_, dimension2_.DimensionName as Dimensio2_7_0_, dimension2_.NumberOfProducts as NumberOf3_7_0_, order3_.ID as ID5_1_, order3_.Assigne as Assigne5_1_, order3_.Customer as Customer5_1_, order3_.DeliveryDate as Delivery2_5_1_, order3_.IsGift as IsGift5_1_, order3_.MaxDiscount as MaxDisco4_5_1_, order3_.OrderDate as OrderDate5_1_, order3_.OrderName as OrderName5_1_, order3_.OrderNumber as OrderNum7_5_1_, order3_.OrderStatusRef as OrderSt12_5_1_, order3_.PreferableDeliveryDate as Preferab8_5_1_, order3_.TotalPrice as TotalPrice5_1_, user4_.ID as ID3_2_, user4_.IsUserActive as IsUserAc2_3_2_, user4_.Balance as Balance3_2_, user4_.CustomerTypeRef as Customer9_3_2_, user4_.Email as Email3_2_, user4_.FirstName as FirstName3_2_, user4_.LastName as LastName3_2_, user4_.Login as Login3_2_, user4_.Password as Password3_2_, user4_.RegionRef as RegionRef3_2_, user4_.RoleRef as RoleRef3_2_, user5_.ID as ID3_3_, user5_.IsUserActive as IsUserAc2_3_3_, user5_.Balance as Balance3_3_, user5_.CustomerTypeRef as Customer9_3_3_, user5_.Email as Email3_3_, user5_.FirstName as FirstName3_3_, user5_.LastName as LastName3_3_, user5_.Login as Login3_3_, user5_.Password as Password3_3_, user5_.RegionRef as RegionRef3_3_, user5_.RoleRef as RoleRef3_3_, orderstatu6_.ID as ID4_4_, orderstatu6_.OrederStatusName as OrederSt2_4_4_, product7_.ID as ID6_5_, product7_.IsProductActive as IsProduc2_6_5_, product7_.ProductDescription as ProductD3_6_5_, product7_.ProductName as ProductN4_6_5_, product7_.ProductPrice as ProductP5_6_5_ from OrderItems this_ left outer join Dimensions dimension2_ on this_.DimensionRef=dimension2_.ID left outer join Orders order3_ on this_.OrderRef=order3_.ID left outer join Users user4_ on order3_.Assigne=user4_.ID left outer join Users user5_ on order3_.Customer=user5_.ID left outer join OrderStatuses orderstatu6_ on order3_.OrderStatusRef=orderstatu6_.ID left outer join Products product7_ on this_.ProductRef=product7_.ID where this_.OrderRef=?
[2017-10-14 14:08:51,831]DEBUG  9618[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:51,832]DEBUG  9619[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Dimension#5], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#55], null, null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Product#5], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderItem#9]
[2017-10-14 14:08:51,832]DEBUG  9619[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:51,832]DEBUG  9619[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,832]DEBUG  9619[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:51,832]DEBUG  9619[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:51,832]DEBUG  9619[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:51,833]DEBUG  9620[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:51,833]DEBUG  9620[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:51,833]DEBUG  9620[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:51,833]DEBUG  9620[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=5, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 14:08:51,833]DEBUG  9620[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#5, id=9, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#5, order=com.softserveinc.edu.oms.domain.entities.Order#55, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 14:08:51,833]DEBUG  9620[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#5, id=10, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#5, order=com.softserveinc.edu.oms.domain.entities.Order#56, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 14:08:51,833]DEBUG  9620[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=5, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 14:08:51,833]DEBUG  9620[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=55, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,833]DEBUG  9620[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=56, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,833]DEBUG  9620[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,834]DEBUG  9621[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 14:08:51,834]DEBUG  9621[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,834]DEBUG  9621[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:51,834]DEBUG  9621[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:51,834]DEBUG  9621[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:51,834]DEBUG  9621[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:51,834]DEBUG  9621[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:51,835]DEBUG  9622[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=5, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 14:08:51,835]DEBUG  9622[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#5, id=9, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#5, order=com.softserveinc.edu.oms.domain.entities.Order#55, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 14:08:51,835]DEBUG  9622[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#5, id=10, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#5, order=com.softserveinc.edu.oms.domain.entities.Order#56, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 14:08:51,835]DEBUG  9622[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=5, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 14:08:51,835]DEBUG  9622[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=55, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,835]DEBUG  9622[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=56, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,835]DEBUG  9622[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,835]DEBUG  9622[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 14:08:51,836]DEBUG  9623[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,836]DEBUG  9623[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:51,836]DEBUG  9623[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:51,836]DEBUG  9623[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:51,836]DEBUG  9623[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:51,836]DEBUG  9623[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:51,836]DEBUG  9623[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=5, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 14:08:51,836]DEBUG  9623[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#5, id=9, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#5, order=com.softserveinc.edu.oms.domain.entities.Order#55, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 14:08:51,836]DEBUG  9623[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#5, id=10, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#5, order=com.softserveinc.edu.oms.domain.entities.Order#56, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 14:08:51,837]DEBUG  9624[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=5, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 14:08:51,837]DEBUG  9624[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=55, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,837]DEBUG  9624[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=56, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,837]DEBUG  9624[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,837]DEBUG  9624[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 14:08:51,837]DEBUG  9624[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,837]DEBUG  9624[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:51,837]DEBUG  9624[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:51,838]DEBUG  9625[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:51,838]DEBUG  9625[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:51,838]DEBUG  9625[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:51,838]DEBUG  9625[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=5, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 14:08:51,838]DEBUG  9625[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#5, id=9, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#5, order=com.softserveinc.edu.oms.domain.entities.Order#55, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 14:08:51,838]DEBUG  9625[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#5, id=10, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#5, order=com.softserveinc.edu.oms.domain.entities.Order#56, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 14:08:51,838]DEBUG  9625[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=5, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 14:08:51,838]DEBUG  9625[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=55, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,838]DEBUG  9625[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=56, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,838]DEBUG  9625[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,839]DEBUG  9626[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 14:08:51,839]DEBUG  9626[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,839]DEBUG  9626[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:51,839]DEBUG  9626[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:51,839]DEBUG  9626[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:51,839]DEBUG  9626[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:51,839]DEBUG  9626[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:51,840]DEBUG  9627[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=5, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 14:08:51,840]DEBUG  9627[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#5, id=9, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#5, order=com.softserveinc.edu.oms.domain.entities.Order#55, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 14:08:51,840]DEBUG  9627[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#5, id=10, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#5, order=com.softserveinc.edu.oms.domain.entities.Order#56, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 14:08:51,840]DEBUG  9627[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=5, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 14:08:51,840]DEBUG  9627[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=55, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,840]DEBUG  9627[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=56, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,840]DEBUG  9627[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,840]DEBUG  9627[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 14:08:51,841]DEBUG  9628[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,841]DEBUG  9628[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:51,841]DEBUG  9628[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:51,841]DEBUG  9628[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:51,841]DEBUG  9628[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:51,841]DEBUG  9628[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:51,841]DEBUG  9628[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=5, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 14:08:51,841]DEBUG  9628[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#5, id=9, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#5, order=com.softserveinc.edu.oms.domain.entities.Order#55, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 14:08:51,841]DEBUG  9628[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#5, id=10, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#5, order=com.softserveinc.edu.oms.domain.entities.Order#56, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 14:08:51,842]DEBUG  9629[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=5, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 14:08:51,842]DEBUG  9629[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=55, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,842]DEBUG  9629[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=56, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,842]DEBUG  9629[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,842]DEBUG  9629[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 14:08:51,842]DEBUG  9629[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,842]DEBUG  9629[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:51,842]DEBUG  9629[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:51,843]DEBUG  9630[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:51,843]DEBUG  9630[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:51,843]DEBUG  9630[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:51,843]DEBUG  9630[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=5, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 14:08:51,843]DEBUG  9630[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#5, id=9, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#5, order=com.softserveinc.edu.oms.domain.entities.Order#55, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 14:08:51,843]DEBUG  9630[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#5, id=10, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#5, order=com.softserveinc.edu.oms.domain.entities.Order#56, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 14:08:51,843]DEBUG  9630[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=5, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 14:08:51,843]DEBUG  9630[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=55, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,843]DEBUG  9630[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=56, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,844]DEBUG  9631[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,844]DEBUG  9631[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 14:08:51,844]DEBUG  9631[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,844]DEBUG  9631[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:51,844]DEBUG  9631[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:51,844]DEBUG  9631[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:51,844]DEBUG  9631[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:51,844]DEBUG  9631[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:51,845]DEBUG  9632[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=5, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 14:08:51,845]DEBUG  9632[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#5, id=9, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#5, order=com.softserveinc.edu.oms.domain.entities.Order#55, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 14:08:51,845]DEBUG  9632[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#5, id=10, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#5, order=com.softserveinc.edu.oms.domain.entities.Order#56, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 14:08:51,845]DEBUG  9632[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=5, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 14:08:51,845]DEBUG  9632[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=55, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,845]DEBUG  9632[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=56, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,845]DEBUG  9632[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,845]DEBUG  9632[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 14:08:51,846]DEBUG  9633[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,846]DEBUG  9633[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:51,846]DEBUG  9633[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:51,846]DEBUG  9633[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:51,846]DEBUG  9633[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:51,846]DEBUG  9633[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:51,846]DEBUG  9633[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=5, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 14:08:51,846]DEBUG  9633[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#5, id=9, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#5, order=com.softserveinc.edu.oms.domain.entities.Order#55, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 14:08:51,847]DEBUG  9634[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#5, id=10, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#5, order=com.softserveinc.edu.oms.domain.entities.Order#56, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 14:08:51,847]DEBUG  9634[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=5, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 14:08:51,847]DEBUG  9634[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=55, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,847]DEBUG  9634[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=56, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,847]DEBUG  9634[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,847]DEBUG  9634[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 14:08:51,847]DEBUG  9634[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,847]DEBUG  9634[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@74c63c6d testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@7bb5527f, testMethod = testFindByOrder@OrderItemDaoTest, testException = [null]]]
[2017-10-14 14:08:51,847]DEBUG  9634[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 14:08:51,848]DEBUG  9635[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@1c30284c]
[2017-10-14 14:08:51,848]DEBUG  9635[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 14:08:51,879]DEBUG  9666[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 14:08:51,879]DEBUG  9666[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:51,879]DEBUG  9666[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@1c30284c] after transaction
[2017-10-14 14:08:51,879]DEBUG  9666[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 14:08:51,880]DEBUG  9667[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 14:08:51,880]DEBUG  9667[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:51,880] INFO  9667[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@74c63c6d testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@7bb5527f, testMethod = testFindByOrder@OrderItemDaoTest, testException = [null]]]
[2017-10-14 14:08:51,881]DEBUG  9668[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@74c63c6d testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@7bb5527f, testMethod = testFindByOrder@OrderItemDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 14:08:51,881]DEBUG  9668[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2017-10-14 14:08:51,882]DEBUG  9669[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2017-10-14 14:08:51,882]DEBUG  9669[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@74c63c6d testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@3c6df1db, testMethod = [null], testException = [null]]].
[2017-10-14 14:08:51,882]DEBUG  9669[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 14:08:51,882]DEBUG  9669[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 14:08:51,883]DEBUG  9670[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 14:08:51,883]DEBUG  9670[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 14:08:51,883]DEBUG  9670[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 14:08:51,883]DEBUG  9670[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 14:08:51,883]DEBUG  9670[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 14:08:51,883]DEBUG  9670[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 14:08:51,884]DEBUG  9671[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 14:08:51,884]DEBUG  9671[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 14:08:51,884]DEBUG  9671[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 14:08:51,884]DEBUG  9671[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 14:08:51,884]DEBUG  9671[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 14:08:51,885]DEBUG  9672[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 14:08:51,885]DEBUG  9672[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 14:08:51,885]DEBUG  9672[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 14:08:51,885]DEBUG  9672[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 14:08:51,885]DEBUG  9672[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 14:08:51,886]DEBUG  9673[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 14:08:51,886]DEBUG  9673[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 14:08:51,886]DEBUG  9673[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 14:08:51,886]DEBUG  9673[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 14:08:51,886]DEBUG  9673[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@3c6df1db]
[2017-10-14 14:08:51,887]DEBUG  9674[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindById' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:51,887]DEBUG  9674[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@74c63c6d testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@3c6df1db, testMethod = testFindById@OrderItemDaoTest, testException = [null]]]
[2017-10-14 14:08:51,888]DEBUG  9675[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 14:08:51,888]DEBUG  9675[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:51,889]DEBUG  9676[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15079793318
[2017-10-14 14:08:51,889]DEBUG  9676[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@29f8b4cd] for Hibernate transaction
[2017-10-14 14:08:51,889]DEBUG  9676[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@29f8b4cd]
[2017-10-14 14:08:51,889]DEBUG  9676[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 14:08:51,889]DEBUG  9676[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 14:08:51,890]DEBUG  9677[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 14:08:51,890]DEBUG  9677[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@74c63c6d testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@3c6df1db, testMethod = testFindById@OrderItemDaoTest, testException = [null]]]
[2017-10-14 14:08:51,890] INFO  9677[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (6): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@48ad0abe]; rollback [true]
[2017-10-14 14:08:51,890]DEBUG  9677[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,890]DEBUG  9677[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 14:08:51,891]DEBUG  9678[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,891]DEBUG  9678[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,892]DEBUG  9679[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 14:08:51,892]DEBUG  9679[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,893]DEBUG  9680[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,893]DEBUG  9680[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 14:08:51,893]DEBUG  9680[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,894]DEBUG  9681[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,894]DEBUG  9681[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 14:08:51,894]DEBUG  9681[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,895]DEBUG  9682[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,895]DEBUG  9682[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 14:08:51,895]DEBUG  9682[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,896]DEBUG  9683[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,896]DEBUG  9683[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 14:08:51,896]DEBUG  9683[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,897]DEBUG  9684[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,897]DEBUG  9684[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 14:08:51,897]DEBUG  9684[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,898]DEBUG  9685[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,898]DEBUG  9685[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 14:08:51,898]DEBUG  9685[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,898]DEBUG  9685[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,898]DEBUG  9685[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 14:08:51,899]DEBUG  9686[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,899]DEBUG  9686[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:51,899]DEBUG  9686[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,899]DEBUG  9686[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:51,900]DEBUG  9687[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 57
[2017-10-14 14:08:51,900]DEBUG  9687[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,900]DEBUG  9687[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:51,900]DEBUG  9687[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,900]DEBUG  9687[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:51,901]DEBUG  9688[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 58
[2017-10-14 14:08:51,901]DEBUG  9688[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,901]DEBUG  9688[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:51,901]DEBUG  9688[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,901]DEBUG  9688[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 14:08:51,901]DEBUG  9688[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 6
[2017-10-14 14:08:51,902]DEBUG  9689[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,902]DEBUG  9689[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:51,902]DEBUG  9689[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,902]DEBUG  9689[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Dimensions (DimensionName, NumberOfProducts) values (?, ?)
[2017-10-14 14:08:51,902]DEBUG  9689[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 6
[2017-10-14 14:08:51,902]DEBUG  9689[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,903]DEBUG  9690[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:51,903]DEBUG  9690[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,903]DEBUG  9690[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderItems (Cost, DimensionRef, ItemPrice, OrderRef, ProductRef, Quantity) values (?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:51,903]DEBUG  9690[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 11
[2017-10-14 14:08:51,903]DEBUG  9690[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,903]DEBUG  9690[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:51,904]DEBUG  9691[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,904]DEBUG  9691[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderItems (Cost, DimensionRef, ItemPrice, OrderRef, ProductRef, Quantity) values (?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:51,904]DEBUG  9691[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 12
[2017-10-14 14:08:51,904]DEBUG  9691[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,904]DEBUG  9691[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:51,905]DEBUG  9692[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:51,905]DEBUG  9692[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:51,905]DEBUG  9692[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:51,905]DEBUG  9692[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:51,905]DEBUG  9692[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=57, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,905]DEBUG  9692[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=6, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 14:08:51,905]DEBUG  9692[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=58, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,905]DEBUG  9692[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#6, id=11, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#6, order=com.softserveinc.edu.oms.domain.entities.Order#57, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 14:08:51,905]DEBUG  9692[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=6, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 14:08:51,906]DEBUG  9693[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#6, id=12, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#6, order=com.softserveinc.edu.oms.domain.entities.Order#58, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 14:08:51,906]DEBUG  9693[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,906]DEBUG  9693[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 14:08:51,906]DEBUG  9693[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,906]DEBUG  9693[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:51,906]DEBUG  9693[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:51,906]DEBUG  9693[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:51,906]DEBUG  9693[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:51,907]DEBUG  9694[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:51,907]DEBUG  9694[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=57, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,907]DEBUG  9694[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=6, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 14:08:51,907]DEBUG  9694[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=58, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,907]DEBUG  9694[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#6, id=11, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#6, order=com.softserveinc.edu.oms.domain.entities.Order#57, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 14:08:51,907]DEBUG  9694[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=6, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 14:08:51,907]DEBUG  9694[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#6, id=12, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#6, order=com.softserveinc.edu.oms.domain.entities.Order#58, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 14:08:51,907]DEBUG  9694[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,907]DEBUG  9694[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 14:08:51,908]DEBUG  9695[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,908]DEBUG  9695[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:51,908]DEBUG  9695[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:51,908]DEBUG  9695[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:51,908]DEBUG  9695[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:51,908]DEBUG  9695[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:51,908]DEBUG  9695[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=57, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,908]DEBUG  9695[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=6, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 14:08:51,908]DEBUG  9695[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=58, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,909]DEBUG  9696[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#6, id=11, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#6, order=com.softserveinc.edu.oms.domain.entities.Order#57, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 14:08:51,909]DEBUG  9696[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=6, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 14:08:51,909]DEBUG  9696[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#6, id=12, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#6, order=com.softserveinc.edu.oms.domain.entities.Order#58, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 14:08:51,909]DEBUG  9696[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,909]DEBUG  9696[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 14:08:51,909]DEBUG  9696[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,909]DEBUG  9696[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:51,910]DEBUG  9697[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:51,910]DEBUG  9697[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:51,910]DEBUG  9697[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:51,910]DEBUG  9697[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:51,910]DEBUG  9697[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=57, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,910]DEBUG  9697[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=6, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 14:08:51,910]DEBUG  9697[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=58, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,910]DEBUG  9697[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#6, id=11, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#6, order=com.softserveinc.edu.oms.domain.entities.Order#57, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 14:08:51,910]DEBUG  9697[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=6, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 14:08:51,910]DEBUG  9697[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#6, id=12, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#6, order=com.softserveinc.edu.oms.domain.entities.Order#58, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 14:08:51,911]DEBUG  9698[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,911]DEBUG  9698[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 14:08:51,911]DEBUG  9698[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,911]DEBUG  9698[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:51,911]DEBUG  9698[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:51,911]DEBUG  9698[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:51,911]DEBUG  9698[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:51,912]DEBUG  9699[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:51,912]DEBUG  9699[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=57, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,912]DEBUG  9699[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=6, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 14:08:51,912]DEBUG  9699[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=58, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,912]DEBUG  9699[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#6, id=11, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#6, order=com.softserveinc.edu.oms.domain.entities.Order#57, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 14:08:51,912]DEBUG  9699[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=6, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 14:08:51,912]DEBUG  9699[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#6, id=12, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#6, order=com.softserveinc.edu.oms.domain.entities.Order#58, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 14:08:51,912]DEBUG  9699[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,912]DEBUG  9699[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 14:08:51,913]DEBUG  9700[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,913]DEBUG  9700[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:51,913]DEBUG  9700[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:51,913]DEBUG  9700[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:51,913]DEBUG  9700[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:51,913]DEBUG  9700[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:51,913]DEBUG  9700[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=57, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,913]DEBUG  9700[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=6, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 14:08:51,913]DEBUG  9700[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=58, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,913]DEBUG  9700[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#6, id=11, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#6, order=com.softserveinc.edu.oms.domain.entities.Order#57, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 14:08:51,914]DEBUG  9701[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=6, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 14:08:51,914]DEBUG  9701[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#6, id=12, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#6, order=com.softserveinc.edu.oms.domain.entities.Order#58, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 14:08:51,914]DEBUG  9701[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,914]DEBUG  9701[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 14:08:51,914]DEBUG  9701[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,914]DEBUG  9701[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:51,914]DEBUG  9701[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:51,915]DEBUG  9702[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:51,915]DEBUG  9702[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:51,915]DEBUG  9702[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:51,915]DEBUG  9702[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=57, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,915]DEBUG  9702[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=6, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 14:08:51,915]DEBUG  9702[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=58, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,915]DEBUG  9702[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#6, id=11, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#6, order=com.softserveinc.edu.oms.domain.entities.Order#57, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 14:08:51,915]DEBUG  9702[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=6, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 14:08:51,915]DEBUG  9702[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#6, id=12, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#6, order=com.softserveinc.edu.oms.domain.entities.Order#58, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 14:08:51,915]DEBUG  9702[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,915]DEBUG  9702[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 14:08:51,916]DEBUG  9703[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,916]DEBUG  9703[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:51,916]DEBUG  9703[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:51,916]DEBUG  9703[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:51,916]DEBUG  9703[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:51,916]DEBUG  9703[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:51,916]DEBUG  9703[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=57, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,916]DEBUG  9703[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=6, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 14:08:51,917]DEBUG  9704[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=58, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,917]DEBUG  9704[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#6, id=11, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#6, order=com.softserveinc.edu.oms.domain.entities.Order#57, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 14:08:51,917]DEBUG  9704[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=6, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 14:08:51,917]DEBUG  9704[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#6, id=12, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#6, order=com.softserveinc.edu.oms.domain.entities.Order#58, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 14:08:51,917]DEBUG  9704[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,917]DEBUG  9704[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 14:08:51,917]DEBUG  9704[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,917]DEBUG  9704[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:51,918]DEBUG  9705[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:51,918]DEBUG  9705[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:51,918]DEBUG  9705[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:51,918]DEBUG  9705[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:51,918]DEBUG  9705[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=57, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,918]DEBUG  9705[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=6, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 14:08:51,918]DEBUG  9705[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=58, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:51,918]DEBUG  9705[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#6, id=11, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#6, order=com.softserveinc.edu.oms.domain.entities.Order#57, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 14:08:51,918]DEBUG  9705[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=6, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 14:08:51,919]DEBUG  9706[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#6, id=12, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#6, order=com.softserveinc.edu.oms.domain.entities.Order#58, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 14:08:51,919]DEBUG  9706[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,919]DEBUG  9706[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 14:08:51,919]DEBUG  9706[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,919]DEBUG  9706[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@74c63c6d testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@3c6df1db, testMethod = testFindById@OrderItemDaoTest, testException = [null]]]
[2017-10-14 14:08:51,919]DEBUG  9706[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 14:08:51,919]DEBUG  9706[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@29f8b4cd]
[2017-10-14 14:08:51,919]DEBUG  9706[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 14:08:51,962]DEBUG  9749[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 14:08:51,962]DEBUG  9749[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:51,963]DEBUG  9750[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@29f8b4cd] after transaction
[2017-10-14 14:08:51,963]DEBUG  9750[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 14:08:51,963]DEBUG  9750[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 14:08:51,963]DEBUG  9750[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:51,964] INFO  9751[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@74c63c6d testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@3c6df1db, testMethod = testFindById@OrderItemDaoTest, testException = [null]]]
[2017-10-14 14:08:51,965]DEBUG  9752[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@74c63c6d testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@3c6df1db, testMethod = testFindById@OrderItemDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 14:08:51,965]DEBUG  9752[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2017-10-14 14:08:51,965]DEBUG  9752[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2017-10-14 14:08:51,970]DEBUG  9757[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@74c63c6d testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@16c999e8, testMethod = [null], testException = [null]]].
[2017-10-14 14:08:51,971]DEBUG  9758[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 14:08:51,971]DEBUG  9758[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 14:08:51,971]DEBUG  9758[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 14:08:51,971]DEBUG  9758[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 14:08:51,971]DEBUG  9758[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 14:08:51,972]DEBUG  9759[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 14:08:51,972]DEBUG  9759[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 14:08:51,972]DEBUG  9759[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 14:08:51,972]DEBUG  9759[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 14:08:51,972]DEBUG  9759[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 14:08:51,973]DEBUG  9760[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 14:08:51,973]DEBUG  9760[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 14:08:51,973]DEBUG  9760[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 14:08:51,973]DEBUG  9760[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 14:08:51,973]DEBUG  9760[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 14:08:51,973]DEBUG  9760[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 14:08:51,974]DEBUG  9761[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 14:08:51,974]DEBUG  9761[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 14:08:51,974]DEBUG  9761[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 14:08:51,974]DEBUG  9761[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 14:08:51,974]DEBUG  9761[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 14:08:51,975]DEBUG  9762[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 14:08:51,975]DEBUG  9762[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@16c999e8]
[2017-10-14 14:08:51,976]DEBUG  9763[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testContextFile' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:51,976]DEBUG  9763[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@74c63c6d testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@16c999e8, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2017-10-14 14:08:51,976]DEBUG  9763[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 14:08:51,977]DEBUG  9764[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testContextFile]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:51,977]DEBUG  9764[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15079793319
[2017-10-14 14:08:51,977]DEBUG  9764[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@8e20e85] for Hibernate transaction
[2017-10-14 14:08:51,978]DEBUG  9765[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@8e20e85]
[2017-10-14 14:08:51,978]DEBUG  9765[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 14:08:51,978]DEBUG  9765[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 14:08:51,978]DEBUG  9765[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 14:08:51,979]DEBUG  9766[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@74c63c6d testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@16c999e8, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2017-10-14 14:08:51,979] INFO  9766[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (7): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@48ad0abe]; rollback [true]
[2017-10-14 14:08:51,979]DEBUG  9766[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,979]DEBUG  9766[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 14:08:51,980]DEBUG  9767[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,980]DEBUG  9767[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,981]DEBUG  9768[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 14:08:51,981]DEBUG  9768[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,981]DEBUG  9768[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,982]DEBUG  9769[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 14:08:51,982]DEBUG  9769[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,982]DEBUG  9769[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,983]DEBUG  9770[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 14:08:51,983]DEBUG  9770[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,984]DEBUG  9771[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,984]DEBUG  9771[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 14:08:51,984]DEBUG  9771[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,985]DEBUG  9772[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,985]DEBUG  9772[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 14:08:51,985]DEBUG  9772[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,986]DEBUG  9773[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,986]DEBUG  9773[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 14:08:51,986]DEBUG  9773[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,987]DEBUG  9774[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,987]DEBUG  9774[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 14:08:51,987]DEBUG  9774[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,988]DEBUG  9775[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,988]DEBUG  9775[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 14:08:51,988]DEBUG  9775[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,989]DEBUG  9776[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:51,989]DEBUG  9776[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,989]DEBUG  9776[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:51,990]DEBUG  9777[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 59
[2017-10-14 14:08:51,991]DEBUG  9778[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,991]DEBUG  9778[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:51,991]DEBUG  9778[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,992]DEBUG  9779[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:51,992]DEBUG  9779[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 60
[2017-10-14 14:08:51,993]DEBUG  9780[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,993]DEBUG  9780[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:51,993]DEBUG  9780[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,994]DEBUG  9781[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 14:08:51,994]DEBUG  9781[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 7
[2017-10-14 14:08:51,995]DEBUG  9782[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,995]DEBUG  9782[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:51,995]DEBUG  9782[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,996]DEBUG  9783[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Dimensions (DimensionName, NumberOfProducts) values (?, ?)
[2017-10-14 14:08:51,996]DEBUG  9783[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 7
[2017-10-14 14:08:51,997]DEBUG  9784[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,997]DEBUG  9784[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:51,997]DEBUG  9784[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,998]DEBUG  9785[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderItems (Cost, DimensionRef, ItemPrice, OrderRef, ProductRef, Quantity) values (?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:51,998]DEBUG  9785[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 13
[2017-10-14 14:08:51,998]DEBUG  9785[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,998]DEBUG  9785[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:51,999]DEBUG  9786[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:51,999]DEBUG  9786[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderItems (Cost, DimensionRef, ItemPrice, OrderRef, ProductRef, Quantity) values (?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:51,999]DEBUG  9786[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 14
[2017-10-14 14:08:51,999]DEBUG  9786[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:51,999]DEBUG  9786[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:51,999]DEBUG  9786[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:52,000]DEBUG  9787[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:52,000]DEBUG  9787[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:52,000]DEBUG  9787[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:52,000]DEBUG  9787[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=7, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 14:08:52,000]DEBUG  9787[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#7, id=14, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#7, order=com.softserveinc.edu.oms.domain.entities.Order#60, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 14:08:52,000]DEBUG  9787[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=59, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:52,000]DEBUG  9787[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=60, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:52,000]DEBUG  9787[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=7, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 14:08:52,001]DEBUG  9788[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#7, id=13, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#7, order=com.softserveinc.edu.oms.domain.entities.Order#59, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 14:08:52,001]DEBUG  9788[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:52,001]DEBUG  9788[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 14:08:52,001]DEBUG  9788[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:52,001]DEBUG  9788[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:52,001]DEBUG  9788[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:52,002]DEBUG  9789[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:52,002]DEBUG  9789[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:52,002]DEBUG  9789[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:52,002]DEBUG  9789[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=7, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 14:08:52,002]DEBUG  9789[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#7, id=14, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#7, order=com.softserveinc.edu.oms.domain.entities.Order#60, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 14:08:52,002]DEBUG  9789[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=59, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:52,002]DEBUG  9789[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=60, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:52,002]DEBUG  9789[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=7, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 14:08:52,002]DEBUG  9789[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#7, id=13, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#7, order=com.softserveinc.edu.oms.domain.entities.Order#59, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 14:08:52,002]DEBUG  9789[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:52,003]DEBUG  9790[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 14:08:52,003]DEBUG  9790[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:52,003]DEBUG  9790[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:52,003]DEBUG  9790[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:52,003]DEBUG  9790[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:52,003]DEBUG  9790[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:52,003]DEBUG  9790[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:52,003]DEBUG  9790[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=7, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 14:08:52,004]DEBUG  9791[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#7, id=14, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#7, order=com.softserveinc.edu.oms.domain.entities.Order#60, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 14:08:52,004]DEBUG  9791[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=59, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:52,004]DEBUG  9791[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=60, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:52,004]DEBUG  9791[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=7, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 14:08:52,004]DEBUG  9791[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#7, id=13, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#7, order=com.softserveinc.edu.oms.domain.entities.Order#59, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 14:08:52,004]DEBUG  9791[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:52,004]DEBUG  9791[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 14:08:52,004]DEBUG  9791[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:52,005]DEBUG  9792[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:52,005]DEBUG  9792[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:52,005]DEBUG  9792[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:52,005]DEBUG  9792[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:52,005]DEBUG  9792[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:52,005]DEBUG  9792[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=7, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 14:08:52,005]DEBUG  9792[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#7, id=14, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#7, order=com.softserveinc.edu.oms.domain.entities.Order#60, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 14:08:52,005]DEBUG  9792[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=59, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:52,005]DEBUG  9792[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=60, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:52,005]DEBUG  9792[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=7, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 14:08:52,006]DEBUG  9793[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#7, id=13, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#7, order=com.softserveinc.edu.oms.domain.entities.Order#59, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 14:08:52,006]DEBUG  9793[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:52,006]DEBUG  9793[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 14:08:52,006]DEBUG  9793[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:52,006]DEBUG  9793[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:52,006]DEBUG  9793[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:52,006]DEBUG  9793[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:52,007]DEBUG  9794[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:52,007]DEBUG  9794[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:52,007]DEBUG  9794[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=7, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 14:08:52,007]DEBUG  9794[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#7, id=14, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#7, order=com.softserveinc.edu.oms.domain.entities.Order#60, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 14:08:52,007]DEBUG  9794[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=59, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:52,007]DEBUG  9794[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=60, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:52,007]DEBUG  9794[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=7, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 14:08:52,007]DEBUG  9794[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#7, id=13, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#7, order=com.softserveinc.edu.oms.domain.entities.Order#59, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 14:08:52,007]DEBUG  9794[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:52,007]DEBUG  9794[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 14:08:52,008]DEBUG  9795[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:52,008]DEBUG  9795[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:52,008]DEBUG  9795[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:52,008]DEBUG  9795[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:52,008]DEBUG  9795[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:52,008]DEBUG  9795[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:52,008]DEBUG  9795[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=7, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 14:08:52,008]DEBUG  9795[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#7, id=14, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#7, order=com.softserveinc.edu.oms.domain.entities.Order#60, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 14:08:52,008]DEBUG  9795[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=59, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:52,009]DEBUG  9796[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=60, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:52,009]DEBUG  9796[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=7, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 14:08:52,009]DEBUG  9796[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#7, id=13, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#7, order=com.softserveinc.edu.oms.domain.entities.Order#59, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 14:08:52,009]DEBUG  9796[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:52,009]DEBUG  9796[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 14:08:52,009]DEBUG  9796[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:52,009]DEBUG  9796[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:52,009]DEBUG  9796[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:52,010]DEBUG  9797[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:52,010]DEBUG  9797[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:52,010]DEBUG  9797[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:52,010]DEBUG  9797[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=7, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 14:08:52,010]DEBUG  9797[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#7, id=14, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#7, order=com.softserveinc.edu.oms.domain.entities.Order#60, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 14:08:52,010]DEBUG  9797[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=59, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:52,010]DEBUG  9797[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=60, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:52,010]DEBUG  9797[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=7, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 14:08:52,010]DEBUG  9797[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#7, id=13, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#7, order=com.softserveinc.edu.oms.domain.entities.Order#59, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 14:08:52,010]DEBUG  9797[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:52,011]DEBUG  9798[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 14:08:52,011]DEBUG  9798[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:52,011]DEBUG  9798[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:52,011]DEBUG  9798[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:52,011]DEBUG  9798[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:52,011]DEBUG  9798[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:52,011]DEBUG  9798[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:52,011]DEBUG  9798[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=7, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 14:08:52,012]DEBUG  9799[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#7, id=14, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#7, order=com.softserveinc.edu.oms.domain.entities.Order#60, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 14:08:52,012]DEBUG  9799[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=59, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:52,012]DEBUG  9799[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=60, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:52,012]DEBUG  9799[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=7, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 14:08:52,012]DEBUG  9799[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#7, id=13, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#7, order=com.softserveinc.edu.oms.domain.entities.Order#59, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 14:08:52,012]DEBUG  9799[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:52,012]DEBUG  9799[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 14:08:52,012]DEBUG  9799[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:52,012]DEBUG  9799[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:52,013]DEBUG  9800[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:52,013]DEBUG  9800[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 14:08:52,013]DEBUG  9800[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:52,013]DEBUG  9800[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:52,013]DEBUG  9800[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=7, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 14:08:52,013]DEBUG  9800[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#7, id=14, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#7, order=com.softserveinc.edu.oms.domain.entities.Order#60, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 14:08:52,013]DEBUG  9800[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=59, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:52,013]DEBUG  9800[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=60, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 14:08:52,013]DEBUG  9800[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=7, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 14:08:52,014]DEBUG  9801[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#7, id=13, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#7, order=com.softserveinc.edu.oms.domain.entities.Order#59, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 14:08:52,014]DEBUG  9801[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:52,014]DEBUG  9801[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 14:08:52,014]DEBUG  9801[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:52,014]DEBUG  9801[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@74c63c6d testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@16c999e8, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2017-10-14 14:08:52,014]DEBUG  9801[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 14:08:52,014]DEBUG  9801[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@8e20e85]
[2017-10-14 14:08:52,014]DEBUG  9801[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 14:08:52,054]DEBUG  9841[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 14:08:52,054]DEBUG  9841[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:52,055]DEBUG  9842[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@8e20e85] after transaction
[2017-10-14 14:08:52,055]DEBUG  9842[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 14:08:52,055]DEBUG  9842[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 14:08:52,055]DEBUG  9842[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:52,056] INFO  9843[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@74c63c6d testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@16c999e8, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2017-10-14 14:08:52,057]DEBUG  9844[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@74c63c6d testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@16c999e8, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 14:08:52,057]DEBUG  9844[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestClass(DirtiesContextTestExecutionListener.java:113) - After test class: context [[TestContext@74c63c6d testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = [null], testMethod = [null], testException = [null]]], dirtiesContext [false].
[2017-10-14 14:08:52,059]DEBUG  9846[main] - org.springframework.test.context.junit4.SpringJUnit4ClassRunner.<init>(SpringJUnit4ClassRunner.java:106) - SpringJUnit4ClassRunner constructor called with [class com.softserveinc.edu.oms.persistence.dao.ProductDaoTest].
[2017-10-14 14:08:52,060] INFO  9847[main] - org.springframework.test.context.TestContextManager.retrieveTestExecutionListeners(TestContextManager.java:185) - @TestExecutionListeners is not present for class [class com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]: using defaults.
[2017-10-14 14:08:52,060]DEBUG  9847[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2017-10-14 14:08:52,060]DEBUG  9847[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2017-10-14 14:08:52,064]DEBUG  9851[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2017-10-14 14:08:52,065]DEBUG  9852[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2017-10-14 14:08:52,065]DEBUG  9852[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2017-10-14 14:08:52,065]DEBUG  9852[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2017-10-14 14:08:52,071]DEBUG  9858[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2017-10-14 14:08:52,072]DEBUG  9859[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2017-10-14 14:08:52,072]DEBUG  9859[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@50a302a5, testMethod = [null], testException = [null]]].
[2017-10-14 14:08:52,080]DEBUG  9867[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 14:08:52,080]DEBUG  9867[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 14:08:52,080]DEBUG  9867[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 14:08:52,080]DEBUG  9867[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 14:08:52,081]DEBUG  9868[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 14:08:52,081]DEBUG  9868[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 14:08:52,081]DEBUG  9868[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 14:08:52,081]DEBUG  9868[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 14:08:52,081]DEBUG  9868[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 14:08:52,081]DEBUG  9868[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]: AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 14:08:52,081]DEBUG  9868[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 14:08:52,082]DEBUG  9869[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 14:08:52,082]DEBUG  9869[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' to bean named 'customerTypeDao'
[2017-10-14 14:08:52,082]DEBUG  9869[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 14:08:52,082]DEBUG  9869[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 14:08:52,082]DEBUG  9869[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' to bean named 'dimensionDao'
[2017-10-14 14:08:52,082]DEBUG  9869[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 14:08:52,083]DEBUG  9870[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 14:08:52,083]DEBUG  9870[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' to bean named 'orderDao'
[2017-10-14 14:08:52,083]DEBUG  9870[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 14:08:52,083]DEBUG  9870[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 14:08:52,083]DEBUG  9870[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' to bean named 'orderItemDao'
[2017-10-14 14:08:52,083]DEBUG  9870[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 14:08:52,083]DEBUG  9870[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 14:08:52,084]DEBUG  9871[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' to bean named 'orderStatusDao'
[2017-10-14 14:08:52,084]DEBUG  9871[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 14:08:52,084]DEBUG  9871[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 14:08:52,084]DEBUG  9871[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' to bean named 'productDao'
[2017-10-14 14:08:52,084]DEBUG  9871[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 14:08:52,084]DEBUG  9871[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 14:08:52,084]DEBUG  9871[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' to bean named 'regionDao'
[2017-10-14 14:08:52,084]DEBUG  9871[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 14:08:52,085]DEBUG  9872[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 14:08:52,085]DEBUG  9872[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' to bean named 'roleDao'
[2017-10-14 14:08:52,085]DEBUG  9872[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 14:08:52,085]DEBUG  9872[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 14:08:52,085]DEBUG  9872[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' to bean named 'userDao'
[2017-10-14 14:08:52,085]DEBUG  9872[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 14:08:52,086]DEBUG  9873[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 14:08:52,086]DEBUG  9873[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' to bean named 'sessionFactory'
[2017-10-14 14:08:52,086]DEBUG  9873[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 14:08:52,087]DEBUG  9874[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByCriterions' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:52,087]DEBUG  9874[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 14:08:52,087]DEBUG  9874[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@50a302a5]
[2017-10-14 14:08:52,088]DEBUG  9875[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.ProductDaoTest.testFindByCriterions()
[2017-10-14 14:08:52,088]DEBUG  9875[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByOneOfCriterions' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:52,088]DEBUG  9875[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.ProductDaoTest.testFindByOneOfCriterions()
[2017-10-14 14:08:52,088]DEBUG  9875[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testInsertOrUpdate' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:52,088]DEBUG  9875[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.ProductDaoTest.testInsertOrUpdate()
[2017-10-14 14:08:52,088]DEBUG  9875[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testDelete' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:52,088]DEBUG  9875[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.ProductDaoTest.testDelete()
[2017-10-14 14:08:52,089]DEBUG  9876[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'setUp' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:52,089]DEBUG  9876[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.ProductDaoTest.setUp() throws java.lang.Exception
[2017-10-14 14:08:52,089]DEBUG  9876[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'tearDown' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:52,089]DEBUG  9876[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.ProductDaoTest.tearDown() throws java.lang.Exception
[2017-10-14 14:08:52,089]DEBUG  9876[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testfindByName' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:52,089]DEBUG  9876[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.ProductDaoTest.testfindByName()
[2017-10-14 14:08:52,090]DEBUG  9877[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testcontainsProductByName' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:52,090]DEBUG  9877[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.ProductDaoTest.testcontainsProductByName()
[2017-10-14 14:08:52,090]DEBUG  9877[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testnumberOfProductByName' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:52,090]DEBUG  9877[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.ProductDaoTest.testnumberOfProductByName()
[2017-10-14 14:08:52,090]DEBUG  9877[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testfindByDescription' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:52,090]DEBUG  9877[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.ProductDaoTest.testfindByDescription()
[2017-10-14 14:08:52,090]DEBUG  9877[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testcontainsProductByDescription' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:52,091]DEBUG  9878[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.ProductDaoTest.testcontainsProductByDescription()
[2017-10-14 14:08:52,091]DEBUG  9878[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testnumberOfProductByDescription' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:52,091]DEBUG  9878[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.ProductDaoTest.testnumberOfProductByDescription()
[2017-10-14 14:08:52,091]DEBUG  9878[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testfindByPrice' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:52,091]DEBUG  9878[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.ProductDaoTest.testfindByPrice()
[2017-10-14 14:08:52,091]DEBUG  9878[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testfindByPriceFromTo' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:52,091]DEBUG  9878[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.ProductDaoTest.testfindByPriceFromTo()
[2017-10-14 14:08:52,092]DEBUG  9879[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetRowCount' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:52,092]DEBUG  9879[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.ProductDaoTest.testGetRowCount()
[2017-10-14 14:08:52,092]DEBUG  9879[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testfindByID' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:52,092]DEBUG  9879[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.ProductDaoTest.testfindByID()
[2017-10-14 14:08:52,092]DEBUG  9879[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testfindByNameSorting' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:52,092]DEBUG  9879[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.ProductDaoTest.testfindByNameSorting()
[2017-10-14 14:08:52,092]DEBUG  9879[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testfindByDescriptionSorting' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:52,093]DEBUG  9880[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.ProductDaoTest.testfindByDescriptionSorting()
[2017-10-14 14:08:52,093]DEBUG  9880[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testfindByPriceFromToSorting' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:52,093]DEBUG  9880[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.ProductDaoTest.testfindByPriceFromToSorting()
[2017-10-14 14:08:52,093]DEBUG  9880[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanDB()
[2017-10-14 14:08:52,093]DEBUG  9880[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanCustomerType()
[2017-10-14 14:08:52,093]DEBUG  9880[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testContextFile' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:52,094]DEBUG  9881[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.testContextFile()
[2017-10-14 14:08:52,094]DEBUG  9881[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanUser()
[2017-10-14 14:08:52,094]DEBUG  9881[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanRole()
[2017-10-14 14:08:52,094]DEBUG  9881[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanRegion()
[2017-10-14 14:08:52,094]DEBUG  9881[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanProduct()
[2017-10-14 14:08:52,094]DEBUG  9881[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrderStatus()
[2017-10-14 14:08:52,094]DEBUG  9881[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrderItem()
[2017-10-14 14:08:52,095]DEBUG  9882[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrder()
[2017-10-14 14:08:52,095]DEBUG  9882[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanDimension()
[2017-10-14 14:08:52,095]DEBUG  9882[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:749) - Found finalize() method - using NO_OVERRIDE
[2017-10-14 14:08:52,095]DEBUG  9882[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:761) - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
[2017-10-14 14:08:52,095]DEBUG  9882[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
[2017-10-14 14:08:52,095]DEBUG  9882[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:766) - Found 'hashCode' method: public native int java.lang.Object.hashCode()
[2017-10-14 14:08:52,096]DEBUG  9883[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
[2017-10-14 14:08:52,096]DEBUG  9883[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
[2017-10-14 14:08:52,096]DEBUG  9883[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
[2017-10-14 14:08:52,096]DEBUG  9883[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2017-10-14 14:08:52,096]DEBUG  9883[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2017-10-14 14:08:52,096]DEBUG  9883[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
[2017-10-14 14:08:52,096]DEBUG  9883[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
[2017-10-14 14:08:52,096]DEBUG  9883[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
[2017-10-14 14:08:52,096]DEBUG  9883[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
[2017-10-14 14:08:52,096]DEBUG  9883[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
[2017-10-14 14:08:52,097]DEBUG  9884[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
[2017-10-14 14:08:52,097]DEBUG  9884[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
[2017-10-14 14:08:52,097]DEBUG  9884[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
[2017-10-14 14:08:52,097]DEBUG  9884[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
[2017-10-14 14:08:52,097]DEBUG  9884[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
[2017-10-14 14:08:52,097]DEBUG  9884[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
[2017-10-14 14:08:52,097]DEBUG  9884[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
[2017-10-14 14:08:52,097]DEBUG  9884[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
[2017-10-14 14:08:52,097]DEBUG  9884[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
[2017-10-14 14:08:52,097]DEBUG  9884[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2017-10-14 14:08:52,098]DEBUG  9885[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
[2017-10-14 14:08:52,098]DEBUG  9885[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
[2017-10-14 14:08:52,098]DEBUG  9885[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
[2017-10-14 14:08:52,098]DEBUG  9885[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
[2017-10-14 14:08:52,109]DEBUG  9896[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByCriterions' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:52,110]DEBUG  9897[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@50a302a5, testMethod = testFindByCriterions@ProductDaoTest, testException = [null]]]
[2017-10-14 14:08:52,110]DEBUG  9897[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.retrieveConfigurationAttributes(TransactionalTestExecutionListener.java:466) - Retrieved @TransactionConfiguration [@org.springframework.test.context.transaction.TransactionConfiguration(transactionManager=transactionManager, defaultRollback=true)] for test class [class com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2017-10-14 14:08:52,110]DEBUG  9897[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.retrieveConfigurationAttributes(TransactionalTestExecutionListener.java:483) - Retrieved TransactionConfigurationAttributes [[TransactionConfigurationAttributes@2ed8aaf5 transactionManagerName = 'transactionManager', defaultRollback = true]] for class [class com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2017-10-14 14:08:52,110]DEBUG  9897[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 14:08:52,111]DEBUG  9898[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByCriterions]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:52,111]DEBUG  9898[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15079793321
[2017-10-14 14:08:52,111]DEBUG  9898[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@12164057] for Hibernate transaction
[2017-10-14 14:08:52,111]DEBUG  9898[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@12164057]
[2017-10-14 14:08:52,111]DEBUG  9898[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 14:08:52,111]DEBUG  9898[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 14:08:52,111]DEBUG  9898[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 14:08:52,111]DEBUG  9898[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@50a302a5, testMethod = testFindByCriterions@ProductDaoTest, testException = [null]]]
[2017-10-14 14:08:52,111] INFO  9898[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (1): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@48ad0abe]; rollback [true]
[2017-10-14 14:08:52,112]DEBUG  9899[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:52,112]DEBUG  9899[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:52,112]DEBUG  9899[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 14:08:52,112]DEBUG  9899[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 8
[2017-10-14 14:08:52,113]DEBUG  9900[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:52,113]DEBUG  9900[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:52,113]DEBUG  9900[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:52,113]DEBUG  9900[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 14:08:52,113]DEBUG  9900[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 9
[2017-10-14 14:08:52,113]DEBUG  9900[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:52,114]DEBUG  9901[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:52,114]DEBUG  9901[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:52,114]DEBUG  9901[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 14:08:52,114]DEBUG  9901[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 10
[2017-10-14 14:08:52,114]DEBUG  9901[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:52,115]DEBUG  9902[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:52,115]DEBUG  9902[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:52,115]DEBUG  9902[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 3 updates, 0 deletions to 3 objects
[2017-10-14 14:08:52,115]DEBUG  9902[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:52,115]DEBUG  9902[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:52,115]DEBUG  9902[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=10, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 14:08:52,115]DEBUG  9902[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=8, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 14:08:52,116]DEBUG  9903[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=9, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 14:08:52,116]DEBUG  9903[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Products
[2017-10-14 14:08:52,116]DEBUG  9903[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:52,116]DEBUG  9903[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 14:08:52,116]DEBUG  9903[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2017-10-14 14:08:52,116]DEBUG  9903[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 14:08:52,116]DEBUG  9903[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2017-10-14 14:08:52,117]DEBUG  9904[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 14:08:52,117]DEBUG  9904[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2017-10-14 14:08:52,117]DEBUG  9904[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:52,117]DEBUG  9904[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:52,118]DEBUG  9905[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductName=? and this_.ProductDescription=?
[2017-10-14 14:08:52,118]DEBUG  9905[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:52,118]DEBUG  9905[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#8]
[2017-10-14 14:08:52,118]DEBUG  9905[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:52,118]DEBUG  9905[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:52,118]DEBUG  9905[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:52,119]DEBUG  9906[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:52,119]DEBUG  9906[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:52,119]DEBUG  9906[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-14 14:08:52,119]DEBUG  9906[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:52,119]DEBUG  9906[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:52,119]DEBUG  9906[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=10, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 14:08:52,119]DEBUG  9906[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=8, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 14:08:52,119]DEBUG  9906[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=9, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 14:08:52,119]DEBUG  9906[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:52,120]DEBUG  9907[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 14:08:52,120]DEBUG  9907[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:52,120]DEBUG  9907[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@50a302a5, testMethod = testFindByCriterions@ProductDaoTest, testException = [null]]]
[2017-10-14 14:08:52,120]DEBUG  9907[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 14:08:52,120]DEBUG  9907[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@12164057]
[2017-10-14 14:08:52,120]DEBUG  9907[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 14:08:52,204]DEBUG  9991[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 14:08:52,205]DEBUG  9992[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:52,205]DEBUG  9992[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@12164057] after transaction
[2017-10-14 14:08:52,205]DEBUG  9992[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 14:08:52,205]DEBUG  9992[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 14:08:52,205]DEBUG  9992[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:52,205] INFO  9992[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@50a302a5, testMethod = testFindByCriterions@ProductDaoTest, testException = [null]]]
[2017-10-14 14:08:52,206]DEBUG  9993[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@50a302a5, testMethod = testFindByCriterions@ProductDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 14:08:52,206]DEBUG  9993[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2017-10-14 14:08:52,206]DEBUG  9993[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2017-10-14 14:08:52,206]DEBUG  9993[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@111a244f, testMethod = [null], testException = [null]]].
[2017-10-14 14:08:52,207]DEBUG  9994[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 14:08:52,207]DEBUG  9994[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 14:08:52,207]DEBUG  9994[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 14:08:52,207]DEBUG  9994[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 14:08:52,207]DEBUG  9994[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 14:08:52,207]DEBUG  9994[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 14:08:52,207]DEBUG  9994[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 14:08:52,207]DEBUG  9994[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 14:08:52,207]DEBUG  9994[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 14:08:52,207]DEBUG  9994[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 14:08:52,207]DEBUG  9994[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 14:08:52,208]DEBUG  9995[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 14:08:52,208]DEBUG  9995[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 14:08:52,208]DEBUG  9995[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 14:08:52,208]DEBUG  9995[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 14:08:52,208]DEBUG  9995[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 14:08:52,208]DEBUG  9995[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 14:08:52,208]DEBUG  9995[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 14:08:52,208]DEBUG  9995[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 14:08:52,208]DEBUG  9995[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 14:08:52,208]DEBUG  9995[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 14:08:52,209]DEBUG  9996[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 14:08:52,209]DEBUG  9996[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@111a244f]
[2017-10-14 14:08:52,210]DEBUG  9997[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByOneOfCriterions' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:52,210]DEBUG  9997[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@111a244f, testMethod = testFindByOneOfCriterions@ProductDaoTest, testException = [null]]]
[2017-10-14 14:08:52,210]DEBUG  9997[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 14:08:52,211]DEBUG  9998[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByOneOfCriterions]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:52,211]DEBUG  9998[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15079793322
[2017-10-14 14:08:52,211]DEBUG  9998[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@276b12b9] for Hibernate transaction
[2017-10-14 14:08:52,211]DEBUG  9998[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@276b12b9]
[2017-10-14 14:08:52,211]DEBUG  9998[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 14:08:52,211]DEBUG  9998[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 14:08:52,211]DEBUG  9998[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 14:08:52,211]DEBUG  9998[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@111a244f, testMethod = testFindByOneOfCriterions@ProductDaoTest, testException = [null]]]
[2017-10-14 14:08:52,212] INFO  9999[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (2): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@48ad0abe]; rollback [true]
[2017-10-14 14:08:52,212]DEBUG  9999[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:52,212]DEBUG  9999[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:52,212]DEBUG  9999[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 14:08:52,263]DEBUG 10050[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 11
[2017-10-14 14:08:52,264]DEBUG 10051[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:52,264]DEBUG 10051[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:52,264]DEBUG 10051[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:52,265]DEBUG 10052[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 14:08:52,265]DEBUG 10052[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 12
[2017-10-14 14:08:52,266]DEBUG 10053[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:52,266]DEBUG 10053[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:52,266]DEBUG 10053[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:52,266]DEBUG 10053[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 14:08:52,267]DEBUG 10054[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 13
[2017-10-14 14:08:52,267]DEBUG 10054[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:52,268]DEBUG 10055[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:52,268]DEBUG 10055[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:52,269]DEBUG 10056[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 3 updates, 0 deletions to 3 objects
[2017-10-14 14:08:52,269]DEBUG 10056[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:52,269]DEBUG 10056[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:52,269]DEBUG 10056[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=12, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 14:08:52,269]DEBUG 10056[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=13, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 14:08:52,270]DEBUG 10057[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=11, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 14:08:52,270]DEBUG 10057[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Products
[2017-10-14 14:08:52,270]DEBUG 10057[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:52,271]DEBUG 10058[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 14:08:52,271]DEBUG 10058[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2017-10-14 14:08:52,271]DEBUG 10058[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 14:08:52,272]DEBUG 10059[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2017-10-14 14:08:52,272]DEBUG 10059[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 14:08:52,272]DEBUG 10059[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2017-10-14 14:08:52,274]DEBUG 10061[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:52,274]DEBUG 10061[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:52,274]DEBUG 10061[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where (this_.ProductName=? or this_.ProductDescription=?)
[2017-10-14 14:08:52,275]DEBUG 10062[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:52,275]DEBUG 10062[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#11]
[2017-10-14 14:08:52,276]DEBUG 10063[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#13]
[2017-10-14 14:08:52,276]DEBUG 10063[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:52,276]DEBUG 10063[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:52,276]DEBUG 10063[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:52,277]DEBUG 10064[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:52,277]DEBUG 10064[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:52,277]DEBUG 10064[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-14 14:08:52,278]DEBUG 10065[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:52,278]DEBUG 10065[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:52,278]DEBUG 10065[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=12, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 14:08:52,278]DEBUG 10065[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=13, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 14:08:52,278]DEBUG 10065[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=11, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 14:08:52,278]DEBUG 10065[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:52,278]DEBUG 10065[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 14:08:52,279]DEBUG 10066[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:52,279]DEBUG 10066[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@111a244f, testMethod = testFindByOneOfCriterions@ProductDaoTest, testException = [null]]]
[2017-10-14 14:08:52,279]DEBUG 10066[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 14:08:52,279]DEBUG 10066[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@276b12b9]
[2017-10-14 14:08:52,279]DEBUG 10066[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 14:08:52,422]DEBUG 10209[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 14:08:52,422]DEBUG 10209[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:52,422]DEBUG 10209[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@276b12b9] after transaction
[2017-10-14 14:08:52,422]DEBUG 10209[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 14:08:52,423]DEBUG 10210[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 14:08:52,423]DEBUG 10210[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:52,423] INFO 10210[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@111a244f, testMethod = testFindByOneOfCriterions@ProductDaoTest, testException = [null]]]
[2017-10-14 14:08:52,425]DEBUG 10212[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@111a244f, testMethod = testFindByOneOfCriterions@ProductDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 14:08:52,425]DEBUG 10212[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2017-10-14 14:08:52,425]DEBUG 10212[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2017-10-14 14:08:52,425]DEBUG 10212[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@71d69e03, testMethod = [null], testException = [null]]].
[2017-10-14 14:08:52,426]DEBUG 10213[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 14:08:52,426]DEBUG 10213[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 14:08:52,426]DEBUG 10213[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 14:08:52,426]DEBUG 10213[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 14:08:52,427]DEBUG 10214[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 14:08:52,427]DEBUG 10214[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 14:08:52,427]DEBUG 10214[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 14:08:52,427]DEBUG 10214[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 14:08:52,427]DEBUG 10214[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 14:08:52,428]DEBUG 10215[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 14:08:52,428]DEBUG 10215[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 14:08:52,428]DEBUG 10215[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 14:08:52,428]DEBUG 10215[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 14:08:52,428]DEBUG 10215[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 14:08:52,429]DEBUG 10216[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 14:08:52,429]DEBUG 10216[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 14:08:52,429]DEBUG 10216[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 14:08:52,429]DEBUG 10216[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 14:08:52,429]DEBUG 10216[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 14:08:52,429]DEBUG 10216[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 14:08:52,430]DEBUG 10217[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 14:08:52,430]DEBUG 10217[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 14:08:52,430]DEBUG 10217[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@71d69e03]
[2017-10-14 14:08:52,431]DEBUG 10218[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testInsertOrUpdate' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:52,431]DEBUG 10218[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@71d69e03, testMethod = testInsertOrUpdate@ProductDaoTest, testException = [null]]]
[2017-10-14 14:08:52,431]DEBUG 10218[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 14:08:52,433]DEBUG 10220[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testInsertOrUpdate]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:52,433]DEBUG 10220[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15079793324
[2017-10-14 14:08:52,433]DEBUG 10220[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@3a2dbd76] for Hibernate transaction
[2017-10-14 14:08:52,433]DEBUG 10220[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@3a2dbd76]
[2017-10-14 14:08:52,434]DEBUG 10221[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 14:08:52,434]DEBUG 10221[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 14:08:52,434]DEBUG 10221[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 14:08:52,434]DEBUG 10221[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@71d69e03, testMethod = testInsertOrUpdate@ProductDaoTest, testException = [null]]]
[2017-10-14 14:08:52,434] INFO 10221[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (3): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@48ad0abe]; rollback [true]
[2017-10-14 14:08:52,435]DEBUG 10222[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:52,435]DEBUG 10222[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:52,438]DEBUG 10225[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 14:08:52,438]DEBUG 10225[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 14
[2017-10-14 14:08:52,438]DEBUG 10225[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:52,439]DEBUG 10226[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:52,439]DEBUG 10226[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:52,439]DEBUG 10226[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 14:08:52,440]DEBUG 10227[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 15
[2017-10-14 14:08:52,440]DEBUG 10227[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:52,440]DEBUG 10227[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:52,441]DEBUG 10228[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:52,441]DEBUG 10228[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 14:08:52,442]DEBUG 10229[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 16
[2017-10-14 14:08:52,442]DEBUG 10229[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:52,443]DEBUG 10230[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:52,443]DEBUG 10230[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:52,444]DEBUG 10231[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 14:08:52,444]DEBUG 10231[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 17
[2017-10-14 14:08:52,445]DEBUG 10232[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:52,445]DEBUG 10232[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:52,445]DEBUG 10232[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:52,446]DEBUG 10233[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 14:08:52,446]DEBUG 10233[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 18
[2017-10-14 14:08:52,446]DEBUG 10233[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:52,446]DEBUG 10233[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:52,446]DEBUG 10233[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:52,447]DEBUG 10234[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 3 updates, 0 deletions to 5 objects
[2017-10-14 14:08:52,447]DEBUG 10234[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:52,447]DEBUG 10234[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:52,447]DEBUG 10234[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=14, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 14:08:52,447]DEBUG 10234[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=15, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 14:08:52,447]DEBUG 10234[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=18, productDescription=productDescription2, active=true, productPrice=800.0, productName=productName2}
[2017-10-14 14:08:52,447]DEBUG 10234[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=16, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 14:08:52,448]DEBUG 10235[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=17, productDescription=productDescription, active=true, productPrice=400.0, productName=productName}
[2017-10-14 14:08:52,448]DEBUG 10235[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Products
[2017-10-14 14:08:52,448]DEBUG 10235[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:52,448]DEBUG 10235[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 14:08:52,449]DEBUG 10236[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2017-10-14 14:08:52,449]DEBUG 10236[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 14:08:52,450]DEBUG 10237[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2017-10-14 14:08:52,450]DEBUG 10237[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 14:08:52,450]DEBUG 10237[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2017-10-14 14:08:52,451]DEBUG 10238[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:52,452]DEBUG 10239[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:52,452]DEBUG 10239[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 14:08:52,453]DEBUG 10240[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:52,453]DEBUG 10240[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@71d69e03, testMethod = testInsertOrUpdate@ProductDaoTest, testException = [null]]]
[2017-10-14 14:08:52,453]DEBUG 10240[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 14:08:52,453]DEBUG 10240[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@3a2dbd76]
[2017-10-14 14:08:52,453]DEBUG 10240[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 14:08:52,521]DEBUG 10308[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 14:08:52,522]DEBUG 10309[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:52,522]DEBUG 10309[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@3a2dbd76] after transaction
[2017-10-14 14:08:52,522]DEBUG 10309[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 14:08:52,522]DEBUG 10309[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 14:08:52,522]DEBUG 10309[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:52,523] INFO 10310[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@71d69e03, testMethod = testInsertOrUpdate@ProductDaoTest, testException = [null]]]
[2017-10-14 14:08:52,524]DEBUG 10311[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@71d69e03, testMethod = testInsertOrUpdate@ProductDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 14:08:52,525]DEBUG 10312[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2017-10-14 14:08:52,525]DEBUG 10312[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2017-10-14 14:08:52,525]DEBUG 10312[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@4dabde1e, testMethod = [null], testException = [null]]].
[2017-10-14 14:08:52,525]DEBUG 10312[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 14:08:52,526]DEBUG 10313[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 14:08:52,526]DEBUG 10313[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 14:08:52,526]DEBUG 10313[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 14:08:52,526]DEBUG 10313[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 14:08:52,526]DEBUG 10313[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 14:08:52,527]DEBUG 10314[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 14:08:52,527]DEBUG 10314[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 14:08:52,527]DEBUG 10314[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 14:08:52,527]DEBUG 10314[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 14:08:52,527]DEBUG 10314[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 14:08:52,528]DEBUG 10315[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 14:08:52,528]DEBUG 10315[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 14:08:52,528]DEBUG 10315[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 14:08:52,528]DEBUG 10315[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 14:08:52,528]DEBUG 10315[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 14:08:52,529]DEBUG 10316[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 14:08:52,529]DEBUG 10316[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 14:08:52,529]DEBUG 10316[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 14:08:52,529]DEBUG 10316[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 14:08:52,529]DEBUG 10316[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 14:08:52,530]DEBUG 10317[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 14:08:52,530]DEBUG 10317[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@4dabde1e]
[2017-10-14 14:08:52,531]DEBUG 10318[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testDelete' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:52,531]DEBUG 10318[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@4dabde1e, testMethod = testDelete@ProductDaoTest, testException = [null]]]
[2017-10-14 14:08:52,531]DEBUG 10318[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 14:08:52,533]DEBUG 10320[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testDelete]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:52,533]DEBUG 10320[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15079793325
[2017-10-14 14:08:52,534]DEBUG 10321[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@52c62ad9] for Hibernate transaction
[2017-10-14 14:08:52,534]DEBUG 10321[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@52c62ad9]
[2017-10-14 14:08:52,534]DEBUG 10321[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 14:08:52,534]DEBUG 10321[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 14:08:52,534]DEBUG 10321[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 14:08:52,535]DEBUG 10322[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@4dabde1e, testMethod = testDelete@ProductDaoTest, testException = [null]]]
[2017-10-14 14:08:52,535] INFO 10322[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (4): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@48ad0abe]; rollback [true]
[2017-10-14 14:08:52,535]DEBUG 10322[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:52,535]DEBUG 10322[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:52,536]DEBUG 10323[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 14:08:52,537]DEBUG 10324[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 19
[2017-10-14 14:08:52,537]DEBUG 10324[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:52,537]DEBUG 10324[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:52,538]DEBUG 10325[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:52,538]DEBUG 10325[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 14:08:52,538]DEBUG 10325[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 20
[2017-10-14 14:08:52,538]DEBUG 10325[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:52,539]DEBUG 10326[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:52,539]DEBUG 10326[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:52,539]DEBUG 10326[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 14:08:52,539]DEBUG 10326[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 21
[2017-10-14 14:08:52,539]DEBUG 10326[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:52,540] INFO 10327[main] - org.hibernate.event.def.DefaultDeleteEventListener.deleteTransientEntity(DefaultDeleteEventListener.java:203) - handling transient entity in delete processing
[2017-10-14 14:08:52,540]DEBUG 10327[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:52,540]DEBUG 10327[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:52,540]DEBUG 10327[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 3 updates, 0 deletions to 3 objects
[2017-10-14 14:08:52,540]DEBUG 10327[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:52,540]DEBUG 10327[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:52,540]DEBUG 10327[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=20, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 14:08:52,541]DEBUG 10328[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=21, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 14:08:52,541]DEBUG 10328[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=19, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 14:08:52,541]DEBUG 10328[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Products
[2017-10-14 14:08:52,541]DEBUG 10328[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:52,541]DEBUG 10328[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 14:08:52,541]DEBUG 10328[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2017-10-14 14:08:52,541]DEBUG 10328[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 14:08:52,542]DEBUG 10329[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2017-10-14 14:08:52,542]DEBUG 10329[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 14:08:52,542]DEBUG 10329[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2017-10-14 14:08:52,543]DEBUG 10330[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:52,543]DEBUG 10330[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:52,543]DEBUG 10330[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_
[2017-10-14 14:08:52,543]DEBUG 10330[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:52,543]DEBUG 10330[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#19]
[2017-10-14 14:08:52,544]DEBUG 10331[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#20]
[2017-10-14 14:08:52,544]DEBUG 10331[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#21]
[2017-10-14 14:08:52,544]DEBUG 10331[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:52,544]DEBUG 10331[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:52,544]DEBUG 10331[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:52,544]DEBUG 10331[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:52,544]DEBUG 10331[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:52,544]DEBUG 10331[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-14 14:08:52,545]DEBUG 10332[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:52,545]DEBUG 10332[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:52,545]DEBUG 10332[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=20, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 14:08:52,545]DEBUG 10332[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=21, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 14:08:52,545]DEBUG 10332[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=19, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 14:08:52,545]DEBUG 10332[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:52,545]DEBUG 10332[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 14:08:52,545]DEBUG 10332[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:52,546]DEBUG 10333[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@4dabde1e, testMethod = testDelete@ProductDaoTest, testException = [null]]]
[2017-10-14 14:08:52,546]DEBUG 10333[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 14:08:52,546]DEBUG 10333[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@52c62ad9]
[2017-10-14 14:08:52,546]DEBUG 10333[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 14:08:52,663]DEBUG 10450[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 14:08:52,663]DEBUG 10450[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:52,664]DEBUG 10451[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@52c62ad9] after transaction
[2017-10-14 14:08:52,664]DEBUG 10451[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 14:08:52,664]DEBUG 10451[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 14:08:52,664]DEBUG 10451[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:52,665] INFO 10452[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@4dabde1e, testMethod = testDelete@ProductDaoTest, testException = [null]]]
[2017-10-14 14:08:52,666]DEBUG 10453[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@4dabde1e, testMethod = testDelete@ProductDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 14:08:52,667]DEBUG 10454[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2017-10-14 14:08:52,667]DEBUG 10454[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2017-10-14 14:08:52,667]DEBUG 10454[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@20bb595c, testMethod = [null], testException = [null]]].
[2017-10-14 14:08:52,668]DEBUG 10455[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 14:08:52,668]DEBUG 10455[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 14:08:52,668]DEBUG 10455[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 14:08:52,668]DEBUG 10455[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 14:08:52,668]DEBUG 10455[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 14:08:52,669]DEBUG 10456[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 14:08:52,669]DEBUG 10456[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 14:08:52,669]DEBUG 10456[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 14:08:52,669]DEBUG 10456[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 14:08:52,669]DEBUG 10456[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 14:08:52,670]DEBUG 10457[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 14:08:52,670]DEBUG 10457[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 14:08:52,670]DEBUG 10457[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 14:08:52,670]DEBUG 10457[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 14:08:52,670]DEBUG 10457[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 14:08:52,670]DEBUG 10457[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 14:08:52,671]DEBUG 10458[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 14:08:52,671]DEBUG 10458[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 14:08:52,671]DEBUG 10458[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 14:08:52,671]DEBUG 10458[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 14:08:52,671]DEBUG 10458[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 14:08:52,672]DEBUG 10459[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 14:08:52,672]DEBUG 10459[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@20bb595c]
[2017-10-14 14:08:52,673]DEBUG 10460[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testfindByName' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:52,673]DEBUG 10460[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@20bb595c, testMethod = testfindByName@ProductDaoTest, testException = [null]]]
[2017-10-14 14:08:52,673]DEBUG 10460[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 14:08:52,675]DEBUG 10462[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testfindByName]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:52,675]DEBUG 10462[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15079793326
[2017-10-14 14:08:52,675]DEBUG 10462[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@79783d5b] for Hibernate transaction
[2017-10-14 14:08:52,675]DEBUG 10462[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@79783d5b]
[2017-10-14 14:08:52,676]DEBUG 10463[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 14:08:52,676]DEBUG 10463[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 14:08:52,676]DEBUG 10463[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 14:08:52,676]DEBUG 10463[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@20bb595c, testMethod = testfindByName@ProductDaoTest, testException = [null]]]
[2017-10-14 14:08:52,676] INFO 10463[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (5): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@48ad0abe]; rollback [true]
[2017-10-14 14:08:52,677]DEBUG 10464[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:52,677]DEBUG 10464[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:52,677]DEBUG 10464[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 14:08:52,678]DEBUG 10465[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 22
[2017-10-14 14:08:52,678]DEBUG 10465[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:52,678]DEBUG 10465[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:52,679]DEBUG 10466[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:52,679]DEBUG 10466[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 14:08:52,679]DEBUG 10466[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 23
[2017-10-14 14:08:52,679]DEBUG 10466[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:52,679]DEBUG 10466[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:52,680]DEBUG 10467[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:52,680]DEBUG 10467[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 14:08:52,680]DEBUG 10467[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 24
[2017-10-14 14:08:52,680]DEBUG 10467[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:52,681]DEBUG 10468[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:52,681]DEBUG 10468[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:52,681]DEBUG 10468[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 3 updates, 0 deletions to 3 objects
[2017-10-14 14:08:52,681]DEBUG 10468[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:52,682]DEBUG 10469[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:52,682]DEBUG 10469[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=22, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 14:08:52,682]DEBUG 10469[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=23, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 14:08:52,682]DEBUG 10469[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=24, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 14:08:52,682]DEBUG 10469[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Products
[2017-10-14 14:08:52,682]DEBUG 10469[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:52,682]DEBUG 10469[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 14:08:52,682]DEBUG 10469[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2017-10-14 14:08:52,683]DEBUG 10470[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 14:08:52,683]DEBUG 10470[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2017-10-14 14:08:52,683]DEBUG 10470[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 14:08:52,683]DEBUG 10470[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2017-10-14 14:08:52,684]DEBUG 10471[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:52,684]DEBUG 10471[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:52,684]DEBUG 10471[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_
[2017-10-14 14:08:52,685]DEBUG 10472[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:52,685]DEBUG 10472[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#22]
[2017-10-14 14:08:52,685]DEBUG 10472[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#23]
[2017-10-14 14:08:52,685]DEBUG 10472[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#24]
[2017-10-14 14:08:52,685]DEBUG 10472[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:52,685]DEBUG 10472[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:52,685]DEBUG 10472[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:52,686]DEBUG 10473[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:52,686]DEBUG 10473[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:52,686]DEBUG 10473[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-14 14:08:52,686]DEBUG 10473[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:52,686]DEBUG 10473[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:52,686]DEBUG 10473[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=22, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 14:08:52,687]DEBUG 10474[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=23, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 14:08:52,687]DEBUG 10474[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=24, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 14:08:52,687]DEBUG 10474[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:52,687]DEBUG 10474[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductName like ? and this_.IsProductActive=?
[2017-10-14 14:08:52,687]DEBUG 10474[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:52,688]DEBUG 10475[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#22]
[2017-10-14 14:08:52,688]DEBUG 10475[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#23]
[2017-10-14 14:08:52,688]DEBUG 10475[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#24]
[2017-10-14 14:08:52,688]DEBUG 10475[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:52,688]DEBUG 10475[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:52,688]DEBUG 10475[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:52,689]DEBUG 10476[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:52,689]DEBUG 10476[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:52,689]DEBUG 10476[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-14 14:08:52,689]DEBUG 10476[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:52,689]DEBUG 10476[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:52,689]DEBUG 10476[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=22, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 14:08:52,689]DEBUG 10476[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=23, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 14:08:52,689]DEBUG 10476[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=24, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 14:08:52,689]DEBUG 10476[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:52,690]DEBUG 10477[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductName like ? and this_.IsProductActive=?
[2017-10-14 14:08:52,690]DEBUG 10477[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:52,690]DEBUG 10477[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#22]
[2017-10-14 14:08:52,690]DEBUG 10477[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#23]
[2017-10-14 14:08:52,690]DEBUG 10477[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#24]
[2017-10-14 14:08:52,691]DEBUG 10478[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:52,691]DEBUG 10478[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:52,691]DEBUG 10478[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:52,691]DEBUG 10478[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:52,691]DEBUG 10478[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:52,691]DEBUG 10478[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-14 14:08:52,691]DEBUG 10478[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:52,691]DEBUG 10478[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:52,692]DEBUG 10479[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=22, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 14:08:52,692]DEBUG 10479[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=23, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 14:08:52,692]DEBUG 10479[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=24, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 14:08:52,692]DEBUG 10479[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:52,692]DEBUG 10479[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductName like ? and this_.IsProductActive=?
[2017-10-14 14:08:52,692]DEBUG 10479[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:52,693]DEBUG 10480[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#22]
[2017-10-14 14:08:52,693]DEBUG 10480[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#23]
[2017-10-14 14:08:52,693]DEBUG 10480[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#24]
[2017-10-14 14:08:52,693]DEBUG 10480[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:52,693]DEBUG 10480[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:52,693]DEBUG 10480[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:52,693]DEBUG 10480[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:52,693]DEBUG 10480[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:52,694]DEBUG 10481[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-14 14:08:52,694]DEBUG 10481[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:52,694]DEBUG 10481[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:52,694]DEBUG 10481[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=22, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 14:08:52,694]DEBUG 10481[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=23, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 14:08:52,694]DEBUG 10481[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=24, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 14:08:52,694]DEBUG 10481[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:52,694]DEBUG 10481[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 14:08:52,695]DEBUG 10482[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:52,695]DEBUG 10482[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@20bb595c, testMethod = testfindByName@ProductDaoTest, testException = [null]]]
[2017-10-14 14:08:52,695]DEBUG 10482[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 14:08:52,695]DEBUG 10482[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@79783d5b]
[2017-10-14 14:08:52,695]DEBUG 10482[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 14:08:52,738]DEBUG 10525[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 14:08:52,739]DEBUG 10526[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:52,739]DEBUG 10526[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@79783d5b] after transaction
[2017-10-14 14:08:52,739]DEBUG 10526[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 14:08:52,739]DEBUG 10526[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 14:08:52,740]DEBUG 10527[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:52,740] INFO 10527[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@20bb595c, testMethod = testfindByName@ProductDaoTest, testException = [null]]]
[2017-10-14 14:08:52,741]DEBUG 10528[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@20bb595c, testMethod = testfindByName@ProductDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 14:08:52,742]DEBUG 10529[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2017-10-14 14:08:52,742]DEBUG 10529[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2017-10-14 14:08:52,742]DEBUG 10529[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@10efcd37, testMethod = [null], testException = [null]]].
[2017-10-14 14:08:52,743]DEBUG 10530[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 14:08:52,743]DEBUG 10530[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 14:08:52,743]DEBUG 10530[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 14:08:52,743]DEBUG 10530[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 14:08:52,744]DEBUG 10531[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 14:08:52,744]DEBUG 10531[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 14:08:52,744]DEBUG 10531[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 14:08:52,744]DEBUG 10531[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 14:08:52,744]DEBUG 10531[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 14:08:52,744]DEBUG 10531[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 14:08:52,745]DEBUG 10532[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 14:08:52,745]DEBUG 10532[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 14:08:52,745]DEBUG 10532[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 14:08:52,745]DEBUG 10532[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 14:08:52,745]DEBUG 10532[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 14:08:52,746]DEBUG 10533[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 14:08:52,746]DEBUG 10533[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 14:08:52,746]DEBUG 10533[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 14:08:52,746]DEBUG 10533[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 14:08:52,746]DEBUG 10533[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 14:08:52,747]DEBUG 10534[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 14:08:52,747]DEBUG 10534[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 14:08:52,747]DEBUG 10534[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@10efcd37]
[2017-10-14 14:08:52,748]DEBUG 10535[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testcontainsProductByName' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:52,748]DEBUG 10535[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@10efcd37, testMethod = testcontainsProductByName@ProductDaoTest, testException = [null]]]
[2017-10-14 14:08:52,749]DEBUG 10536[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 14:08:52,750]DEBUG 10537[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testcontainsProductByName]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:52,750]DEBUG 10537[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15079793327
[2017-10-14 14:08:52,751]DEBUG 10538[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@64791a53] for Hibernate transaction
[2017-10-14 14:08:52,751]DEBUG 10538[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@64791a53]
[2017-10-14 14:08:52,751]DEBUG 10538[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 14:08:52,751]DEBUG 10538[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 14:08:52,751]DEBUG 10538[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 14:08:52,752]DEBUG 10539[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@10efcd37, testMethod = testcontainsProductByName@ProductDaoTest, testException = [null]]]
[2017-10-14 14:08:52,752] INFO 10539[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (6): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@48ad0abe]; rollback [true]
[2017-10-14 14:08:52,752]DEBUG 10539[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:52,752]DEBUG 10539[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:52,753]DEBUG 10540[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 14:08:52,754]DEBUG 10541[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 25
[2017-10-14 14:08:52,754]DEBUG 10541[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:52,754]DEBUG 10541[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:52,755]DEBUG 10542[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:52,755]DEBUG 10542[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 14:08:52,756]DEBUG 10543[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 26
[2017-10-14 14:08:52,756]DEBUG 10543[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:52,757]DEBUG 10544[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:52,757]DEBUG 10544[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:52,757]DEBUG 10544[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 14:08:52,758]DEBUG 10545[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 27
[2017-10-14 14:08:52,758]DEBUG 10545[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:52,758]DEBUG 10545[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:52,759]DEBUG 10546[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:52,759]DEBUG 10546[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 3 updates, 0 deletions to 3 objects
[2017-10-14 14:08:52,759]DEBUG 10546[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:52,759]DEBUG 10546[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:52,759]DEBUG 10546[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=25, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 14:08:52,759]DEBUG 10546[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=27, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 14:08:52,759]DEBUG 10546[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=26, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 14:08:52,759]DEBUG 10546[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Products
[2017-10-14 14:08:52,760]DEBUG 10547[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:52,760]DEBUG 10547[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 14:08:52,760]DEBUG 10547[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2017-10-14 14:08:52,760]DEBUG 10547[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 14:08:52,760]DEBUG 10547[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2017-10-14 14:08:52,760]DEBUG 10547[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 14:08:52,761]DEBUG 10548[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2017-10-14 14:08:52,763]DEBUG 10550[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:52,763]DEBUG 10550[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:52,763]DEBUG 10550[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_
[2017-10-14 14:08:52,764]DEBUG 10551[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:52,764]DEBUG 10551[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#25]
[2017-10-14 14:08:52,764]DEBUG 10551[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#26]
[2017-10-14 14:08:52,764]DEBUG 10551[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#27]
[2017-10-14 14:08:52,764]DEBUG 10551[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:52,764]DEBUG 10551[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:52,764]DEBUG 10551[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:52,765]DEBUG 10552[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:52,765]DEBUG 10552[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:52,765]DEBUG 10552[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-14 14:08:52,765]DEBUG 10552[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:52,765]DEBUG 10552[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:52,765]DEBUG 10552[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=25, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 14:08:52,765]DEBUG 10552[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=27, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 14:08:52,766]DEBUG 10553[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=26, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 14:08:52,766]DEBUG 10553[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:52,766]DEBUG 10553[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductName like ?
[2017-10-14 14:08:52,766]DEBUG 10553[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:52,767]DEBUG 10554[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#25]
[2017-10-14 14:08:52,767]DEBUG 10554[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:52,767]DEBUG 10554[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:52,767]DEBUG 10554[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:52,767]DEBUG 10554[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:52,767]DEBUG 10554[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:52,768]DEBUG 10555[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-14 14:08:52,768]DEBUG 10555[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:52,768]DEBUG 10555[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:52,768]DEBUG 10555[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=25, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 14:08:52,768]DEBUG 10555[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=27, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 14:08:52,768]DEBUG 10555[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=26, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 14:08:52,768]DEBUG 10555[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:52,768]DEBUG 10555[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductName like ?
[2017-10-14 14:08:52,769]DEBUG 10556[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:52,769]DEBUG 10556[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#26]
[2017-10-14 14:08:52,769]DEBUG 10556[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:52,769]DEBUG 10556[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:52,769]DEBUG 10556[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:52,770]DEBUG 10557[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:52,770]DEBUG 10557[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:52,770]DEBUG 10557[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-14 14:08:52,770]DEBUG 10557[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:52,770]DEBUG 10557[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:52,770]DEBUG 10557[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=25, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 14:08:52,770]DEBUG 10557[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=27, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 14:08:52,770]DEBUG 10557[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=26, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 14:08:52,771]DEBUG 10558[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:52,771]DEBUG 10558[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductName like ?
[2017-10-14 14:08:52,771]DEBUG 10558[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:52,771]DEBUG 10558[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#27]
[2017-10-14 14:08:52,772]DEBUG 10559[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:52,772]DEBUG 10559[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:52,772]DEBUG 10559[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:52,772]DEBUG 10559[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:52,772]DEBUG 10559[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:52,772]DEBUG 10559[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-14 14:08:52,773]DEBUG 10560[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:52,773]DEBUG 10560[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:52,773]DEBUG 10560[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=25, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 14:08:52,773]DEBUG 10560[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=27, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 14:08:52,773]DEBUG 10560[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=26, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 14:08:52,773]DEBUG 10560[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:52,773]DEBUG 10560[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductName like ?
[2017-10-14 14:08:52,774]DEBUG 10561[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:52,774]DEBUG 10561[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:52,774]DEBUG 10561[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:52,774]DEBUG 10561[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:52,774]DEBUG 10561[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:52,774]DEBUG 10561[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:52,775]DEBUG 10562[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-14 14:08:52,775]DEBUG 10562[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:52,775]DEBUG 10562[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:52,775]DEBUG 10562[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=25, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 14:08:52,775]DEBUG 10562[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=27, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 14:08:52,775]DEBUG 10562[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=26, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 14:08:52,775]DEBUG 10562[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:52,775]DEBUG 10562[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 14:08:52,776]DEBUG 10563[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:52,776]DEBUG 10563[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@10efcd37, testMethod = testcontainsProductByName@ProductDaoTest, testException = [null]]]
[2017-10-14 14:08:52,776]DEBUG 10563[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 14:08:52,776]DEBUG 10563[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@64791a53]
[2017-10-14 14:08:52,776]DEBUG 10563[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 14:08:52,847]DEBUG 10634[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 14:08:52,847]DEBUG 10634[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:52,848]DEBUG 10635[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@64791a53] after transaction
[2017-10-14 14:08:52,848]DEBUG 10635[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 14:08:52,848]DEBUG 10635[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 14:08:52,848]DEBUG 10635[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:52,848] INFO 10635[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@10efcd37, testMethod = testcontainsProductByName@ProductDaoTest, testException = [null]]]
[2017-10-14 14:08:52,850]DEBUG 10637[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@10efcd37, testMethod = testcontainsProductByName@ProductDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 14:08:52,850]DEBUG 10637[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2017-10-14 14:08:52,850]DEBUG 10637[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2017-10-14 14:08:52,851]DEBUG 10638[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@25fb025, testMethod = [null], testException = [null]]].
[2017-10-14 14:08:52,851]DEBUG 10638[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 14:08:52,851]DEBUG 10638[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 14:08:52,852]DEBUG 10639[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 14:08:52,852]DEBUG 10639[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 14:08:52,852]DEBUG 10639[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 14:08:52,852]DEBUG 10639[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 14:08:52,852]DEBUG 10639[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 14:08:52,852]DEBUG 10639[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 14:08:52,853]DEBUG 10640[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 14:08:52,853]DEBUG 10640[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 14:08:52,853]DEBUG 10640[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 14:08:52,853]DEBUG 10640[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 14:08:52,853]DEBUG 10640[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 14:08:52,854]DEBUG 10641[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 14:08:52,854]DEBUG 10641[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 14:08:52,854]DEBUG 10641[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 14:08:52,854]DEBUG 10641[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 14:08:52,854]DEBUG 10641[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 14:08:52,855]DEBUG 10642[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 14:08:52,855]DEBUG 10642[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 14:08:52,855]DEBUG 10642[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 14:08:52,855]DEBUG 10642[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 14:08:52,856]DEBUG 10643[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@25fb025]
[2017-10-14 14:08:52,856]DEBUG 10643[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testnumberOfProductByName' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:52,856]DEBUG 10643[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@25fb025, testMethod = testnumberOfProductByName@ProductDaoTest, testException = [null]]]
[2017-10-14 14:08:52,857]DEBUG 10644[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 14:08:52,858]DEBUG 10645[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testnumberOfProductByName]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:52,858]DEBUG 10645[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15079793328
[2017-10-14 14:08:52,858]DEBUG 10645[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@1560eb09] for Hibernate transaction
[2017-10-14 14:08:52,858]DEBUG 10645[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@1560eb09]
[2017-10-14 14:08:52,858]DEBUG 10645[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 14:08:52,858]DEBUG 10645[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 14:08:52,859]DEBUG 10646[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 14:08:52,859]DEBUG 10646[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@25fb025, testMethod = testnumberOfProductByName@ProductDaoTest, testException = [null]]]
[2017-10-14 14:08:52,859] INFO 10646[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (7): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@48ad0abe]; rollback [true]
[2017-10-14 14:08:52,859]DEBUG 10646[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:52,859]DEBUG 10646[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:52,859]DEBUG 10646[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 14:08:52,860]DEBUG 10647[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 28
[2017-10-14 14:08:52,860]DEBUG 10647[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:52,860]DEBUG 10647[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:52,860]DEBUG 10647[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:52,860]DEBUG 10647[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 14:08:52,861]DEBUG 10648[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 29
[2017-10-14 14:08:52,861]DEBUG 10648[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:52,861]DEBUG 10648[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:52,861]DEBUG 10648[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:52,861]DEBUG 10648[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 14:08:52,861]DEBUG 10648[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 30
[2017-10-14 14:08:52,862]DEBUG 10649[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:52,862]DEBUG 10649[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:52,862]DEBUG 10649[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:52,862]DEBUG 10649[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 3 updates, 0 deletions to 3 objects
[2017-10-14 14:08:52,862]DEBUG 10649[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:52,862]DEBUG 10649[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:52,863]DEBUG 10650[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=29, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 14:08:52,863]DEBUG 10650[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=28, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 14:08:52,863]DEBUG 10650[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=30, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 14:08:52,863]DEBUG 10650[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Products
[2017-10-14 14:08:52,863]DEBUG 10650[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:52,863]DEBUG 10650[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 14:08:52,863]DEBUG 10650[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2017-10-14 14:08:52,863]DEBUG 10650[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 14:08:52,864]DEBUG 10651[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2017-10-14 14:08:52,864]DEBUG 10651[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 14:08:52,864]DEBUG 10651[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2017-10-14 14:08:52,864]DEBUG 10651[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:52,865]DEBUG 10652[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:52,865]DEBUG 10652[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductName like ?
[2017-10-14 14:08:52,865]DEBUG 10652[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:52,865]DEBUG 10652[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#28]
[2017-10-14 14:08:52,865]DEBUG 10652[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:52,865]DEBUG 10652[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:52,866]DEBUG 10653[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:52,866]DEBUG 10653[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:52,866]DEBUG 10653[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:52,866]DEBUG 10653[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-14 14:08:52,866]DEBUG 10653[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:52,866]DEBUG 10653[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:52,866]DEBUG 10653[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=29, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 14:08:52,866]DEBUG 10653[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=28, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 14:08:52,866]DEBUG 10653[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=30, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 14:08:52,867]DEBUG 10654[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:52,867]DEBUG 10654[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 14:08:52,867]DEBUG 10654[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:52,867]DEBUG 10654[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@25fb025, testMethod = testnumberOfProductByName@ProductDaoTest, testException = [null]]]
[2017-10-14 14:08:52,867]DEBUG 10654[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 14:08:52,867]DEBUG 10654[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@1560eb09]
[2017-10-14 14:08:52,867]DEBUG 10654[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 14:08:52,930]DEBUG 10717[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 14:08:52,930]DEBUG 10717[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:52,931]DEBUG 10718[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@1560eb09] after transaction
[2017-10-14 14:08:52,931]DEBUG 10718[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 14:08:52,931]DEBUG 10718[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 14:08:52,931]DEBUG 10718[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:52,932] INFO 10719[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@25fb025, testMethod = testnumberOfProductByName@ProductDaoTest, testException = [null]]]
[2017-10-14 14:08:52,933]DEBUG 10720[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@25fb025, testMethod = testnumberOfProductByName@ProductDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 14:08:52,933]DEBUG 10720[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2017-10-14 14:08:52,934]DEBUG 10721[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2017-10-14 14:08:52,934]DEBUG 10721[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@57506a12, testMethod = [null], testException = [null]]].
[2017-10-14 14:08:52,934]DEBUG 10721[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 14:08:52,934]DEBUG 10721[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 14:08:52,935]DEBUG 10722[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 14:08:52,935]DEBUG 10722[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 14:08:52,935]DEBUG 10722[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 14:08:52,935]DEBUG 10722[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 14:08:52,935]DEBUG 10722[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 14:08:52,936]DEBUG 10723[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 14:08:52,936]DEBUG 10723[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 14:08:52,936]DEBUG 10723[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 14:08:52,936]DEBUG 10723[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 14:08:52,936]DEBUG 10723[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 14:08:52,937]DEBUG 10724[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 14:08:52,937]DEBUG 10724[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 14:08:52,937]DEBUG 10724[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 14:08:52,937]DEBUG 10724[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 14:08:52,937]DEBUG 10724[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 14:08:52,937]DEBUG 10724[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 14:08:52,938]DEBUG 10725[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 14:08:52,938]DEBUG 10725[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 14:08:52,938]DEBUG 10725[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 14:08:52,938]DEBUG 10725[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 14:08:52,939]DEBUG 10726[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@57506a12]
[2017-10-14 14:08:52,940]DEBUG 10727[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testfindByDescription' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:52,940]DEBUG 10727[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@57506a12, testMethod = testfindByDescription@ProductDaoTest, testException = [null]]]
[2017-10-14 14:08:52,940]DEBUG 10727[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 14:08:52,942]DEBUG 10729[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testfindByDescription]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:52,942]DEBUG 10729[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15079793329
[2017-10-14 14:08:52,942]DEBUG 10729[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@286f5853] for Hibernate transaction
[2017-10-14 14:08:52,942]DEBUG 10729[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@286f5853]
[2017-10-14 14:08:52,942]DEBUG 10729[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 14:08:52,943]DEBUG 10730[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 14:08:52,943]DEBUG 10730[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 14:08:52,943]DEBUG 10730[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@57506a12, testMethod = testfindByDescription@ProductDaoTest, testException = [null]]]
[2017-10-14 14:08:52,943] INFO 10730[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (8): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@48ad0abe]; rollback [true]
[2017-10-14 14:08:52,943]DEBUG 10730[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:52,944]DEBUG 10731[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:52,944]DEBUG 10731[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 14:08:52,945]DEBUG 10732[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 31
[2017-10-14 14:08:52,945]DEBUG 10732[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:52,946]DEBUG 10733[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:52,946]DEBUG 10733[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:52,947]DEBUG 10734[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 14:08:52,947]DEBUG 10734[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 32
[2017-10-14 14:08:52,948]DEBUG 10735[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:52,948]DEBUG 10735[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:52,948]DEBUG 10735[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:52,949]DEBUG 10736[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 14:08:52,949]DEBUG 10736[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 33
[2017-10-14 14:08:52,950]DEBUG 10737[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:52,950]DEBUG 10737[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:52,951]DEBUG 10738[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:52,951]DEBUG 10738[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 3 updates, 0 deletions to 3 objects
[2017-10-14 14:08:52,951]DEBUG 10738[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:52,951]DEBUG 10738[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:52,952]DEBUG 10739[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=31, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 14:08:52,952]DEBUG 10739[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=33, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 14:08:52,952]DEBUG 10739[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=32, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 14:08:52,952]DEBUG 10739[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Products
[2017-10-14 14:08:52,953]DEBUG 10740[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:52,953]DEBUG 10740[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 14:08:52,953]DEBUG 10740[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2017-10-14 14:08:52,954]DEBUG 10741[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 14:08:52,954]DEBUG 10741[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2017-10-14 14:08:52,954]DEBUG 10741[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 14:08:52,955]DEBUG 10742[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2017-10-14 14:08:52,956]DEBUG 10743[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:52,956]DEBUG 10743[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:52,956]DEBUG 10743[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_
[2017-10-14 14:08:52,957]DEBUG 10744[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:52,958]DEBUG 10745[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#31]
[2017-10-14 14:08:52,958]DEBUG 10745[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#32]
[2017-10-14 14:08:52,958]DEBUG 10745[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#33]
[2017-10-14 14:08:52,958]DEBUG 10745[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:52,958]DEBUG 10745[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:52,958]DEBUG 10745[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:52,959]DEBUG 10746[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:52,959]DEBUG 10746[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:52,959]DEBUG 10746[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-14 14:08:52,959]DEBUG 10746[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:52,959]DEBUG 10746[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:52,959]DEBUG 10746[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=31, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 14:08:52,959]DEBUG 10746[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=33, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 14:08:52,959]DEBUG 10746[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=32, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 14:08:52,960]DEBUG 10747[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:52,960]DEBUG 10747[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductDescription like ? and this_.IsProductActive=?
[2017-10-14 14:08:52,960]DEBUG 10747[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:52,960]DEBUG 10747[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#31]
[2017-10-14 14:08:52,960]DEBUG 10747[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#32]
[2017-10-14 14:08:52,961]DEBUG 10748[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#33]
[2017-10-14 14:08:52,961]DEBUG 10748[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:52,961]DEBUG 10748[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:52,961]DEBUG 10748[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:52,961]DEBUG 10748[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:52,961]DEBUG 10748[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:52,961]DEBUG 10748[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-14 14:08:52,962]DEBUG 10749[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:52,962]DEBUG 10749[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:52,962]DEBUG 10749[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=31, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 14:08:52,962]DEBUG 10749[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=33, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 14:08:52,962]DEBUG 10749[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=32, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 14:08:52,962]DEBUG 10749[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:52,962]DEBUG 10749[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductDescription like ? and this_.IsProductActive=?
[2017-10-14 14:08:52,963]DEBUG 10750[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:52,963]DEBUG 10750[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#31]
[2017-10-14 14:08:52,963]DEBUG 10750[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#32]
[2017-10-14 14:08:52,963]DEBUG 10750[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#33]
[2017-10-14 14:08:52,963]DEBUG 10750[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:52,963]DEBUG 10750[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:52,963]DEBUG 10750[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:52,964]DEBUG 10751[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:52,964]DEBUG 10751[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:52,964]DEBUG 10751[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-14 14:08:52,964]DEBUG 10751[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:52,964]DEBUG 10751[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:52,964]DEBUG 10751[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=31, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 14:08:52,964]DEBUG 10751[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=33, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 14:08:52,964]DEBUG 10751[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=32, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 14:08:52,964]DEBUG 10751[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:52,965]DEBUG 10752[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductDescription like ? and this_.IsProductActive=?
[2017-10-14 14:08:52,965]DEBUG 10752[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:52,965]DEBUG 10752[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#31]
[2017-10-14 14:08:52,965]DEBUG 10752[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#32]
[2017-10-14 14:08:52,965]DEBUG 10752[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#33]
[2017-10-14 14:08:52,966]DEBUG 10753[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:52,966]DEBUG 10753[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:52,966]DEBUG 10753[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:52,966]DEBUG 10753[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:52,966]DEBUG 10753[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:52,966]DEBUG 10753[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-14 14:08:52,966]DEBUG 10753[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:52,966]DEBUG 10753[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:52,966]DEBUG 10753[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=31, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 14:08:52,966]DEBUG 10753[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=33, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 14:08:52,967]DEBUG 10754[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=32, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 14:08:52,967]DEBUG 10754[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:52,967]DEBUG 10754[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 14:08:52,967]DEBUG 10754[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:52,967]DEBUG 10754[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@57506a12, testMethod = testfindByDescription@ProductDaoTest, testException = [null]]]
[2017-10-14 14:08:52,967]DEBUG 10754[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 14:08:52,967]DEBUG 10754[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@286f5853]
[2017-10-14 14:08:52,967]DEBUG 10754[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 14:08:52,997]DEBUG 10784[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 14:08:52,997]DEBUG 10784[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:52,997]DEBUG 10784[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@286f5853] after transaction
[2017-10-14 14:08:52,998]DEBUG 10785[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 14:08:52,998]DEBUG 10785[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 14:08:52,998]DEBUG 10785[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:52,998] INFO 10785[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@57506a12, testMethod = testfindByDescription@ProductDaoTest, testException = [null]]]
[2017-10-14 14:08:53,000]DEBUG 10787[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@57506a12, testMethod = testfindByDescription@ProductDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 14:08:53,000]DEBUG 10787[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2017-10-14 14:08:53,000]DEBUG 10787[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2017-10-14 14:08:53,001]DEBUG 10788[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@3d982a02, testMethod = [null], testException = [null]]].
[2017-10-14 14:08:53,001]DEBUG 10788[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 14:08:53,001]DEBUG 10788[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 14:08:53,001]DEBUG 10788[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 14:08:53,002]DEBUG 10789[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 14:08:53,002]DEBUG 10789[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 14:08:53,002]DEBUG 10789[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 14:08:53,002]DEBUG 10789[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 14:08:53,002]DEBUG 10789[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 14:08:53,003]DEBUG 10790[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 14:08:53,003]DEBUG 10790[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 14:08:53,003]DEBUG 10790[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 14:08:53,003]DEBUG 10790[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 14:08:53,003]DEBUG 10790[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 14:08:53,003]DEBUG 10790[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 14:08:53,004]DEBUG 10791[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 14:08:53,004]DEBUG 10791[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 14:08:53,004]DEBUG 10791[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 14:08:53,004]DEBUG 10791[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 14:08:53,004]DEBUG 10791[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 14:08:53,005]DEBUG 10792[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 14:08:53,005]DEBUG 10792[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 14:08:53,005]DEBUG 10792[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 14:08:53,005]DEBUG 10792[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@3d982a02]
[2017-10-14 14:08:53,006]DEBUG 10793[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testcontainsProductByDescription' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:53,006]DEBUG 10793[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@3d982a02, testMethod = testcontainsProductByDescription@ProductDaoTest, testException = [null]]]
[2017-10-14 14:08:53,006]DEBUG 10793[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 14:08:53,008]DEBUG 10795[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testcontainsProductByDescription]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:53,008]DEBUG 10795[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15079793330
[2017-10-14 14:08:53,008]DEBUG 10795[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@3375f9c8] for Hibernate transaction
[2017-10-14 14:08:53,008]DEBUG 10795[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@3375f9c8]
[2017-10-14 14:08:53,009]DEBUG 10796[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 14:08:53,009]DEBUG 10796[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 14:08:53,009]DEBUG 10796[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 14:08:53,009]DEBUG 10796[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@3d982a02, testMethod = testcontainsProductByDescription@ProductDaoTest, testException = [null]]]
[2017-10-14 14:08:53,009] INFO 10796[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (9): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@48ad0abe]; rollback [true]
[2017-10-14 14:08:53,010]DEBUG 10797[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:53,010]DEBUG 10797[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,010]DEBUG 10797[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 14:08:53,011]DEBUG 10798[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 34
[2017-10-14 14:08:53,012]DEBUG 10799[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,012]DEBUG 10799[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:53,012]DEBUG 10799[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,013]DEBUG 10800[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 14:08:53,013]DEBUG 10800[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 35
[2017-10-14 14:08:53,014]DEBUG 10801[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,014]DEBUG 10801[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:53,014]DEBUG 10801[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,014]DEBUG 10801[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 14:08:53,015]DEBUG 10802[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 36
[2017-10-14 14:08:53,015]DEBUG 10802[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,016]DEBUG 10803[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:53,016]DEBUG 10803[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:53,017]DEBUG 10804[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 3 updates, 0 deletions to 3 objects
[2017-10-14 14:08:53,017]DEBUG 10804[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:53,017]DEBUG 10804[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:53,018]DEBUG 10805[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=36, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 14:08:53,018]DEBUG 10805[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=35, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 14:08:53,018]DEBUG 10805[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=34, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 14:08:53,018]DEBUG 10805[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Products
[2017-10-14 14:08:53,018]DEBUG 10805[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,018]DEBUG 10805[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 14:08:53,019]DEBUG 10806[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2017-10-14 14:08:53,019]DEBUG 10806[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 14:08:53,019]DEBUG 10806[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2017-10-14 14:08:53,019]DEBUG 10806[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 14:08:53,019]DEBUG 10806[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2017-10-14 14:08:53,020]DEBUG 10807[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,020]DEBUG 10807[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,020]DEBUG 10807[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_
[2017-10-14 14:08:53,020]DEBUG 10807[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:53,021]DEBUG 10808[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#34]
[2017-10-14 14:08:53,021]DEBUG 10808[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#35]
[2017-10-14 14:08:53,021]DEBUG 10808[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#36]
[2017-10-14 14:08:53,021]DEBUG 10808[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:53,021]DEBUG 10808[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,021]DEBUG 10808[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:53,021]DEBUG 10808[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:53,022]DEBUG 10809[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:53,022]DEBUG 10809[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-14 14:08:53,022]DEBUG 10809[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:53,022]DEBUG 10809[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:53,022]DEBUG 10809[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=36, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 14:08:53,022]DEBUG 10809[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=35, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 14:08:53,022]DEBUG 10809[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=34, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 14:08:53,022]DEBUG 10809[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,022]DEBUG 10809[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductDescription like ?
[2017-10-14 14:08:53,023]DEBUG 10810[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:53,023]DEBUG 10810[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#34]
[2017-10-14 14:08:53,023]DEBUG 10810[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:53,023]DEBUG 10810[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,023]DEBUG 10810[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:53,024]DEBUG 10811[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:53,024]DEBUG 10811[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:53,024]DEBUG 10811[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-14 14:08:53,024]DEBUG 10811[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:53,024]DEBUG 10811[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:53,024]DEBUG 10811[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=36, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 14:08:53,024]DEBUG 10811[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=35, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 14:08:53,024]DEBUG 10811[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=34, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 14:08:53,024]DEBUG 10811[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,025]DEBUG 10812[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductDescription like ?
[2017-10-14 14:08:53,025]DEBUG 10812[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:53,025]DEBUG 10812[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#35]
[2017-10-14 14:08:53,025]DEBUG 10812[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:53,025]DEBUG 10812[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,025]DEBUG 10812[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:53,026]DEBUG 10813[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:53,026]DEBUG 10813[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:53,026]DEBUG 10813[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-14 14:08:53,026]DEBUG 10813[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:53,026]DEBUG 10813[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:53,026]DEBUG 10813[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=36, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 14:08:53,026]DEBUG 10813[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=35, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 14:08:53,026]DEBUG 10813[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=34, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 14:08:53,026]DEBUG 10813[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,027]DEBUG 10814[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductDescription like ?
[2017-10-14 14:08:53,027]DEBUG 10814[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:53,027]DEBUG 10814[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#36]
[2017-10-14 14:08:53,027]DEBUG 10814[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:53,027]DEBUG 10814[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,027]DEBUG 10814[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:53,028]DEBUG 10815[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:53,028]DEBUG 10815[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:53,028]DEBUG 10815[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-14 14:08:53,028]DEBUG 10815[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:53,028]DEBUG 10815[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:53,028]DEBUG 10815[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=36, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 14:08:53,028]DEBUG 10815[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=35, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 14:08:53,028]DEBUG 10815[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=34, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 14:08:53,028]DEBUG 10815[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,029]DEBUG 10816[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductDescription like ?
[2017-10-14 14:08:53,029]DEBUG 10816[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:53,029]DEBUG 10816[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:53,029]DEBUG 10816[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,029]DEBUG 10816[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:53,029]DEBUG 10816[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:53,029]DEBUG 10816[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:53,030]DEBUG 10817[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-14 14:08:53,030]DEBUG 10817[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:53,030]DEBUG 10817[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:53,030]DEBUG 10817[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=36, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 14:08:53,030]DEBUG 10817[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=35, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 14:08:53,030]DEBUG 10817[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=34, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 14:08:53,030]DEBUG 10817[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,030]DEBUG 10817[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 14:08:53,031]DEBUG 10818[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,031]DEBUG 10818[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@3d982a02, testMethod = testcontainsProductByDescription@ProductDaoTest, testException = [null]]]
[2017-10-14 14:08:53,031]DEBUG 10818[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 14:08:53,031]DEBUG 10818[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@3375f9c8]
[2017-10-14 14:08:53,031]DEBUG 10818[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 14:08:53,064]DEBUG 10851[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 14:08:53,064]DEBUG 10851[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:53,064]DEBUG 10851[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@3375f9c8] after transaction
[2017-10-14 14:08:53,064]DEBUG 10851[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 14:08:53,065]DEBUG 10852[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 14:08:53,065]DEBUG 10852[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:53,065] INFO 10852[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@3d982a02, testMethod = testcontainsProductByDescription@ProductDaoTest, testException = [null]]]
[2017-10-14 14:08:53,066]DEBUG 10853[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@3d982a02, testMethod = testcontainsProductByDescription@ProductDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 14:08:53,067]DEBUG 10854[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2017-10-14 14:08:53,067]DEBUG 10854[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2017-10-14 14:08:53,067]DEBUG 10854[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@3cb0545, testMethod = [null], testException = [null]]].
[2017-10-14 14:08:53,068]DEBUG 10855[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 14:08:53,068]DEBUG 10855[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 14:08:53,068]DEBUG 10855[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 14:08:53,068]DEBUG 10855[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 14:08:53,068]DEBUG 10855[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 14:08:53,069]DEBUG 10856[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 14:08:53,069]DEBUG 10856[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 14:08:53,069]DEBUG 10856[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 14:08:53,069]DEBUG 10856[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 14:08:53,069]DEBUG 10856[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 14:08:53,070]DEBUG 10857[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 14:08:53,070]DEBUG 10857[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 14:08:53,070]DEBUG 10857[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 14:08:53,070]DEBUG 10857[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 14:08:53,070]DEBUG 10857[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 14:08:53,071]DEBUG 10858[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 14:08:53,071]DEBUG 10858[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 14:08:53,071]DEBUG 10858[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 14:08:53,071]DEBUG 10858[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 14:08:53,071]DEBUG 10858[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 14:08:53,071]DEBUG 10858[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 14:08:53,072]DEBUG 10859[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 14:08:53,072]DEBUG 10859[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@3cb0545]
[2017-10-14 14:08:53,073]DEBUG 10860[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testnumberOfProductByDescription' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:53,073]DEBUG 10860[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@3cb0545, testMethod = testnumberOfProductByDescription@ProductDaoTest, testException = [null]]]
[2017-10-14 14:08:53,073]DEBUG 10860[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 14:08:53,074]DEBUG 10861[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testnumberOfProductByDescription]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:53,075]DEBUG 10862[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15079793330
[2017-10-14 14:08:53,075]DEBUG 10862[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@16b20af2] for Hibernate transaction
[2017-10-14 14:08:53,075]DEBUG 10862[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@16b20af2]
[2017-10-14 14:08:53,075]DEBUG 10862[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 14:08:53,075]DEBUG 10862[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 14:08:53,076]DEBUG 10863[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 14:08:53,076]DEBUG 10863[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@3cb0545, testMethod = testnumberOfProductByDescription@ProductDaoTest, testException = [null]]]
[2017-10-14 14:08:53,076] INFO 10863[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (10): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@48ad0abe]; rollback [true]
[2017-10-14 14:08:53,076]DEBUG 10863[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:53,077]DEBUG 10864[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,077]DEBUG 10864[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 14:08:53,078]DEBUG 10865[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 37
[2017-10-14 14:08:53,078]DEBUG 10865[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,078]DEBUG 10865[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:53,078]DEBUG 10865[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,078]DEBUG 10865[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 14:08:53,079]DEBUG 10866[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 38
[2017-10-14 14:08:53,079]DEBUG 10866[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,079]DEBUG 10866[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:53,079]DEBUG 10866[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,079]DEBUG 10866[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 14:08:53,080]DEBUG 10867[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 39
[2017-10-14 14:08:53,080]DEBUG 10867[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,080]DEBUG 10867[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:53,080]DEBUG 10867[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:53,080]DEBUG 10867[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 3 updates, 0 deletions to 3 objects
[2017-10-14 14:08:53,081]DEBUG 10868[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:53,081]DEBUG 10868[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:53,081]DEBUG 10868[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=37, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 14:08:53,081]DEBUG 10868[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=39, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 14:08:53,081]DEBUG 10868[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=38, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 14:08:53,081]DEBUG 10868[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Products
[2017-10-14 14:08:53,081]DEBUG 10868[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,081]DEBUG 10868[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 14:08:53,082]DEBUG 10869[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2017-10-14 14:08:53,082]DEBUG 10869[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 14:08:53,082]DEBUG 10869[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2017-10-14 14:08:53,082]DEBUG 10869[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 14:08:53,082]DEBUG 10869[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2017-10-14 14:08:53,083]DEBUG 10870[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,083]DEBUG 10870[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,083]DEBUG 10870[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductDescription like ?
[2017-10-14 14:08:53,083]DEBUG 10870[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:53,084]DEBUG 10871[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#37]
[2017-10-14 14:08:53,084]DEBUG 10871[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:53,084]DEBUG 10871[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,084]DEBUG 10871[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:53,084]DEBUG 10871[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:53,084]DEBUG 10871[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:53,084]DEBUG 10871[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-14 14:08:53,085]DEBUG 10872[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:53,085]DEBUG 10872[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:53,085]DEBUG 10872[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=37, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 14:08:53,085]DEBUG 10872[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=39, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 14:08:53,085]DEBUG 10872[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=38, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 14:08:53,085]DEBUG 10872[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,085]DEBUG 10872[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductDescription like ?
[2017-10-14 14:08:53,085]DEBUG 10872[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:53,086]DEBUG 10873[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:53,086]DEBUG 10873[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,086]DEBUG 10873[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:53,086]DEBUG 10873[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:53,086]DEBUG 10873[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:53,086]DEBUG 10873[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-14 14:08:53,086]DEBUG 10873[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:53,086]DEBUG 10873[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:53,086]DEBUG 10873[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=37, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 14:08:53,086]DEBUG 10873[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=39, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 14:08:53,087]DEBUG 10874[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=38, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 14:08:53,087]DEBUG 10874[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,087]DEBUG 10874[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 14:08:53,087]DEBUG 10874[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,087]DEBUG 10874[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@3cb0545, testMethod = testnumberOfProductByDescription@ProductDaoTest, testException = [null]]]
[2017-10-14 14:08:53,087]DEBUG 10874[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 14:08:53,087]DEBUG 10874[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@16b20af2]
[2017-10-14 14:08:53,087]DEBUG 10874[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 14:08:53,122]DEBUG 10909[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 14:08:53,122]DEBUG 10909[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:53,123]DEBUG 10910[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@16b20af2] after transaction
[2017-10-14 14:08:53,123]DEBUG 10910[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 14:08:53,123]DEBUG 10910[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 14:08:53,123]DEBUG 10910[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:53,123] INFO 10910[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@3cb0545, testMethod = testnumberOfProductByDescription@ProductDaoTest, testException = [null]]]
[2017-10-14 14:08:53,125]DEBUG 10912[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@3cb0545, testMethod = testnumberOfProductByDescription@ProductDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 14:08:53,125]DEBUG 10912[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2017-10-14 14:08:53,126]DEBUG 10913[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2017-10-14 14:08:53,126]DEBUG 10913[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@12436c64, testMethod = [null], testException = [null]]].
[2017-10-14 14:08:53,126]DEBUG 10913[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 14:08:53,126]DEBUG 10913[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 14:08:53,127]DEBUG 10914[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 14:08:53,127]DEBUG 10914[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 14:08:53,127]DEBUG 10914[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 14:08:53,127]DEBUG 10914[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 14:08:53,127]DEBUG 10914[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 14:08:53,127]DEBUG 10914[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 14:08:53,128]DEBUG 10915[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 14:08:53,128]DEBUG 10915[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 14:08:53,128]DEBUG 10915[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 14:08:53,128]DEBUG 10915[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 14:08:53,128]DEBUG 10915[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 14:08:53,129]DEBUG 10916[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 14:08:53,129]DEBUG 10916[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 14:08:53,129]DEBUG 10916[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 14:08:53,129]DEBUG 10916[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 14:08:53,129]DEBUG 10916[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 14:08:53,130]DEBUG 10917[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 14:08:53,130]DEBUG 10917[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 14:08:53,130]DEBUG 10917[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 14:08:53,130]DEBUG 10917[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 14:08:53,131]DEBUG 10918[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@12436c64]
[2017-10-14 14:08:53,131]DEBUG 10918[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testfindByPrice' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:53,131]DEBUG 10918[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@12436c64, testMethod = testfindByPrice@ProductDaoTest, testException = [null]]]
[2017-10-14 14:08:53,132]DEBUG 10919[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 14:08:53,133]DEBUG 10920[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testfindByPrice]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:53,133]DEBUG 10920[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15079793331
[2017-10-14 14:08:53,133]DEBUG 10920[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@7136fa67] for Hibernate transaction
[2017-10-14 14:08:53,134]DEBUG 10921[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7136fa67]
[2017-10-14 14:08:53,134]DEBUG 10921[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 14:08:53,134]DEBUG 10921[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 14:08:53,134]DEBUG 10921[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 14:08:53,134]DEBUG 10921[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@12436c64, testMethod = testfindByPrice@ProductDaoTest, testException = [null]]]
[2017-10-14 14:08:53,134] INFO 10921[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (11): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@48ad0abe]; rollback [true]
[2017-10-14 14:08:53,135]DEBUG 10922[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:53,135]DEBUG 10922[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,135]DEBUG 10922[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 14:08:53,136]DEBUG 10923[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 40
[2017-10-14 14:08:53,137]DEBUG 10924[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,137]DEBUG 10924[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:53,137]DEBUG 10924[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,138]DEBUG 10925[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 14:08:53,138]DEBUG 10925[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 41
[2017-10-14 14:08:53,138]DEBUG 10925[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,138]DEBUG 10925[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:53,139]DEBUG 10926[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,139]DEBUG 10926[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 14:08:53,139]DEBUG 10926[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 42
[2017-10-14 14:08:53,139]DEBUG 10926[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,139]DEBUG 10926[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:53,140]DEBUG 10927[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:53,140]DEBUG 10927[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 3 updates, 0 deletions to 3 objects
[2017-10-14 14:08:53,140]DEBUG 10927[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:53,140]DEBUG 10927[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:53,140]DEBUG 10927[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=40, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 14:08:53,140]DEBUG 10927[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=41, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 14:08:53,140]DEBUG 10927[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=42, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 14:08:53,140]DEBUG 10927[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Products
[2017-10-14 14:08:53,140]DEBUG 10927[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,141]DEBUG 10928[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 14:08:53,141]DEBUG 10928[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2017-10-14 14:08:53,141]DEBUG 10928[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 14:08:53,141]DEBUG 10928[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2017-10-14 14:08:53,141]DEBUG 10928[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 14:08:53,141]DEBUG 10928[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2017-10-14 14:08:53,142]DEBUG 10929[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,143]DEBUG 10930[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,143]DEBUG 10930[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductPrice=? and this_.IsProductActive=?
[2017-10-14 14:08:53,143]DEBUG 10930[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:53,143]DEBUG 10930[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#41]
[2017-10-14 14:08:53,143]DEBUG 10930[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:53,144]DEBUG 10931[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,144]DEBUG 10931[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:53,144]DEBUG 10931[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:53,144]DEBUG 10931[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:53,144]DEBUG 10931[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-14 14:08:53,144]DEBUG 10931[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:53,144]DEBUG 10931[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:53,144]DEBUG 10931[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=40, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 14:08:53,144]DEBUG 10931[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=41, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 14:08:53,144]DEBUG 10931[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=42, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 14:08:53,145]DEBUG 10932[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,145]DEBUG 10932[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 14:08:53,145]DEBUG 10932[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,145]DEBUG 10932[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@12436c64, testMethod = testfindByPrice@ProductDaoTest, testException = [null]]]
[2017-10-14 14:08:53,145]DEBUG 10932[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 14:08:53,145]DEBUG 10932[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7136fa67]
[2017-10-14 14:08:53,145]DEBUG 10932[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 14:08:53,181]DEBUG 10968[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 14:08:53,181]DEBUG 10968[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:53,181]DEBUG 10968[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@7136fa67] after transaction
[2017-10-14 14:08:53,181]DEBUG 10968[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 14:08:53,181]DEBUG 10968[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 14:08:53,182]DEBUG 10969[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:53,182] INFO 10969[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@12436c64, testMethod = testfindByPrice@ProductDaoTest, testException = [null]]]
[2017-10-14 14:08:53,183]DEBUG 10970[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@12436c64, testMethod = testfindByPrice@ProductDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 14:08:53,184]DEBUG 10971[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2017-10-14 14:08:53,184]DEBUG 10971[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2017-10-14 14:08:53,184]DEBUG 10971[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@4d1bdace, testMethod = [null], testException = [null]]].
[2017-10-14 14:08:53,185]DEBUG 10972[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 14:08:53,185]DEBUG 10972[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 14:08:53,185]DEBUG 10972[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 14:08:53,185]DEBUG 10972[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 14:08:53,185]DEBUG 10972[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 14:08:53,186]DEBUG 10973[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 14:08:53,186]DEBUG 10973[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 14:08:53,186]DEBUG 10973[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 14:08:53,186]DEBUG 10973[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 14:08:53,186]DEBUG 10973[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 14:08:53,187]DEBUG 10974[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 14:08:53,187]DEBUG 10974[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 14:08:53,187]DEBUG 10974[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 14:08:53,187]DEBUG 10974[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 14:08:53,187]DEBUG 10974[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 14:08:53,187]DEBUG 10974[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 14:08:53,188]DEBUG 10975[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 14:08:53,188]DEBUG 10975[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 14:08:53,188]DEBUG 10975[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 14:08:53,188]DEBUG 10975[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 14:08:53,188]DEBUG 10975[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 14:08:53,189]DEBUG 10976[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 14:08:53,189]DEBUG 10976[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@4d1bdace]
[2017-10-14 14:08:53,190]DEBUG 10977[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testfindByPriceFromTo' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:53,190]DEBUG 10977[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@4d1bdace, testMethod = testfindByPriceFromTo@ProductDaoTest, testException = [null]]]
[2017-10-14 14:08:53,190]DEBUG 10977[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 14:08:53,191]DEBUG 10978[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testfindByPriceFromTo]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:53,192]DEBUG 10979[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15079793331
[2017-10-14 14:08:53,192]DEBUG 10979[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@4255d6f4] for Hibernate transaction
[2017-10-14 14:08:53,192]DEBUG 10979[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@4255d6f4]
[2017-10-14 14:08:53,192]DEBUG 10979[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 14:08:53,192]DEBUG 10979[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 14:08:53,193]DEBUG 10980[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 14:08:53,193]DEBUG 10980[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@4d1bdace, testMethod = testfindByPriceFromTo@ProductDaoTest, testException = [null]]]
[2017-10-14 14:08:53,193] INFO 10980[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (12): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@48ad0abe]; rollback [true]
[2017-10-14 14:08:53,193]DEBUG 10980[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:53,194]DEBUG 10981[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,194]DEBUG 10981[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 14:08:53,195]DEBUG 10982[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 43
[2017-10-14 14:08:53,195]DEBUG 10982[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,196]DEBUG 10983[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:53,196]DEBUG 10983[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,196]DEBUG 10983[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 14:08:53,197]DEBUG 10984[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 44
[2017-10-14 14:08:53,197]DEBUG 10984[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,197]DEBUG 10984[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:53,198]DEBUG 10985[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,198]DEBUG 10985[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 14:08:53,198]DEBUG 10985[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 45
[2017-10-14 14:08:53,198]DEBUG 10985[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,199]DEBUG 10986[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:53,200]DEBUG 10987[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:53,200]DEBUG 10987[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 3 updates, 0 deletions to 3 objects
[2017-10-14 14:08:53,200]DEBUG 10987[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:53,200]DEBUG 10987[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:53,200]DEBUG 10987[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=44, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 14:08:53,200]DEBUG 10987[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=45, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 14:08:53,200]DEBUG 10987[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=43, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 14:08:53,200]DEBUG 10987[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Products
[2017-10-14 14:08:53,201]DEBUG 10988[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,201]DEBUG 10988[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 14:08:53,201]DEBUG 10988[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2017-10-14 14:08:53,201]DEBUG 10988[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 14:08:53,201]DEBUG 10988[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2017-10-14 14:08:53,201]DEBUG 10988[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 14:08:53,201]DEBUG 10988[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2017-10-14 14:08:53,202]DEBUG 10989[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,202]DEBUG 10989[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,202]DEBUG 10989[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductPrice between ? and ? and this_.IsProductActive=?
[2017-10-14 14:08:53,203]DEBUG 10990[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:53,203]DEBUG 10990[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#43]
[2017-10-14 14:08:53,203]DEBUG 10990[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:53,203]DEBUG 10990[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,203]DEBUG 10990[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:53,204]DEBUG 10991[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:53,204]DEBUG 10991[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:53,204]DEBUG 10991[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-14 14:08:53,204]DEBUG 10991[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:53,204]DEBUG 10991[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:53,204]DEBUG 10991[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=44, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 14:08:53,204]DEBUG 10991[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=45, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 14:08:53,204]DEBUG 10991[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=43, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 14:08:53,204]DEBUG 10991[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,205]DEBUG 10992[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 14:08:53,205]DEBUG 10992[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,205]DEBUG 10992[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@4d1bdace, testMethod = testfindByPriceFromTo@ProductDaoTest, testException = [null]]]
[2017-10-14 14:08:53,205]DEBUG 10992[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 14:08:53,205]DEBUG 10992[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@4255d6f4]
[2017-10-14 14:08:53,205]DEBUG 10992[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 14:08:53,240]DEBUG 11027[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 14:08:53,241]DEBUG 11028[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:53,241]DEBUG 11028[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@4255d6f4] after transaction
[2017-10-14 14:08:53,241]DEBUG 11028[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 14:08:53,242]DEBUG 11029[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 14:08:53,242]DEBUG 11029[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:53,242] INFO 11029[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@4d1bdace, testMethod = testfindByPriceFromTo@ProductDaoTest, testException = [null]]]
[2017-10-14 14:08:53,244]DEBUG 11031[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@4d1bdace, testMethod = testfindByPriceFromTo@ProductDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 14:08:53,244]DEBUG 11031[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2017-10-14 14:08:53,244]DEBUG 11031[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2017-10-14 14:08:53,244]DEBUG 11031[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@f9d085d, testMethod = [null], testException = [null]]].
[2017-10-14 14:08:53,245]DEBUG 11032[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 14:08:53,245]DEBUG 11032[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 14:08:53,245]DEBUG 11032[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 14:08:53,245]DEBUG 11032[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 14:08:53,246]DEBUG 11033[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 14:08:53,246]DEBUG 11033[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 14:08:53,246]DEBUG 11033[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 14:08:53,246]DEBUG 11033[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 14:08:53,246]DEBUG 11033[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 14:08:53,246]DEBUG 11033[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 14:08:53,247]DEBUG 11034[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 14:08:53,247]DEBUG 11034[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 14:08:53,247]DEBUG 11034[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 14:08:53,247]DEBUG 11034[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 14:08:53,247]DEBUG 11034[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 14:08:53,248]DEBUG 11035[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 14:08:53,248]DEBUG 11035[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 14:08:53,248]DEBUG 11035[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 14:08:53,248]DEBUG 11035[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 14:08:53,248]DEBUG 11035[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 14:08:53,249]DEBUG 11036[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 14:08:53,249]DEBUG 11036[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 14:08:53,249]DEBUG 11036[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@f9d085d]
[2017-10-14 14:08:53,250]DEBUG 11037[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetRowCount' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:53,250]DEBUG 11037[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@f9d085d, testMethod = testGetRowCount@ProductDaoTest, testException = [null]]]
[2017-10-14 14:08:53,250]DEBUG 11037[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 14:08:53,253]DEBUG 11040[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testGetRowCount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:53,253]DEBUG 11040[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15079793332
[2017-10-14 14:08:53,253]DEBUG 11040[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@36a5e899] for Hibernate transaction
[2017-10-14 14:08:53,253]DEBUG 11040[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@36a5e899]
[2017-10-14 14:08:53,254]DEBUG 11041[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 14:08:53,254]DEBUG 11041[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 14:08:53,254]DEBUG 11041[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 14:08:53,255]DEBUG 11042[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@f9d085d, testMethod = testGetRowCount@ProductDaoTest, testException = [null]]]
[2017-10-14 14:08:53,255] INFO 11042[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (13): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@48ad0abe]; rollback [true]
[2017-10-14 14:08:53,255]DEBUG 11042[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:53,256]DEBUG 11043[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,256]DEBUG 11043[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 14:08:53,257]DEBUG 11044[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 46
[2017-10-14 14:08:53,257]DEBUG 11044[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,258]DEBUG 11045[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:53,258]DEBUG 11045[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,258]DEBUG 11045[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 14:08:53,258]DEBUG 11045[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 47
[2017-10-14 14:08:53,259]DEBUG 11046[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,259]DEBUG 11046[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:53,259]DEBUG 11046[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,259]DEBUG 11046[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 14:08:53,259]DEBUG 11046[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 48
[2017-10-14 14:08:53,260]DEBUG 11047[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,260]DEBUG 11047[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:53,260]DEBUG 11047[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:53,260]DEBUG 11047[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 3 updates, 0 deletions to 3 objects
[2017-10-14 14:08:53,260]DEBUG 11047[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:53,260]DEBUG 11047[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:53,260]DEBUG 11047[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=46, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 14:08:53,261]DEBUG 11048[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=47, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 14:08:53,261]DEBUG 11048[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=48, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 14:08:53,261]DEBUG 11048[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Products
[2017-10-14 14:08:53,261]DEBUG 11048[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,261]DEBUG 11048[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 14:08:53,261]DEBUG 11048[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2017-10-14 14:08:53,261]DEBUG 11048[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 14:08:53,262]DEBUG 11049[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2017-10-14 14:08:53,262]DEBUG 11049[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 14:08:53,262]DEBUG 11049[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2017-10-14 14:08:53,262]DEBUG 11049[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,263]DEBUG 11050[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,263]DEBUG 11050[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select count(*) as y0_ from Products this_ where this_.IsProductActive=?
[2017-10-14 14:08:53,263]DEBUG 11050[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:53,263]DEBUG 11050[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: 
[2017-10-14 14:08:53,263]DEBUG 11050[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:53,264]DEBUG 11051[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,264]DEBUG 11051[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:53,264]DEBUG 11051[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:53,264]DEBUG 11051[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:53,264]DEBUG 11051[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-14 14:08:53,264]DEBUG 11051[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:53,264]DEBUG 11051[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:53,264]DEBUG 11051[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=46, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 14:08:53,264]DEBUG 11051[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=47, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 14:08:53,264]DEBUG 11051[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=48, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 14:08:53,265]DEBUG 11052[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,265]DEBUG 11052[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 14:08:53,265]DEBUG 11052[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,265]DEBUG 11052[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@f9d085d, testMethod = testGetRowCount@ProductDaoTest, testException = [null]]]
[2017-10-14 14:08:53,265]DEBUG 11052[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 14:08:53,265]DEBUG 11052[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@36a5e899]
[2017-10-14 14:08:53,265]DEBUG 11052[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 14:08:53,299]DEBUG 11086[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 14:08:53,299]DEBUG 11086[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:53,299]DEBUG 11086[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@36a5e899] after transaction
[2017-10-14 14:08:53,299]DEBUG 11086[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 14:08:53,300]DEBUG 11087[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 14:08:53,300]DEBUG 11087[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:53,300] INFO 11087[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@f9d085d, testMethod = testGetRowCount@ProductDaoTest, testException = [null]]]
[2017-10-14 14:08:53,302]DEBUG 11089[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@f9d085d, testMethod = testGetRowCount@ProductDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 14:08:53,302]DEBUG 11089[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2017-10-14 14:08:53,302]DEBUG 11089[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2017-10-14 14:08:53,302]DEBUG 11089[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@22bf06d6, testMethod = [null], testException = [null]]].
[2017-10-14 14:08:53,303]DEBUG 11090[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 14:08:53,303]DEBUG 11090[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 14:08:53,303]DEBUG 11090[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 14:08:53,303]DEBUG 11090[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 14:08:53,304]DEBUG 11091[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 14:08:53,304]DEBUG 11091[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 14:08:53,304]DEBUG 11091[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 14:08:53,304]DEBUG 11091[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 14:08:53,304]DEBUG 11091[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 14:08:53,304]DEBUG 11091[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 14:08:53,305]DEBUG 11092[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 14:08:53,305]DEBUG 11092[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 14:08:53,305]DEBUG 11092[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 14:08:53,305]DEBUG 11092[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 14:08:53,305]DEBUG 11092[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 14:08:53,306]DEBUG 11093[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 14:08:53,306]DEBUG 11093[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 14:08:53,306]DEBUG 11093[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 14:08:53,306]DEBUG 11093[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 14:08:53,306]DEBUG 11093[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 14:08:53,307]DEBUG 11094[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 14:08:53,307]DEBUG 11094[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 14:08:53,307]DEBUG 11094[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@22bf06d6]
[2017-10-14 14:08:53,308]DEBUG 11095[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testfindByID' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:53,308]DEBUG 11095[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@22bf06d6, testMethod = testfindByID@ProductDaoTest, testException = [null]]]
[2017-10-14 14:08:53,308]DEBUG 11095[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 14:08:53,309]DEBUG 11096[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testfindByID]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:53,310]DEBUG 11097[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15079793333
[2017-10-14 14:08:53,310]DEBUG 11097[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@7a601e4] for Hibernate transaction
[2017-10-14 14:08:53,310]DEBUG 11097[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7a601e4]
[2017-10-14 14:08:53,310]DEBUG 11097[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 14:08:53,310]DEBUG 11097[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 14:08:53,311]DEBUG 11098[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 14:08:53,311]DEBUG 11098[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@22bf06d6, testMethod = testfindByID@ProductDaoTest, testException = [null]]]
[2017-10-14 14:08:53,311] INFO 11098[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (14): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@48ad0abe]; rollback [true]
[2017-10-14 14:08:53,311]DEBUG 11098[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:53,312]DEBUG 11099[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,312]DEBUG 11099[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 14:08:53,313]DEBUG 11100[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 49
[2017-10-14 14:08:53,313]DEBUG 11100[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,314]DEBUG 11101[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:53,314]DEBUG 11101[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,314]DEBUG 11101[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 14:08:53,315]DEBUG 11102[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 50
[2017-10-14 14:08:53,315]DEBUG 11102[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,316]DEBUG 11103[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:53,316]DEBUG 11103[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,316]DEBUG 11103[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 14:08:53,317]DEBUG 11104[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 51
[2017-10-14 14:08:53,317]DEBUG 11104[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,318]DEBUG 11105[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:53,318]DEBUG 11105[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:53,318]DEBUG 11105[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 3 updates, 0 deletions to 3 objects
[2017-10-14 14:08:53,318]DEBUG 11105[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:53,318]DEBUG 11105[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:53,318]DEBUG 11105[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=49, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 14:08:53,319]DEBUG 11106[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=50, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 14:08:53,319]DEBUG 11106[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=51, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 14:08:53,319]DEBUG 11106[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Products
[2017-10-14 14:08:53,319]DEBUG 11106[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,319]DEBUG 11106[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 14:08:53,319]DEBUG 11106[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2017-10-14 14:08:53,319]DEBUG 11106[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 14:08:53,319]DEBUG 11106[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2017-10-14 14:08:53,320]DEBUG 11107[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 14:08:53,320]DEBUG 11107[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2017-10-14 14:08:53,320]DEBUG 11107[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,320]DEBUG 11107[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,321]DEBUG 11108[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_
[2017-10-14 14:08:53,321]DEBUG 11108[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:53,321]DEBUG 11108[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#49]
[2017-10-14 14:08:53,321]DEBUG 11108[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#50]
[2017-10-14 14:08:53,321]DEBUG 11108[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#51]
[2017-10-14 14:08:53,322]DEBUG 11109[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:53,322]DEBUG 11109[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,322]DEBUG 11109[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:53,322]DEBUG 11109[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:53,322]DEBUG 11109[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:53,322]DEBUG 11109[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-14 14:08:53,322]DEBUG 11109[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:53,322]DEBUG 11109[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:53,322]DEBUG 11109[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=49, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 14:08:53,323]DEBUG 11110[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=50, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 14:08:53,323]DEBUG 11110[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=51, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 14:08:53,323]DEBUG 11110[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,323]DEBUG 11110[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 14:08:53,323]DEBUG 11110[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,323]DEBUG 11110[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@22bf06d6, testMethod = testfindByID@ProductDaoTest, testException = [null]]]
[2017-10-14 14:08:53,323]DEBUG 11110[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 14:08:53,323]DEBUG 11110[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7a601e4]
[2017-10-14 14:08:53,323]DEBUG 11110[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 14:08:53,390]DEBUG 11177[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 14:08:53,391]DEBUG 11178[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:53,391]DEBUG 11178[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@7a601e4] after transaction
[2017-10-14 14:08:53,391]DEBUG 11178[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 14:08:53,391]DEBUG 11178[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 14:08:53,391]DEBUG 11178[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:53,392] INFO 11179[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@22bf06d6, testMethod = testfindByID@ProductDaoTest, testException = [null]]]
[2017-10-14 14:08:53,393]DEBUG 11180[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@22bf06d6, testMethod = testfindByID@ProductDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 14:08:53,394]DEBUG 11181[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2017-10-14 14:08:53,394]DEBUG 11181[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2017-10-14 14:08:53,394]DEBUG 11181[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@2a1dbbbf, testMethod = [null], testException = [null]]].
[2017-10-14 14:08:53,394]DEBUG 11181[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 14:08:53,395]DEBUG 11182[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 14:08:53,395]DEBUG 11182[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 14:08:53,395]DEBUG 11182[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 14:08:53,395]DEBUG 11182[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 14:08:53,395]DEBUG 11182[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 14:08:53,396]DEBUG 11183[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 14:08:53,396]DEBUG 11183[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 14:08:53,396]DEBUG 11183[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 14:08:53,396]DEBUG 11183[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 14:08:53,396]DEBUG 11183[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 14:08:53,396]DEBUG 11183[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 14:08:53,397]DEBUG 11184[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 14:08:53,397]DEBUG 11184[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 14:08:53,397]DEBUG 11184[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 14:08:53,397]DEBUG 11184[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 14:08:53,397]DEBUG 11184[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 14:08:53,398]DEBUG 11185[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 14:08:53,398]DEBUG 11185[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 14:08:53,398]DEBUG 11185[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 14:08:53,398]DEBUG 11185[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 14:08:53,398]DEBUG 11185[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 14:08:53,399]DEBUG 11186[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@2a1dbbbf]
[2017-10-14 14:08:53,399]DEBUG 11186[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testfindByNameSorting' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:53,400]DEBUG 11187[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@2a1dbbbf, testMethod = testfindByNameSorting@ProductDaoTest, testException = [null]]]
[2017-10-14 14:08:53,400]DEBUG 11187[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 14:08:53,401]DEBUG 11188[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testfindByNameSorting]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:53,401]DEBUG 11188[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15079793334
[2017-10-14 14:08:53,402]DEBUG 11189[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@5ada74b] for Hibernate transaction
[2017-10-14 14:08:53,402]DEBUG 11189[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@5ada74b]
[2017-10-14 14:08:53,402]DEBUG 11189[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 14:08:53,402]DEBUG 11189[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 14:08:53,402]DEBUG 11189[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 14:08:53,403]DEBUG 11190[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@2a1dbbbf, testMethod = testfindByNameSorting@ProductDaoTest, testException = [null]]]
[2017-10-14 14:08:53,403] INFO 11190[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (15): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@48ad0abe]; rollback [true]
[2017-10-14 14:08:53,403]DEBUG 11190[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:53,403]DEBUG 11190[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,404]DEBUG 11191[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 14:08:53,405]DEBUG 11192[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 52
[2017-10-14 14:08:53,405]DEBUG 11192[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,405]DEBUG 11192[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:53,406]DEBUG 11193[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,406]DEBUG 11193[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 14:08:53,407]DEBUG 11194[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 53
[2017-10-14 14:08:53,407]DEBUG 11194[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,407]DEBUG 11194[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:53,408]DEBUG 11195[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,408]DEBUG 11195[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 14:08:53,409]DEBUG 11196[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 54
[2017-10-14 14:08:53,409]DEBUG 11196[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,410]DEBUG 11197[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:53,410]DEBUG 11197[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:53,410]DEBUG 11197[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 3 updates, 0 deletions to 3 objects
[2017-10-14 14:08:53,411]DEBUG 11198[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:53,411]DEBUG 11198[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:53,411]DEBUG 11198[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=52, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 14:08:53,411]DEBUG 11198[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=53, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 14:08:53,411]DEBUG 11198[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=54, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 14:08:53,412]DEBUG 11199[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Products
[2017-10-14 14:08:53,412]DEBUG 11199[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,412]DEBUG 11199[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 14:08:53,413]DEBUG 11200[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2017-10-14 14:08:53,413]DEBUG 11200[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 14:08:53,414]DEBUG 11201[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2017-10-14 14:08:53,414]DEBUG 11201[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 14:08:53,415]DEBUG 11202[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2017-10-14 14:08:53,416]DEBUG 11203[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,416]DEBUG 11203[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,417]DEBUG 11204[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductName like ? and this_.IsProductActive=? order by this_.ProductName asc
[2017-10-14 14:08:53,418]DEBUG 11205[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:53,418]DEBUG 11205[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#52]
[2017-10-14 14:08:53,418]DEBUG 11205[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#53]
[2017-10-14 14:08:53,418]DEBUG 11205[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#54]
[2017-10-14 14:08:53,418]DEBUG 11205[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:53,419]DEBUG 11206[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,419]DEBUG 11206[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:53,419]DEBUG 11206[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:53,419]DEBUG 11206[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:53,419]DEBUG 11206[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-14 14:08:53,419]DEBUG 11206[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:53,420]DEBUG 11207[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:53,420]DEBUG 11207[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=52, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 14:08:53,420]DEBUG 11207[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=53, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 14:08:53,420]DEBUG 11207[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=54, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 14:08:53,420]DEBUG 11207[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,420]DEBUG 11207[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductName like ? and this_.IsProductActive=? order by this_.ProductName desc
[2017-10-14 14:08:53,421]DEBUG 11208[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:53,421]DEBUG 11208[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#54]
[2017-10-14 14:08:53,421]DEBUG 11208[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#53]
[2017-10-14 14:08:53,421]DEBUG 11208[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#52]
[2017-10-14 14:08:53,421]DEBUG 11208[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:53,421]DEBUG 11208[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,421]DEBUG 11208[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:53,422]DEBUG 11209[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:53,422]DEBUG 11209[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:53,422]DEBUG 11209[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-14 14:08:53,422]DEBUG 11209[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:53,422]DEBUG 11209[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:53,422]DEBUG 11209[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=52, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 14:08:53,422]DEBUG 11209[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=53, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 14:08:53,422]DEBUG 11209[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=54, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 14:08:53,422]DEBUG 11209[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,423]DEBUG 11210[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 14:08:53,423]DEBUG 11210[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,423]DEBUG 11210[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@2a1dbbbf, testMethod = testfindByNameSorting@ProductDaoTest, testException = [null]]]
[2017-10-14 14:08:53,423]DEBUG 11210[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 14:08:53,423]DEBUG 11210[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@5ada74b]
[2017-10-14 14:08:53,423]DEBUG 11210[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 14:08:53,457]DEBUG 11244[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 14:08:53,458]DEBUG 11245[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:53,458]DEBUG 11245[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@5ada74b] after transaction
[2017-10-14 14:08:53,458]DEBUG 11245[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 14:08:53,458]DEBUG 11245[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 14:08:53,458]DEBUG 11245[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:53,458] INFO 11245[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@2a1dbbbf, testMethod = testfindByNameSorting@ProductDaoTest, testException = [null]]]
[2017-10-14 14:08:53,459]DEBUG 11246[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@2a1dbbbf, testMethod = testfindByNameSorting@ProductDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 14:08:53,459]DEBUG 11246[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2017-10-14 14:08:53,459]DEBUG 11246[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2017-10-14 14:08:53,460]DEBUG 11247[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@471f8b7b, testMethod = [null], testException = [null]]].
[2017-10-14 14:08:53,460]DEBUG 11247[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 14:08:53,460]DEBUG 11247[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 14:08:53,460]DEBUG 11247[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 14:08:53,460]DEBUG 11247[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 14:08:53,460]DEBUG 11247[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 14:08:53,460]DEBUG 11247[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 14:08:53,460]DEBUG 11247[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 14:08:53,461]DEBUG 11248[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 14:08:53,461]DEBUG 11248[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 14:08:53,461]DEBUG 11248[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 14:08:53,461]DEBUG 11248[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 14:08:53,461]DEBUG 11248[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 14:08:53,461]DEBUG 11248[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 14:08:53,461]DEBUG 11248[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 14:08:53,461]DEBUG 11248[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 14:08:53,461]DEBUG 11248[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 14:08:53,461]DEBUG 11248[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 14:08:53,461]DEBUG 11248[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 14:08:53,461]DEBUG 11248[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 14:08:53,462]DEBUG 11249[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 14:08:53,462]DEBUG 11249[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 14:08:53,462]DEBUG 11249[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 14:08:53,462]DEBUG 11249[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@471f8b7b]
[2017-10-14 14:08:53,462]DEBUG 11249[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testfindByDescriptionSorting' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:53,462]DEBUG 11249[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@471f8b7b, testMethod = testfindByDescriptionSorting@ProductDaoTest, testException = [null]]]
[2017-10-14 14:08:53,463]DEBUG 11250[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 14:08:53,463]DEBUG 11250[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testfindByDescriptionSorting]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:53,463]DEBUG 11250[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15079793334
[2017-10-14 14:08:53,463]DEBUG 11250[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@18be0f81] for Hibernate transaction
[2017-10-14 14:08:53,464]DEBUG 11251[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@18be0f81]
[2017-10-14 14:08:53,464]DEBUG 11251[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 14:08:53,464]DEBUG 11251[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 14:08:53,464]DEBUG 11251[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 14:08:53,464]DEBUG 11251[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@471f8b7b, testMethod = testfindByDescriptionSorting@ProductDaoTest, testException = [null]]]
[2017-10-14 14:08:53,464] INFO 11251[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (16): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@48ad0abe]; rollback [true]
[2017-10-14 14:08:53,464]DEBUG 11251[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:53,464]DEBUG 11251[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,465]DEBUG 11252[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 14:08:53,465]DEBUG 11252[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 55
[2017-10-14 14:08:53,465]DEBUG 11252[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,465]DEBUG 11252[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:53,466]DEBUG 11253[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,466]DEBUG 11253[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 14:08:53,466]DEBUG 11253[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 56
[2017-10-14 14:08:53,466]DEBUG 11253[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,466]DEBUG 11253[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:53,466]DEBUG 11253[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,467]DEBUG 11254[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 14:08:53,467]DEBUG 11254[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 57
[2017-10-14 14:08:53,467]DEBUG 11254[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,467]DEBUG 11254[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:53,468]DEBUG 11255[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:53,468]DEBUG 11255[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 3 updates, 0 deletions to 3 objects
[2017-10-14 14:08:53,468]DEBUG 11255[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:53,468]DEBUG 11255[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:53,468]DEBUG 11255[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=56, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 14:08:53,468]DEBUG 11255[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=57, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 14:08:53,468]DEBUG 11255[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=55, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 14:08:53,468]DEBUG 11255[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Products
[2017-10-14 14:08:53,468]DEBUG 11255[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,468]DEBUG 11255[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 14:08:53,469]DEBUG 11256[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2017-10-14 14:08:53,469]DEBUG 11256[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 14:08:53,469]DEBUG 11256[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2017-10-14 14:08:53,469]DEBUG 11256[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 14:08:53,469]DEBUG 11256[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2017-10-14 14:08:53,470]DEBUG 11257[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,470]DEBUG 11257[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,470]DEBUG 11257[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductDescription like ? and this_.IsProductActive=? order by this_.ProductDescription asc
[2017-10-14 14:08:53,471]DEBUG 11258[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:53,471]DEBUG 11258[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#55]
[2017-10-14 14:08:53,471]DEBUG 11258[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#56]
[2017-10-14 14:08:53,471]DEBUG 11258[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#57]
[2017-10-14 14:08:53,471]DEBUG 11258[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:53,471]DEBUG 11258[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,471]DEBUG 11258[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:53,472]DEBUG 11259[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:53,472]DEBUG 11259[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:53,472]DEBUG 11259[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-14 14:08:53,472]DEBUG 11259[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:53,472]DEBUG 11259[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:53,472]DEBUG 11259[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=56, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 14:08:53,472]DEBUG 11259[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=57, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 14:08:53,472]DEBUG 11259[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=55, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 14:08:53,472]DEBUG 11259[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,472]DEBUG 11259[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductDescription like ? and this_.IsProductActive=? order by this_.ProductDescription desc
[2017-10-14 14:08:53,473]DEBUG 11260[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:53,473]DEBUG 11260[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#57]
[2017-10-14 14:08:53,473]DEBUG 11260[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#56]
[2017-10-14 14:08:53,473]DEBUG 11260[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#55]
[2017-10-14 14:08:53,473]DEBUG 11260[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:53,473]DEBUG 11260[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,474]DEBUG 11261[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:53,474]DEBUG 11261[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:53,474]DEBUG 11261[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:53,474]DEBUG 11261[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-14 14:08:53,474]DEBUG 11261[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:53,474]DEBUG 11261[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:53,474]DEBUG 11261[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=56, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 14:08:53,474]DEBUG 11261[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=57, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 14:08:53,475]DEBUG 11262[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=55, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 14:08:53,475]DEBUG 11262[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,475]DEBUG 11262[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 14:08:53,475]DEBUG 11262[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,475]DEBUG 11262[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@471f8b7b, testMethod = testfindByDescriptionSorting@ProductDaoTest, testException = [null]]]
[2017-10-14 14:08:53,475]DEBUG 11262[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 14:08:53,475]DEBUG 11262[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@18be0f81]
[2017-10-14 14:08:53,475]DEBUG 11262[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 14:08:53,507]DEBUG 11294[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 14:08:53,508]DEBUG 11295[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:53,508]DEBUG 11295[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@18be0f81] after transaction
[2017-10-14 14:08:53,508]DEBUG 11295[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 14:08:53,508]DEBUG 11295[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 14:08:53,508]DEBUG 11295[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:53,509] INFO 11296[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@471f8b7b, testMethod = testfindByDescriptionSorting@ProductDaoTest, testException = [null]]]
[2017-10-14 14:08:53,510]DEBUG 11297[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@471f8b7b, testMethod = testfindByDescriptionSorting@ProductDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 14:08:53,510]DEBUG 11297[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2017-10-14 14:08:53,511]DEBUG 11298[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2017-10-14 14:08:53,511]DEBUG 11298[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@64f25d57, testMethod = [null], testException = [null]]].
[2017-10-14 14:08:53,511]DEBUG 11298[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 14:08:53,511]DEBUG 11298[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 14:08:53,512]DEBUG 11299[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 14:08:53,512]DEBUG 11299[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 14:08:53,512]DEBUG 11299[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 14:08:53,512]DEBUG 11299[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 14:08:53,512]DEBUG 11299[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 14:08:53,513]DEBUG 11300[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 14:08:53,513]DEBUG 11300[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 14:08:53,513]DEBUG 11300[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 14:08:53,513]DEBUG 11300[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 14:08:53,513]DEBUG 11300[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 14:08:53,513]DEBUG 11300[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 14:08:53,514]DEBUG 11301[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 14:08:53,514]DEBUG 11301[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 14:08:53,514]DEBUG 11301[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 14:08:53,514]DEBUG 11301[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 14:08:53,514]DEBUG 11301[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 14:08:53,515]DEBUG 11302[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 14:08:53,515]DEBUG 11302[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 14:08:53,515]DEBUG 11302[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 14:08:53,515]DEBUG 11302[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 14:08:53,516]DEBUG 11303[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@64f25d57]
[2017-10-14 14:08:53,516]DEBUG 11303[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testfindByPriceFromToSorting' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:53,516]DEBUG 11303[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@64f25d57, testMethod = testfindByPriceFromToSorting@ProductDaoTest, testException = [null]]]
[2017-10-14 14:08:53,517]DEBUG 11304[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 14:08:53,518]DEBUG 11305[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testfindByPriceFromToSorting]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:53,518]DEBUG 11305[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15079793335
[2017-10-14 14:08:53,518]DEBUG 11305[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@47679cc1] for Hibernate transaction
[2017-10-14 14:08:53,518]DEBUG 11305[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@47679cc1]
[2017-10-14 14:08:53,518]DEBUG 11305[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 14:08:53,518]DEBUG 11305[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 14:08:53,518]DEBUG 11305[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 14:08:53,519]DEBUG 11306[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@64f25d57, testMethod = testfindByPriceFromToSorting@ProductDaoTest, testException = [null]]]
[2017-10-14 14:08:53,519] INFO 11306[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (17): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@48ad0abe]; rollback [true]
[2017-10-14 14:08:53,519]DEBUG 11306[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:53,519]DEBUG 11306[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,519]DEBUG 11306[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 14:08:53,520]DEBUG 11307[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 58
[2017-10-14 14:08:53,520]DEBUG 11307[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,520]DEBUG 11307[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:53,520]DEBUG 11307[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,520]DEBUG 11307[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 14:08:53,521]DEBUG 11308[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 59
[2017-10-14 14:08:53,521]DEBUG 11308[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,521]DEBUG 11308[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:53,521]DEBUG 11308[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,521]DEBUG 11308[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 14:08:53,522]DEBUG 11309[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 60
[2017-10-14 14:08:53,522]DEBUG 11309[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,522]DEBUG 11309[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:53,522]DEBUG 11309[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:53,523]DEBUG 11310[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 3 updates, 0 deletions to 3 objects
[2017-10-14 14:08:53,523]DEBUG 11310[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:53,523]DEBUG 11310[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:53,523]DEBUG 11310[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=58, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 14:08:53,523]DEBUG 11310[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=59, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 14:08:53,523]DEBUG 11310[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=60, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 14:08:53,523]DEBUG 11310[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Products
[2017-10-14 14:08:53,524]DEBUG 11311[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,524]DEBUG 11311[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 14:08:53,524]DEBUG 11311[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2017-10-14 14:08:53,524]DEBUG 11311[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 14:08:53,524]DEBUG 11311[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2017-10-14 14:08:53,524]DEBUG 11311[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 14:08:53,525]DEBUG 11312[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2017-10-14 14:08:53,528]DEBUG 11315[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,529]DEBUG 11316[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,529]DEBUG 11316[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductPrice between ? and ? and this_.IsProductActive=? order by this_.ProductPrice asc
[2017-10-14 14:08:53,529]DEBUG 11316[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:53,530]DEBUG 11317[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#58]
[2017-10-14 14:08:53,530]DEBUG 11317[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#59]
[2017-10-14 14:08:53,530]DEBUG 11317[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#60]
[2017-10-14 14:08:53,530]DEBUG 11317[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:53,530]DEBUG 11317[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,530]DEBUG 11317[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:53,531]DEBUG 11318[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:53,531]DEBUG 11318[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:53,531]DEBUG 11318[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-14 14:08:53,531]DEBUG 11318[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:53,531]DEBUG 11318[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:53,531]DEBUG 11318[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=58, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 14:08:53,531]DEBUG 11318[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=59, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 14:08:53,532]DEBUG 11319[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=60, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 14:08:53,532]DEBUG 11319[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,532]DEBUG 11319[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductPrice between ? and ? and this_.IsProductActive=? order by this_.ProductPrice desc
[2017-10-14 14:08:53,532]DEBUG 11319[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:53,533]DEBUG 11320[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#60]
[2017-10-14 14:08:53,533]DEBUG 11320[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#59]
[2017-10-14 14:08:53,533]DEBUG 11320[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#58]
[2017-10-14 14:08:53,533]DEBUG 11320[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:53,533]DEBUG 11320[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,533]DEBUG 11320[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:53,533]DEBUG 11320[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:53,533]DEBUG 11320[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:53,534]DEBUG 11321[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-14 14:08:53,534]DEBUG 11321[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:53,534]DEBUG 11321[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:53,534]DEBUG 11321[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=58, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 14:08:53,534]DEBUG 11321[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=59, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 14:08:53,534]DEBUG 11321[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=60, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 14:08:53,534]DEBUG 11321[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,534]DEBUG 11321[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 14:08:53,535]DEBUG 11322[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,535]DEBUG 11322[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@64f25d57, testMethod = testfindByPriceFromToSorting@ProductDaoTest, testException = [null]]]
[2017-10-14 14:08:53,535]DEBUG 11322[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 14:08:53,535]DEBUG 11322[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@47679cc1]
[2017-10-14 14:08:53,535]DEBUG 11322[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 14:08:53,566]DEBUG 11353[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 14:08:53,566]DEBUG 11353[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:53,566]DEBUG 11353[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@47679cc1] after transaction
[2017-10-14 14:08:53,566]DEBUG 11353[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 14:08:53,567]DEBUG 11354[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 14:08:53,567]DEBUG 11354[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:53,567] INFO 11354[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@64f25d57, testMethod = testfindByPriceFromToSorting@ProductDaoTest, testException = [null]]]
[2017-10-14 14:08:53,569]DEBUG 11356[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@64f25d57, testMethod = testfindByPriceFromToSorting@ProductDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 14:08:53,569]DEBUG 11356[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2017-10-14 14:08:53,570]DEBUG 11357[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2017-10-14 14:08:53,570]DEBUG 11357[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@52e4b448, testMethod = [null], testException = [null]]].
[2017-10-14 14:08:53,570]DEBUG 11357[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 14:08:53,570]DEBUG 11357[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 14:08:53,571]DEBUG 11358[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 14:08:53,571]DEBUG 11358[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 14:08:53,571]DEBUG 11358[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 14:08:53,571]DEBUG 11358[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 14:08:53,572]DEBUG 11359[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 14:08:53,572]DEBUG 11359[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 14:08:53,572]DEBUG 11359[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 14:08:53,572]DEBUG 11359[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 14:08:53,573]DEBUG 11360[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 14:08:53,573]DEBUG 11360[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 14:08:53,573]DEBUG 11360[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 14:08:53,573]DEBUG 11360[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 14:08:53,574]DEBUG 11361[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 14:08:53,574]DEBUG 11361[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 14:08:53,574]DEBUG 11361[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 14:08:53,574]DEBUG 11361[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 14:08:53,575]DEBUG 11362[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 14:08:53,575]DEBUG 11362[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 14:08:53,575]DEBUG 11362[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 14:08:53,575]DEBUG 11362[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 14:08:53,576]DEBUG 11363[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@52e4b448]
[2017-10-14 14:08:53,576]DEBUG 11363[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testContextFile' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:53,577]DEBUG 11364[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@52e4b448, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2017-10-14 14:08:53,577]DEBUG 11364[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 14:08:53,578]DEBUG 11365[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testContextFile]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:53,579]DEBUG 11366[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15079793335
[2017-10-14 14:08:53,579]DEBUG 11366[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@75f98532] for Hibernate transaction
[2017-10-14 14:08:53,579]DEBUG 11366[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@75f98532]
[2017-10-14 14:08:53,579]DEBUG 11366[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 14:08:53,580]DEBUG 11367[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 14:08:53,580]DEBUG 11367[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 14:08:53,580]DEBUG 11367[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@52e4b448, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2017-10-14 14:08:53,580] INFO 11367[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (18): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@48ad0abe]; rollback [true]
[2017-10-14 14:08:53,581]DEBUG 11368[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:53,581]DEBUG 11368[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,581]DEBUG 11368[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 14:08:53,582]DEBUG 11369[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 61
[2017-10-14 14:08:53,583]DEBUG 11370[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,583]DEBUG 11370[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:53,584]DEBUG 11371[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,584]DEBUG 11371[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 14:08:53,585]DEBUG 11372[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 62
[2017-10-14 14:08:53,585]DEBUG 11372[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,586]DEBUG 11373[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:53,586]DEBUG 11373[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,586]DEBUG 11373[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 14:08:53,587]DEBUG 11374[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 63
[2017-10-14 14:08:53,587]DEBUG 11374[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,588]DEBUG 11375[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:53,588]DEBUG 11375[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:53,589]DEBUG 11376[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 3 updates, 0 deletions to 3 objects
[2017-10-14 14:08:53,589]DEBUG 11376[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:53,589]DEBUG 11376[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:53,589]DEBUG 11376[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=61, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 14:08:53,590]DEBUG 11377[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=62, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 14:08:53,590]DEBUG 11377[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=63, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 14:08:53,590]DEBUG 11377[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Products
[2017-10-14 14:08:53,590]DEBUG 11377[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,591]DEBUG 11378[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 14:08:53,591]DEBUG 11378[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2017-10-14 14:08:53,591]DEBUG 11378[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 14:08:53,592]DEBUG 11379[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2017-10-14 14:08:53,592]DEBUG 11379[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 14:08:53,593]DEBUG 11380[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2017-10-14 14:08:53,594]DEBUG 11381[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,594]DEBUG 11381[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,595]DEBUG 11382[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 14:08:53,595]DEBUG 11382[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,596]DEBUG 11383[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@52e4b448, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2017-10-14 14:08:53,596]DEBUG 11383[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 14:08:53,596]DEBUG 11383[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@75f98532]
[2017-10-14 14:08:53,596]DEBUG 11383[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 14:08:53,632]DEBUG 11419[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 14:08:53,633]DEBUG 11420[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:53,633]DEBUG 11420[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@75f98532] after transaction
[2017-10-14 14:08:53,633]DEBUG 11420[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 14:08:53,633]DEBUG 11420[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 14:08:53,634]DEBUG 11421[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:53,634] INFO 11421[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@52e4b448, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2017-10-14 14:08:53,636]DEBUG 11423[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@52e4b448, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 14:08:53,636]DEBUG 11423[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestClass(DirtiesContextTestExecutionListener.java:113) - After test class: context [[TestContext@5bc4ba4c testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = [null], testMethod = [null], testException = [null]]], dirtiesContext [false].
[2017-10-14 14:08:53,638]DEBUG 11425[main] - org.springframework.test.context.junit4.SpringJUnit4ClassRunner.<init>(SpringJUnit4ClassRunner.java:106) - SpringJUnit4ClassRunner constructor called with [class com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest].
[2017-10-14 14:08:53,638] INFO 11425[main] - org.springframework.test.context.TestContextManager.retrieveTestExecutionListeners(TestContextManager.java:185) - @TestExecutionListeners is not present for class [class com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest]: using defaults.
[2017-10-14 14:08:53,638]DEBUG 11425[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest]
[2017-10-14 14:08:53,639]DEBUG 11426[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest]
[2017-10-14 14:08:53,639]DEBUG 11426[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest]
[2017-10-14 14:08:53,639]DEBUG 11426[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest]
[2017-10-14 14:08:53,640]DEBUG 11427[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest]
[2017-10-14 14:08:53,640]DEBUG 11427[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest]
[2017-10-14 14:08:53,641]DEBUG 11428[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest]
[2017-10-14 14:08:53,641]DEBUG 11428[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest]
[2017-10-14 14:08:53,642]DEBUG 11429[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@4750be19 testClass = DimensionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@5f07fe3, testMethod = [null], testException = [null]]].
[2017-10-14 14:08:53,650]DEBUG 11437[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 14:08:53,650]DEBUG 11437[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 14:08:53,650]DEBUG 11437[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 14:08:53,651]DEBUG 11438[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 14:08:53,651]DEBUG 11438[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 14:08:53,651]DEBUG 11438[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 14:08:53,651]DEBUG 11438[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 14:08:53,651]DEBUG 11438[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 14:08:53,651]DEBUG 11438[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 14:08:53,651]DEBUG 11438[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest]: AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 14:08:53,651]DEBUG 11438[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 14:08:53,652]DEBUG 11439[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 14:08:53,652]DEBUG 11439[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest' to bean named 'customerTypeDao'
[2017-10-14 14:08:53,652]DEBUG 11439[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 14:08:53,652]DEBUG 11439[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 14:08:53,652]DEBUG 11439[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest' to bean named 'dimensionDao'
[2017-10-14 14:08:53,652]DEBUG 11439[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 14:08:53,653]DEBUG 11440[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 14:08:53,653]DEBUG 11440[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest' to bean named 'orderDao'
[2017-10-14 14:08:53,653]DEBUG 11440[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 14:08:53,653]DEBUG 11440[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 14:08:53,653]DEBUG 11440[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest' to bean named 'orderItemDao'
[2017-10-14 14:08:53,653]DEBUG 11440[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 14:08:53,654]DEBUG 11441[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 14:08:53,654]DEBUG 11441[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest' to bean named 'orderStatusDao'
[2017-10-14 14:08:53,654]DEBUG 11441[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 14:08:53,654]DEBUG 11441[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 14:08:53,654]DEBUG 11441[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest' to bean named 'productDao'
[2017-10-14 14:08:53,654]DEBUG 11441[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 14:08:53,655]DEBUG 11442[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 14:08:53,655]DEBUG 11442[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest' to bean named 'regionDao'
[2017-10-14 14:08:53,655]DEBUG 11442[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 14:08:53,655]DEBUG 11442[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 14:08:53,655]DEBUG 11442[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest' to bean named 'roleDao'
[2017-10-14 14:08:53,655]DEBUG 11442[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 14:08:53,656]DEBUG 11443[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 14:08:53,656]DEBUG 11443[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest' to bean named 'userDao'
[2017-10-14 14:08:53,656]DEBUG 11443[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 14:08:53,656]DEBUG 11443[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 14:08:53,656]DEBUG 11443[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest' to bean named 'sessionFactory'
[2017-10-14 14:08:53,657]DEBUG 11444[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 14:08:53,657]DEBUG 11444[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'setUp' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:53,657]DEBUG 11444[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 14:08:53,657]DEBUG 11444[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@5f07fe3]
[2017-10-14 14:08:53,658]DEBUG 11445[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest.setUp()
[2017-10-14 14:08:53,658]DEBUG 11445[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'tearDown' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:53,658]DEBUG 11445[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest.tearDown() throws java.lang.Exception
[2017-10-14 14:08:53,659]DEBUG 11446[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindDimensionByName_String' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:53,659]DEBUG 11446[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest.testFindDimensionByName_String()
[2017-10-14 14:08:53,659]DEBUG 11446[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindDimensionByName_DimensionTypesEnum' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:53,659]DEBUG 11446[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest.testFindDimensionByName_DimensionTypesEnum()
[2017-10-14 14:08:53,659]DEBUG 11446[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindDimensionByNumberOfProducts_Int' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:53,659]DEBUG 11446[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest.testFindDimensionByNumberOfProducts_Int()
[2017-10-14 14:08:53,660]DEBUG 11447[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindDimensionByNumberOfProducts_DimensionTypesEnum' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:53,660]DEBUG 11447[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest.testFindDimensionByNumberOfProducts_DimensionTypesEnum()
[2017-10-14 14:08:53,660]DEBUG 11447[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetItemDimension' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:53,660]DEBUG 11447[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest.testGetItemDimension()
[2017-10-14 14:08:53,660]DEBUG 11447[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetBoxDimension' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:53,660]DEBUG 11447[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest.testGetBoxDimension()
[2017-10-14 14:08:53,661]DEBUG 11448[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetPackageDimension' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:53,661]DEBUG 11448[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest.testGetPackageDimension()
[2017-10-14 14:08:53,661]DEBUG 11448[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanDB()
[2017-10-14 14:08:53,661]DEBUG 11448[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanCustomerType()
[2017-10-14 14:08:53,661]DEBUG 11448[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testContextFile' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:53,661]DEBUG 11448[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.testContextFile()
[2017-10-14 14:08:53,662]DEBUG 11449[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanUser()
[2017-10-14 14:08:53,662]DEBUG 11449[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanRole()
[2017-10-14 14:08:53,662]DEBUG 11449[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanRegion()
[2017-10-14 14:08:53,662]DEBUG 11449[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanProduct()
[2017-10-14 14:08:53,662]DEBUG 11449[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrderStatus()
[2017-10-14 14:08:53,662]DEBUG 11449[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrderItem()
[2017-10-14 14:08:53,662]DEBUG 11449[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrder()
[2017-10-14 14:08:53,663]DEBUG 11450[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanDimension()
[2017-10-14 14:08:53,663]DEBUG 11450[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:749) - Found finalize() method - using NO_OVERRIDE
[2017-10-14 14:08:53,663]DEBUG 11450[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:761) - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
[2017-10-14 14:08:53,663]DEBUG 11450[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
[2017-10-14 14:08:53,663]DEBUG 11450[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:766) - Found 'hashCode' method: public native int java.lang.Object.hashCode()
[2017-10-14 14:08:53,663]DEBUG 11450[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
[2017-10-14 14:08:53,663]DEBUG 11450[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
[2017-10-14 14:08:53,663]DEBUG 11450[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
[2017-10-14 14:08:53,664]DEBUG 11451[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2017-10-14 14:08:53,664]DEBUG 11451[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2017-10-14 14:08:53,664]DEBUG 11451[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
[2017-10-14 14:08:53,664]DEBUG 11451[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
[2017-10-14 14:08:53,664]DEBUG 11451[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
[2017-10-14 14:08:53,664]DEBUG 11451[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
[2017-10-14 14:08:53,664]DEBUG 11451[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
[2017-10-14 14:08:53,664]DEBUG 11451[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
[2017-10-14 14:08:53,665]DEBUG 11452[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
[2017-10-14 14:08:53,665]DEBUG 11452[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
[2017-10-14 14:08:53,665]DEBUG 11452[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
[2017-10-14 14:08:53,665]DEBUG 11452[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
[2017-10-14 14:08:53,665]DEBUG 11452[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
[2017-10-14 14:08:53,665]DEBUG 11452[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
[2017-10-14 14:08:53,665]DEBUG 11452[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
[2017-10-14 14:08:53,665]DEBUG 11452[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
[2017-10-14 14:08:53,666]DEBUG 11453[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2017-10-14 14:08:53,666]DEBUG 11453[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
[2017-10-14 14:08:53,666]DEBUG 11453[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
[2017-10-14 14:08:53,666]DEBUG 11453[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
[2017-10-14 14:08:53,666]DEBUG 11453[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
[2017-10-14 14:08:53,675]DEBUG 11462[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindDimensionByName_String' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:53,676]DEBUG 11463[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@4750be19 testClass = DimensionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@5f07fe3, testMethod = testFindDimensionByName_String@DimensionDaoTest, testException = [null]]]
[2017-10-14 14:08:53,676]DEBUG 11463[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.retrieveConfigurationAttributes(TransactionalTestExecutionListener.java:466) - Retrieved @TransactionConfiguration [@org.springframework.test.context.transaction.TransactionConfiguration(transactionManager=transactionManager, defaultRollback=true)] for test class [class com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest]
[2017-10-14 14:08:53,676]DEBUG 11463[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.retrieveConfigurationAttributes(TransactionalTestExecutionListener.java:483) - Retrieved TransactionConfigurationAttributes [[TransactionConfigurationAttributes@2cc6d115 transactionManagerName = 'transactionManager', defaultRollback = true]] for class [class com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest]
[2017-10-14 14:08:53,676]DEBUG 11463[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 14:08:53,676]DEBUG 11463[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindDimensionByName_String]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:53,676]DEBUG 11463[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15079793336
[2017-10-14 14:08:53,677]DEBUG 11464[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@d4c330b] for Hibernate transaction
[2017-10-14 14:08:53,677]DEBUG 11464[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@d4c330b]
[2017-10-14 14:08:53,677]DEBUG 11464[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 14:08:53,677]DEBUG 11464[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 14:08:53,677]DEBUG 11464[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 14:08:53,677]DEBUG 11464[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@4750be19 testClass = DimensionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@5f07fe3, testMethod = testFindDimensionByName_String@DimensionDaoTest, testException = [null]]]
[2017-10-14 14:08:53,677] INFO 11464[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (1): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@48ad0abe]; rollback [true]
[2017-10-14 14:08:53,677]DEBUG 11464[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,678]DEBUG 11465[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 14:08:53,678]DEBUG 11465[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,678]DEBUG 11465[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,678]DEBUG 11465[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 14:08:53,679]DEBUG 11466[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,679]DEBUG 11466[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,679]DEBUG 11466[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 14:08:53,679]DEBUG 11466[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,679]DEBUG 11466[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,679]DEBUG 11466[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 14:08:53,680]DEBUG 11467[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,680]DEBUG 11467[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,681]DEBUG 11468[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 14:08:53,681]DEBUG 11468[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,681]DEBUG 11468[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,681]DEBUG 11468[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 14:08:53,682]DEBUG 11469[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,682]DEBUG 11469[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,682]DEBUG 11469[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 14:08:53,682]DEBUG 11469[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,682]DEBUG 11469[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,683]DEBUG 11470[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 14:08:53,683]DEBUG 11470[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,683]DEBUG 11470[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,683]DEBUG 11470[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 14:08:53,683]DEBUG 11470[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,684]DEBUG 11471[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:53,684]DEBUG 11471[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,684]DEBUG 11471[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Dimensions (DimensionName, NumberOfProducts) values (?, ?)
[2017-10-14 14:08:53,685]DEBUG 11472[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 8
[2017-10-14 14:08:53,685]DEBUG 11472[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,685]DEBUG 11472[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:53,685]DEBUG 11472[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,686]DEBUG 11473[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Dimensions (DimensionName, NumberOfProducts) values (?, ?)
[2017-10-14 14:08:53,686]DEBUG 11473[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 9
[2017-10-14 14:08:53,686]DEBUG 11473[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,686]DEBUG 11473[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:53,687]DEBUG 11474[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,687]DEBUG 11474[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Dimensions (DimensionName, NumberOfProducts) values (?, ?)
[2017-10-14 14:08:53,687]DEBUG 11474[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 10
[2017-10-14 14:08:53,687]DEBUG 11474[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,688]DEBUG 11475[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:53,688]DEBUG 11475[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:53,688]DEBUG 11475[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-14 14:08:53,688]DEBUG 11475[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:53,688]DEBUG 11475[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:53,688]DEBUG 11475[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=9, dimensionName=Box, numberOfProduct=5}
[2017-10-14 14:08:53,688]DEBUG 11475[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=10, dimensionName=Package, numberOfProduct=10}
[2017-10-14 14:08:53,689]DEBUG 11476[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=8, dimensionName=Item, numberOfProduct=1}
[2017-10-14 14:08:53,689]DEBUG 11476[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,689]DEBUG 11476[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID7_0_, this_.DimensionName as Dimensio2_7_0_, this_.NumberOfProducts as NumberOf3_7_0_ from Dimensions this_ where this_.DimensionName=?
[2017-10-14 14:08:53,689]DEBUG 11476[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:53,690]DEBUG 11477[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Dimension#8]
[2017-10-14 14:08:53,690]DEBUG 11477[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:53,690]DEBUG 11477[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,690]DEBUG 11477[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:53,690]DEBUG 11477[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:53,691]DEBUG 11478[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:53,691]DEBUG 11478[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-14 14:08:53,691]DEBUG 11478[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:53,691]DEBUG 11478[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:53,691]DEBUG 11478[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=9, dimensionName=Box, numberOfProduct=5}
[2017-10-14 14:08:53,691]DEBUG 11478[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=10, dimensionName=Package, numberOfProduct=10}
[2017-10-14 14:08:53,691]DEBUG 11478[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=8, dimensionName=Item, numberOfProduct=1}
[2017-10-14 14:08:53,691]DEBUG 11478[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,692]DEBUG 11479[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID7_0_, this_.DimensionName as Dimensio2_7_0_, this_.NumberOfProducts as NumberOf3_7_0_ from Dimensions this_ where this_.DimensionName=?
[2017-10-14 14:08:53,692]DEBUG 11479[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:53,692]DEBUG 11479[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Dimension#9]
[2017-10-14 14:08:53,692]DEBUG 11479[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:53,693]DEBUG 11480[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,693]DEBUG 11480[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:53,693]DEBUG 11480[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:53,693]DEBUG 11480[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:53,693]DEBUG 11480[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-14 14:08:53,693]DEBUG 11480[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:53,694]DEBUG 11481[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:53,694]DEBUG 11481[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=9, dimensionName=Box, numberOfProduct=5}
[2017-10-14 14:08:53,694]DEBUG 11481[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=10, dimensionName=Package, numberOfProduct=10}
[2017-10-14 14:08:53,694]DEBUG 11481[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=8, dimensionName=Item, numberOfProduct=1}
[2017-10-14 14:08:53,694]DEBUG 11481[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,694]DEBUG 11481[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID7_0_, this_.DimensionName as Dimensio2_7_0_, this_.NumberOfProducts as NumberOf3_7_0_ from Dimensions this_ where this_.DimensionName=?
[2017-10-14 14:08:53,695]DEBUG 11482[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:53,695]DEBUG 11482[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Dimension#10]
[2017-10-14 14:08:53,695]DEBUG 11482[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:53,695]DEBUG 11482[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,695]DEBUG 11482[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:53,696]DEBUG 11483[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:53,696]DEBUG 11483[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:53,696]DEBUG 11483[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-14 14:08:53,696]DEBUG 11483[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:53,696]DEBUG 11483[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:53,696]DEBUG 11483[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=9, dimensionName=Box, numberOfProduct=5}
[2017-10-14 14:08:53,696]DEBUG 11483[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=10, dimensionName=Package, numberOfProduct=10}
[2017-10-14 14:08:53,696]DEBUG 11483[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=8, dimensionName=Item, numberOfProduct=1}
[2017-10-14 14:08:53,696]DEBUG 11483[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,697]DEBUG 11484[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 14:08:53,697]DEBUG 11484[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,697]DEBUG 11484[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@4750be19 testClass = DimensionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@5f07fe3, testMethod = testFindDimensionByName_String@DimensionDaoTest, testException = [null]]]
[2017-10-14 14:08:53,697]DEBUG 11484[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 14:08:53,697]DEBUG 11484[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@d4c330b]
[2017-10-14 14:08:53,697]DEBUG 11484[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 14:08:53,732]DEBUG 11519[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 14:08:53,733]DEBUG 11520[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:53,733]DEBUG 11520[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@d4c330b] after transaction
[2017-10-14 14:08:53,733]DEBUG 11520[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 14:08:53,734]DEBUG 11521[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 14:08:53,734]DEBUG 11521[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:53,734] INFO 11521[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@4750be19 testClass = DimensionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@5f07fe3, testMethod = testFindDimensionByName_String@DimensionDaoTest, testException = [null]]]
[2017-10-14 14:08:53,735]DEBUG 11522[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@4750be19 testClass = DimensionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@5f07fe3, testMethod = testFindDimensionByName_String@DimensionDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 14:08:53,735]DEBUG 11522[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest]
[2017-10-14 14:08:53,736]DEBUG 11523[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest]
[2017-10-14 14:08:53,736]DEBUG 11523[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@4750be19 testClass = DimensionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@f50b597, testMethod = [null], testException = [null]]].
[2017-10-14 14:08:53,736]DEBUG 11523[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 14:08:53,737]DEBUG 11524[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 14:08:53,737]DEBUG 11524[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 14:08:53,737]DEBUG 11524[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 14:08:53,737]DEBUG 11524[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 14:08:53,737]DEBUG 11524[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 14:08:53,737]DEBUG 11524[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 14:08:53,738]DEBUG 11525[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 14:08:53,738]DEBUG 11525[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 14:08:53,738]DEBUG 11525[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 14:08:53,738]DEBUG 11525[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 14:08:53,738]DEBUG 11525[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 14:08:53,739]DEBUG 11526[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 14:08:53,739]DEBUG 11526[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 14:08:53,739]DEBUG 11526[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 14:08:53,739]DEBUG 11526[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 14:08:53,739]DEBUG 11526[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 14:08:53,740]DEBUG 11527[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 14:08:53,740]DEBUG 11527[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 14:08:53,740]DEBUG 11527[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 14:08:53,740]DEBUG 11527[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 14:08:53,741]DEBUG 11528[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 14:08:53,741]DEBUG 11528[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@f50b597]
[2017-10-14 14:08:53,741]DEBUG 11528[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindDimensionByName_DimensionTypesEnum' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:53,742]DEBUG 11529[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@4750be19 testClass = DimensionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@f50b597, testMethod = testFindDimensionByName_DimensionTypesEnum@DimensionDaoTest, testException = [null]]]
[2017-10-14 14:08:53,742]DEBUG 11529[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 14:08:53,743]DEBUG 11530[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindDimensionByName_DimensionTypesEnum]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:53,743]DEBUG 11530[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15079793337
[2017-10-14 14:08:53,743]DEBUG 11530[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@7f8f9db5] for Hibernate transaction
[2017-10-14 14:08:53,743]DEBUG 11530[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7f8f9db5]
[2017-10-14 14:08:53,744]DEBUG 11531[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 14:08:53,744]DEBUG 11531[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 14:08:53,744]DEBUG 11531[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 14:08:53,744]DEBUG 11531[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@4750be19 testClass = DimensionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@f50b597, testMethod = testFindDimensionByName_DimensionTypesEnum@DimensionDaoTest, testException = [null]]]
[2017-10-14 14:08:53,744] INFO 11531[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (2): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@48ad0abe]; rollback [true]
[2017-10-14 14:08:53,745]DEBUG 11532[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,745]DEBUG 11532[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 14:08:53,746]DEBUG 11533[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,746]DEBUG 11533[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,746]DEBUG 11533[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 14:08:53,747]DEBUG 11534[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,747]DEBUG 11534[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,747]DEBUG 11534[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 14:08:53,748]DEBUG 11535[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,748]DEBUG 11535[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,748]DEBUG 11535[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 14:08:53,749]DEBUG 11536[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,749]DEBUG 11536[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,749]DEBUG 11536[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 14:08:53,750]DEBUG 11537[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,750]DEBUG 11537[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,751]DEBUG 11538[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 14:08:53,751]DEBUG 11538[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,752]DEBUG 11539[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,752]DEBUG 11539[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 14:08:53,752]DEBUG 11539[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,753]DEBUG 11540[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,753]DEBUG 11540[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 14:08:53,753]DEBUG 11540[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,754]DEBUG 11541[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,754]DEBUG 11541[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 14:08:53,754]DEBUG 11541[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,755]DEBUG 11542[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:53,755]DEBUG 11542[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,755]DEBUG 11542[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Dimensions (DimensionName, NumberOfProducts) values (?, ?)
[2017-10-14 14:08:53,756]DEBUG 11543[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 11
[2017-10-14 14:08:53,756]DEBUG 11543[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,757]DEBUG 11544[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:53,757]DEBUG 11544[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,757]DEBUG 11544[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Dimensions (DimensionName, NumberOfProducts) values (?, ?)
[2017-10-14 14:08:53,758]DEBUG 11545[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 12
[2017-10-14 14:08:53,758]DEBUG 11545[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,758]DEBUG 11545[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:53,759]DEBUG 11546[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,759]DEBUG 11546[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Dimensions (DimensionName, NumberOfProducts) values (?, ?)
[2017-10-14 14:08:53,759]DEBUG 11546[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 13
[2017-10-14 14:08:53,759]DEBUG 11546[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,760]DEBUG 11547[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:53,760]DEBUG 11547[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:53,760]DEBUG 11547[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-14 14:08:53,760]DEBUG 11547[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:53,760]DEBUG 11547[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:53,760]DEBUG 11547[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=11, dimensionName=Item, numberOfProduct=1}
[2017-10-14 14:08:53,760]DEBUG 11547[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=12, dimensionName=Box, numberOfProduct=5}
[2017-10-14 14:08:53,760]DEBUG 11547[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=13, dimensionName=Package, numberOfProduct=10}
[2017-10-14 14:08:53,761]DEBUG 11548[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,761]DEBUG 11548[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID7_0_, this_.DimensionName as Dimensio2_7_0_, this_.NumberOfProducts as NumberOf3_7_0_ from Dimensions this_ where this_.DimensionName=?
[2017-10-14 14:08:53,761]DEBUG 11548[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:53,761]DEBUG 11548[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Dimension#11]
[2017-10-14 14:08:53,762]DEBUG 11549[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:53,762]DEBUG 11549[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,762]DEBUG 11549[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:53,762]DEBUG 11549[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:53,762]DEBUG 11549[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:53,762]DEBUG 11549[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-14 14:08:53,762]DEBUG 11549[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:53,763]DEBUG 11550[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:53,763]DEBUG 11550[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=11, dimensionName=Item, numberOfProduct=1}
[2017-10-14 14:08:53,763]DEBUG 11550[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=12, dimensionName=Box, numberOfProduct=5}
[2017-10-14 14:08:53,763]DEBUG 11550[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=13, dimensionName=Package, numberOfProduct=10}
[2017-10-14 14:08:53,763]DEBUG 11550[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,763]DEBUG 11550[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID7_0_, this_.DimensionName as Dimensio2_7_0_, this_.NumberOfProducts as NumberOf3_7_0_ from Dimensions this_ where this_.DimensionName=?
[2017-10-14 14:08:53,764]DEBUG 11551[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:53,764]DEBUG 11551[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Dimension#12]
[2017-10-14 14:08:53,764]DEBUG 11551[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:53,764]DEBUG 11551[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,764]DEBUG 11551[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:53,764]DEBUG 11551[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:53,765]DEBUG 11552[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:53,765]DEBUG 11552[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-14 14:08:53,765]DEBUG 11552[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:53,765]DEBUG 11552[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:53,765]DEBUG 11552[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=11, dimensionName=Item, numberOfProduct=1}
[2017-10-14 14:08:53,765]DEBUG 11552[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=12, dimensionName=Box, numberOfProduct=5}
[2017-10-14 14:08:53,765]DEBUG 11552[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=13, dimensionName=Package, numberOfProduct=10}
[2017-10-14 14:08:53,765]DEBUG 11552[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,765]DEBUG 11552[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID7_0_, this_.DimensionName as Dimensio2_7_0_, this_.NumberOfProducts as NumberOf3_7_0_ from Dimensions this_ where this_.DimensionName=?
[2017-10-14 14:08:53,766]DEBUG 11553[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:53,766]DEBUG 11553[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Dimension#13]
[2017-10-14 14:08:53,766]DEBUG 11553[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:53,766]DEBUG 11553[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,766]DEBUG 11553[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:53,767]DEBUG 11554[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:53,767]DEBUG 11554[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:53,767]DEBUG 11554[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-14 14:08:53,767]DEBUG 11554[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:53,767]DEBUG 11554[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:53,767]DEBUG 11554[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=11, dimensionName=Item, numberOfProduct=1}
[2017-10-14 14:08:53,767]DEBUG 11554[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=12, dimensionName=Box, numberOfProduct=5}
[2017-10-14 14:08:53,767]DEBUG 11554[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=13, dimensionName=Package, numberOfProduct=10}
[2017-10-14 14:08:53,767]DEBUG 11554[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,768]DEBUG 11555[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 14:08:53,768]DEBUG 11555[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,768]DEBUG 11555[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@4750be19 testClass = DimensionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@f50b597, testMethod = testFindDimensionByName_DimensionTypesEnum@DimensionDaoTest, testException = [null]]]
[2017-10-14 14:08:53,768]DEBUG 11555[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 14:08:53,768]DEBUG 11555[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7f8f9db5]
[2017-10-14 14:08:53,768]DEBUG 11555[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 14:08:53,799]DEBUG 11586[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 14:08:53,800]DEBUG 11587[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:53,800]DEBUG 11587[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@7f8f9db5] after transaction
[2017-10-14 14:08:53,800]DEBUG 11587[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 14:08:53,800]DEBUG 11587[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 14:08:53,801]DEBUG 11588[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:53,801] INFO 11588[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@4750be19 testClass = DimensionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@f50b597, testMethod = testFindDimensionByName_DimensionTypesEnum@DimensionDaoTest, testException = [null]]]
[2017-10-14 14:08:53,801]DEBUG 11588[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@4750be19 testClass = DimensionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@f50b597, testMethod = testFindDimensionByName_DimensionTypesEnum@DimensionDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 14:08:53,801]DEBUG 11588[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest]
[2017-10-14 14:08:53,801]DEBUG 11588[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest]
[2017-10-14 14:08:53,802]DEBUG 11589[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@4750be19 testClass = DimensionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@502c500d, testMethod = [null], testException = [null]]].
[2017-10-14 14:08:53,802]DEBUG 11589[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 14:08:53,802]DEBUG 11589[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 14:08:53,802]DEBUG 11589[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 14:08:53,802]DEBUG 11589[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 14:08:53,802]DEBUG 11589[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 14:08:53,802]DEBUG 11589[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 14:08:53,802]DEBUG 11589[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 14:08:53,802]DEBUG 11589[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 14:08:53,803]DEBUG 11590[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 14:08:53,803]DEBUG 11590[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 14:08:53,803]DEBUG 11590[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 14:08:53,803]DEBUG 11590[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 14:08:53,803]DEBUG 11590[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 14:08:53,803]DEBUG 11590[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 14:08:53,803]DEBUG 11590[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 14:08:53,803]DEBUG 11590[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 14:08:53,803]DEBUG 11590[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 14:08:53,803]DEBUG 11590[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 14:08:53,803]DEBUG 11590[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 14:08:53,803]DEBUG 11590[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 14:08:53,804]DEBUG 11591[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 14:08:53,804]DEBUG 11591[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 14:08:53,804]DEBUG 11591[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@502c500d]
[2017-10-14 14:08:53,804]DEBUG 11591[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindDimensionByNumberOfProducts_Int' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:53,804]DEBUG 11591[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@4750be19 testClass = DimensionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@502c500d, testMethod = testFindDimensionByNumberOfProducts_Int@DimensionDaoTest, testException = [null]]]
[2017-10-14 14:08:53,804]DEBUG 11591[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 14:08:53,805]DEBUG 11592[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindDimensionByNumberOfProducts_Int]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:53,805]DEBUG 11592[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15079793338
[2017-10-14 14:08:53,805]DEBUG 11592[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@7d7da15e] for Hibernate transaction
[2017-10-14 14:08:53,805]DEBUG 11592[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7d7da15e]
[2017-10-14 14:08:53,805]DEBUG 11592[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 14:08:53,805]DEBUG 11592[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 14:08:53,805]DEBUG 11592[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 14:08:53,805]DEBUG 11592[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@4750be19 testClass = DimensionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@502c500d, testMethod = testFindDimensionByNumberOfProducts_Int@DimensionDaoTest, testException = [null]]]
[2017-10-14 14:08:53,806] INFO 11593[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (3): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@48ad0abe]; rollback [true]
[2017-10-14 14:08:53,806]DEBUG 11593[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,806]DEBUG 11593[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 14:08:53,806]DEBUG 11593[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,807]DEBUG 11594[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,807]DEBUG 11594[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 14:08:53,807]DEBUG 11594[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,808]DEBUG 11595[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,808]DEBUG 11595[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 14:08:53,809]DEBUG 11596[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,809]DEBUG 11596[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,809]DEBUG 11596[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 14:08:53,810]DEBUG 11597[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,810]DEBUG 11597[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,810]DEBUG 11597[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 14:08:53,811]DEBUG 11598[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,811]DEBUG 11598[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,811]DEBUG 11598[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 14:08:53,812]DEBUG 11599[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,812]DEBUG 11599[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,812]DEBUG 11599[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 14:08:53,813]DEBUG 11600[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,813]DEBUG 11600[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,813]DEBUG 11600[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 14:08:53,814]DEBUG 11601[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,814]DEBUG 11601[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,814]DEBUG 11601[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 14:08:53,815]DEBUG 11602[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,815]DEBUG 11602[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:53,816]DEBUG 11603[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,816]DEBUG 11603[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Dimensions (DimensionName, NumberOfProducts) values (?, ?)
[2017-10-14 14:08:53,817]DEBUG 11604[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 14
[2017-10-14 14:08:53,817]DEBUG 11604[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,817]DEBUG 11604[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:53,818]DEBUG 11605[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,818]DEBUG 11605[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Dimensions (DimensionName, NumberOfProducts) values (?, ?)
[2017-10-14 14:08:53,818]DEBUG 11605[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 15
[2017-10-14 14:08:53,818]DEBUG 11605[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,819]DEBUG 11606[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:53,819]DEBUG 11606[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,819]DEBUG 11606[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Dimensions (DimensionName, NumberOfProducts) values (?, ?)
[2017-10-14 14:08:53,819]DEBUG 11606[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 16
[2017-10-14 14:08:53,819]DEBUG 11606[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,820]DEBUG 11607[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:53,820]DEBUG 11607[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:53,820]DEBUG 11607[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-14 14:08:53,820]DEBUG 11607[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:53,820]DEBUG 11607[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:53,820]DEBUG 11607[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=14, dimensionName=Item, numberOfProduct=1}
[2017-10-14 14:08:53,821]DEBUG 11608[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=15, dimensionName=Box, numberOfProduct=5}
[2017-10-14 14:08:53,821]DEBUG 11608[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=16, dimensionName=Package, numberOfProduct=10}
[2017-10-14 14:08:53,821]DEBUG 11608[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,821]DEBUG 11608[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID7_0_, this_.DimensionName as Dimensio2_7_0_, this_.NumberOfProducts as NumberOf3_7_0_ from Dimensions this_ where this_.NumberOfProducts=?
[2017-10-14 14:08:53,821]DEBUG 11608[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:53,821]DEBUG 11608[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Dimension#14]
[2017-10-14 14:08:53,822]DEBUG 11609[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:53,822]DEBUG 11609[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,822]DEBUG 11609[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:53,822]DEBUG 11609[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:53,822]DEBUG 11609[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:53,822]DEBUG 11609[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-14 14:08:53,822]DEBUG 11609[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:53,822]DEBUG 11609[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:53,823]DEBUG 11610[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=14, dimensionName=Item, numberOfProduct=1}
[2017-10-14 14:08:53,823]DEBUG 11610[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=15, dimensionName=Box, numberOfProduct=5}
[2017-10-14 14:08:53,823]DEBUG 11610[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=16, dimensionName=Package, numberOfProduct=10}
[2017-10-14 14:08:53,823]DEBUG 11610[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,823]DEBUG 11610[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID7_0_, this_.DimensionName as Dimensio2_7_0_, this_.NumberOfProducts as NumberOf3_7_0_ from Dimensions this_ where this_.NumberOfProducts=?
[2017-10-14 14:08:53,823]DEBUG 11610[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:53,823]DEBUG 11610[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Dimension#15]
[2017-10-14 14:08:53,823]DEBUG 11610[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:53,824]DEBUG 11611[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,824]DEBUG 11611[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:53,824]DEBUG 11611[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:53,824]DEBUG 11611[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:53,824]DEBUG 11611[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-14 14:08:53,824]DEBUG 11611[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:53,824]DEBUG 11611[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:53,824]DEBUG 11611[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=14, dimensionName=Item, numberOfProduct=1}
[2017-10-14 14:08:53,824]DEBUG 11611[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=15, dimensionName=Box, numberOfProduct=5}
[2017-10-14 14:08:53,825]DEBUG 11612[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=16, dimensionName=Package, numberOfProduct=10}
[2017-10-14 14:08:53,825]DEBUG 11612[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,825]DEBUG 11612[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID7_0_, this_.DimensionName as Dimensio2_7_0_, this_.NumberOfProducts as NumberOf3_7_0_ from Dimensions this_ where this_.NumberOfProducts=?
[2017-10-14 14:08:53,825]DEBUG 11612[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:53,825]DEBUG 11612[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Dimension#16]
[2017-10-14 14:08:53,825]DEBUG 11612[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:53,825]DEBUG 11612[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,826]DEBUG 11613[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:53,826]DEBUG 11613[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:53,826]DEBUG 11613[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:53,826]DEBUG 11613[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-14 14:08:53,826]DEBUG 11613[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:53,826]DEBUG 11613[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:53,826]DEBUG 11613[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=14, dimensionName=Item, numberOfProduct=1}
[2017-10-14 14:08:53,826]DEBUG 11613[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=15, dimensionName=Box, numberOfProduct=5}
[2017-10-14 14:08:53,826]DEBUG 11613[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=16, dimensionName=Package, numberOfProduct=10}
[2017-10-14 14:08:53,826]DEBUG 11613[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,826]DEBUG 11613[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 14:08:53,827]DEBUG 11614[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,827]DEBUG 11614[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@4750be19 testClass = DimensionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@502c500d, testMethod = testFindDimensionByNumberOfProducts_Int@DimensionDaoTest, testException = [null]]]
[2017-10-14 14:08:53,827]DEBUG 11614[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 14:08:53,827]DEBUG 11614[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7d7da15e]
[2017-10-14 14:08:53,827]DEBUG 11614[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 14:08:53,858]DEBUG 11645[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 14:08:53,858]DEBUG 11645[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:53,858]DEBUG 11645[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@7d7da15e] after transaction
[2017-10-14 14:08:53,858]DEBUG 11645[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 14:08:53,859]DEBUG 11646[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 14:08:53,859]DEBUG 11646[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:53,859] INFO 11646[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@4750be19 testClass = DimensionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@502c500d, testMethod = testFindDimensionByNumberOfProducts_Int@DimensionDaoTest, testException = [null]]]
[2017-10-14 14:08:53,860]DEBUG 11647[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@4750be19 testClass = DimensionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@502c500d, testMethod = testFindDimensionByNumberOfProducts_Int@DimensionDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 14:08:53,860]DEBUG 11647[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest]
[2017-10-14 14:08:53,861]DEBUG 11648[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest]
[2017-10-14 14:08:53,861]DEBUG 11648[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@4750be19 testClass = DimensionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@6fc03f9f, testMethod = [null], testException = [null]]].
[2017-10-14 14:08:53,861]DEBUG 11648[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 14:08:53,861]DEBUG 11648[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 14:08:53,862]DEBUG 11649[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 14:08:53,862]DEBUG 11649[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 14:08:53,862]DEBUG 11649[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 14:08:53,862]DEBUG 11649[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 14:08:53,862]DEBUG 11649[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 14:08:53,863]DEBUG 11650[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 14:08:53,863]DEBUG 11650[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 14:08:53,863]DEBUG 11650[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 14:08:53,863]DEBUG 11650[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 14:08:53,863]DEBUG 11650[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 14:08:53,864]DEBUG 11651[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 14:08:53,864]DEBUG 11651[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 14:08:53,864]DEBUG 11651[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 14:08:53,864]DEBUG 11651[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 14:08:53,864]DEBUG 11651[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 14:08:53,864]DEBUG 11651[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 14:08:53,865]DEBUG 11652[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 14:08:53,865]DEBUG 11652[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 14:08:53,865]DEBUG 11652[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 14:08:53,865]DEBUG 11652[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 14:08:53,866]DEBUG 11653[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@6fc03f9f]
[2017-10-14 14:08:53,866]DEBUG 11653[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindDimensionByNumberOfProducts_DimensionTypesEnum' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:53,866]DEBUG 11653[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@4750be19 testClass = DimensionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@6fc03f9f, testMethod = testFindDimensionByNumberOfProducts_DimensionTypesEnum@DimensionDaoTest, testException = [null]]]
[2017-10-14 14:08:53,867]DEBUG 11654[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 14:08:53,867]DEBUG 11654[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindDimensionByNumberOfProducts_DimensionTypesEnum]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:53,868]DEBUG 11655[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15079793338
[2017-10-14 14:08:53,868]DEBUG 11655[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@6215d145] for Hibernate transaction
[2017-10-14 14:08:53,868]DEBUG 11655[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@6215d145]
[2017-10-14 14:08:53,868]DEBUG 11655[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 14:08:53,868]DEBUG 11655[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 14:08:53,869]DEBUG 11656[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 14:08:53,869]DEBUG 11656[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@4750be19 testClass = DimensionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@6fc03f9f, testMethod = testFindDimensionByNumberOfProducts_DimensionTypesEnum@DimensionDaoTest, testException = [null]]]
[2017-10-14 14:08:53,869] INFO 11656[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (4): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@48ad0abe]; rollback [true]
[2017-10-14 14:08:53,869]DEBUG 11656[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,869]DEBUG 11656[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 14:08:53,870]DEBUG 11657[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,871]DEBUG 11658[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,871]DEBUG 11658[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 14:08:53,871]DEBUG 11658[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,872]DEBUG 11659[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,872]DEBUG 11659[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 14:08:53,872]DEBUG 11659[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,873]DEBUG 11660[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,873]DEBUG 11660[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 14:08:53,873]DEBUG 11660[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,874]DEBUG 11661[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,874]DEBUG 11661[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 14:08:53,874]DEBUG 11661[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,875]DEBUG 11662[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,875]DEBUG 11662[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 14:08:53,875]DEBUG 11662[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,876]DEBUG 11663[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,876]DEBUG 11663[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 14:08:53,876]DEBUG 11663[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,877]DEBUG 11664[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,877]DEBUG 11664[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 14:08:53,877]DEBUG 11664[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,878]DEBUG 11665[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,878]DEBUG 11665[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 14:08:53,878]DEBUG 11665[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,878]DEBUG 11665[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:53,879]DEBUG 11666[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,879]DEBUG 11666[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Dimensions (DimensionName, NumberOfProducts) values (?, ?)
[2017-10-14 14:08:53,879]DEBUG 11666[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 17
[2017-10-14 14:08:53,879]DEBUG 11666[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,879]DEBUG 11666[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:53,879]DEBUG 11666[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,880]DEBUG 11667[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Dimensions (DimensionName, NumberOfProducts) values (?, ?)
[2017-10-14 14:08:53,880]DEBUG 11667[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 18
[2017-10-14 14:08:53,880]DEBUG 11667[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,880]DEBUG 11667[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:53,880]DEBUG 11667[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,880]DEBUG 11667[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Dimensions (DimensionName, NumberOfProducts) values (?, ?)
[2017-10-14 14:08:53,881]DEBUG 11668[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 19
[2017-10-14 14:08:53,881]DEBUG 11668[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,881]DEBUG 11668[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:53,881]DEBUG 11668[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:53,882]DEBUG 11669[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-14 14:08:53,882]DEBUG 11669[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:53,882]DEBUG 11669[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:53,882]DEBUG 11669[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=17, dimensionName=Item, numberOfProduct=1}
[2017-10-14 14:08:53,882]DEBUG 11669[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=18, dimensionName=Box, numberOfProduct=5}
[2017-10-14 14:08:53,882]DEBUG 11669[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=19, dimensionName=Package, numberOfProduct=10}
[2017-10-14 14:08:53,882]DEBUG 11669[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,882]DEBUG 11669[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID7_0_, this_.DimensionName as Dimensio2_7_0_, this_.NumberOfProducts as NumberOf3_7_0_ from Dimensions this_ where this_.NumberOfProducts=?
[2017-10-14 14:08:53,883]DEBUG 11670[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:53,883]DEBUG 11670[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Dimension#17]
[2017-10-14 14:08:53,883]DEBUG 11670[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:53,883]DEBUG 11670[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,883]DEBUG 11670[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:53,883]DEBUG 11670[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:53,883]DEBUG 11670[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:53,883]DEBUG 11670[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-14 14:08:53,884]DEBUG 11671[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:53,884]DEBUG 11671[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:53,884]DEBUG 11671[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=17, dimensionName=Item, numberOfProduct=1}
[2017-10-14 14:08:53,884]DEBUG 11671[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=18, dimensionName=Box, numberOfProduct=5}
[2017-10-14 14:08:53,884]DEBUG 11671[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=19, dimensionName=Package, numberOfProduct=10}
[2017-10-14 14:08:53,884]DEBUG 11671[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,884]DEBUG 11671[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID7_0_, this_.DimensionName as Dimensio2_7_0_, this_.NumberOfProducts as NumberOf3_7_0_ from Dimensions this_ where this_.NumberOfProducts=?
[2017-10-14 14:08:53,884]DEBUG 11671[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:53,885]DEBUG 11672[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Dimension#18]
[2017-10-14 14:08:53,885]DEBUG 11672[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:53,885]DEBUG 11672[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,885]DEBUG 11672[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:53,885]DEBUG 11672[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:53,885]DEBUG 11672[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:53,885]DEBUG 11672[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-14 14:08:53,885]DEBUG 11672[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:53,886]DEBUG 11673[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:53,886]DEBUG 11673[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=17, dimensionName=Item, numberOfProduct=1}
[2017-10-14 14:08:53,886]DEBUG 11673[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=18, dimensionName=Box, numberOfProduct=5}
[2017-10-14 14:08:53,886]DEBUG 11673[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=19, dimensionName=Package, numberOfProduct=10}
[2017-10-14 14:08:53,886]DEBUG 11673[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,886]DEBUG 11673[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID7_0_, this_.DimensionName as Dimensio2_7_0_, this_.NumberOfProducts as NumberOf3_7_0_ from Dimensions this_ where this_.NumberOfProducts=?
[2017-10-14 14:08:53,886]DEBUG 11673[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:53,887]DEBUG 11674[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Dimension#19]
[2017-10-14 14:08:53,887]DEBUG 11674[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:53,887]DEBUG 11674[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,887]DEBUG 11674[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:53,887]DEBUG 11674[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:53,887]DEBUG 11674[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:53,887]DEBUG 11674[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-14 14:08:53,887]DEBUG 11674[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:53,887]DEBUG 11674[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:53,887]DEBUG 11674[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=17, dimensionName=Item, numberOfProduct=1}
[2017-10-14 14:08:53,888]DEBUG 11675[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=18, dimensionName=Box, numberOfProduct=5}
[2017-10-14 14:08:53,888]DEBUG 11675[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=19, dimensionName=Package, numberOfProduct=10}
[2017-10-14 14:08:53,888]DEBUG 11675[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,888]DEBUG 11675[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 14:08:53,888]DEBUG 11675[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,888]DEBUG 11675[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@4750be19 testClass = DimensionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@6fc03f9f, testMethod = testFindDimensionByNumberOfProducts_DimensionTypesEnum@DimensionDaoTest, testException = [null]]]
[2017-10-14 14:08:53,888]DEBUG 11675[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 14:08:53,888]DEBUG 11675[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@6215d145]
[2017-10-14 14:08:53,888]DEBUG 11675[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 14:08:53,924]DEBUG 11711[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 14:08:53,925]DEBUG 11712[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:53,925]DEBUG 11712[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@6215d145] after transaction
[2017-10-14 14:08:53,925]DEBUG 11712[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 14:08:53,925]DEBUG 11712[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 14:08:53,926]DEBUG 11713[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:53,926] INFO 11713[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@4750be19 testClass = DimensionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@6fc03f9f, testMethod = testFindDimensionByNumberOfProducts_DimensionTypesEnum@DimensionDaoTest, testException = [null]]]
[2017-10-14 14:08:53,927]DEBUG 11714[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@4750be19 testClass = DimensionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@6fc03f9f, testMethod = testFindDimensionByNumberOfProducts_DimensionTypesEnum@DimensionDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 14:08:53,927]DEBUG 11714[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest]
[2017-10-14 14:08:53,927]DEBUG 11714[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest]
[2017-10-14 14:08:53,928]DEBUG 11715[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@4750be19 testClass = DimensionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@475f2d67, testMethod = [null], testException = [null]]].
[2017-10-14 14:08:53,928]DEBUG 11715[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 14:08:53,928]DEBUG 11715[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 14:08:53,928]DEBUG 11715[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 14:08:53,929]DEBUG 11716[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 14:08:53,929]DEBUG 11716[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 14:08:53,929]DEBUG 11716[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 14:08:53,929]DEBUG 11716[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 14:08:53,929]DEBUG 11716[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 14:08:53,929]DEBUG 11716[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 14:08:53,930]DEBUG 11717[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 14:08:53,930]DEBUG 11717[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 14:08:53,930]DEBUG 11717[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 14:08:53,930]DEBUG 11717[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 14:08:53,930]DEBUG 11717[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 14:08:53,931]DEBUG 11718[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 14:08:53,931]DEBUG 11718[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 14:08:53,931]DEBUG 11718[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 14:08:53,931]DEBUG 11718[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 14:08:53,931]DEBUG 11718[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 14:08:53,931]DEBUG 11718[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 14:08:53,932]DEBUG 11719[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 14:08:53,932]DEBUG 11719[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 14:08:53,932]DEBUG 11719[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@475f2d67]
[2017-10-14 14:08:53,933]DEBUG 11720[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetItemDimension' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:53,933]DEBUG 11720[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@4750be19 testClass = DimensionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@475f2d67, testMethod = testGetItemDimension@DimensionDaoTest, testException = [null]]]
[2017-10-14 14:08:53,933]DEBUG 11720[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 14:08:53,934]DEBUG 11721[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testGetItemDimension]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:53,934]DEBUG 11721[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15079793339
[2017-10-14 14:08:53,934]DEBUG 11721[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@591a00b1] for Hibernate transaction
[2017-10-14 14:08:53,935]DEBUG 11722[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@591a00b1]
[2017-10-14 14:08:53,935]DEBUG 11722[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 14:08:53,935]DEBUG 11722[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 14:08:53,935]DEBUG 11722[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 14:08:53,935]DEBUG 11722[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@4750be19 testClass = DimensionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@475f2d67, testMethod = testGetItemDimension@DimensionDaoTest, testException = [null]]]
[2017-10-14 14:08:53,936] INFO 11723[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (5): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@48ad0abe]; rollback [true]
[2017-10-14 14:08:53,936]DEBUG 11723[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,936]DEBUG 11723[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 14:08:53,937]DEBUG 11724[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,937]DEBUG 11724[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,937]DEBUG 11724[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 14:08:53,938]DEBUG 11725[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,938]DEBUG 11725[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,938]DEBUG 11725[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 14:08:53,939]DEBUG 11726[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,939]DEBUG 11726[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,939]DEBUG 11726[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 14:08:53,940]DEBUG 11727[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,940]DEBUG 11727[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,940]DEBUG 11727[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 14:08:53,941]DEBUG 11728[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,941]DEBUG 11728[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,942]DEBUG 11729[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 14:08:53,942]DEBUG 11729[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,942]DEBUG 11729[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,943]DEBUG 11730[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 14:08:53,943]DEBUG 11730[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,943]DEBUG 11730[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,944]DEBUG 11731[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 14:08:53,944]DEBUG 11731[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,944]DEBUG 11731[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,945]DEBUG 11732[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 14:08:53,945]DEBUG 11732[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,945]DEBUG 11732[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:53,946]DEBUG 11733[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,946]DEBUG 11733[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Dimensions (DimensionName, NumberOfProducts) values (?, ?)
[2017-10-14 14:08:53,947]DEBUG 11734[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 20
[2017-10-14 14:08:53,947]DEBUG 11734[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,947]DEBUG 11734[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:53,948]DEBUG 11735[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,948]DEBUG 11735[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Dimensions (DimensionName, NumberOfProducts) values (?, ?)
[2017-10-14 14:08:53,949]DEBUG 11736[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 21
[2017-10-14 14:08:53,949]DEBUG 11736[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,949]DEBUG 11736[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:53,950]DEBUG 11737[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,950]DEBUG 11737[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Dimensions (DimensionName, NumberOfProducts) values (?, ?)
[2017-10-14 14:08:53,951]DEBUG 11738[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 22
[2017-10-14 14:08:53,951]DEBUG 11738[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,951]DEBUG 11738[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:53,952]DEBUG 11739[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:53,952]DEBUG 11739[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-14 14:08:53,952]DEBUG 11739[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:53,952]DEBUG 11739[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:53,953]DEBUG 11740[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=20, dimensionName=Item, numberOfProduct=1}
[2017-10-14 14:08:53,953]DEBUG 11740[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=22, dimensionName=Package, numberOfProduct=10}
[2017-10-14 14:08:53,953]DEBUG 11740[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=21, dimensionName=Box, numberOfProduct=5}
[2017-10-14 14:08:53,953]DEBUG 11740[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,954]DEBUG 11741[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID7_0_, this_.DimensionName as Dimensio2_7_0_, this_.NumberOfProducts as NumberOf3_7_0_ from Dimensions this_ where this_.NumberOfProducts=?
[2017-10-14 14:08:53,955]DEBUG 11742[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:53,955]DEBUG 11742[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Dimension#20]
[2017-10-14 14:08:53,955]DEBUG 11742[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:53,956]DEBUG 11743[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,956]DEBUG 11743[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:53,956]DEBUG 11743[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:53,956]DEBUG 11743[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:53,957]DEBUG 11744[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-14 14:08:53,957]DEBUG 11744[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:53,957]DEBUG 11744[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:53,957]DEBUG 11744[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=20, dimensionName=Item, numberOfProduct=1}
[2017-10-14 14:08:53,957]DEBUG 11744[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=22, dimensionName=Package, numberOfProduct=10}
[2017-10-14 14:08:53,958]DEBUG 11745[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=21, dimensionName=Box, numberOfProduct=5}
[2017-10-14 14:08:53,958]DEBUG 11745[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:53,958]DEBUG 11745[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 14:08:53,958]DEBUG 11745[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:53,958]DEBUG 11745[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@4750be19 testClass = DimensionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@475f2d67, testMethod = testGetItemDimension@DimensionDaoTest, testException = [null]]]
[2017-10-14 14:08:53,959]DEBUG 11746[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 14:08:53,959]DEBUG 11746[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@591a00b1]
[2017-10-14 14:08:53,959]DEBUG 11746[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 14:08:53,991]DEBUG 11778[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 14:08:53,991]DEBUG 11778[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:53,992]DEBUG 11779[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@591a00b1] after transaction
[2017-10-14 14:08:53,992]DEBUG 11779[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 14:08:53,992]DEBUG 11779[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 14:08:53,992]DEBUG 11779[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:53,992] INFO 11779[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@4750be19 testClass = DimensionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@475f2d67, testMethod = testGetItemDimension@DimensionDaoTest, testException = [null]]]
[2017-10-14 14:08:53,993]DEBUG 11780[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@4750be19 testClass = DimensionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@475f2d67, testMethod = testGetItemDimension@DimensionDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 14:08:53,994]DEBUG 11781[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest]
[2017-10-14 14:08:53,994]DEBUG 11781[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest]
[2017-10-14 14:08:53,994]DEBUG 11781[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@4750be19 testClass = DimensionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@7f940a37, testMethod = [null], testException = [null]]].
[2017-10-14 14:08:53,995]DEBUG 11782[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 14:08:53,995]DEBUG 11782[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 14:08:53,995]DEBUG 11782[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 14:08:53,995]DEBUG 11782[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 14:08:53,995]DEBUG 11782[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 14:08:53,996]DEBUG 11783[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 14:08:53,996]DEBUG 11783[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 14:08:53,996]DEBUG 11783[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 14:08:53,996]DEBUG 11783[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 14:08:53,996]DEBUG 11783[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 14:08:53,996]DEBUG 11783[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 14:08:53,997]DEBUG 11784[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 14:08:53,997]DEBUG 11784[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 14:08:53,997]DEBUG 11784[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 14:08:53,997]DEBUG 11784[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 14:08:53,997]DEBUG 11784[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 14:08:53,998]DEBUG 11785[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 14:08:53,998]DEBUG 11785[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 14:08:53,998]DEBUG 11785[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 14:08:53,998]DEBUG 11785[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 14:08:53,998]DEBUG 11785[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 14:08:53,998]DEBUG 11785[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 14:08:53,998]DEBUG 11785[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@7f940a37]
[2017-10-14 14:08:53,999]DEBUG 11786[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetBoxDimension' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:53,999]DEBUG 11786[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@4750be19 testClass = DimensionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@7f940a37, testMethod = testGetBoxDimension@DimensionDaoTest, testException = [null]]]
[2017-10-14 14:08:53,999]DEBUG 11786[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 14:08:53,999]DEBUG 11786[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testGetBoxDimension]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:53,999]DEBUG 11786[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15079793339
[2017-10-14 14:08:53,999]DEBUG 11786[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@422db438] for Hibernate transaction
[2017-10-14 14:08:54,000]DEBUG 11787[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@422db438]
[2017-10-14 14:08:54,000]DEBUG 11787[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 14:08:54,000]DEBUG 11787[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 14:08:54,000]DEBUG 11787[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 14:08:54,000]DEBUG 11787[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@4750be19 testClass = DimensionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@7f940a37, testMethod = testGetBoxDimension@DimensionDaoTest, testException = [null]]]
[2017-10-14 14:08:54,000] INFO 11787[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (6): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@48ad0abe]; rollback [true]
[2017-10-14 14:08:54,000]DEBUG 11787[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:54,000]DEBUG 11787[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 14:08:54,001]DEBUG 11788[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:54,001]DEBUG 11788[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:54,001]DEBUG 11788[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 14:08:54,001]DEBUG 11788[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:54,001]DEBUG 11788[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:54,001]DEBUG 11788[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 14:08:54,001]DEBUG 11788[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:54,002]DEBUG 11789[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:54,002]DEBUG 11789[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 14:08:54,002]DEBUG 11789[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:54,002]DEBUG 11789[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:54,002]DEBUG 11789[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 14:08:54,002]DEBUG 11789[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:54,002]DEBUG 11789[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:54,003]DEBUG 11790[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 14:08:54,003]DEBUG 11790[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:54,003]DEBUG 11790[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:54,003]DEBUG 11790[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 14:08:54,003]DEBUG 11790[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:54,003]DEBUG 11790[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:54,003]DEBUG 11790[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 14:08:54,004]DEBUG 11791[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:54,004]DEBUG 11791[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:54,004]DEBUG 11791[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 14:08:54,004]DEBUG 11791[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:54,004]DEBUG 11791[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:54,004]DEBUG 11791[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:54,005]DEBUG 11792[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Dimensions (DimensionName, NumberOfProducts) values (?, ?)
[2017-10-14 14:08:54,005]DEBUG 11792[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 23
[2017-10-14 14:08:54,005]DEBUG 11792[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:54,005]DEBUG 11792[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:54,005]DEBUG 11792[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:54,005]DEBUG 11792[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Dimensions (DimensionName, NumberOfProducts) values (?, ?)
[2017-10-14 14:08:54,006]DEBUG 11793[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 24
[2017-10-14 14:08:54,006]DEBUG 11793[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:54,006]DEBUG 11793[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:54,006]DEBUG 11793[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:54,006]DEBUG 11793[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Dimensions (DimensionName, NumberOfProducts) values (?, ?)
[2017-10-14 14:08:54,006]DEBUG 11793[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 25
[2017-10-14 14:08:54,007]DEBUG 11794[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:54,007]DEBUG 11794[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:54,007]DEBUG 11794[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:54,007]DEBUG 11794[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-14 14:08:54,007]DEBUG 11794[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:54,007]DEBUG 11794[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:54,007]DEBUG 11794[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=25, dimensionName=Package, numberOfProduct=10}
[2017-10-14 14:08:54,008]DEBUG 11795[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=24, dimensionName=Box, numberOfProduct=5}
[2017-10-14 14:08:54,008]DEBUG 11795[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=23, dimensionName=Item, numberOfProduct=1}
[2017-10-14 14:08:54,008]DEBUG 11795[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:54,008]DEBUG 11795[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID7_0_, this_.DimensionName as Dimensio2_7_0_, this_.NumberOfProducts as NumberOf3_7_0_ from Dimensions this_ where this_.NumberOfProducts=?
[2017-10-14 14:08:54,008]DEBUG 11795[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:54,008]DEBUG 11795[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Dimension#24]
[2017-10-14 14:08:54,009]DEBUG 11796[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:54,009]DEBUG 11796[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:54,009]DEBUG 11796[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:54,009]DEBUG 11796[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:54,009]DEBUG 11796[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:54,009]DEBUG 11796[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-14 14:08:54,009]DEBUG 11796[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:54,009]DEBUG 11796[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:54,009]DEBUG 11796[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=25, dimensionName=Package, numberOfProduct=10}
[2017-10-14 14:08:54,009]DEBUG 11796[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=24, dimensionName=Box, numberOfProduct=5}
[2017-10-14 14:08:54,009]DEBUG 11796[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=23, dimensionName=Item, numberOfProduct=1}
[2017-10-14 14:08:54,010]DEBUG 11797[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:54,010]DEBUG 11797[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 14:08:54,010]DEBUG 11797[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:54,010]DEBUG 11797[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@4750be19 testClass = DimensionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@7f940a37, testMethod = testGetBoxDimension@DimensionDaoTest, testException = [null]]]
[2017-10-14 14:08:54,010]DEBUG 11797[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 14:08:54,010]DEBUG 11797[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@422db438]
[2017-10-14 14:08:54,010]DEBUG 11797[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 14:08:54,041]DEBUG 11828[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 14:08:54,041]DEBUG 11828[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:54,042]DEBUG 11829[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@422db438] after transaction
[2017-10-14 14:08:54,042]DEBUG 11829[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 14:08:54,042]DEBUG 11829[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 14:08:54,042]DEBUG 11829[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:54,043] INFO 11830[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@4750be19 testClass = DimensionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@7f940a37, testMethod = testGetBoxDimension@DimensionDaoTest, testException = [null]]]
[2017-10-14 14:08:54,043]DEBUG 11830[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@4750be19 testClass = DimensionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@7f940a37, testMethod = testGetBoxDimension@DimensionDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 14:08:54,044]DEBUG 11831[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest]
[2017-10-14 14:08:54,044]DEBUG 11831[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest]
[2017-10-14 14:08:54,044]DEBUG 11831[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@4750be19 testClass = DimensionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@6618064a, testMethod = [null], testException = [null]]].
[2017-10-14 14:08:54,045]DEBUG 11832[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 14:08:54,045]DEBUG 11832[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 14:08:54,045]DEBUG 11832[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 14:08:54,045]DEBUG 11832[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 14:08:54,045]DEBUG 11832[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 14:08:54,045]DEBUG 11832[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 14:08:54,046]DEBUG 11833[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 14:08:54,046]DEBUG 11833[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 14:08:54,046]DEBUG 11833[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 14:08:54,046]DEBUG 11833[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 14:08:54,046]DEBUG 11833[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 14:08:54,047]DEBUG 11834[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 14:08:54,047]DEBUG 11834[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 14:08:54,047]DEBUG 11834[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 14:08:54,047]DEBUG 11834[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 14:08:54,047]DEBUG 11834[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 14:08:54,048]DEBUG 11835[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 14:08:54,048]DEBUG 11835[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 14:08:54,048]DEBUG 11835[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 14:08:54,048]DEBUG 11835[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 14:08:54,048]DEBUG 11835[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 14:08:54,049]DEBUG 11836[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 14:08:54,049]DEBUG 11836[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@6618064a]
[2017-10-14 14:08:54,049]DEBUG 11836[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetPackageDimension' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:54,050]DEBUG 11837[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@4750be19 testClass = DimensionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@6618064a, testMethod = testGetPackageDimension@DimensionDaoTest, testException = [null]]]
[2017-10-14 14:08:54,050]DEBUG 11837[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 14:08:54,051]DEBUG 11838[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testGetPackageDimension]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:54,051]DEBUG 11838[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15079793340
[2017-10-14 14:08:54,051]DEBUG 11838[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@1032d521] for Hibernate transaction
[2017-10-14 14:08:54,051]DEBUG 11838[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@1032d521]
[2017-10-14 14:08:54,052]DEBUG 11839[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 14:08:54,052]DEBUG 11839[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 14:08:54,052]DEBUG 11839[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 14:08:54,052]DEBUG 11839[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@4750be19 testClass = DimensionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@6618064a, testMethod = testGetPackageDimension@DimensionDaoTest, testException = [null]]]
[2017-10-14 14:08:54,052] INFO 11839[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (7): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@48ad0abe]; rollback [true]
[2017-10-14 14:08:54,053]DEBUG 11840[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:54,053]DEBUG 11840[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 14:08:54,053]DEBUG 11840[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:54,054]DEBUG 11841[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:54,054]DEBUG 11841[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 14:08:54,054]DEBUG 11841[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:54,055]DEBUG 11842[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:54,055]DEBUG 11842[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 14:08:54,056]DEBUG 11843[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:54,056]DEBUG 11843[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:54,056]DEBUG 11843[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 14:08:54,057]DEBUG 11844[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:54,057]DEBUG 11844[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:54,057]DEBUG 11844[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 14:08:54,058]DEBUG 11845[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:54,058]DEBUG 11845[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:54,058]DEBUG 11845[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 14:08:54,058]DEBUG 11845[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:54,058]DEBUG 11845[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:54,059]DEBUG 11846[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 14:08:54,059]DEBUG 11846[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:54,059]DEBUG 11846[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:54,059]DEBUG 11846[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 14:08:54,059]DEBUG 11846[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:54,059]DEBUG 11846[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:54,059]DEBUG 11846[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 14:08:54,060]DEBUG 11847[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:54,060]DEBUG 11847[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:54,060]DEBUG 11847[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:54,060]DEBUG 11847[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Dimensions (DimensionName, NumberOfProducts) values (?, ?)
[2017-10-14 14:08:54,060]DEBUG 11847[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 26
[2017-10-14 14:08:54,061]DEBUG 11848[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:54,061]DEBUG 11848[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:54,061]DEBUG 11848[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:54,061]DEBUG 11848[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Dimensions (DimensionName, NumberOfProducts) values (?, ?)
[2017-10-14 14:08:54,061]DEBUG 11848[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 27
[2017-10-14 14:08:54,061]DEBUG 11848[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:54,062]DEBUG 11849[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:54,062]DEBUG 11849[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:54,062]DEBUG 11849[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Dimensions (DimensionName, NumberOfProducts) values (?, ?)
[2017-10-14 14:08:54,062]DEBUG 11849[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 28
[2017-10-14 14:08:54,062]DEBUG 11849[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:54,063]DEBUG 11850[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:54,063]DEBUG 11850[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:54,063]DEBUG 11850[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-14 14:08:54,063]DEBUG 11850[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:54,063]DEBUG 11850[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:54,063]DEBUG 11850[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=26, dimensionName=Item, numberOfProduct=1}
[2017-10-14 14:08:54,063]DEBUG 11850[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=28, dimensionName=Package, numberOfProduct=10}
[2017-10-14 14:08:54,063]DEBUG 11850[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=27, dimensionName=Box, numberOfProduct=5}
[2017-10-14 14:08:54,063]DEBUG 11850[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:54,064]DEBUG 11851[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID7_0_, this_.DimensionName as Dimensio2_7_0_, this_.NumberOfProducts as NumberOf3_7_0_ from Dimensions this_ where this_.NumberOfProducts=?
[2017-10-14 14:08:54,064]DEBUG 11851[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 14:08:54,064]DEBUG 11851[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Dimension#28]
[2017-10-14 14:08:54,064]DEBUG 11851[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 14:08:54,064]DEBUG 11851[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:54,064]DEBUG 11851[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 14:08:54,065]DEBUG 11852[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:54,065]DEBUG 11852[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:54,065]DEBUG 11852[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-14 14:08:54,065]DEBUG 11852[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:54,065]DEBUG 11852[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:54,065]DEBUG 11852[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=26, dimensionName=Item, numberOfProduct=1}
[2017-10-14 14:08:54,065]DEBUG 11852[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=28, dimensionName=Package, numberOfProduct=10}
[2017-10-14 14:08:54,065]DEBUG 11852[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=27, dimensionName=Box, numberOfProduct=5}
[2017-10-14 14:08:54,065]DEBUG 11852[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:54,065]DEBUG 11852[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 14:08:54,066]DEBUG 11853[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:54,066]DEBUG 11853[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@4750be19 testClass = DimensionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@6618064a, testMethod = testGetPackageDimension@DimensionDaoTest, testException = [null]]]
[2017-10-14 14:08:54,066]DEBUG 11853[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 14:08:54,066]DEBUG 11853[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@1032d521]
[2017-10-14 14:08:54,066]DEBUG 11853[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 14:08:54,100]DEBUG 11887[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 14:08:54,100]DEBUG 11887[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:54,100]DEBUG 11887[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@1032d521] after transaction
[2017-10-14 14:08:54,100]DEBUG 11887[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 14:08:54,100]DEBUG 11887[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 14:08:54,101]DEBUG 11888[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:54,101] INFO 11888[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@4750be19 testClass = DimensionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@6618064a, testMethod = testGetPackageDimension@DimensionDaoTest, testException = [null]]]
[2017-10-14 14:08:54,102]DEBUG 11889[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@4750be19 testClass = DimensionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@6618064a, testMethod = testGetPackageDimension@DimensionDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 14:08:54,102]DEBUG 11889[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest]
[2017-10-14 14:08:54,102]DEBUG 11889[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest]
[2017-10-14 14:08:54,103]DEBUG 11890[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@4750be19 testClass = DimensionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@761012ee, testMethod = [null], testException = [null]]].
[2017-10-14 14:08:54,103]DEBUG 11890[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 14:08:54,103]DEBUG 11890[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 14:08:54,103]DEBUG 11890[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 14:08:54,104]DEBUG 11891[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 14:08:54,104]DEBUG 11891[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 14:08:54,104]DEBUG 11891[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 14:08:54,104]DEBUG 11891[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 14:08:54,104]DEBUG 11891[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 14:08:54,104]DEBUG 11891[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 14:08:54,105]DEBUG 11892[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 14:08:54,105]DEBUG 11892[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 14:08:54,105]DEBUG 11892[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 14:08:54,105]DEBUG 11892[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 14:08:54,105]DEBUG 11892[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 14:08:54,106]DEBUG 11893[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 14:08:54,106]DEBUG 11893[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 14:08:54,106]DEBUG 11893[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 14:08:54,106]DEBUG 11893[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 14:08:54,106]DEBUG 11893[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 14:08:54,106]DEBUG 11893[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 14:08:54,107]DEBUG 11894[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 14:08:54,107]DEBUG 11894[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 14:08:54,107]DEBUG 11894[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@761012ee]
[2017-10-14 14:08:54,108]DEBUG 11895[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testContextFile' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:54,109]DEBUG 11896[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@4750be19 testClass = DimensionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@761012ee, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2017-10-14 14:08:54,109]DEBUG 11896[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 14:08:54,110]DEBUG 11897[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testContextFile]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 14:08:54,110]DEBUG 11897[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15079793341
[2017-10-14 14:08:54,110]DEBUG 11897[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@2fedab00] for Hibernate transaction
[2017-10-14 14:08:54,110]DEBUG 11897[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@2fedab00]
[2017-10-14 14:08:54,110]DEBUG 11897[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 14:08:54,111]DEBUG 11898[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 14:08:54,111]DEBUG 11898[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 14:08:54,111]DEBUG 11898[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@4750be19 testClass = DimensionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@761012ee, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2017-10-14 14:08:54,111] INFO 11898[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (8): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@48ad0abe]; rollback [true]
[2017-10-14 14:08:54,111]DEBUG 11898[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:54,112]DEBUG 11899[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 14:08:54,112]DEBUG 11899[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:54,113]DEBUG 11900[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:54,113]DEBUG 11900[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 14:08:54,113]DEBUG 11900[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:54,114]DEBUG 11901[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:54,114]DEBUG 11901[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 14:08:54,114]DEBUG 11901[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:54,115]DEBUG 11902[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:54,115]DEBUG 11902[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 14:08:54,115]DEBUG 11902[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:54,116]DEBUG 11903[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:54,116]DEBUG 11903[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 14:08:54,117]DEBUG 11904[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:54,117]DEBUG 11904[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:54,117]DEBUG 11904[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 14:08:54,118]DEBUG 11905[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:54,118]DEBUG 11905[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:54,118]DEBUG 11905[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 14:08:54,118]DEBUG 11905[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:54,118]DEBUG 11905[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:54,118]DEBUG 11905[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 14:08:54,119]DEBUG 11906[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:54,119]DEBUG 11906[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:54,119]DEBUG 11906[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 14:08:54,119]DEBUG 11906[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:54,119]DEBUG 11906[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:54,119]DEBUG 11906[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:54,120]DEBUG 11907[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Dimensions (DimensionName, NumberOfProducts) values (?, ?)
[2017-10-14 14:08:54,120]DEBUG 11907[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 29
[2017-10-14 14:08:54,120]DEBUG 11907[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:54,120]DEBUG 11907[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:54,120]DEBUG 11907[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:54,120]DEBUG 11907[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Dimensions (DimensionName, NumberOfProducts) values (?, ?)
[2017-10-14 14:08:54,121]DEBUG 11908[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 30
[2017-10-14 14:08:54,121]DEBUG 11908[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:54,121]DEBUG 11908[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 14:08:54,121]DEBUG 11908[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:54,121]DEBUG 11908[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Dimensions (DimensionName, NumberOfProducts) values (?, ?)
[2017-10-14 14:08:54,122]DEBUG 11909[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 31
[2017-10-14 14:08:54,122]DEBUG 11909[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:54,122]DEBUG 11909[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 14:08:54,122]DEBUG 11909[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 14:08:54,122]DEBUG 11909[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-14 14:08:54,122]DEBUG 11909[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 14:08:54,122]DEBUG 11909[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 14:08:54,122]DEBUG 11909[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=30, dimensionName=Box, numberOfProduct=5}
[2017-10-14 14:08:54,122]DEBUG 11909[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=29, dimensionName=Item, numberOfProduct=1}
[2017-10-14 14:08:54,122]DEBUG 11909[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=31, dimensionName=Package, numberOfProduct=10}
[2017-10-14 14:08:54,123]DEBUG 11910[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 14:08:54,123]DEBUG 11910[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 14:08:54,123]DEBUG 11910[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 14:08:54,123]DEBUG 11910[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@4750be19 testClass = DimensionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@761012ee, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2017-10-14 14:08:54,123]DEBUG 11910[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 14:08:54,123]DEBUG 11910[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@2fedab00]
[2017-10-14 14:08:54,123]DEBUG 11910[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 14:08:54,158]DEBUG 11945[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 14:08:54,158]DEBUG 11945[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:54,159]DEBUG 11946[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@2fedab00] after transaction
[2017-10-14 14:08:54,159]DEBUG 11946[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 14:08:54,159]DEBUG 11946[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 14:08:54,159]DEBUG 11946[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 14:08:54,159] INFO 11946[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@4750be19 testClass = DimensionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@761012ee, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2017-10-14 14:08:54,160]DEBUG 11947[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@4750be19 testClass = DimensionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@761012ee, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 14:08:54,161]DEBUG 11948[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestClass(DirtiesContextTestExecutionListener.java:113) - After test class: context [[TestContext@4750be19 testClass = DimensionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = [null], testMethod = [null], testException = [null]]], dirtiesContext [false].
[2017-10-14 14:08:54,163]DEBUG 11950[main] - org.springframework.test.context.junit4.SpringJUnit4ClassRunner.<init>(SpringJUnit4ClassRunner.java:106) - SpringJUnit4ClassRunner constructor called with [class com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest].
[2017-10-14 14:08:54,163] INFO 11950[main] - org.springframework.test.context.TestContextManager.retrieveTestExecutionListeners(TestContextManager.java:185) - @TestExecutionListeners is not present for class [class com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]: using defaults.
[2017-10-14 14:08:54,163]DEBUG 11950[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]
[2017-10-14 14:08:54,164]DEBUG 11951[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]
[2017-10-14 14:08:54,165]DEBUG 11952[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]
[2017-10-14 14:08:54,165]DEBUG 11952[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]
[2017-10-14 14:08:54,165]DEBUG 11952[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]
[2017-10-14 14:08:54,165]DEBUG 11952[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]
[2017-10-14 14:08:54,167]DEBUG 11954[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]
[2017-10-14 14:08:54,168]DEBUG 11955[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]
[2017-10-14 14:08:54,168]DEBUG 11955[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@1e4dc18f testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@2dea2d4, testMethod = [null], testException = [null]]].
[2017-10-14 14:08:54,168]DEBUG 11955[main] - org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:75) - Loading ApplicationContext for locations [classpath:testApplicationContex.xml,classpath:testApplicationContex.xml].
[2017-10-14 14:08:54,168] INFO 11955[main] - org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:315) - Loading XML bean definitions from class path resource [testApplicationContex.xml]
[2017-10-14 14:08:54,170]DEBUG 11957[main] - org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:72) - Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
[2017-10-14 14:08:54,173]DEBUG 11960[main] - org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:140) - Loading schema mappings from [META-INF/spring.schemas]
[2017-10-14 14:08:54,176]DEBUG 11963[main] - org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:146) - Loaded schema mappings: {http://www.springframework.org/schema/security/spring-security-3.0.4.xsd=org/springframework/security/config/spring-security-3.0.4.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/security/spring-security-2.0.2.xsd=org/springframework/security/config/spring-security-2.0.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/security/spring-security-3.0.3.xsd=org/springframework/security/config/spring-security-3.0.3.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/security/spring-security-2.0.1.xsd=org/springframework/security/config/spring-security-2.0.1.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/security/spring-security-2.0.xsd=org/springframework/security/config/spring-security-2.0.xsd, http://www.springframework.org/schema/security/spring-security-3.0.xsd=org/springframework/security/config/spring-security-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/security/spring-security-2.0.4.xsd=org/springframework/security/config/spring-security-2.0.4.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/security/spring-security.xsd=org/springframework/security/config/spring-security-3.0.4.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd}
[2017-10-14 14:08:54,195]DEBUG 11982[main] - org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:118) - Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
[2017-10-14 14:08:54,220]DEBUG 12007[main] - org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:118) - Found XML schema [http://www.springframework.org/schema/tx/spring-tx-2.5.xsd] in classpath: org/springframework/transaction/config/spring-tx-2.5.xsd
[2017-10-14 14:08:54,224]DEBUG 12011[main] - org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:118) - Found XML schema [http://www.springframework.org/schema/tool/spring-tool-2.5.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-2.5.xsd
[2017-10-14 14:08:54,233]DEBUG 12020[main] - org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:118) - Found XML schema [http://www.springframework.org/schema/context/spring-context.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd
[2017-10-14 14:08:54,242]DEBUG 12029[main] - org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:87) - Loading bean definitions
[2017-10-14 14:08:54,245]DEBUG 12032[main] - org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(DefaultNamespaceHandlerResolver.java:156) - Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/security=org.springframework.security.config.SecurityNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
[2017-10-14 14:08:54,246] INFO 12033[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.registerDefaultFilters(ClassPathScanningCandidateComponentProvider.java:186) - JSR-330 'javax.inject.Named' annotation found and supported for component scanning
[2017-10-14 14:08:54,246]DEBUG 12033[main] - org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:552) - Looking for matching resources in directory tree [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/domain/entities]
[2017-10-14 14:08:54,246]DEBUG 12033[main] - org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:614) - Searching directory [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/domain/entities] for files matching pattern [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/domain/entities/**/*.class]
[2017-10-14 14:08:54,251]DEBUG 12038[main] - org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:353) - Resolved location pattern [classpath*:com/softserveinc/edu/oms/domain/entities/**/*.class] to resources [file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/domain/entities/Region.class], file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/domain/entities/OrderItem.class], file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/domain/entities/CreditCardType.class], file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/domain/entities/Order.class], file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/domain/entities/CustomerType.class], file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/domain/entities/Role.class], file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/domain/entities/Dimension.class], file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/domain/entities/Product.class], file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/domain/entities/OrderStatus.class], file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/domain/entities/User.class]]
[2017-10-14 14:08:54,258] INFO 12045[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.registerDefaultFilters(ClassPathScanningCandidateComponentProvider.java:186) - JSR-330 'javax.inject.Named' annotation found and supported for component scanning
[2017-10-14 14:08:54,258]DEBUG 12045[main] - org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:552) - Looking for matching resources in directory tree [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/persistence/dao/concrete]
[2017-10-14 14:08:54,258]DEBUG 12045[main] - org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:614) - Searching directory [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/persistence/dao/concrete] for files matching pattern [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/persistence/dao/concrete/**/*.class]
[2017-10-14 14:08:54,263]DEBUG 12050[main] - org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:353) - Resolved location pattern [classpath*:com/softserveinc/edu/oms/persistence/dao/concrete/**/*.class] to resources [file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/persistence/dao/concrete/OrderStatusDao.class], file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/persistence/dao/concrete/DimensionDao.class], file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/persistence/dao/concrete/CreditCardTypeDao.class], file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/persistence/dao/concrete/UserDao.class], file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/persistence/dao/concrete/OrderDao.class], file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/persistence/dao/concrete/OrderItemDao.class], file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/persistence/dao/concrete/ProductDao.class], file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/persistence/dao/concrete/RoleDao.class], file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/persistence/dao/concrete/RegionDao.class], file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/persistence/dao/concrete/CustomerTypeDao.class], file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/persistence/dao/concrete/UserDao$1.class]]
[2017-10-14 14:08:54,264]DEBUG 12051[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:220) - Identified candidate component class: file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/persistence/dao/concrete/OrderStatusDao.class]
[2017-10-14 14:08:54,264]DEBUG 12051[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:220) - Identified candidate component class: file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/persistence/dao/concrete/DimensionDao.class]
[2017-10-14 14:08:54,265]DEBUG 12052[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:220) - Identified candidate component class: file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/persistence/dao/concrete/CreditCardTypeDao.class]
[2017-10-14 14:08:54,265]DEBUG 12052[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:220) - Identified candidate component class: file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/persistence/dao/concrete/UserDao.class]
[2017-10-14 14:08:54,266]DEBUG 12053[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:220) - Identified candidate component class: file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/persistence/dao/concrete/OrderDao.class]
[2017-10-14 14:08:54,266]DEBUG 12053[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:220) - Identified candidate component class: file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/persistence/dao/concrete/OrderItemDao.class]
[2017-10-14 14:08:54,266]DEBUG 12053[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:220) - Identified candidate component class: file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/persistence/dao/concrete/ProductDao.class]
[2017-10-14 14:08:54,266]DEBUG 12053[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:220) - Identified candidate component class: file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/persistence/dao/concrete/RoleDao.class]
[2017-10-14 14:08:54,267]DEBUG 12054[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:220) - Identified candidate component class: file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/persistence/dao/concrete/RegionDao.class]
[2017-10-14 14:08:54,267]DEBUG 12054[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:220) - Identified candidate component class: file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/persistence/dao/concrete/CustomerTypeDao.class]
[2017-10-14 14:08:54,268]DEBUG 12055[main] - org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:185) - Loaded 21 bean definitions from location pattern [classpath:testApplicationContex.xml]
[2017-10-14 14:08:54,268] INFO 12055[main] - org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:315) - Loading XML bean definitions from class path resource [testApplicationContex.xml]
[2017-10-14 14:08:54,269]DEBUG 12056[main] - org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:72) - Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
[2017-10-14 14:08:54,270]DEBUG 12057[main] - org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:118) - Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
[2017-10-14 14:08:54,295]DEBUG 12082[main] - org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:118) - Found XML schema [http://www.springframework.org/schema/tx/spring-tx-2.5.xsd] in classpath: org/springframework/transaction/config/spring-tx-2.5.xsd
[2017-10-14 14:08:54,298]DEBUG 12085[main] - org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:118) - Found XML schema [http://www.springframework.org/schema/tool/spring-tool-2.5.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-2.5.xsd
[2017-10-14 14:08:54,301]DEBUG 12088[main] - org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:118) - Found XML schema [http://www.springframework.org/schema/context/spring-context.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd
[2017-10-14 14:08:54,308]DEBUG 12095[main] - org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:87) - Loading bean definitions
[2017-10-14 14:08:54,309] INFO 12096[main] - org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(DefaultListableBeanFactory.java:618) - Overriding bean definition for bean 'transactionManager': replacing [Generic bean: class [org.springframework.orm.hibernate3.HibernateTransactionManager]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [testApplicationContex.xml]] with [Generic bean: class [org.springframework.orm.hibernate3.HibernateTransactionManager]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [testApplicationContex.xml]]
[2017-10-14 14:08:54,310] INFO 12097[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.registerDefaultFilters(ClassPathScanningCandidateComponentProvider.java:186) - JSR-330 'javax.inject.Named' annotation found and supported for component scanning
[2017-10-14 14:08:54,310]DEBUG 12097[main] - org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:552) - Looking for matching resources in directory tree [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/domain/entities]
[2017-10-14 14:08:54,310]DEBUG 12097[main] - org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:614) - Searching directory [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/domain/entities] for files matching pattern [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/domain/entities/**/*.class]
[2017-10-14 14:08:54,314]DEBUG 12101[main] - org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:353) - Resolved location pattern [classpath*:com/softserveinc/edu/oms/domain/entities/**/*.class] to resources [file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/domain/entities/Region.class], file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/domain/entities/OrderItem.class], file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/domain/entities/CreditCardType.class], file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/domain/entities/Order.class], file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/domain/entities/CustomerType.class], file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/domain/entities/Role.class], file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/domain/entities/Dimension.class], file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/domain/entities/Product.class], file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/domain/entities/OrderStatus.class], file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/domain/entities/User.class]]
[2017-10-14 14:08:54,325] INFO 12112[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.registerDefaultFilters(ClassPathScanningCandidateComponentProvider.java:186) - JSR-330 'javax.inject.Named' annotation found and supported for component scanning
[2017-10-14 14:08:54,325]DEBUG 12112[main] - org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:552) - Looking for matching resources in directory tree [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/persistence/dao/concrete]
[2017-10-14 14:08:54,326]DEBUG 12113[main] - org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:614) - Searching directory [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/persistence/dao/concrete] for files matching pattern [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/persistence/dao/concrete/**/*.class]
[2017-10-14 14:08:54,340]DEBUG 12127[main] - org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:353) - Resolved location pattern [classpath*:com/softserveinc/edu/oms/persistence/dao/concrete/**/*.class] to resources [file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/persistence/dao/concrete/OrderStatusDao.class], file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/persistence/dao/concrete/DimensionDao.class], file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/persistence/dao/concrete/CreditCardTypeDao.class], file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/persistence/dao/concrete/UserDao.class], file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/persistence/dao/concrete/OrderDao.class], file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/persistence/dao/concrete/OrderItemDao.class], file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/persistence/dao/concrete/ProductDao.class], file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/persistence/dao/concrete/RoleDao.class], file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/persistence/dao/concrete/RegionDao.class], file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/persistence/dao/concrete/CustomerTypeDao.class], file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/persistence/dao/concrete/UserDao$1.class]]
[2017-10-14 14:08:54,341]DEBUG 12128[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:220) - Identified candidate component class: file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/persistence/dao/concrete/OrderStatusDao.class]
[2017-10-14 14:08:54,341]DEBUG 12128[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:220) - Identified candidate component class: file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/persistence/dao/concrete/DimensionDao.class]
[2017-10-14 14:08:54,341]DEBUG 12128[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:220) - Identified candidate component class: file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/persistence/dao/concrete/CreditCardTypeDao.class]
[2017-10-14 14:08:54,342]DEBUG 12129[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:220) - Identified candidate component class: file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/persistence/dao/concrete/UserDao.class]
[2017-10-14 14:08:54,342]DEBUG 12129[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:220) - Identified candidate component class: file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/persistence/dao/concrete/OrderDao.class]
[2017-10-14 14:08:54,343]DEBUG 12130[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:220) - Identified candidate component class: file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/persistence/dao/concrete/OrderItemDao.class]
[2017-10-14 14:08:54,343]DEBUG 12130[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:220) - Identified candidate component class: file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/persistence/dao/concrete/ProductDao.class]
[2017-10-14 14:08:54,343]DEBUG 12130[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:220) - Identified candidate component class: file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/persistence/dao/concrete/RoleDao.class]
[2017-10-14 14:08:54,343]DEBUG 12130[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:220) - Identified candidate component class: file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/persistence/dao/concrete/RegionDao.class]
[2017-10-14 14:08:54,344]DEBUG 12131[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:220) - Identified candidate component class: file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/persistence/dao/concrete/CustomerTypeDao.class]
[2017-10-14 14:08:54,345] INFO 12132[main] - org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(DefaultListableBeanFactory.java:618) - Overriding bean definition for bean 'sessionFactory': replacing [Generic bean: class [org.springframework.orm.hibernate3.LocalSessionFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [testApplicationContex.xml]] with [Generic bean: class [org.springframework.orm.hibernate3.LocalSessionFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [testApplicationContex.xml]]
[2017-10-14 14:08:54,345]DEBUG 12132[main] - org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:185) - Loaded 0 bean definitions from location pattern [classpath:testApplicationContex.xml]
[2017-10-14 14:08:54,345] INFO 12132[main] - org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:456) - Refreshing org.springframework.context.support.GenericApplicationContext@6bd58dff: startup date [Sat Oct 14 14:08:54 EEST 2017]; root of context hierarchy
[2017-10-14 14:08:54,345]DEBUG 12132[main] - org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:470) - Bean factory for org.springframework.context.support.GenericApplicationContext@6bd58dff: org.springframework.beans.factory.support.DefaultListableBeanFactory@7ed9bdbf: defining beans [transactionManager,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,orderStatusDao,dimensionDao,creditCardTypeDao,userDao,orderDao,orderItemDao,productDao,roleDao,regionDao,customerTypeDao,sessionFactory]; root of factory hierarchy
[2017-10-14 14:08:54,354]DEBUG 12141[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
[2017-10-14 14:08:54,354]DEBUG 12141[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
[2017-10-14 14:08:54,354]DEBUG 12141[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
[2017-10-14 14:08:54,354]DEBUG 12141[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
[2017-10-14 14:08:54,362]DEBUG 12149[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
[2017-10-14 14:08:54,362]DEBUG 12149[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
[2017-10-14 14:08:54,362] INFO 12149[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:137) - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2017-10-14 14:08:54,362]DEBUG 12149[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
[2017-10-14 14:08:54,362]DEBUG 12149[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
[2017-10-14 14:08:54,363]DEBUG 12150[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
[2017-10-14 14:08:54,363]DEBUG 12150[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
[2017-10-14 14:08:54,363]DEBUG 12150[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
[2017-10-14 14:08:54,363]DEBUG 12150[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
[2017-10-14 14:08:54,363]DEBUG 12150[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
[2017-10-14 14:08:54,363]DEBUG 12150[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
[2017-10-14 14:08:54,363]DEBUG 12150[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
[2017-10-14 14:08:54,363]DEBUG 12150[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
[2017-10-14 14:08:54,363]DEBUG 12150[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
[2017-10-14 14:08:54,364]DEBUG 12151[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
[2017-10-14 14:08:54,364]DEBUG 12151[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' to allow for resolving potential circular references
[2017-10-14 14:08:54,364]DEBUG 12151[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
[2017-10-14 14:08:54,364]DEBUG 12151[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
[2017-10-14 14:08:54,364]DEBUG 12151[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
[2017-10-14 14:08:54,376]DEBUG 12163[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
[2017-10-14 14:08:54,376]DEBUG 12163[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
[2017-10-14 14:08:54,376]DEBUG 12163[main] - org.springframework.context.support.AbstractApplicationContext.initMessageSource(AbstractApplicationContext.java:776) - Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@20550f84]
[2017-10-14 14:08:54,377]DEBUG 12164[main] - org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(AbstractApplicationContext.java:800) - Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@7230424d]
[2017-10-14 14:08:54,378] INFO 12165[main] - org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:555) - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@7ed9bdbf: defining beans [transactionManager,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,orderStatusDao,dimensionDao,creditCardTypeDao,userDao,orderDao,orderItemDao,productDao,roleDao,regionDao,customerTypeDao,sessionFactory]; root of factory hierarchy
[2017-10-14 14:08:54,378]DEBUG 12165[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'transactionManager'
[2017-10-14 14:08:54,378]DEBUG 12165[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'transactionManager'
[2017-10-14 14:08:54,378]DEBUG 12165[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
[2017-10-14 14:08:54,379]DEBUG 12166[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'sessionFactory'
[2017-10-14 14:08:54,379]DEBUG 12166[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'sessionFactory'
[2017-10-14 14:08:54,380]DEBUG 12167[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'sessionFactory' to allow for resolving potential circular references
[2017-10-14 14:08:54,380]DEBUG 12167[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1461) - Invoking afterPropertiesSet() on bean with name 'sessionFactory'
[2017-10-14 14:08:54,380]DEBUG 12167[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration boolean -> org.hibernate.type.BooleanType@6e6c50aa
[2017-10-14 14:08:54,381]DEBUG 12168[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration boolean -> org.hibernate.type.BooleanType@6e6c50aa
[2017-10-14 14:08:54,381]DEBUG 12168[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6e6c50aa
[2017-10-14 14:08:54,381]DEBUG 12168[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@35fea088
[2017-10-14 14:08:54,381]DEBUG 12168[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@a42b882
[2017-10-14 14:08:54,381]DEBUG 12168[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration yes_no -> org.hibernate.type.YesNoType@51a95c64
[2017-10-14 14:08:54,381]DEBUG 12168[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration byte -> org.hibernate.type.ByteType@2e802eff
[2017-10-14 14:08:54,381]DEBUG 12168[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration byte -> org.hibernate.type.ByteType@2e802eff
[2017-10-14 14:08:54,382]DEBUG 12169[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2e802eff
[2017-10-14 14:08:54,382]DEBUG 12169[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration character -> org.hibernate.type.CharacterType@4511f60f
[2017-10-14 14:08:54,382]DEBUG 12169[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration char -> org.hibernate.type.CharacterType@4511f60f
[2017-10-14 14:08:54,382]DEBUG 12169[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4511f60f
[2017-10-14 14:08:54,382]DEBUG 12169[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration short -> org.hibernate.type.ShortType@2c852ce7
[2017-10-14 14:08:54,382]DEBUG 12169[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration short -> org.hibernate.type.ShortType@2c852ce7
[2017-10-14 14:08:54,382]DEBUG 12169[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2c852ce7
[2017-10-14 14:08:54,382]DEBUG 12169[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration integer -> org.hibernate.type.IntegerType@244e0d38
[2017-10-14 14:08:54,383]DEBUG 12170[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration int -> org.hibernate.type.IntegerType@244e0d38
[2017-10-14 14:08:54,383]DEBUG 12170[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@244e0d38
[2017-10-14 14:08:54,383]DEBUG 12170[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration long -> org.hibernate.type.LongType@ef45815
[2017-10-14 14:08:54,383]DEBUG 12170[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration long -> org.hibernate.type.LongType@ef45815
[2017-10-14 14:08:54,383]DEBUG 12170[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@ef45815
[2017-10-14 14:08:54,383]DEBUG 12170[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration float -> org.hibernate.type.FloatType@969f4cd
[2017-10-14 14:08:54,383]DEBUG 12170[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration float -> org.hibernate.type.FloatType@969f4cd
[2017-10-14 14:08:54,384]DEBUG 12171[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@969f4cd
[2017-10-14 14:08:54,384]DEBUG 12171[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration double -> org.hibernate.type.DoubleType@5434050
[2017-10-14 14:08:54,384]DEBUG 12171[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration double -> org.hibernate.type.DoubleType@5434050
[2017-10-14 14:08:54,384]DEBUG 12171[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5434050
[2017-10-14 14:08:54,384]DEBUG 12171[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@79ef1245
[2017-10-14 14:08:54,384]DEBUG 12171[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@79ef1245
[2017-10-14 14:08:54,384]DEBUG 12171[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@11427db
[2017-10-14 14:08:54,384]DEBUG 12171[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@11427db
[2017-10-14 14:08:54,385]DEBUG 12172[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration string -> org.hibernate.type.StringType@3525c6
[2017-10-14 14:08:54,385]DEBUG 12172[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.String -> org.hibernate.type.StringType@3525c6
[2017-10-14 14:08:54,385]DEBUG 12172[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration url -> org.hibernate.type.UrlType@5d0d6868
[2017-10-14 14:08:54,385]DEBUG 12172[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5d0d6868
[2017-10-14 14:08:54,385]DEBUG 12172[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration date -> org.hibernate.type.DateType@6404aca7
[2017-10-14 14:08:54,385]DEBUG 12172[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6404aca7
[2017-10-14 14:08:54,385]DEBUG 12172[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration time -> org.hibernate.type.TimeType@3baa0bf5
[2017-10-14 14:08:54,385]DEBUG 12172[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3baa0bf5
[2017-10-14 14:08:54,386]DEBUG 12173[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration timestamp -> org.hibernate.type.TimestampType@784b7c29
[2017-10-14 14:08:54,386]DEBUG 12173[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@784b7c29
[2017-10-14 14:08:54,386]DEBUG 12173[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@784b7c29
[2017-10-14 14:08:54,386]DEBUG 12173[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@28b6f947
[2017-10-14 14:08:54,386]DEBUG 12173[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration calendar -> org.hibernate.type.CalendarType@3ef221ad
[2017-10-14 14:08:54,386]DEBUG 12173[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3ef221ad
[2017-10-14 14:08:54,386]DEBUG 12173[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3ef221ad
[2017-10-14 14:08:54,387]DEBUG 12174[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@24517540
[2017-10-14 14:08:54,387]DEBUG 12174[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration locale -> org.hibernate.type.LocaleType@692f95ad
[2017-10-14 14:08:54,387]DEBUG 12174[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@692f95ad
[2017-10-14 14:08:54,387]DEBUG 12174[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration currency -> org.hibernate.type.CurrencyType@146f1ad0
[2017-10-14 14:08:54,387]DEBUG 12174[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@146f1ad0
[2017-10-14 14:08:54,387]DEBUG 12174[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@bb6962e
[2017-10-14 14:08:54,387]DEBUG 12174[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@bb6962e
[2017-10-14 14:08:54,387]DEBUG 12174[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration class -> org.hibernate.type.ClassType@78a0bc79
[2017-10-14 14:08:54,388]DEBUG 12175[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@78a0bc79
[2017-10-14 14:08:54,388]DEBUG 12175[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@16de9eea
[2017-10-14 14:08:54,388]DEBUG 12175[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@16de9eea
[2017-10-14 14:08:54,388]DEBUG 12175[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5f179316
[2017-10-14 14:08:54,388]DEBUG 12175[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@6354743
[2017-10-14 14:08:54,388]DEBUG 12175[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration binary -> org.hibernate.type.BinaryType@737d54dd
[2017-10-14 14:08:54,388]DEBUG 12175[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration byte[] -> org.hibernate.type.BinaryType@737d54dd
[2017-10-14 14:08:54,388]DEBUG 12175[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration [B -> org.hibernate.type.BinaryType@737d54dd
[2017-10-14 14:08:54,389]DEBUG 12176[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@55071871
[2017-10-14 14:08:54,389]DEBUG 12176[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@55071871
[2017-10-14 14:08:54,389]DEBUG 12176[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@55071871
[2017-10-14 14:08:54,389]DEBUG 12176[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration image -> org.hibernate.type.ImageType@38c8c792
[2017-10-14 14:08:54,389]DEBUG 12176[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration characters -> org.hibernate.type.CharArrayType@4ae5c9e2
[2017-10-14 14:08:54,389]DEBUG 12176[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration char[] -> org.hibernate.type.CharArrayType@4ae5c9e2
[2017-10-14 14:08:54,389]DEBUG 12176[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration [C -> org.hibernate.type.CharArrayType@4ae5c9e2
[2017-10-14 14:08:54,390]DEBUG 12177[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@28e67788
[2017-10-14 14:08:54,390]DEBUG 12177[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@28e67788
[2017-10-14 14:08:54,390]DEBUG 12177[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@28e67788
[2017-10-14 14:08:54,390]DEBUG 12177[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration text -> org.hibernate.type.TextType@70d586bc
[2017-10-14 14:08:54,390]DEBUG 12177[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration blob -> org.hibernate.type.BlobType@7520d2a
[2017-10-14 14:08:54,390]DEBUG 12177[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7520d2a
[2017-10-14 14:08:54,390]DEBUG 12177[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@77a2473e
[2017-10-14 14:08:54,390]DEBUG 12177[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@6a768fd2
[2017-10-14 14:08:54,391]DEBUG 12178[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration clob -> org.hibernate.type.ClobType@42593848
[2017-10-14 14:08:54,391]DEBUG 12178[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@42593848
[2017-10-14 14:08:54,391]DEBUG 12178[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1ddb0486
[2017-10-14 14:08:54,391]DEBUG 12178[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@69a0a8ec
[2017-10-14 14:08:54,391]DEBUG 12178[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@bd42944
[2017-10-14 14:08:54,391]DEBUG 12178[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration serializable -> org.hibernate.type.SerializableType@3d03d2c8
[2017-10-14 14:08:54,391]DEBUG 12178[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration object -> org.hibernate.type.ObjectType@7a8fc519
[2017-10-14 14:08:54,391]DEBUG 12178[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7a8fc519
[2017-10-14 14:08:54,392]DEBUG 12179[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@45c3cb78
[2017-10-14 14:08:54,392]DEBUG 12179[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@28e8f8df
[2017-10-14 14:08:54,392]DEBUG 12179[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4b806761
[2017-10-14 14:08:54,392]DEBUG 12179[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3051b6ae
[2017-10-14 14:08:54,392]DEBUG 12179[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1c1f7b81
[2017-10-14 14:08:54,392]DEBUG 12179[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6d277f76
[2017-10-14 14:08:54,392]DEBUG 12179[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@300f5a51
[2017-10-14 14:08:54,393]DEBUG 12180[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4ef2bb57
[2017-10-14 14:08:54,393]DEBUG 12180[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]
[2017-10-14 14:08:54,393]DEBUG 12180[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]
[2017-10-14 14:08:54,393]DEBUG 12180[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]
[2017-10-14 14:08:54,393]DEBUG 12180[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]
[2017-10-14 14:08:54,393]DEBUG 12180[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]
[2017-10-14 14:08:54,393]DEBUG 12180[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]
[2017-10-14 14:08:54,394]DEBUG 12181[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]
[2017-10-14 14:08:54,394]DEBUG 12181[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]
[2017-10-14 14:08:54,394]DEBUG 12181[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]
[2017-10-14 14:08:54,394]DEBUG 12181[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]
[2017-10-14 14:08:54,394]DEBUG 12181[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]
[2017-10-14 14:08:54,394]DEBUG 12181[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]
[2017-10-14 14:08:54,394]DEBUG 12181[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]
[2017-10-14 14:08:54,394]DEBUG 12181[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]
[2017-10-14 14:08:54,395]DEBUG 12182[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]
[2017-10-14 14:08:54,395] INFO 12182[main] - org.hibernate.cfg.Configuration.configure(Configuration.java:2192) - configuring from url: file:/home/tomcat/Documents/backup/OMS.Release/target/test-classes/hibernate_test.cfg.xml
[2017-10-14 14:08:54,396]DEBUG 12183[main] - org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:67) - trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
[2017-10-14 14:08:54,396] WARN 12183[main] - org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:73) - recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!
[2017-10-14 14:08:54,396]DEBUG 12183[main] - org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:77) - attempting to resolve on classpath under org/hibernate/
[2017-10-14 14:08:54,397]DEBUG 12184[main] - org.hibernate.util.DTDEntityResolver.resolveOnClassPath(DTDEntityResolver.java:109) - located [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd] in classpath
[2017-10-14 14:08:54,399]DEBUG 12186[main] - org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) - hibernate.connection.driver_class=com.mysql.jdbc.Driver
[2017-10-14 14:08:54,399]DEBUG 12186[main] - org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) - dialect=org.hibernate.dialect.MySQL5Dialect
[2017-10-14 14:08:54,399]DEBUG 12186[main] - org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) - hibernate.connection.url=jdbc:mysql://localhost:3306/test1
[2017-10-14 14:08:54,399]DEBUG 12186[main] - org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) - hibernate.connection.username=maria
[2017-10-14 14:08:54,400]DEBUG 12187[main] - org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) - hibernate.connection.password=333qwerb
[2017-10-14 14:08:54,400]DEBUG 12187[main] - org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) - hibernate.hbm2ddl.auto=create-drop
[2017-10-14 14:08:54,400]DEBUG 12187[main] - org.hibernate.cfg.Configuration.parseMappingElement(Configuration.java:2363) - session-factory config [null] named class [com.softserveinc.edu.oms.domain.entities.Role] for mapping
[2017-10-14 14:08:54,400]DEBUG 12187[main] - org.hibernate.cfg.Configuration.parseMappingElement(Configuration.java:2363) - session-factory config [null] named class [com.softserveinc.edu.oms.domain.entities.Region] for mapping
[2017-10-14 14:08:54,400]DEBUG 12187[main] - org.hibernate.cfg.Configuration.parseMappingElement(Configuration.java:2363) - session-factory config [null] named class [com.softserveinc.edu.oms.domain.entities.CustomerType] for mapping
[2017-10-14 14:08:54,400]DEBUG 12187[main] - org.hibernate.cfg.Configuration.parseMappingElement(Configuration.java:2363) - session-factory config [null] named class [com.softserveinc.edu.oms.domain.entities.User] for mapping
[2017-10-14 14:08:54,400]DEBUG 12187[main] - org.hibernate.cfg.Configuration.parseMappingElement(Configuration.java:2363) - session-factory config [null] named class [com.softserveinc.edu.oms.domain.entities.OrderStatus] for mapping
[2017-10-14 14:08:54,401]DEBUG 12188[main] - org.hibernate.cfg.Configuration.parseMappingElement(Configuration.java:2363) - session-factory config [null] named class [com.softserveinc.edu.oms.domain.entities.Order] for mapping
[2017-10-14 14:08:54,401]DEBUG 12188[main] - org.hibernate.cfg.Configuration.parseMappingElement(Configuration.java:2363) - session-factory config [null] named class [com.softserveinc.edu.oms.domain.entities.Product] for mapping
[2017-10-14 14:08:54,401]DEBUG 12188[main] - org.hibernate.cfg.Configuration.parseMappingElement(Configuration.java:2363) - session-factory config [null] named class [com.softserveinc.edu.oms.domain.entities.Dimension] for mapping
[2017-10-14 14:08:54,401]DEBUG 12188[main] - org.hibernate.cfg.Configuration.parseMappingElement(Configuration.java:2363) - session-factory config [null] named class [com.softserveinc.edu.oms.domain.entities.OrderItem] for mapping
[2017-10-14 14:08:54,401]DEBUG 12188[main] - org.hibernate.cfg.Configuration.parseMappingElement(Configuration.java:2363) - session-factory config [null] named class [com.softserveinc.edu.oms.domain.entities.CreditCardType] for mapping
[2017-10-14 14:08:54,401] INFO 12188[main] - org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2297) - Configured SessionFactory: null
[2017-10-14 14:08:54,401]DEBUG 12188[main] - org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2298) - properties: {hibernate.connection.password=333qwerb, java.runtime.name=OpenJDK Runtime Environment, sun.boot.library.path=/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre/lib/amd64, java.vm.version=24.151-b00, hibernate.connection.username=maria, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=OpenJDK 64-Bit Server VM, file.encoding.pkg=sun.io, user.country=US, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=unknown, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/tomcat/Documents/backup/OMS.Release, java.runtime.version=1.7.0_151-mockbuild_2017_08_23_16_26-b00, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, basedir=/home/tomcat/Documents/backup/OMS.Release, hibernate.current_session_context_class=org.springframework.orm.hibernate3.SpringSessionContext, java.endorsed.dirs=/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre/lib/endorsed, os.arch=amd64, surefire.real.class.path=/home/tomcat/Documents/backup/OMS.Release/target/surefire/surefirebooter1350476830626056606.jar, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, surefire.test.class.path=/home/tomcat/Documents/backup/OMS.Release/target/test-classes:/home/tomcat/Documents/backup/OMS.Release/target/classes:/home/tomcat/.m2/repository/org/springframework/spring-context/3.0.5.RELEASE/spring-context-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-aop/3.0.5.RELEASE/spring-aop-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/home/tomcat/.m2/repository/org/springframework/spring-beans/3.0.5.RELEASE/spring-beans-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-core/3.0.5.RELEASE/spring-core-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-expression/3.0.5.RELEASE/spring-expression-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-asm/3.0.5.RELEASE/spring-asm-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-webmvc/3.0.5.RELEASE/spring-webmvc-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-context-support/3.0.5.RELEASE/spring-context-support-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-web/3.0.5.RELEASE/spring-web-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/roo/org.springframework.roo.annotations/1.0.2.RELEASE/org.springframework.roo.annotations-1.0.2.RELEASE.jar:/home/tomcat/.m2/repository/org/aspectj/aspectjrt/1.6.9/aspectjrt-1.6.9.jar:/home/tomcat/.m2/repository/org/slf4j/slf4j-api/1.5.10/slf4j-api-1.5.10.jar:/home/tomcat/.m2/repository/org/slf4j/jcl-over-slf4j/1.5.10/jcl-over-slf4j-1.5.10.jar:/home/tomcat/.m2/repository/org/slf4j/slf4j-log4j12/1.5.10/slf4j-log4j12-1.5.10.jar:/home/tomcat/.m2/repository/log4j/log4j/1.2.15/log4j-1.2.15.jar:/home/tomcat/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar:/home/tomcat/.m2/repository/javax/servlet/jstl/1.2/jstl-1.2.jar:/home/tomcat/.m2/repository/junit/junit/4.7/junit-4.7.jar:/home/tomcat/.m2/repository/org/hibernate/hibernate-core/3.6.5.Final/hibernate-core-3.6.5.Final.jar:/home/tomcat/.m2/repository/antlr/antlr/2.7.6/antlr-2.7.6.jar:/home/tomcat/.m2/repository/commons-collections/commons-collections/3.1/commons-collections-3.1.jar:/home/tomcat/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/home/tomcat/.m2/repository/org/hibernate/hibernate-commons-annotations/3.2.0.Final/hibernate-commons-annotations-3.2.0.Final.jar:/home/tomcat/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.0-api/1.0.0.Final/hibernate-jpa-2.0-api-1.0.0.Final.jar:/home/tomcat/.m2/repository/javax/transaction/jta/1.1/jta-1.1.jar:/home/tomcat/.m2/repository/net/sourceforge/jtds/jtds/1.2.4/jtds-1.2.4.jar:/home/tomcat/.m2/repository/javassist/javassist/3.12.1.GA/javassist-3.12.1.GA.jar:/home/tomcat/.m2/repository/org/springframework/spring-orm/3.0.5.RELEASE/spring-orm-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-jdbc/3.0.5.RELEASE/spring-jdbc-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-tx/3.0.5.RELEASE/spring-tx-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar:/home/tomcat/.m2/repository/org/springframework/spring-test/3.0.5.RELEASE/spring-test-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/security/spring-security-core/3.0.5.RELEASE/spring-security-core-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/aspectj/aspectjweaver/1.6.8/aspectjweaver-1.6.8.jar:/home/tomcat/.m2/repository/org/springframework/security/spring-security-config/3.0.5.RELEASE/spring-security-config-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/security/spring-security-web/3.0.5.RELEASE/spring-security-web-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/cglib/cglib/2.2.2/cglib-2.2.2.jar:/home/tomcat/.m2/repository/asm/asm/3.3.1/asm-3.3.1.jar:/home/tomcat/.m2/repository/mysql/mysql-connector-java/5.1.17/mysql-connector-java-5.1.17.jar:/home/tomcat/.m2/repository/org/hibernate/hibernate-validator/4.2.0.Final/hibernate-validator-4.2.0.Final.jar:/home/tomcat/.m2/repository/javax/validation/validation-api/1.0.0.GA/validation-api-1.0.0.GA.jar:/home/tomcat/.m2/repository/org/apache/tiles/tiles-jsp/2.2.2/tiles-jsp-2.2.2.jar:/home/tomcat/.m2/repository/org/apache/tiles/tiles-servlet/2.2.2/tiles-servlet-2.2.2.jar:/home/tomcat/.m2/repository/org/apache/tiles/tiles-core/2.2.2/tiles-core-2.2.2.jar:/home/tomcat/.m2/repository/org/apache/tiles/tiles-template/2.2.2/tiles-template-2.2.2.jar:/home/tomcat/.m2/repository/org/apache/tiles/tiles-api/2.2.2/tiles-api-2.2.2.jar:/home/tomcat/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.8.3/jackson-mapper-asl-1.8.3.jar:/home/tomcat/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.8.3/jackson-core-asl-1.8.3.jar:/home/tomcat/.m2/repository/net/sf/jasperreports/jasperreports/4.0.1/jasperreports-4.0.1.jar:/home/tomcat/.m2/repository/commons-beanutils/commons-beanutils/1.8.0/commons-beanutils-1.8.0.jar:/home/tomcat/.m2/repository/commons-digester/commons-digester/1.7/commons-digester-1.7.jar:/home/tomcat/.m2/repository/commons-logging/commons-logging/1.0.2/commons-logging-1.0.2.jar:/home/tomcat/.m2/repository/com/lowagie/itext/2.1.7/itext-2.1.7.jar:/home/tomcat/.m2/repository/bouncycastle/bcmail-jdk14/138/bcmail-jdk14-138.jar:/home/tomcat/.m2/repository/bouncycastle/bcprov-jdk14/138/bcprov-jdk14-138.jar:/home/tomcat/.m2/repository/org/bouncycastle/bctsp-jdk14/1.38/bctsp-jdk14-1.38.jar:/home/tomcat/.m2/repository/org/bouncycastle/bcprov-jdk14/1.38/bcprov-jdk14-1.38.jar:/home/tomcat/.m2/repository/org/bouncycastle/bcmail-jdk14/1.38/bcmail-jdk14-1.38.jar:/home/tomcat/.m2/repository/jfree/jcommon/1.0.15/jcommon-1.0.15.jar:/home/tomcat/.m2/repository/jfree/jfreechart/1.0.12/jfreechart-1.0.12.jar:/home/tomcat/.m2/repository/xml-apis/xml-apis/1.3.02/xml-apis-1.3.02.jar:/home/tomcat/.m2/repository/eclipse/jdtcore/3.1.0/jdtcore-3.1.0.jar:/home/tomcat/.m2/repository/org/springframework/security/spring-security-taglibs/3.0.5.RELEASE/spring-security-taglibs-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/security/spring-security-acl/3.0.5.RELEASE/spring-security-acl-3.0.5.RELEASE.jar:, java.specification.name=Java Platform API Specification, java.class.version=51.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.transaction.factory_class=org.springframework.orm.hibernate3.SpringTransactionFactory, os.version=3.10.0-693.el7.x86_64, user.home=/home/tomcat, user.timezone=Europe/Kiev, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.7, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.class.path=/home/tomcat/Documents/backup/OMS.Release/target/test-classes:/home/tomcat/Documents/backup/OMS.Release/target/classes:/home/tomcat/.m2/repository/org/springframework/spring-context/3.0.5.RELEASE/spring-context-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-aop/3.0.5.RELEASE/spring-aop-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/home/tomcat/.m2/repository/org/springframework/spring-beans/3.0.5.RELEASE/spring-beans-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-core/3.0.5.RELEASE/spring-core-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-expression/3.0.5.RELEASE/spring-expression-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-asm/3.0.5.RELEASE/spring-asm-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-webmvc/3.0.5.RELEASE/spring-webmvc-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-context-support/3.0.5.RELEASE/spring-context-support-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-web/3.0.5.RELEASE/spring-web-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/roo/org.springframework.roo.annotations/1.0.2.RELEASE/org.springframework.roo.annotations-1.0.2.RELEASE.jar:/home/tomcat/.m2/repository/org/aspectj/aspectjrt/1.6.9/aspectjrt-1.6.9.jar:/home/tomcat/.m2/repository/org/slf4j/slf4j-api/1.5.10/slf4j-api-1.5.10.jar:/home/tomcat/.m2/repository/org/slf4j/jcl-over-slf4j/1.5.10/jcl-over-slf4j-1.5.10.jar:/home/tomcat/.m2/repository/org/slf4j/slf4j-log4j12/1.5.10/slf4j-log4j12-1.5.10.jar:/home/tomcat/.m2/repository/log4j/log4j/1.2.15/log4j-1.2.15.jar:/home/tomcat/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar:/home/tomcat/.m2/repository/javax/servlet/jstl/1.2/jstl-1.2.jar:/home/tomcat/.m2/repository/junit/junit/4.7/junit-4.7.jar:/home/tomcat/.m2/repository/org/hibernate/hibernate-core/3.6.5.Final/hibernate-core-3.6.5.Final.jar:/home/tomcat/.m2/repository/antlr/antlr/2.7.6/antlr-2.7.6.jar:/home/tomcat/.m2/repository/commons-collections/commons-collections/3.1/commons-collections-3.1.jar:/home/tomcat/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/home/tomcat/.m2/repository/org/hibernate/hibernate-commons-annotations/3.2.0.Final/hibernate-commons-annotations-3.2.0.Final.jar:/home/tomcat/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.0-api/1.0.0.Final/hibernate-jpa-2.0-api-1.0.0.Final.jar:/home/tomcat/.m2/repository/javax/transaction/jta/1.1/jta-1.1.jar:/home/tomcat/.m2/repository/net/sourceforge/jtds/jtds/1.2.4/jtds-1.2.4.jar:/home/tomcat/.m2/repository/javassist/javassist/3.12.1.GA/javassist-3.12.1.GA.jar:/home/tomcat/.m2/repository/org/springframework/spring-orm/3.0.5.RELEASE/spring-orm-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-jdbc/3.0.5.RELEASE/spring-jdbc-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-tx/3.0.5.RELEASE/spring-tx-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar:/home/tomcat/.m2/repository/org/springframework/spring-test/3.0.5.RELEASE/spring-test-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/security/spring-security-core/3.0.5.RELEASE/spring-security-core-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/aspectj/aspectjweaver/1.6.8/aspectjweaver-1.6.8.jar:/home/tomcat/.m2/repository/org/springframework/security/spring-security-config/3.0.5.RELEASE/spring-security-config-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/security/spring-security-web/3.0.5.RELEASE/spring-security-web-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/cglib/cglib/2.2.2/cglib-2.2.2.jar:/home/tomcat/.m2/repository/asm/asm/3.3.1/asm-3.3.1.jar:/home/tomcat/.m2/repository/mysql/mysql-connector-java/5.1.17/mysql-connector-java-5.1.17.jar:/home/tomcat/.m2/repository/org/hibernate/hibernate-validator/4.2.0.Final/hibernate-validator-4.2.0.Final.jar:/home/tomcat/.m2/repository/javax/validation/validation-api/1.0.0.GA/validation-api-1.0.0.GA.jar:/home/tomcat/.m2/repository/org/apache/tiles/tiles-jsp/2.2.2/tiles-jsp-2.2.2.jar:/home/tomcat/.m2/repository/org/apache/tiles/tiles-servlet/2.2.2/tiles-servlet-2.2.2.jar:/home/tomcat/.m2/repository/org/apache/tiles/tiles-core/2.2.2/tiles-core-2.2.2.jar:/home/tomcat/.m2/repository/org/apache/tiles/tiles-template/2.2.2/tiles-template-2.2.2.jar:/home/tomcat/.m2/repository/org/apache/tiles/tiles-api/2.2.2/tiles-api-2.2.2.jar:/home/tomcat/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.8.3/jackson-mapper-asl-1.8.3.jar:/home/tomcat/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.8.3/jackson-core-asl-1.8.3.jar:/home/tomcat/.m2/repository/net/sf/jasperreports/jasperreports/4.0.1/jasperreports-4.0.1.jar:/home/tomcat/.m2/repository/commons-beanutils/commons-beanutils/1.8.0/commons-beanutils-1.8.0.jar:/home/tomcat/.m2/repository/commons-digester/commons-digester/1.7/commons-digester-1.7.jar:/home/tomcat/.m2/repository/commons-logging/commons-logging/1.0.2/commons-logging-1.0.2.jar:/home/tomcat/.m2/repository/com/lowagie/itext/2.1.7/itext-2.1.7.jar:/home/tomcat/.m2/repository/bouncycastle/bcmail-jdk14/138/bcmail-jdk14-138.jar:/home/tomcat/.m2/repository/bouncycastle/bcprov-jdk14/138/bcprov-jdk14-138.jar:/home/tomcat/.m2/repository/org/bouncycastle/bctsp-jdk14/1.38/bctsp-jdk14-1.38.jar:/home/tomcat/.m2/repository/org/bouncycastle/bcprov-jdk14/1.38/bcprov-jdk14-1.38.jar:/home/tomcat/.m2/repository/org/bouncycastle/bcmail-jdk14/1.38/bcmail-jdk14-1.38.jar:/home/tomcat/.m2/repository/jfree/jcommon/1.0.15/jcommon-1.0.15.jar:/home/tomcat/.m2/repository/jfree/jfreechart/1.0.12/jfreechart-1.0.12.jar:/home/tomcat/.m2/repository/xml-apis/xml-apis/1.3.02/xml-apis-1.3.02.jar:/home/tomcat/.m2/repository/eclipse/jdtcore/3.1.0/jdtcore-3.1.0.jar:/home/tomcat/.m2/repository/org/springframework/security/spring-security-taglibs/3.0.5.RELEASE/spring-security-taglibs-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/security/spring-security-acl/3.0.5.RELEASE/spring-security-acl-3.0.5.RELEASE.jar:, user.name=tomcat, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.version=1.7, sun.java.command=/home/tomcat/Documents/backup/OMS.Release/target/surefire/surefirebooter1350476830626056606.jar /home/tomcat/Documents/backup/OMS.Release/target/surefire 2017-10-14T14-08-41_029-jvmRun1 surefire1747481213800879750tmp surefire_0887568231430146800tmp, java.home=/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre, sun.arch.data.model=64, hibernate.connection.url=jdbc:mysql://localhost:3306/test1, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.7.0_151, java.ext.dirs=/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre/lib/resources.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre/lib/rt.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre/lib/jsse.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre/lib/jce.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre/lib/charsets.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre/lib/rhino.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre/lib/jfr.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre/classes, java.vendor=Oracle Corporation, localRepository=/home/tomcat/.m2/repository, file.separator=/, hibernate.hbm2ddl.auto=create-drop, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=gnome, dialect=org.hibernate.dialect.MySQL5Dialect, sun.cpu.isalist=}
[2017-10-14 14:08:54,402]DEBUG 12189[main] - org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) - Processing hbm.xml files
[2017-10-14 14:08:54,402]DEBUG 12189[main] - org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) - Process annotated classes
[2017-10-14 14:08:54,403] INFO 12190[main] - org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:532) - Binding entity from annotated class: com.softserveinc.edu.oms.domain.entities.Role
[2017-10-14 14:08:54,403]DEBUG 12190[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2017-10-14 14:08:54,403]DEBUG 12190[main] - org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1019) - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2017-10-14 14:08:54,404]DEBUG 12191[main] - org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name Role
[2017-10-14 14:08:54,404] INFO 12191[main] - org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:530) - Bind entity com.softserveinc.edu.oms.domain.entities.Role on table Roles
[2017-10-14 14:08:54,404]DEBUG 12191[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Roles), mappingColumn=ID, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:54,405]DEBUG 12192[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property id with lazy=false
[2017-10-14 14:08:54,405]DEBUG 12192[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for id
[2017-10-14 14:08:54,405]DEBUG 12192[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property id
[2017-10-14 14:08:54,405]DEBUG 12192[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Roles), mappingColumn=RoleName, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:54,405]DEBUG 12192[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property roleName with lazy=false
[2017-10-14 14:08:54,405]DEBUG 12192[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for roleName
[2017-10-14 14:08:54,405]DEBUG 12192[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property roleName
[2017-10-14 14:08:54,406] INFO 12193[main] - org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:532) - Binding entity from annotated class: com.softserveinc.edu.oms.domain.entities.Region
[2017-10-14 14:08:54,406]DEBUG 12193[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2017-10-14 14:08:54,406]DEBUG 12193[main] - org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1019) - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2017-10-14 14:08:54,406]DEBUG 12193[main] - org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name Region
[2017-10-14 14:08:54,406] INFO 12193[main] - org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:530) - Bind entity com.softserveinc.edu.oms.domain.entities.Region on table Regions
[2017-10-14 14:08:54,407]DEBUG 12194[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Regions), mappingColumn=ID, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:54,407]DEBUG 12194[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property id with lazy=false
[2017-10-14 14:08:54,407]DEBUG 12194[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for id
[2017-10-14 14:08:54,407]DEBUG 12194[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property id
[2017-10-14 14:08:54,407]DEBUG 12194[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Regions), mappingColumn=RegionName, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:54,408]DEBUG 12195[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property regionName with lazy=false
[2017-10-14 14:08:54,408]DEBUG 12195[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for regionName
[2017-10-14 14:08:54,408]DEBUG 12195[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property regionName
[2017-10-14 14:08:54,408] INFO 12195[main] - org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:532) - Binding entity from annotated class: com.softserveinc.edu.oms.domain.entities.CustomerType
[2017-10-14 14:08:54,408]DEBUG 12195[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2017-10-14 14:08:54,409]DEBUG 12196[main] - org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1019) - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2017-10-14 14:08:54,409]DEBUG 12196[main] - org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name CustomerType
[2017-10-14 14:08:54,409] INFO 12196[main] - org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:530) - Bind entity com.softserveinc.edu.oms.domain.entities.CustomerType on table CustomerTypes
[2017-10-14 14:08:54,410]DEBUG 12197[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerTypes), mappingColumn=ID, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:54,410]DEBUG 12197[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property id with lazy=false
[2017-10-14 14:08:54,410]DEBUG 12197[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for id
[2017-10-14 14:08:54,410]DEBUG 12197[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property id
[2017-10-14 14:08:54,411]DEBUG 12198[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerTypes), mappingColumn=Discount, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:54,411]DEBUG 12198[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property discount with lazy=false
[2017-10-14 14:08:54,411]DEBUG 12198[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for discount
[2017-10-14 14:08:54,411]DEBUG 12198[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property discount
[2017-10-14 14:08:54,411]DEBUG 12198[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerTypes), mappingColumn=MaxRange, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:54,411]DEBUG 12198[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property maxRange with lazy=false
[2017-10-14 14:08:54,412]DEBUG 12199[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for maxRange
[2017-10-14 14:08:54,412]DEBUG 12199[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property maxRange
[2017-10-14 14:08:54,412]DEBUG 12199[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerTypes), mappingColumn=MinRange, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:54,412]DEBUG 12199[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property minRange with lazy=false
[2017-10-14 14:08:54,412]DEBUG 12199[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for minRange
[2017-10-14 14:08:54,412]DEBUG 12199[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property minRange
[2017-10-14 14:08:54,413]DEBUG 12200[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerTypes), mappingColumn=TypeName, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:54,413]DEBUG 12200[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property typeName with lazy=false
[2017-10-14 14:08:54,413]DEBUG 12200[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for typeName
[2017-10-14 14:08:54,413]DEBUG 12200[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property typeName
[2017-10-14 14:08:54,413] INFO 12200[main] - org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:532) - Binding entity from annotated class: com.softserveinc.edu.oms.domain.entities.User
[2017-10-14 14:08:54,413]DEBUG 12200[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2017-10-14 14:08:54,414]DEBUG 12201[main] - org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1019) - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2017-10-14 14:08:54,414]DEBUG 12201[main] - org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name User
[2017-10-14 14:08:54,414] INFO 12201[main] - org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:530) - Bind entity com.softserveinc.edu.oms.domain.entities.User on table Users
[2017-10-14 14:08:54,415]DEBUG 12202[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=ID, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:54,416]DEBUG 12203[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property id with lazy=false
[2017-10-14 14:08:54,416]DEBUG 12203[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for id
[2017-10-14 14:08:54,416]DEBUG 12203[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property id
[2017-10-14 14:08:54,416]DEBUG 12203[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=IsUserActive, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:54,416]DEBUG 12203[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property active with lazy=false
[2017-10-14 14:08:54,417]DEBUG 12204[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for active
[2017-10-14 14:08:54,417]DEBUG 12204[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property active
[2017-10-14 14:08:54,417]DEBUG 12204[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=Balance, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:54,417]DEBUG 12204[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property balance with lazy=false
[2017-10-14 14:08:54,417]DEBUG 12204[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for balance
[2017-10-14 14:08:54,417]DEBUG 12204[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property balance
[2017-10-14 14:08:54,418]DEBUG 12205[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3JoinColumn{logicalColumnName='CustomerTypeRef', referencedColumn='', mappedBy=''}
[2017-10-14 14:08:54,418]DEBUG 12205[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=customerType, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:54,418]DEBUG 12205[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property customerType
[2017-10-14 14:08:54,418]DEBUG 12205[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=Email, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:54,418]DEBUG 12205[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property email with lazy=false
[2017-10-14 14:08:54,418]DEBUG 12205[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for email
[2017-10-14 14:08:54,419]DEBUG 12206[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property email
[2017-10-14 14:08:54,419]DEBUG 12206[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=FirstName, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:54,419]DEBUG 12206[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property firstName with lazy=false
[2017-10-14 14:08:54,419]DEBUG 12206[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for firstName
[2017-10-14 14:08:54,419]DEBUG 12206[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property firstName
[2017-10-14 14:08:54,419]DEBUG 12206[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=LastName, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:54,420]DEBUG 12207[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property lastName with lazy=false
[2017-10-14 14:08:54,420]DEBUG 12207[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for lastName
[2017-10-14 14:08:54,420]DEBUG 12207[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property lastName
[2017-10-14 14:08:54,420]DEBUG 12207[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=Login, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:54,420]DEBUG 12207[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property login with lazy=false
[2017-10-14 14:08:54,420]DEBUG 12207[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for login
[2017-10-14 14:08:54,420]DEBUG 12207[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property login
[2017-10-14 14:08:54,421]DEBUG 12208[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=Password, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:54,421]DEBUG 12208[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property password with lazy=false
[2017-10-14 14:08:54,421]DEBUG 12208[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for password
[2017-10-14 14:08:54,421]DEBUG 12208[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property password
[2017-10-14 14:08:54,421]DEBUG 12208[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3JoinColumn{logicalColumnName='RegionRef', referencedColumn='', mappedBy=''}
[2017-10-14 14:08:54,421]DEBUG 12208[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=region, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:54,422]DEBUG 12209[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property region
[2017-10-14 14:08:54,422]DEBUG 12209[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3JoinColumn{logicalColumnName='RoleRef', referencedColumn='', mappedBy=''}
[2017-10-14 14:08:54,422]DEBUG 12209[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=role, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:54,422]DEBUG 12209[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property role
[2017-10-14 14:08:54,422] INFO 12209[main] - org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:532) - Binding entity from annotated class: com.softserveinc.edu.oms.domain.entities.OrderStatus
[2017-10-14 14:08:54,422]DEBUG 12209[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2017-10-14 14:08:54,423]DEBUG 12210[main] - org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1019) - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2017-10-14 14:08:54,423]DEBUG 12210[main] - org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name OrderStatus
[2017-10-14 14:08:54,423] INFO 12210[main] - org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:530) - Bind entity com.softserveinc.edu.oms.domain.entities.OrderStatus on table OrderStatuses
[2017-10-14 14:08:54,424]DEBUG 12211[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderStatuses), mappingColumn=ID, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:54,424]DEBUG 12211[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property id with lazy=false
[2017-10-14 14:08:54,424]DEBUG 12211[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for id
[2017-10-14 14:08:54,424]DEBUG 12211[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property id
[2017-10-14 14:08:54,424]DEBUG 12211[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderStatuses), mappingColumn=OrederStatusName, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:54,424]DEBUG 12211[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property orderStatusName with lazy=false
[2017-10-14 14:08:54,425]DEBUG 12212[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for orderStatusName
[2017-10-14 14:08:54,425]DEBUG 12212[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property orderStatusName
[2017-10-14 14:08:54,425] INFO 12212[main] - org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:532) - Binding entity from annotated class: com.softserveinc.edu.oms.domain.entities.Order
[2017-10-14 14:08:54,425]DEBUG 12212[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2017-10-14 14:08:54,425]DEBUG 12212[main] - org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1019) - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2017-10-14 14:08:54,425]DEBUG 12212[main] - org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name Order
[2017-10-14 14:08:54,425] INFO 12212[main] - org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:530) - Bind entity com.softserveinc.edu.oms.domain.entities.Order on table Orders
[2017-10-14 14:08:54,427]DEBUG 12214[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=ID, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:54,427]DEBUG 12214[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property id with lazy=false
[2017-10-14 14:08:54,427]DEBUG 12214[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for id
[2017-10-14 14:08:54,427]DEBUG 12214[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property id
[2017-10-14 14:08:54,428]DEBUG 12215[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3JoinColumn{logicalColumnName='Assigne', referencedColumn='', mappedBy=''}
[2017-10-14 14:08:54,428]DEBUG 12215[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=assigne, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:54,428]DEBUG 12215[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property assigne
[2017-10-14 14:08:54,428]DEBUG 12215[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3JoinColumn{logicalColumnName='Customer', referencedColumn='', mappedBy=''}
[2017-10-14 14:08:54,428]DEBUG 12215[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=customer, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:54,429]DEBUG 12216[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property customer
[2017-10-14 14:08:54,429]DEBUG 12216[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=DeliveryDate, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:54,429]DEBUG 12216[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property deliveryDate with lazy=false
[2017-10-14 14:08:54,429]DEBUG 12216[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for deliveryDate
[2017-10-14 14:08:54,429]DEBUG 12216[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property deliveryDate
[2017-10-14 14:08:54,429]DEBUG 12216[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=IsGift, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:54,430]DEBUG 12217[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property isGift with lazy=false
[2017-10-14 14:08:54,430]DEBUG 12217[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for isGift
[2017-10-14 14:08:54,430]DEBUG 12217[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property isGift
[2017-10-14 14:08:54,430]DEBUG 12217[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=MaxDiscount, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:54,430]DEBUG 12217[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property maxDiscount with lazy=false
[2017-10-14 14:08:54,430]DEBUG 12217[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for maxDiscount
[2017-10-14 14:08:54,430]DEBUG 12217[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property maxDiscount
[2017-10-14 14:08:54,431]DEBUG 12218[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=OrderDate, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:54,431]DEBUG 12218[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property orderDate with lazy=false
[2017-10-14 14:08:54,431]DEBUG 12218[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for orderDate
[2017-10-14 14:08:54,431]DEBUG 12218[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property orderDate
[2017-10-14 14:08:54,431]DEBUG 12218[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=OrderName, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:54,431]DEBUG 12218[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property orderName with lazy=false
[2017-10-14 14:08:54,432]DEBUG 12219[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for orderName
[2017-10-14 14:08:54,432]DEBUG 12219[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property orderName
[2017-10-14 14:08:54,432]DEBUG 12219[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=OrderNumber, insertable=true, updatable=true, unique=true}
[2017-10-14 14:08:54,432]DEBUG 12219[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property orderNumber with lazy=false
[2017-10-14 14:08:54,432]DEBUG 12219[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for orderNumber
[2017-10-14 14:08:54,432]DEBUG 12219[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property orderNumber
[2017-10-14 14:08:54,433]DEBUG 12220[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3JoinColumn{logicalColumnName='OrderStatusRef', referencedColumn='', mappedBy=''}
[2017-10-14 14:08:54,433]DEBUG 12220[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=orderStatus, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:54,433]DEBUG 12220[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property orderStatus
[2017-10-14 14:08:54,433]DEBUG 12220[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=PreferableDeliveryDate, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:54,433]DEBUG 12220[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property preferableDeliveryDate with lazy=false
[2017-10-14 14:08:54,433]DEBUG 12220[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for preferableDeliveryDate
[2017-10-14 14:08:54,434]DEBUG 12221[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property preferableDeliveryDate
[2017-10-14 14:08:54,434]DEBUG 12221[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=TotalPrice, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:54,434]DEBUG 12221[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property totalPrice with lazy=false
[2017-10-14 14:08:54,434]DEBUG 12221[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for totalPrice
[2017-10-14 14:08:54,434]DEBUG 12221[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property totalPrice
[2017-10-14 14:08:54,434] INFO 12221[main] - org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:532) - Binding entity from annotated class: com.softserveinc.edu.oms.domain.entities.Product
[2017-10-14 14:08:54,434]DEBUG 12221[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2017-10-14 14:08:54,435]DEBUG 12222[main] - org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1019) - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2017-10-14 14:08:54,435]DEBUG 12222[main] - org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name Product
[2017-10-14 14:08:54,435] INFO 12222[main] - org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:530) - Bind entity com.softserveinc.edu.oms.domain.entities.Product on table Products
[2017-10-14 14:08:54,436]DEBUG 12223[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Products), mappingColumn=ID, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:54,436]DEBUG 12223[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property id with lazy=false
[2017-10-14 14:08:54,436]DEBUG 12223[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for id
[2017-10-14 14:08:54,436]DEBUG 12223[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property id
[2017-10-14 14:08:54,436]DEBUG 12223[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Products), mappingColumn=IsProductActive, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:54,437]DEBUG 12224[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property active with lazy=false
[2017-10-14 14:08:54,437]DEBUG 12224[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for active
[2017-10-14 14:08:54,437]DEBUG 12224[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property active
[2017-10-14 14:08:54,437]DEBUG 12224[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Products), mappingColumn=ProductDescription, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:54,437]DEBUG 12224[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property productDescription with lazy=false
[2017-10-14 14:08:54,437]DEBUG 12224[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for productDescription
[2017-10-14 14:08:54,438]DEBUG 12225[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property productDescription
[2017-10-14 14:08:54,438]DEBUG 12225[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Products), mappingColumn=ProductName, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:54,438]DEBUG 12225[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property productName with lazy=false
[2017-10-14 14:08:54,438]DEBUG 12225[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for productName
[2017-10-14 14:08:54,438]DEBUG 12225[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property productName
[2017-10-14 14:08:54,438]DEBUG 12225[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Products), mappingColumn=ProductPrice, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:54,439]DEBUG 12226[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property productPrice with lazy=false
[2017-10-14 14:08:54,439]DEBUG 12226[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for productPrice
[2017-10-14 14:08:54,439]DEBUG 12226[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property productPrice
[2017-10-14 14:08:54,439] INFO 12226[main] - org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:532) - Binding entity from annotated class: com.softserveinc.edu.oms.domain.entities.Dimension
[2017-10-14 14:08:54,439]DEBUG 12226[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2017-10-14 14:08:54,439]DEBUG 12226[main] - org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1019) - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2017-10-14 14:08:54,439]DEBUG 12226[main] - org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name Dimension
[2017-10-14 14:08:54,440] INFO 12227[main] - org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:530) - Bind entity com.softserveinc.edu.oms.domain.entities.Dimension on table Dimensions
[2017-10-14 14:08:54,441]DEBUG 12228[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Dimensions), mappingColumn=ID, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:54,442]DEBUG 12229[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property id with lazy=false
[2017-10-14 14:08:54,442]DEBUG 12229[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for id
[2017-10-14 14:08:54,442]DEBUG 12229[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property id
[2017-10-14 14:08:54,442]DEBUG 12229[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Dimensions), mappingColumn=DimensionName, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:54,442]DEBUG 12229[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property dimensionName with lazy=false
[2017-10-14 14:08:54,442]DEBUG 12229[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for dimensionName
[2017-10-14 14:08:54,443]DEBUG 12230[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property dimensionName
[2017-10-14 14:08:54,443]DEBUG 12230[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Dimensions), mappingColumn=NumberOfProducts, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:54,443]DEBUG 12230[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property numberOfProduct with lazy=false
[2017-10-14 14:08:54,443]DEBUG 12230[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for numberOfProduct
[2017-10-14 14:08:54,443]DEBUG 12230[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property numberOfProduct
[2017-10-14 14:08:54,443] INFO 12230[main] - org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:532) - Binding entity from annotated class: com.softserveinc.edu.oms.domain.entities.OrderItem
[2017-10-14 14:08:54,444]DEBUG 12231[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2017-10-14 14:08:54,444]DEBUG 12231[main] - org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1019) - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2017-10-14 14:08:54,444]DEBUG 12231[main] - org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name OrderItem
[2017-10-14 14:08:54,444] INFO 12231[main] - org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:530) - Bind entity com.softserveinc.edu.oms.domain.entities.OrderItem on table OrderItems
[2017-10-14 14:08:54,445]DEBUG 12232[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderItems), mappingColumn=ID, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:54,445]DEBUG 12232[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property id with lazy=false
[2017-10-14 14:08:54,446]DEBUG 12233[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for id
[2017-10-14 14:08:54,446]DEBUG 12233[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property id
[2017-10-14 14:08:54,446]DEBUG 12233[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderItems), mappingColumn=Cost, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:54,446]DEBUG 12233[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property cost with lazy=false
[2017-10-14 14:08:54,446]DEBUG 12233[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for cost
[2017-10-14 14:08:54,446]DEBUG 12233[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property cost
[2017-10-14 14:08:54,447]DEBUG 12234[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3JoinColumn{logicalColumnName='DimensionRef', referencedColumn='', mappedBy=''}
[2017-10-14 14:08:54,447]DEBUG 12234[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderItems), mappingColumn=dimension, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:54,447]DEBUG 12234[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property dimension
[2017-10-14 14:08:54,447]DEBUG 12234[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderItems), mappingColumn=ItemPrice, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:54,447]DEBUG 12234[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property itemPrice with lazy=false
[2017-10-14 14:08:54,447]DEBUG 12234[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for itemPrice
[2017-10-14 14:08:54,448]DEBUG 12235[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property itemPrice
[2017-10-14 14:08:54,448]DEBUG 12235[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3JoinColumn{logicalColumnName='OrderRef', referencedColumn='', mappedBy=''}
[2017-10-14 14:08:54,448]DEBUG 12235[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderItems), mappingColumn=order, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:54,448]DEBUG 12235[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property order
[2017-10-14 14:08:54,448]DEBUG 12235[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3JoinColumn{logicalColumnName='ProductRef', referencedColumn='', mappedBy=''}
[2017-10-14 14:08:54,448]DEBUG 12235[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderItems), mappingColumn=product, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:54,449]DEBUG 12236[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property product
[2017-10-14 14:08:54,449]DEBUG 12236[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderItems), mappingColumn=Quantity, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:54,449]DEBUG 12236[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property quantity with lazy=false
[2017-10-14 14:08:54,449]DEBUG 12236[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for quantity
[2017-10-14 14:08:54,449]DEBUG 12236[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property quantity
[2017-10-14 14:08:54,449] INFO 12236[main] - org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:532) - Binding entity from annotated class: com.softserveinc.edu.oms.domain.entities.CreditCardType
[2017-10-14 14:08:54,450]DEBUG 12237[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2017-10-14 14:08:54,450]DEBUG 12237[main] - org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1019) - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2017-10-14 14:08:54,450]DEBUG 12237[main] - org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name CreditCardType
[2017-10-14 14:08:54,450] INFO 12237[main] - org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:530) - Bind entity com.softserveinc.edu.oms.domain.entities.CreditCardType on table CardType
[2017-10-14 14:08:54,451]DEBUG 12238[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CardType), mappingColumn=ID, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:54,452]DEBUG 12239[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property id with lazy=false
[2017-10-14 14:08:54,452]DEBUG 12239[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for id
[2017-10-14 14:08:54,452]DEBUG 12239[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property id
[2017-10-14 14:08:54,452]DEBUG 12239[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CardType), mappingColumn=CardType, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:54,452]DEBUG 12239[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property cardType with lazy=false
[2017-10-14 14:08:54,452]DEBUG 12239[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for cardType
[2017-10-14 14:08:54,453]DEBUG 12240[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property cardType
[2017-10-14 14:08:54,453]DEBUG 12240[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CardType), mappingColumn=CardNumber, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:54,453]DEBUG 12240[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property creditCardNumber with lazy=false
[2017-10-14 14:08:54,453]DEBUG 12240[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for creditCardNumber
[2017-10-14 14:08:54,453]DEBUG 12240[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property creditCardNumber
[2017-10-14 14:08:54,453]DEBUG 12240[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CardType), mappingColumn=CardCvv2, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:54,454]DEBUG 12241[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property cvv2 with lazy=false
[2017-10-14 14:08:54,454]DEBUG 12241[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for cvv2
[2017-10-14 14:08:54,454]DEBUG 12241[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property cvv2
[2017-10-14 14:08:54,454]DEBUG 12241[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CardType), mappingColumn=Expiration_Date, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:54,454]DEBUG 12241[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property expDate with lazy=false
[2017-10-14 14:08:54,454]DEBUG 12241[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for expDate
[2017-10-14 14:08:54,455]DEBUG 12242[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property expDate
[2017-10-14 14:08:54,455]DEBUG 12242[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CardType), mappingColumn=IssueDate, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:54,455]DEBUG 12242[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property issueDate with lazy=false
[2017-10-14 14:08:54,455]DEBUG 12242[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for issueDate
[2017-10-14 14:08:54,455]DEBUG 12242[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property issueDate
[2017-10-14 14:08:54,455]DEBUG 12242[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CardType), mappingColumn=IssueNumber, insertable=true, updatable=true, unique=false}
[2017-10-14 14:08:54,455]DEBUG 12242[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property issueNumber with lazy=false
[2017-10-14 14:08:54,456]DEBUG 12243[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for issueNumber
[2017-10-14 14:08:54,456]DEBUG 12243[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property issueNumber
[2017-10-14 14:08:54,456]DEBUG 12243[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for id
[2017-10-14 14:08:54,456]DEBUG 12243[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for roleName
[2017-10-14 14:08:54,456]DEBUG 12243[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for id
[2017-10-14 14:08:54,456]DEBUG 12243[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for regionName
[2017-10-14 14:08:54,457]DEBUG 12244[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for id
[2017-10-14 14:08:54,457]DEBUG 12244[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for discount
[2017-10-14 14:08:54,457]DEBUG 12244[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for maxRange
[2017-10-14 14:08:54,457]DEBUG 12244[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for minRange
[2017-10-14 14:08:54,457]DEBUG 12244[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for typeName
[2017-10-14 14:08:54,457]DEBUG 12244[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for id
[2017-10-14 14:08:54,457]DEBUG 12244[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for active
[2017-10-14 14:08:54,457]DEBUG 12244[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for balance
[2017-10-14 14:08:54,458]DEBUG 12245[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for email
[2017-10-14 14:08:54,458]DEBUG 12245[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for firstName
[2017-10-14 14:08:54,458]DEBUG 12245[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for lastName
[2017-10-14 14:08:54,458]DEBUG 12245[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for login
[2017-10-14 14:08:54,458]DEBUG 12245[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for password
[2017-10-14 14:08:54,458]DEBUG 12245[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for id
[2017-10-14 14:08:54,458]DEBUG 12245[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for orderStatusName
[2017-10-14 14:08:54,458]DEBUG 12245[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for id
[2017-10-14 14:08:54,459]DEBUG 12246[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for deliveryDate
[2017-10-14 14:08:54,459]DEBUG 12246[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for isGift
[2017-10-14 14:08:54,459]DEBUG 12246[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for maxDiscount
[2017-10-14 14:08:54,459]DEBUG 12246[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for orderDate
[2017-10-14 14:08:54,459]DEBUG 12246[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for orderName
[2017-10-14 14:08:54,459]DEBUG 12246[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for orderNumber
[2017-10-14 14:08:54,459]DEBUG 12246[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for preferableDeliveryDate
[2017-10-14 14:08:54,459]DEBUG 12246[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for totalPrice
[2017-10-14 14:08:54,459]DEBUG 12246[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for id
[2017-10-14 14:08:54,462]DEBUG 12249[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for active
[2017-10-14 14:08:54,462]DEBUG 12249[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for productDescription
[2017-10-14 14:08:54,463]DEBUG 12250[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for productName
[2017-10-14 14:08:54,463]DEBUG 12250[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for productPrice
[2017-10-14 14:08:54,463]DEBUG 12250[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for id
[2017-10-14 14:08:54,463]DEBUG 12250[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for dimensionName
[2017-10-14 14:08:54,463]DEBUG 12250[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for numberOfProduct
[2017-10-14 14:08:54,464]DEBUG 12251[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for id
[2017-10-14 14:08:54,464]DEBUG 12251[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for cost
[2017-10-14 14:08:54,464]DEBUG 12251[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for itemPrice
[2017-10-14 14:08:54,465]DEBUG 12252[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for quantity
[2017-10-14 14:08:54,465]DEBUG 12252[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for id
[2017-10-14 14:08:54,465]DEBUG 12252[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for cardType
[2017-10-14 14:08:54,465]DEBUG 12252[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for creditCardNumber
[2017-10-14 14:08:54,465]DEBUG 12252[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for cvv2
[2017-10-14 14:08:54,465]DEBUG 12252[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for expDate
[2017-10-14 14:08:54,465]DEBUG 12252[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for issueDate
[2017-10-14 14:08:54,465]DEBUG 12252[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for issueNumber
[2017-10-14 14:08:54,466]DEBUG 12253[main] - org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) - processing fk mappings (*ToOne and JoinedSubclass)
[2017-10-14 14:08:54,466]DEBUG 12253[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) - processing extends queue
[2017-10-14 14:08:54,466]DEBUG 12253[main] - org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) - processing extends queue
[2017-10-14 14:08:54,466]DEBUG 12253[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) - processing collection mappings
[2017-10-14 14:08:54,466]DEBUG 12253[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) - processing native query and ResultSetMapping mappings
[2017-10-14 14:08:54,467]DEBUG 12254[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) - processing association property references
[2017-10-14 14:08:54,467]DEBUG 12254[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) - processing foreign key constraints
[2017-10-14 14:08:54,467]DEBUG 12254[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Product
[2017-10-14 14:08:54,467]DEBUG 12254[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Dimension
[2017-10-14 14:08:54,467]DEBUG 12254[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Order
[2017-10-14 14:08:54,467]DEBUG 12254[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.OrderStatus
[2017-10-14 14:08:54,467]DEBUG 12254[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.User
[2017-10-14 14:08:54,467]DEBUG 12254[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.User
[2017-10-14 14:08:54,468]DEBUG 12255[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Role
[2017-10-14 14:08:54,468]DEBUG 12255[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.CustomerType
[2017-10-14 14:08:54,468]DEBUG 12255[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Region
[2017-10-14 14:08:54,468] INFO 12255[main] - org.hibernate.cfg.Configuration.applyHibernateValidatorLegacyConstraintsOnDDL(Configuration.java:1676) - Hibernate Validator not found: ignoring
[2017-10-14 14:08:54,468]DEBUG 12255[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:107) - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2017-10-14 14:08:54,469]DEBUG 12256[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:118) - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.engine.resolver.JPATraversableResolver.
[2017-10-14 14:08:54,469]DEBUG 12256[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:203) - Trying to load META-INF/validation.xml for XML based Validator configuration.
[2017-10-14 14:08:54,469]DEBUG 12256[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:206) - No META-INF/validation.xml found. Using annotation based configuration only
[2017-10-14 14:08:54,479] INFO 12266[main] - org.springframework.orm.hibernate3.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:777) - Building new Hibernate SessionFactory
[2017-10-14 14:08:54,479]DEBUG 12266[main] - org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1854) - Preparing to build session factory with filters : {}
[2017-10-14 14:08:54,479]DEBUG 12266[main] - org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) - Processing hbm.xml files
[2017-10-14 14:08:54,479]DEBUG 12266[main] - org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) - Process annotated classes
[2017-10-14 14:08:54,479]DEBUG 12266[main] - org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) - processing fk mappings (*ToOne and JoinedSubclass)
[2017-10-14 14:08:54,479]DEBUG 12266[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) - processing extends queue
[2017-10-14 14:08:54,479]DEBUG 12266[main] - org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) - processing extends queue
[2017-10-14 14:08:54,479]DEBUG 12266[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) - processing collection mappings
[2017-10-14 14:08:54,480]DEBUG 12267[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) - processing native query and ResultSetMapping mappings
[2017-10-14 14:08:54,480]DEBUG 12267[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) - processing association property references
[2017-10-14 14:08:54,480]DEBUG 12267[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) - processing foreign key constraints
[2017-10-14 14:08:54,480]DEBUG 12267[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Product
[2017-10-14 14:08:54,480]DEBUG 12267[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Dimension
[2017-10-14 14:08:54,480]DEBUG 12267[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Order
[2017-10-14 14:08:54,480]DEBUG 12267[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.OrderStatus
[2017-10-14 14:08:54,480]DEBUG 12267[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.User
[2017-10-14 14:08:54,480]DEBUG 12267[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.User
[2017-10-14 14:08:54,481]DEBUG 12268[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Role
[2017-10-14 14:08:54,481]DEBUG 12268[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.CustomerType
[2017-10-14 14:08:54,481]DEBUG 12268[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Region
[2017-10-14 14:08:54,481]DEBUG 12268[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:107) - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2017-10-14 14:08:54,481]DEBUG 12268[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:118) - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.engine.resolver.JPATraversableResolver.
[2017-10-14 14:08:54,482]DEBUG 12269[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:203) - Trying to load META-INF/validation.xml for XML based Validator configuration.
[2017-10-14 14:08:54,482]DEBUG 12269[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:206) - No META-INF/validation.xml found. Using annotation based configuration only
[2017-10-14 14:08:54,491]DEBUG 12278[main] - org.hibernate.cfg.Configuration.enableLegacyHibernateValidator(Configuration.java:1896) - Legacy Validator not present in classpath, ignoring event listener registration
[2017-10-14 14:08:54,492]DEBUG 12279[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:107) - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2017-10-14 14:08:54,492]DEBUG 12279[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:118) - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.engine.resolver.JPATraversableResolver.
[2017-10-14 14:08:54,492]DEBUG 12279[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:203) - Trying to load META-INF/validation.xml for XML based Validator configuration.
[2017-10-14 14:08:54,492]DEBUG 12279[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:206) - No META-INF/validation.xml found. Using annotation based configuration only
[2017-10-14 14:08:54,494]DEBUG 12281[main] - org.hibernate.cfg.search.HibernateSearchEventListenerRegister.attemptToLoadSearchEventListener(HibernateSearchEventListenerRegister.java:231) - Search not present in classpath, ignoring event listener registration.
[2017-10-14 14:08:54,494] INFO 12281[main] - org.hibernate.cfg.search.HibernateSearchEventListenerRegister.enableHibernateSearch(HibernateSearchEventListenerRegister.java:75) - Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled.
[2017-10-14 14:08:54,494] INFO 12281[main] - org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:64) - Using Hibernate built-in connection pool (not for production use!)
[2017-10-14 14:08:54,494] INFO 12281[main] - org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:65) - Hibernate connection pool size: 20
[2017-10-14 14:08:54,495] INFO 12282[main] - org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:68) - autocommit mode: false
[2017-10-14 14:08:54,495] INFO 12282[main] - org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:103) - using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost:3306/test1
[2017-10-14 14:08:54,495] INFO 12282[main] - org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:106) - connection properties: {user=maria, password=333qwerb}
[2017-10-14 14:08:54,495]DEBUG 12282[main] - org.hibernate.connection.DriverManagerConnectionProvider.getConnection(DriverManagerConnectionProvider.java:132) - opening new JDBC connection
[2017-10-14 14:08:54,503]DEBUG 12290[main] - org.hibernate.connection.DriverManagerConnectionProvider.getConnection(DriverManagerConnectionProvider.java:138) - created connection to: jdbc:mysql://localhost:3306/test1, Isolation Level: 4
[2017-10-14 14:08:54,503] INFO 12290[main] - org.hibernate.dialect.Dialect.<init>(Dialect.java:135) - Using dialect: org.hibernate.dialect.MySQL5Dialect
[2017-10-14 14:08:54,504] INFO 12291[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:126) - Database ->
       name : MySQL
    version : 5.5.56-MariaDB
      major : 5
      minor : 5
[2017-10-14 14:08:54,504] INFO 12291[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:132) - Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.17 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1
[2017-10-14 14:08:54,504] INFO 12291[main] - org.hibernate.transaction.TransactionFactoryFactory.buildTransactionFactory(TransactionFactoryFactory.java:65) - Transaction strategy: org.springframework.orm.hibernate3.SpringTransactionFactory
[2017-10-14 14:08:54,504] INFO 12291[main] - org.hibernate.transaction.TransactionManagerLookupFactory.getTransactionManagerLookup(TransactionManagerLookupFactory.java:83) - No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)
[2017-10-14 14:08:54,504] INFO 12291[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:179) - Automatic flush during beforeCompletion(): disabled
[2017-10-14 14:08:54,504] INFO 12291[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:183) - Automatic session close at end of transaction: disabled
[2017-10-14 14:08:54,505] INFO 12292[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:190) - JDBC batch size: 15
[2017-10-14 14:08:54,505] INFO 12292[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:193) - JDBC batch updates for versioned data: disabled
[2017-10-14 14:08:54,505] INFO 12292[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:198) - Scrollable result sets: enabled
[2017-10-14 14:08:54,505]DEBUG 12292[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:202) - Wrap result sets: disabled
[2017-10-14 14:08:54,505] INFO 12292[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:206) - JDBC3 getGeneratedKeys(): enabled
[2017-10-14 14:08:54,505] INFO 12292[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:214) - Connection release mode: auto
[2017-10-14 14:08:54,505] INFO 12292[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:238) - Maximum outer join fetch depth: 2
[2017-10-14 14:08:54,505] INFO 12292[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:241) - Default batch fetch size: 1
[2017-10-14 14:08:54,505] INFO 12292[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:245) - Generate SQL with comments: disabled
[2017-10-14 14:08:54,506] INFO 12293[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:249) - Order SQL updates by primary key: disabled
[2017-10-14 14:08:54,506] INFO 12293[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:253) - Order SQL inserts for batching: disabled
[2017-10-14 14:08:54,506] INFO 12293[main] - org.hibernate.cfg.SettingsFactory.createQueryTranslatorFactory(SettingsFactory.java:431) - Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory
[2017-10-14 14:08:54,506] INFO 12293[main] - org.hibernate.hql.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:47) - Using ASTQueryTranslatorFactory
[2017-10-14 14:08:54,506] INFO 12293[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:261) - Query language substitutions: {}
[2017-10-14 14:08:54,506] INFO 12293[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:266) - JPA-QL strict compliance: disabled
[2017-10-14 14:08:54,506] INFO 12293[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:271) - Second-level cache: enabled
[2017-10-14 14:08:54,506] INFO 12293[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:275) - Query cache: disabled
[2017-10-14 14:08:54,506] INFO 12293[main] - org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:406) - Cache region factory : org.hibernate.cache.impl.NoCachingRegionFactory
[2017-10-14 14:08:54,507] INFO 12294[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:285) - Optimize cache for minimal puts: disabled
[2017-10-14 14:08:54,507] INFO 12294[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:294) - Structured second-level cache entries: disabled
[2017-10-14 14:08:54,507] INFO 12294[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:323) - Statistics: disabled
[2017-10-14 14:08:54,507] INFO 12294[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:327) - Deleted entity synthetic identifier rollback: disabled
[2017-10-14 14:08:54,507] INFO 12294[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:343) - Default entity-mode: pojo
[2017-10-14 14:08:54,507] INFO 12294[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:347) - Named query checking : enabled
[2017-10-14 14:08:54,507] INFO 12294[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:351) - Check Nullability in Core (should be disabled when Bean Validation is on): disabled
[2017-10-14 14:08:54,512] INFO 12299[main] - org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:202) - building session factory
[2017-10-14 14:08:54,512]DEBUG 12299[main] - org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:206) - Statistics initialized [enabled=false]}
[2017-10-14 14:08:54,512]DEBUG 12299[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration boolean -> org.hibernate.type.BooleanType@6e6c50aa
[2017-10-14 14:08:54,512]DEBUG 12299[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration boolean -> org.hibernate.type.BooleanType@6e6c50aa
[2017-10-14 14:08:54,513]DEBUG 12300[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6e6c50aa
[2017-10-14 14:08:54,513]DEBUG 12300[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@35fea088
[2017-10-14 14:08:54,513]DEBUG 12300[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@a42b882
[2017-10-14 14:08:54,513]DEBUG 12300[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration yes_no -> org.hibernate.type.YesNoType@51a95c64
[2017-10-14 14:08:54,513]DEBUG 12300[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration byte -> org.hibernate.type.ByteType@2e802eff
[2017-10-14 14:08:54,513]DEBUG 12300[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration byte -> org.hibernate.type.ByteType@2e802eff
[2017-10-14 14:08:54,513]DEBUG 12300[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2e802eff
[2017-10-14 14:08:54,513]DEBUG 12300[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration character -> org.hibernate.type.CharacterType@4511f60f
[2017-10-14 14:08:54,514]DEBUG 12301[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration char -> org.hibernate.type.CharacterType@4511f60f
[2017-10-14 14:08:54,514]DEBUG 12301[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4511f60f
[2017-10-14 14:08:54,514]DEBUG 12301[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration short -> org.hibernate.type.ShortType@2c852ce7
[2017-10-14 14:08:54,514]DEBUG 12301[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration short -> org.hibernate.type.ShortType@2c852ce7
[2017-10-14 14:08:54,514]DEBUG 12301[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2c852ce7
[2017-10-14 14:08:54,514]DEBUG 12301[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration integer -> org.hibernate.type.IntegerType@244e0d38
[2017-10-14 14:08:54,514]DEBUG 12301[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration int -> org.hibernate.type.IntegerType@244e0d38
[2017-10-14 14:08:54,514]DEBUG 12301[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@244e0d38
[2017-10-14 14:08:54,514]DEBUG 12301[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration long -> org.hibernate.type.LongType@ef45815
[2017-10-14 14:08:54,515]DEBUG 12302[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration long -> org.hibernate.type.LongType@ef45815
[2017-10-14 14:08:54,515]DEBUG 12302[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@ef45815
[2017-10-14 14:08:54,515]DEBUG 12302[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration float -> org.hibernate.type.FloatType@969f4cd
[2017-10-14 14:08:54,515]DEBUG 12302[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration float -> org.hibernate.type.FloatType@969f4cd
[2017-10-14 14:08:54,515]DEBUG 12302[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@969f4cd
[2017-10-14 14:08:54,515]DEBUG 12302[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration double -> org.hibernate.type.DoubleType@5434050
[2017-10-14 14:08:54,515]DEBUG 12302[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration double -> org.hibernate.type.DoubleType@5434050
[2017-10-14 14:08:54,515]DEBUG 12302[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5434050
[2017-10-14 14:08:54,516]DEBUG 12303[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@79ef1245
[2017-10-14 14:08:54,516]DEBUG 12303[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@79ef1245
[2017-10-14 14:08:54,516]DEBUG 12303[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@11427db
[2017-10-14 14:08:54,516]DEBUG 12303[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@11427db
[2017-10-14 14:08:54,516]DEBUG 12303[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration string -> org.hibernate.type.StringType@3525c6
[2017-10-14 14:08:54,516]DEBUG 12303[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.String -> org.hibernate.type.StringType@3525c6
[2017-10-14 14:08:54,516]DEBUG 12303[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration url -> org.hibernate.type.UrlType@5d0d6868
[2017-10-14 14:08:54,516]DEBUG 12303[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5d0d6868
[2017-10-14 14:08:54,517]DEBUG 12304[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration date -> org.hibernate.type.DateType@6404aca7
[2017-10-14 14:08:54,517]DEBUG 12304[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6404aca7
[2017-10-14 14:08:54,517]DEBUG 12304[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration time -> org.hibernate.type.TimeType@3baa0bf5
[2017-10-14 14:08:54,517]DEBUG 12304[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3baa0bf5
[2017-10-14 14:08:54,517]DEBUG 12304[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration timestamp -> org.hibernate.type.TimestampType@784b7c29
[2017-10-14 14:08:54,517]DEBUG 12304[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@784b7c29
[2017-10-14 14:08:54,517]DEBUG 12304[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@784b7c29
[2017-10-14 14:08:54,517]DEBUG 12304[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@28b6f947
[2017-10-14 14:08:54,518]DEBUG 12305[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration calendar -> org.hibernate.type.CalendarType@3ef221ad
[2017-10-14 14:08:54,518]DEBUG 12305[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3ef221ad
[2017-10-14 14:08:54,518]DEBUG 12305[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3ef221ad
[2017-10-14 14:08:54,518]DEBUG 12305[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@24517540
[2017-10-14 14:08:54,518]DEBUG 12305[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration locale -> org.hibernate.type.LocaleType@692f95ad
[2017-10-14 14:08:54,518]DEBUG 12305[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@692f95ad
[2017-10-14 14:08:54,518]DEBUG 12305[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration currency -> org.hibernate.type.CurrencyType@146f1ad0
[2017-10-14 14:08:54,518]DEBUG 12305[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@146f1ad0
[2017-10-14 14:08:54,519]DEBUG 12306[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@bb6962e
[2017-10-14 14:08:54,519]DEBUG 12306[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@bb6962e
[2017-10-14 14:08:54,519]DEBUG 12306[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration class -> org.hibernate.type.ClassType@78a0bc79
[2017-10-14 14:08:54,519]DEBUG 12306[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@78a0bc79
[2017-10-14 14:08:54,519]DEBUG 12306[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@16de9eea
[2017-10-14 14:08:54,519]DEBUG 12306[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@16de9eea
[2017-10-14 14:08:54,519]DEBUG 12306[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5f179316
[2017-10-14 14:08:54,519]DEBUG 12306[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@6354743
[2017-10-14 14:08:54,519]DEBUG 12306[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration binary -> org.hibernate.type.BinaryType@737d54dd
[2017-10-14 14:08:54,520]DEBUG 12307[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration byte[] -> org.hibernate.type.BinaryType@737d54dd
[2017-10-14 14:08:54,520]DEBUG 12307[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration [B -> org.hibernate.type.BinaryType@737d54dd
[2017-10-14 14:08:54,520]DEBUG 12307[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@55071871
[2017-10-14 14:08:54,520]DEBUG 12307[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@55071871
[2017-10-14 14:08:54,520]DEBUG 12307[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@55071871
[2017-10-14 14:08:54,520]DEBUG 12307[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration image -> org.hibernate.type.ImageType@38c8c792
[2017-10-14 14:08:54,520]DEBUG 12307[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration characters -> org.hibernate.type.CharArrayType@4ae5c9e2
[2017-10-14 14:08:54,520]DEBUG 12307[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration char[] -> org.hibernate.type.CharArrayType@4ae5c9e2
[2017-10-14 14:08:54,521]DEBUG 12308[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration [C -> org.hibernate.type.CharArrayType@4ae5c9e2
[2017-10-14 14:08:54,521]DEBUG 12308[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@28e67788
[2017-10-14 14:08:54,521]DEBUG 12308[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@28e67788
[2017-10-14 14:08:54,521]DEBUG 12308[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@28e67788
[2017-10-14 14:08:54,521]DEBUG 12308[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration text -> org.hibernate.type.TextType@70d586bc
[2017-10-14 14:08:54,521]DEBUG 12308[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration blob -> org.hibernate.type.BlobType@7520d2a
[2017-10-14 14:08:54,521]DEBUG 12308[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7520d2a
[2017-10-14 14:08:54,521]DEBUG 12308[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@77a2473e
[2017-10-14 14:08:54,522]DEBUG 12309[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@6a768fd2
[2017-10-14 14:08:54,522]DEBUG 12309[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration clob -> org.hibernate.type.ClobType@42593848
[2017-10-14 14:08:54,522]DEBUG 12309[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@42593848
[2017-10-14 14:08:54,522]DEBUG 12309[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1ddb0486
[2017-10-14 14:08:54,522]DEBUG 12309[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@69a0a8ec
[2017-10-14 14:08:54,522]DEBUG 12309[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@bd42944
[2017-10-14 14:08:54,522]DEBUG 12309[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration serializable -> org.hibernate.type.SerializableType@3d03d2c8
[2017-10-14 14:08:54,522]DEBUG 12309[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration object -> org.hibernate.type.ObjectType@7a8fc519
[2017-10-14 14:08:54,522]DEBUG 12309[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7a8fc519
[2017-10-14 14:08:54,523]DEBUG 12310[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7fad751e
[2017-10-14 14:08:54,523]DEBUG 12310[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@56b36cac
[2017-10-14 14:08:54,523]DEBUG 12310[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@68b7cf67
[2017-10-14 14:08:54,523]DEBUG 12310[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@17e7d36b
[2017-10-14 14:08:54,523]DEBUG 12310[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@75bb42bf
[2017-10-14 14:08:54,523]DEBUG 12310[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@d8f8f71
[2017-10-14 14:08:54,523]DEBUG 12310[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@44e44791
[2017-10-14 14:08:54,523]DEBUG 12310[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7f640fd3
[2017-10-14 14:08:54,524]DEBUG 12311[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration clob -> org.hibernate.type.ClobType@1a9c7dfe
[2017-10-14 14:08:54,524] INFO 12311[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) - Type registration [clob] overrides previous : org.hibernate.type.ClobType@42593848
[2017-10-14 14:08:54,524]DEBUG 12311[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1a9c7dfe
[2017-10-14 14:08:54,524] INFO 12311[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) - Type registration [java.sql.Clob] overrides previous : org.hibernate.type.ClobType@42593848
[2017-10-14 14:08:54,524]DEBUG 12311[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@37b241c1
[2017-10-14 14:08:54,524] INFO 12311[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) - Type registration [wrapper_characters_clob] overrides previous : org.hibernate.type.CharacterArrayClobType@69a0a8ec
[2017-10-14 14:08:54,524]DEBUG 12311[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@17fb0278
[2017-10-14 14:08:54,524] INFO 12311[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) - Type registration [characters_clob] overrides previous : org.hibernate.type.PrimitiveCharacterArrayClobType@bd42944
[2017-10-14 14:08:54,525]DEBUG 12312[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1813bc58
[2017-10-14 14:08:54,525] INFO 12312[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) - Type registration [materialized_clob] overrides previous : org.hibernate.type.MaterializedClobType@1ddb0486
[2017-10-14 14:08:54,525]DEBUG 12312[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1e8d31d3
[2017-10-14 14:08:54,525] INFO 12312[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) - Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@77a2473e
[2017-10-14 14:08:54,525]DEBUG 12312[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@47c22350
[2017-10-14 14:08:54,525] INFO 12312[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) - Type registration [wrapper_materialized_blob] overrides previous : org.hibernate.type.WrappedMaterializedBlobType@6a768fd2
[2017-10-14 14:08:54,525]DEBUG 12312[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration blob -> org.hibernate.type.BlobType@6a51c5bd
[2017-10-14 14:08:54,525] INFO 12312[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) - Type registration [blob] overrides previous : org.hibernate.type.BlobType@7520d2a
[2017-10-14 14:08:54,525]DEBUG 12312[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6a51c5bd
[2017-10-14 14:08:54,526] INFO 12313[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) - Type registration [java.sql.Blob] overrides previous : org.hibernate.type.BlobType@7520d2a
[2017-10-14 14:08:54,526]DEBUG 12313[main] - org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:228) - Session factory constructed with filter configurations : {}
[2017-10-14 14:08:54,526]DEBUG 12313[main] - org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:232) - instantiating session factory with properties: {java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.password=333qwerb, sun.boot.library.path=/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre/lib/amd64, java.vm.version=24.151-b00, hibernate.connection.username=maria, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=OpenJDK 64-Bit Server VM, file.encoding.pkg=sun.io, user.country=US, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=unknown, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/tomcat/Documents/backup/OMS.Release, java.runtime.version=1.7.0_151-mockbuild_2017_08_23_16_26-b00, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, basedir=/home/tomcat/Documents/backup/OMS.Release, hibernate.current_session_context_class=org.springframework.orm.hibernate3.SpringSessionContext, java.endorsed.dirs=/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre/lib/endorsed, os.arch=amd64, surefire.real.class.path=/home/tomcat/Documents/backup/OMS.Release/target/surefire/surefirebooter1350476830626056606.jar, hibernate.check_nullability=false, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, surefire.test.class.path=/home/tomcat/Documents/backup/OMS.Release/target/test-classes:/home/tomcat/Documents/backup/OMS.Release/target/classes:/home/tomcat/.m2/repository/org/springframework/spring-context/3.0.5.RELEASE/spring-context-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-aop/3.0.5.RELEASE/spring-aop-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/home/tomcat/.m2/repository/org/springframework/spring-beans/3.0.5.RELEASE/spring-beans-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-core/3.0.5.RELEASE/spring-core-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-expression/3.0.5.RELEASE/spring-expression-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-asm/3.0.5.RELEASE/spring-asm-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-webmvc/3.0.5.RELEASE/spring-webmvc-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-context-support/3.0.5.RELEASE/spring-context-support-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-web/3.0.5.RELEASE/spring-web-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/roo/org.springframework.roo.annotations/1.0.2.RELEASE/org.springframework.roo.annotations-1.0.2.RELEASE.jar:/home/tomcat/.m2/repository/org/aspectj/aspectjrt/1.6.9/aspectjrt-1.6.9.jar:/home/tomcat/.m2/repository/org/slf4j/slf4j-api/1.5.10/slf4j-api-1.5.10.jar:/home/tomcat/.m2/repository/org/slf4j/jcl-over-slf4j/1.5.10/jcl-over-slf4j-1.5.10.jar:/home/tomcat/.m2/repository/org/slf4j/slf4j-log4j12/1.5.10/slf4j-log4j12-1.5.10.jar:/home/tomcat/.m2/repository/log4j/log4j/1.2.15/log4j-1.2.15.jar:/home/tomcat/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar:/home/tomcat/.m2/repository/javax/servlet/jstl/1.2/jstl-1.2.jar:/home/tomcat/.m2/repository/junit/junit/4.7/junit-4.7.jar:/home/tomcat/.m2/repository/org/hibernate/hibernate-core/3.6.5.Final/hibernate-core-3.6.5.Final.jar:/home/tomcat/.m2/repository/antlr/antlr/2.7.6/antlr-2.7.6.jar:/home/tomcat/.m2/repository/commons-collections/commons-collections/3.1/commons-collections-3.1.jar:/home/tomcat/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/home/tomcat/.m2/repository/org/hibernate/hibernate-commons-annotations/3.2.0.Final/hibernate-commons-annotations-3.2.0.Final.jar:/home/tomcat/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.0-api/1.0.0.Final/hibernate-jpa-2.0-api-1.0.0.Final.jar:/home/tomcat/.m2/repository/javax/transaction/jta/1.1/jta-1.1.jar:/home/tomcat/.m2/repository/net/sourceforge/jtds/jtds/1.2.4/jtds-1.2.4.jar:/home/tomcat/.m2/repository/javassist/javassist/3.12.1.GA/javassist-3.12.1.GA.jar:/home/tomcat/.m2/repository/org/springframework/spring-orm/3.0.5.RELEASE/spring-orm-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-jdbc/3.0.5.RELEASE/spring-jdbc-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-tx/3.0.5.RELEASE/spring-tx-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar:/home/tomcat/.m2/repository/org/springframework/spring-test/3.0.5.RELEASE/spring-test-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/security/spring-security-core/3.0.5.RELEASE/spring-security-core-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/aspectj/aspectjweaver/1.6.8/aspectjweaver-1.6.8.jar:/home/tomcat/.m2/repository/org/springframework/security/spring-security-config/3.0.5.RELEASE/spring-security-config-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/security/spring-security-web/3.0.5.RELEASE/spring-security-web-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/cglib/cglib/2.2.2/cglib-2.2.2.jar:/home/tomcat/.m2/repository/asm/asm/3.3.1/asm-3.3.1.jar:/home/tomcat/.m2/repository/mysql/mysql-connector-java/5.1.17/mysql-connector-java-5.1.17.jar:/home/tomcat/.m2/repository/org/hibernate/hibernate-validator/4.2.0.Final/hibernate-validator-4.2.0.Final.jar:/home/tomcat/.m2/repository/javax/validation/validation-api/1.0.0.GA/validation-api-1.0.0.GA.jar:/home/tomcat/.m2/repository/org/apache/tiles/tiles-jsp/2.2.2/tiles-jsp-2.2.2.jar:/home/tomcat/.m2/repository/org/apache/tiles/tiles-servlet/2.2.2/tiles-servlet-2.2.2.jar:/home/tomcat/.m2/repository/org/apache/tiles/tiles-core/2.2.2/tiles-core-2.2.2.jar:/home/tomcat/.m2/repository/org/apache/tiles/tiles-template/2.2.2/tiles-template-2.2.2.jar:/home/tomcat/.m2/repository/org/apache/tiles/tiles-api/2.2.2/tiles-api-2.2.2.jar:/home/tomcat/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.8.3/jackson-mapper-asl-1.8.3.jar:/home/tomcat/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.8.3/jackson-core-asl-1.8.3.jar:/home/tomcat/.m2/repository/net/sf/jasperreports/jasperreports/4.0.1/jasperreports-4.0.1.jar:/home/tomcat/.m2/repository/commons-beanutils/commons-beanutils/1.8.0/commons-beanutils-1.8.0.jar:/home/tomcat/.m2/repository/commons-digester/commons-digester/1.7/commons-digester-1.7.jar:/home/tomcat/.m2/repository/commons-logging/commons-logging/1.0.2/commons-logging-1.0.2.jar:/home/tomcat/.m2/repository/com/lowagie/itext/2.1.7/itext-2.1.7.jar:/home/tomcat/.m2/repository/bouncycastle/bcmail-jdk14/138/bcmail-jdk14-138.jar:/home/tomcat/.m2/repository/bouncycastle/bcprov-jdk14/138/bcprov-jdk14-138.jar:/home/tomcat/.m2/repository/org/bouncycastle/bctsp-jdk14/1.38/bctsp-jdk14-1.38.jar:/home/tomcat/.m2/repository/org/bouncycastle/bcprov-jdk14/1.38/bcprov-jdk14-1.38.jar:/home/tomcat/.m2/repository/org/bouncycastle/bcmail-jdk14/1.38/bcmail-jdk14-1.38.jar:/home/tomcat/.m2/repository/jfree/jcommon/1.0.15/jcommon-1.0.15.jar:/home/tomcat/.m2/repository/jfree/jfreechart/1.0.12/jfreechart-1.0.12.jar:/home/tomcat/.m2/repository/xml-apis/xml-apis/1.3.02/xml-apis-1.3.02.jar:/home/tomcat/.m2/repository/eclipse/jdtcore/3.1.0/jdtcore-3.1.0.jar:/home/tomcat/.m2/repository/org/springframework/security/spring-security-taglibs/3.0.5.RELEASE/spring-security-taglibs-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/security/spring-security-acl/3.0.5.RELEASE/spring-security-acl-3.0.5.RELEASE.jar:, java.specification.name=Java Platform API Specification, java.class.version=51.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.transaction.factory_class=org.springframework.orm.hibernate3.SpringTransactionFactory, os.version=3.10.0-693.el7.x86_64, user.home=/home/tomcat, user.timezone=Europe/Kiev, java.awt.printerjob=sun.print.PSPrinterJob, java.specification.version=1.7, file.encoding=UTF-8, hibernate.connection.driver_class=com.mysql.jdbc.Driver, user.name=tomcat, java.class.path=/home/tomcat/Documents/backup/OMS.Release/target/test-classes:/home/tomcat/Documents/backup/OMS.Release/target/classes:/home/tomcat/.m2/repository/org/springframework/spring-context/3.0.5.RELEASE/spring-context-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-aop/3.0.5.RELEASE/spring-aop-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/home/tomcat/.m2/repository/org/springframework/spring-beans/3.0.5.RELEASE/spring-beans-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-core/3.0.5.RELEASE/spring-core-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-expression/3.0.5.RELEASE/spring-expression-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-asm/3.0.5.RELEASE/spring-asm-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-webmvc/3.0.5.RELEASE/spring-webmvc-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-context-support/3.0.5.RELEASE/spring-context-support-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-web/3.0.5.RELEASE/spring-web-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/roo/org.springframework.roo.annotations/1.0.2.RELEASE/org.springframework.roo.annotations-1.0.2.RELEASE.jar:/home/tomcat/.m2/repository/org/aspectj/aspectjrt/1.6.9/aspectjrt-1.6.9.jar:/home/tomcat/.m2/repository/org/slf4j/slf4j-api/1.5.10/slf4j-api-1.5.10.jar:/home/tomcat/.m2/repository/org/slf4j/jcl-over-slf4j/1.5.10/jcl-over-slf4j-1.5.10.jar:/home/tomcat/.m2/repository/org/slf4j/slf4j-log4j12/1.5.10/slf4j-log4j12-1.5.10.jar:/home/tomcat/.m2/repository/log4j/log4j/1.2.15/log4j-1.2.15.jar:/home/tomcat/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar:/home/tomcat/.m2/repository/javax/servlet/jstl/1.2/jstl-1.2.jar:/home/tomcat/.m2/repository/junit/junit/4.7/junit-4.7.jar:/home/tomcat/.m2/repository/org/hibernate/hibernate-core/3.6.5.Final/hibernate-core-3.6.5.Final.jar:/home/tomcat/.m2/repository/antlr/antlr/2.7.6/antlr-2.7.6.jar:/home/tomcat/.m2/repository/commons-collections/commons-collections/3.1/commons-collections-3.1.jar:/home/tomcat/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/home/tomcat/.m2/repository/org/hibernate/hibernate-commons-annotations/3.2.0.Final/hibernate-commons-annotations-3.2.0.Final.jar:/home/tomcat/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.0-api/1.0.0.Final/hibernate-jpa-2.0-api-1.0.0.Final.jar:/home/tomcat/.m2/repository/javax/transaction/jta/1.1/jta-1.1.jar:/home/tomcat/.m2/repository/net/sourceforge/jtds/jtds/1.2.4/jtds-1.2.4.jar:/home/tomcat/.m2/repository/javassist/javassist/3.12.1.GA/javassist-3.12.1.GA.jar:/home/tomcat/.m2/repository/org/springframework/spring-orm/3.0.5.RELEASE/spring-orm-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-jdbc/3.0.5.RELEASE/spring-jdbc-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-tx/3.0.5.RELEASE/spring-tx-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar:/home/tomcat/.m2/repository/org/springframework/spring-test/3.0.5.RELEASE/spring-test-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/security/spring-security-core/3.0.5.RELEASE/spring-security-core-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/aspectj/aspectjweaver/1.6.8/aspectjweaver-1.6.8.jar:/home/tomcat/.m2/repository/org/springframework/security/spring-security-config/3.0.5.RELEASE/spring-security-config-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/security/spring-security-web/3.0.5.RELEASE/spring-security-web-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/cglib/cglib/2.2.2/cglib-2.2.2.jar:/home/tomcat/.m2/repository/asm/asm/3.3.1/asm-3.3.1.jar:/home/tomcat/.m2/repository/mysql/mysql-connector-java/5.1.17/mysql-connector-java-5.1.17.jar:/home/tomcat/.m2/repository/org/hibernate/hibernate-validator/4.2.0.Final/hibernate-validator-4.2.0.Final.jar:/home/tomcat/.m2/repository/javax/validation/validation-api/1.0.0.GA/validation-api-1.0.0.GA.jar:/home/tomcat/.m2/repository/org/apache/tiles/tiles-jsp/2.2.2/tiles-jsp-2.2.2.jar:/home/tomcat/.m2/repository/org/apache/tiles/tiles-servlet/2.2.2/tiles-servlet-2.2.2.jar:/home/tomcat/.m2/repository/org/apache/tiles/tiles-core/2.2.2/tiles-core-2.2.2.jar:/home/tomcat/.m2/repository/org/apache/tiles/tiles-template/2.2.2/tiles-template-2.2.2.jar:/home/tomcat/.m2/repository/org/apache/tiles/tiles-api/2.2.2/tiles-api-2.2.2.jar:/home/tomcat/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.8.3/jackson-mapper-asl-1.8.3.jar:/home/tomcat/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.8.3/jackson-core-asl-1.8.3.jar:/home/tomcat/.m2/repository/net/sf/jasperreports/jasperreports/4.0.1/jasperreports-4.0.1.jar:/home/tomcat/.m2/repository/commons-beanutils/commons-beanutils/1.8.0/commons-beanutils-1.8.0.jar:/home/tomcat/.m2/repository/commons-digester/commons-digester/1.7/commons-digester-1.7.jar:/home/tomcat/.m2/repository/commons-logging/commons-logging/1.0.2/commons-logging-1.0.2.jar:/home/tomcat/.m2/repository/com/lowagie/itext/2.1.7/itext-2.1.7.jar:/home/tomcat/.m2/repository/bouncycastle/bcmail-jdk14/138/bcmail-jdk14-138.jar:/home/tomcat/.m2/repository/bouncycastle/bcprov-jdk14/138/bcprov-jdk14-138.jar:/home/tomcat/.m2/repository/org/bouncycastle/bctsp-jdk14/1.38/bctsp-jdk14-1.38.jar:/home/tomcat/.m2/repository/org/bouncycastle/bcprov-jdk14/1.38/bcprov-jdk14-1.38.jar:/home/tomcat/.m2/repository/org/bouncycastle/bcmail-jdk14/1.38/bcmail-jdk14-1.38.jar:/home/tomcat/.m2/repository/jfree/jcommon/1.0.15/jcommon-1.0.15.jar:/home/tomcat/.m2/repository/jfree/jfreechart/1.0.12/jfreechart-1.0.12.jar:/home/tomcat/.m2/repository/xml-apis/xml-apis/1.3.02/xml-apis-1.3.02.jar:/home/tomcat/.m2/repository/eclipse/jdtcore/3.1.0/jdtcore-3.1.0.jar:/home/tomcat/.m2/repository/org/springframework/security/spring-security-taglibs/3.0.5.RELEASE/spring-security-taglibs-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/security/spring-security-acl/3.0.5.RELEASE/spring-security-acl-3.0.5.RELEASE.jar:, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.version=1.7, sun.arch.data.model=64, java.home=/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre, sun.java.command=/home/tomcat/Documents/backup/OMS.Release/target/surefire/surefirebooter1350476830626056606.jar /home/tomcat/Documents/backup/OMS.Release/target/surefire 2017-10-14T14-08-41_029-jvmRun1 surefire1747481213800879750tmp surefire_0887568231430146800tmp, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, hibernate.connection.url=jdbc:mysql://localhost:3306/test1, java.specification.vendor=Oracle Corporation, user.language=en, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.7.0_151, java.ext.dirs=/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre/lib/resources.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre/lib/rt.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre/lib/jsse.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre/lib/jce.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre/lib/charsets.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre/lib/rhino.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre/lib/jfr.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre/classes, java.vendor=Oracle Corporation, localRepository=/home/tomcat/.m2/repository, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=create-drop, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=gnome, sun.cpu.isalist=, dialect=org.hibernate.dialect.MySQL5Dialect}
[2017-10-14 14:08:54,526]DEBUG 12313[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:54,526]DEBUG 12313[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:54,527]DEBUG 12314[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:54,527]DEBUG 12314[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:54,527]DEBUG 12314[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:54,527]DEBUG 12314[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:54,527]DEBUG 12314[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:54,527]DEBUG 12314[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:54,528]DEBUG 12315[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:54,528]DEBUG 12315[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:54,529]DEBUG 12316[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) - Static SQL for entity: com.softserveinc.edu.oms.domain.entities.Role
[2017-10-14 14:08:54,529]DEBUG 12316[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) -  Version select: select ID from Roles where ID =?
[2017-10-14 14:08:54,529]DEBUG 12316[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) -  Snapshot select: select role_.ID, role_.RoleName as RoleName20_ from Roles role_ where role_.ID=?
[2017-10-14 14:08:54,529]DEBUG 12316[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) -  Insert 0: insert into Roles (RoleName, ID) values (?, ?)
[2017-10-14 14:08:54,529]DEBUG 12316[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) -  Update 0: update Roles set RoleName=? where ID=?
[2017-10-14 14:08:54,529]DEBUG 12316[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) -  Delete 0: delete from Roles where ID=?
[2017-10-14 14:08:54,529]DEBUG 12316[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2969) -  Identity insert: insert into Roles (RoleName) values (?)
[2017-10-14 14:08:54,531]DEBUG 12318[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) - Static SQL for entity: com.softserveinc.edu.oms.domain.entities.CreditCardType
[2017-10-14 14:08:54,531]DEBUG 12318[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) -  Version select: select ID from CardType where ID =?
[2017-10-14 14:08:54,531]DEBUG 12318[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) -  Snapshot select: select creditcard_.ID, creditcard_.CardType as CardType29_, creditcard_.CardNumber as CardNumber29_, creditcard_.CardCvv2 as CardCvv4_29_, creditcard_.Expiration_Date as Expiration5_29_, creditcard_.IssueDate as IssueDate29_, creditcard_.IssueNumber as IssueNum7_29_ from CardType creditcard_ where creditcard_.ID=?
[2017-10-14 14:08:54,531]DEBUG 12318[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) -  Insert 0: insert into CardType (CardType, CardNumber, CardCvv2, Expiration_Date, IssueDate, IssueNumber, ID) values (?, ?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:54,531]DEBUG 12318[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) -  Update 0: update CardType set CardType=?, CardNumber=?, CardCvv2=?, Expiration_Date=?, IssueDate=?, IssueNumber=? where ID=?
[2017-10-14 14:08:54,531]DEBUG 12318[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) -  Delete 0: delete from CardType where ID=?
[2017-10-14 14:08:54,531]DEBUG 12318[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2969) -  Identity insert: insert into CardType (CardType, CardNumber, CardCvv2, Expiration_Date, IssueDate, IssueNumber) values (?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:54,533]DEBUG 12320[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) - Static SQL for entity: com.softserveinc.edu.oms.domain.entities.OrderItem
[2017-10-14 14:08:54,534]DEBUG 12321[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) -  Version select: select ID from OrderItems where ID =?
[2017-10-14 14:08:54,534]DEBUG 12321[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) -  Snapshot select: select orderitem_.ID, orderitem_.Cost as Cost28_, orderitem_.DimensionRef as Dimensio5_28_, orderitem_.ItemPrice as ItemPrice28_, orderitem_.OrderRef as OrderRef28_, orderitem_.ProductRef as ProductRef28_, orderitem_.Quantity as Quantity28_ from OrderItems orderitem_ where orderitem_.ID=?
[2017-10-14 14:08:54,534]DEBUG 12321[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) -  Insert 0: insert into OrderItems (Cost, DimensionRef, ItemPrice, OrderRef, ProductRef, Quantity, ID) values (?, ?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:54,534]DEBUG 12321[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) -  Update 0: update OrderItems set Cost=?, DimensionRef=?, ItemPrice=?, OrderRef=?, ProductRef=?, Quantity=? where ID=?
[2017-10-14 14:08:54,534]DEBUG 12321[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) -  Delete 0: delete from OrderItems where ID=?
[2017-10-14 14:08:54,534]DEBUG 12321[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2969) -  Identity insert: insert into OrderItems (Cost, DimensionRef, ItemPrice, OrderRef, ProductRef, Quantity) values (?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:54,535]DEBUG 12322[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) - Static SQL for entity: com.softserveinc.edu.oms.domain.entities.Dimension
[2017-10-14 14:08:54,535]DEBUG 12322[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) -  Version select: select ID from Dimensions where ID =?
[2017-10-14 14:08:54,535]DEBUG 12322[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) -  Snapshot select: select dimension_.ID, dimension_.DimensionName as Dimensio2_27_, dimension_.NumberOfProducts as NumberOf3_27_ from Dimensions dimension_ where dimension_.ID=?
[2017-10-14 14:08:54,535]DEBUG 12322[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) -  Insert 0: insert into Dimensions (DimensionName, NumberOfProducts, ID) values (?, ?, ?)
[2017-10-14 14:08:54,536]DEBUG 12323[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) -  Update 0: update Dimensions set DimensionName=?, NumberOfProducts=? where ID=?
[2017-10-14 14:08:54,536]DEBUG 12323[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) -  Delete 0: delete from Dimensions where ID=?
[2017-10-14 14:08:54,536]DEBUG 12323[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2969) -  Identity insert: insert into Dimensions (DimensionName, NumberOfProducts) values (?, ?)
[2017-10-14 14:08:54,538]DEBUG 12325[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) - Static SQL for entity: com.softserveinc.edu.oms.domain.entities.Order
[2017-10-14 14:08:54,538]DEBUG 12325[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) -  Version select: select ID from Orders where ID =?
[2017-10-14 14:08:54,538]DEBUG 12325[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) -  Snapshot select: select order_.ID, order_.Assigne as Assigne25_, order_.Customer as Customer25_, order_.DeliveryDate as Delivery2_25_, order_.IsGift as IsGift25_, order_.MaxDiscount as MaxDisco4_25_, order_.OrderDate as OrderDate25_, order_.OrderName as OrderName25_, order_.OrderNumber as OrderNum7_25_, order_.OrderStatusRef as OrderSt12_25_, order_.PreferableDeliveryDate as Preferab8_25_, order_.TotalPrice as TotalPrice25_ from Orders order_ where order_.ID=?
[2017-10-14 14:08:54,539]DEBUG 12326[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) -  Insert 0: insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice, ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:54,539]DEBUG 12326[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) -  Update 0: update Orders set Assigne=?, Customer=?, DeliveryDate=?, IsGift=?, MaxDiscount=?, OrderDate=?, OrderName=?, OrderNumber=?, OrderStatusRef=?, PreferableDeliveryDate=?, TotalPrice=? where ID=?
[2017-10-14 14:08:54,539]DEBUG 12326[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) -  Delete 0: delete from Orders where ID=?
[2017-10-14 14:08:54,539]DEBUG 12326[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2969) -  Identity insert: insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:54,540]DEBUG 12327[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) - Static SQL for entity: com.softserveinc.edu.oms.domain.entities.OrderStatus
[2017-10-14 14:08:54,540]DEBUG 12327[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) -  Version select: select ID from OrderStatuses where ID =?
[2017-10-14 14:08:54,541]DEBUG 12328[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) -  Snapshot select: select orderstatu_.ID, orderstatu_.OrederStatusName as OrederSt2_24_ from OrderStatuses orderstatu_ where orderstatu_.ID=?
[2017-10-14 14:08:54,541]DEBUG 12328[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) -  Insert 0: insert into OrderStatuses (OrederStatusName, ID) values (?, ?)
[2017-10-14 14:08:54,541]DEBUG 12328[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) -  Update 0: update OrderStatuses set OrederStatusName=? where ID=?
[2017-10-14 14:08:54,541]DEBUG 12328[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) -  Delete 0: delete from OrderStatuses where ID=?
[2017-10-14 14:08:54,541]DEBUG 12328[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2969) -  Identity insert: insert into OrderStatuses (OrederStatusName) values (?)
[2017-10-14 14:08:54,542]DEBUG 12329[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) - Static SQL for entity: com.softserveinc.edu.oms.domain.entities.Region
[2017-10-14 14:08:54,542]DEBUG 12329[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) -  Version select: select ID from Regions where ID =?
[2017-10-14 14:08:54,542]DEBUG 12329[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) -  Snapshot select: select region_.ID, region_.RegionName as RegionName21_ from Regions region_ where region_.ID=?
[2017-10-14 14:08:54,542]DEBUG 12329[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) -  Insert 0: insert into Regions (RegionName, ID) values (?, ?)
[2017-10-14 14:08:54,542]DEBUG 12329[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) -  Update 0: update Regions set RegionName=? where ID=?
[2017-10-14 14:08:54,542]DEBUG 12329[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) -  Delete 0: delete from Regions where ID=?
[2017-10-14 14:08:54,543]DEBUG 12330[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2969) -  Identity insert: insert into Regions (RegionName) values (?)
[2017-10-14 14:08:54,545]DEBUG 12332[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) - Static SQL for entity: com.softserveinc.edu.oms.domain.entities.User
[2017-10-14 14:08:54,545]DEBUG 12332[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) -  Version select: select ID from Users where ID =?
[2017-10-14 14:08:54,545]DEBUG 12332[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) -  Snapshot select: select user_.ID, user_.IsUserActive as IsUserAc2_23_, user_.Balance as Balance23_, user_.CustomerTypeRef as Customer9_23_, user_.Email as Email23_, user_.FirstName as FirstName23_, user_.LastName as LastName23_, user_.Login as Login23_, user_.Password as Password23_, user_.RegionRef as RegionRef23_, user_.RoleRef as RoleRef23_ from Users user_ where user_.ID=?
[2017-10-14 14:08:54,545]DEBUG 12332[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) -  Insert 0: insert into Users (IsUserActive, Balance, CustomerTypeRef, Email, FirstName, LastName, Login, Password, RegionRef, RoleRef, ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:54,545]DEBUG 12332[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) -  Update 0: update Users set IsUserActive=?, Balance=?, CustomerTypeRef=?, Email=?, FirstName=?, LastName=?, Login=?, Password=?, RegionRef=?, RoleRef=? where ID=?
[2017-10-14 14:08:54,545]DEBUG 12332[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) -  Delete 0: delete from Users where ID=?
[2017-10-14 14:08:54,545]DEBUG 12332[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2969) -  Identity insert: insert into Users (IsUserActive, Balance, CustomerTypeRef, Email, FirstName, LastName, Login, Password, RegionRef, RoleRef) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 14:08:54,546]DEBUG 12333[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) - Static SQL for entity: com.softserveinc.edu.oms.domain.entities.Product
[2017-10-14 14:08:54,547]DEBUG 12334[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) -  Version select: select ID from Products where ID =?
[2017-10-14 14:08:54,547]DEBUG 12334[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) -  Snapshot select: select product_.ID, product_.IsProductActive as IsProduc2_26_, product_.ProductDescription as ProductD3_26_, product_.ProductName as ProductN4_26_, product_.ProductPrice as ProductP5_26_ from Products product_ where product_.ID=?
[2017-10-14 14:08:54,547]DEBUG 12334[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) -  Insert 0: insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2017-10-14 14:08:54,547]DEBUG 12334[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) -  Update 0: update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 14:08:54,547]DEBUG 12334[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) -  Delete 0: delete from Products where ID=?
[2017-10-14 14:08:54,547]DEBUG 12334[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2969) -  Identity insert: insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 14:08:54,548]DEBUG 12335[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) - Static SQL for entity: com.softserveinc.edu.oms.domain.entities.CustomerType
[2017-10-14 14:08:54,548]DEBUG 12335[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) -  Version select: select ID from CustomerTypes where ID =?
[2017-10-14 14:08:54,548]DEBUG 12335[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) -  Snapshot select: select customerty_.ID, customerty_.Discount as Discount22_, customerty_.MaxRange as MaxRange22_, customerty_.MinRange as MinRange22_, customerty_.TypeName as TypeName22_ from CustomerTypes customerty_ where customerty_.ID=?
[2017-10-14 14:08:54,549]DEBUG 12336[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) -  Insert 0: insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2017-10-14 14:08:54,549]DEBUG 12336[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) -  Update 0: update CustomerTypes set Discount=?, MaxRange=?, MinRange=?, TypeName=? where ID=?
[2017-10-14 14:08:54,549]DEBUG 12336[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) -  Delete 0: delete from CustomerTypes where ID=?
[2017-10-14 14:08:54,549]DEBUG 12336[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2969) -  Identity insert: insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-14 14:08:54,549]DEBUG 12336[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Role [NONE]: select role0_.ID as ID20_0_, role0_.RoleName as RoleName20_0_ from Roles role0_ where role0_.ID=?
[2017-10-14 14:08:54,549]DEBUG 12336[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Role [READ]: select role0_.ID as ID20_0_, role0_.RoleName as RoleName20_0_ from Roles role0_ where role0_.ID=?
[2017-10-14 14:08:54,550]DEBUG 12337[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Role [UPGRADE]: select role0_.ID as ID20_0_, role0_.RoleName as RoleName20_0_ from Roles role0_ where role0_.ID=? for update
[2017-10-14 14:08:54,550]DEBUG 12337[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Role [UPGRADE_NOWAIT]: select role0_.ID as ID20_0_, role0_.RoleName as RoleName20_0_ from Roles role0_ where role0_.ID=? for update
[2017-10-14 14:08:54,550]DEBUG 12337[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Role [FORCE]: select role0_.ID as ID20_0_, role0_.RoleName as RoleName20_0_ from Roles role0_ where role0_.ID=? for update
[2017-10-14 14:08:54,550]DEBUG 12337[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Role [PESSIMISTIC_READ]: select role0_.ID as ID20_0_, role0_.RoleName as RoleName20_0_ from Roles role0_ where role0_.ID=? lock in share mode
[2017-10-14 14:08:54,550]DEBUG 12337[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Role [PESSIMISTIC_WRITE]: select role0_.ID as ID20_0_, role0_.RoleName as RoleName20_0_ from Roles role0_ where role0_.ID=? for update
[2017-10-14 14:08:54,551]DEBUG 12338[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Role [PESSIMISTIC_FORCE_INCREMENT]: select role0_.ID as ID20_0_, role0_.RoleName as RoleName20_0_ from Roles role0_ where role0_.ID=? for update
[2017-10-14 14:08:54,551]DEBUG 12338[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Role [OPTIMISTIC]: select role0_.ID as ID20_0_, role0_.RoleName as RoleName20_0_ from Roles role0_ where role0_.ID=?
[2017-10-14 14:08:54,551]DEBUG 12338[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Role [OPTIMISTIC_FORCE_INCREMENT]: select role0_.ID as ID20_0_, role0_.RoleName as RoleName20_0_ from Roles role0_ where role0_.ID=?
[2017-10-14 14:08:54,551]DEBUG 12338[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.softserveinc.edu.oms.domain.entities.Role: select role0_.ID as ID20_0_, role0_.RoleName as RoleName20_0_ from Roles role0_ where role0_.ID=?
[2017-10-14 14:08:54,551]DEBUG 12338[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.softserveinc.edu.oms.domain.entities.Role: select role0_.ID as ID20_0_, role0_.RoleName as RoleName20_0_ from Roles role0_ where role0_.ID=?
[2017-10-14 14:08:54,552]DEBUG 12339[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderItem [NONE]: select orderitem0_.ID as ID28_6_, orderitem0_.Cost as Cost28_6_, orderitem0_.DimensionRef as Dimensio5_28_6_, orderitem0_.ItemPrice as ItemPrice28_6_, orderitem0_.OrderRef as OrderRef28_6_, orderitem0_.ProductRef as ProductRef28_6_, orderitem0_.Quantity as Quantity28_6_, dimension1_.ID as ID27_0_, dimension1_.DimensionName as Dimensio2_27_0_, dimension1_.NumberOfProducts as NumberOf3_27_0_, order2_.ID as ID25_1_, order2_.Assigne as Assigne25_1_, order2_.Customer as Customer25_1_, order2_.DeliveryDate as Delivery2_25_1_, order2_.IsGift as IsGift25_1_, order2_.MaxDiscount as MaxDisco4_25_1_, order2_.OrderDate as OrderDate25_1_, order2_.OrderName as OrderName25_1_, order2_.OrderNumber as OrderNum7_25_1_, order2_.OrderStatusRef as OrderSt12_25_1_, order2_.PreferableDeliveryDate as Preferab8_25_1_, order2_.TotalPrice as TotalPrice25_1_, user3_.ID as ID23_2_, user3_.IsUserActive as IsUserAc2_23_2_, user3_.Balance as Balance23_2_, user3_.CustomerTypeRef as Customer9_23_2_, user3_.Email as Email23_2_, user3_.FirstName as FirstName23_2_, user3_.LastName as LastName23_2_, user3_.Login as Login23_2_, user3_.Password as Password23_2_, user3_.RegionRef as RegionRef23_2_, user3_.RoleRef as RoleRef23_2_, user4_.ID as ID23_3_, user4_.IsUserActive as IsUserAc2_23_3_, user4_.Balance as Balance23_3_, user4_.CustomerTypeRef as Customer9_23_3_, user4_.Email as Email23_3_, user4_.FirstName as FirstName23_3_, user4_.LastName as LastName23_3_, user4_.Login as Login23_3_, user4_.Password as Password23_3_, user4_.RegionRef as RegionRef23_3_, user4_.RoleRef as RoleRef23_3_, orderstatu5_.ID as ID24_4_, orderstatu5_.OrederStatusName as OrederSt2_24_4_, product6_.ID as ID26_5_, product6_.IsProductActive as IsProduc2_26_5_, product6_.ProductDescription as ProductD3_26_5_, product6_.ProductName as ProductN4_26_5_, product6_.ProductPrice as ProductP5_26_5_ from OrderItems orderitem0_ left outer join Dimensions dimension1_ on orderitem0_.DimensionRef=dimension1_.ID left outer join Orders order2_ on orderitem0_.OrderRef=order2_.ID left outer join Users user3_ on order2_.Assigne=user3_.ID left outer join Users user4_ on order2_.Customer=user4_.ID left outer join OrderStatuses orderstatu5_ on order2_.OrderStatusRef=orderstatu5_.ID left outer join Products product6_ on orderitem0_.ProductRef=product6_.ID where orderitem0_.ID=?
[2017-10-14 14:08:54,553]DEBUG 12340[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderItem [READ]: select orderitem0_.ID as ID28_6_, orderitem0_.Cost as Cost28_6_, orderitem0_.DimensionRef as Dimensio5_28_6_, orderitem0_.ItemPrice as ItemPrice28_6_, orderitem0_.OrderRef as OrderRef28_6_, orderitem0_.ProductRef as ProductRef28_6_, orderitem0_.Quantity as Quantity28_6_, dimension1_.ID as ID27_0_, dimension1_.DimensionName as Dimensio2_27_0_, dimension1_.NumberOfProducts as NumberOf3_27_0_, order2_.ID as ID25_1_, order2_.Assigne as Assigne25_1_, order2_.Customer as Customer25_1_, order2_.DeliveryDate as Delivery2_25_1_, order2_.IsGift as IsGift25_1_, order2_.MaxDiscount as MaxDisco4_25_1_, order2_.OrderDate as OrderDate25_1_, order2_.OrderName as OrderName25_1_, order2_.OrderNumber as OrderNum7_25_1_, order2_.OrderStatusRef as OrderSt12_25_1_, order2_.PreferableDeliveryDate as Preferab8_25_1_, order2_.TotalPrice as TotalPrice25_1_, user3_.ID as ID23_2_, user3_.IsUserActive as IsUserAc2_23_2_, user3_.Balance as Balance23_2_, user3_.CustomerTypeRef as Customer9_23_2_, user3_.Email as Email23_2_, user3_.FirstName as FirstName23_2_, user3_.LastName as LastName23_2_, user3_.Login as Login23_2_, user3_.Password as Password23_2_, user3_.RegionRef as RegionRef23_2_, user3_.RoleRef as RoleRef23_2_, user4_.ID as ID23_3_, user4_.IsUserActive as IsUserAc2_23_3_, user4_.Balance as Balance23_3_, user4_.CustomerTypeRef as Customer9_23_3_, user4_.Email as Email23_3_, user4_.FirstName as FirstName23_3_, user4_.LastName as LastName23_3_, user4_.Login as Login23_3_, user4_.Password as Password23_3_, user4_.RegionRef as RegionRef23_3_, user4_.RoleRef as RoleRef23_3_, orderstatu5_.ID as ID24_4_, orderstatu5_.OrederStatusName as OrederSt2_24_4_, product6_.ID as ID26_5_, product6_.IsProductActive as IsProduc2_26_5_, product6_.ProductDescription as ProductD3_26_5_, product6_.ProductName as ProductN4_26_5_, product6_.ProductPrice as ProductP5_26_5_ from OrderItems orderitem0_ left outer join Dimensions dimension1_ on orderitem0_.DimensionRef=dimension1_.ID left outer join Orders order2_ on orderitem0_.OrderRef=order2_.ID left outer join Users user3_ on order2_.Assigne=user3_.ID left outer join Users user4_ on order2_.Customer=user4_.ID left outer join OrderStatuses orderstatu5_ on order2_.OrderStatusRef=orderstatu5_.ID left outer join Products product6_ on orderitem0_.ProductRef=product6_.ID where orderitem0_.ID=?
[2017-10-14 14:08:54,553]DEBUG 12340[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderItem [UPGRADE]: select orderitem0_.ID as ID28_0_, orderitem0_.Cost as Cost28_0_, orderitem0_.DimensionRef as Dimensio5_28_0_, orderitem0_.ItemPrice as ItemPrice28_0_, orderitem0_.OrderRef as OrderRef28_0_, orderitem0_.ProductRef as ProductRef28_0_, orderitem0_.Quantity as Quantity28_0_ from OrderItems orderitem0_ where orderitem0_.ID=? for update
[2017-10-14 14:08:54,553]DEBUG 12340[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderItem [UPGRADE_NOWAIT]: select orderitem0_.ID as ID28_0_, orderitem0_.Cost as Cost28_0_, orderitem0_.DimensionRef as Dimensio5_28_0_, orderitem0_.ItemPrice as ItemPrice28_0_, orderitem0_.OrderRef as OrderRef28_0_, orderitem0_.ProductRef as ProductRef28_0_, orderitem0_.Quantity as Quantity28_0_ from OrderItems orderitem0_ where orderitem0_.ID=? for update
[2017-10-14 14:08:54,554]DEBUG 12341[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderItem [FORCE]: select orderitem0_.ID as ID28_0_, orderitem0_.Cost as Cost28_0_, orderitem0_.DimensionRef as Dimensio5_28_0_, orderitem0_.ItemPrice as ItemPrice28_0_, orderitem0_.OrderRef as OrderRef28_0_, orderitem0_.ProductRef as ProductRef28_0_, orderitem0_.Quantity as Quantity28_0_ from OrderItems orderitem0_ where orderitem0_.ID=? for update
[2017-10-14 14:08:54,554]DEBUG 12341[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderItem [PESSIMISTIC_READ]: select orderitem0_.ID as ID28_0_, orderitem0_.Cost as Cost28_0_, orderitem0_.DimensionRef as Dimensio5_28_0_, orderitem0_.ItemPrice as ItemPrice28_0_, orderitem0_.OrderRef as OrderRef28_0_, orderitem0_.ProductRef as ProductRef28_0_, orderitem0_.Quantity as Quantity28_0_ from OrderItems orderitem0_ where orderitem0_.ID=? lock in share mode
[2017-10-14 14:08:54,554]DEBUG 12341[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderItem [PESSIMISTIC_WRITE]: select orderitem0_.ID as ID28_0_, orderitem0_.Cost as Cost28_0_, orderitem0_.DimensionRef as Dimensio5_28_0_, orderitem0_.ItemPrice as ItemPrice28_0_, orderitem0_.OrderRef as OrderRef28_0_, orderitem0_.ProductRef as ProductRef28_0_, orderitem0_.Quantity as Quantity28_0_ from OrderItems orderitem0_ where orderitem0_.ID=? for update
[2017-10-14 14:08:54,554]DEBUG 12341[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderItem [PESSIMISTIC_FORCE_INCREMENT]: select orderitem0_.ID as ID28_0_, orderitem0_.Cost as Cost28_0_, orderitem0_.DimensionRef as Dimensio5_28_0_, orderitem0_.ItemPrice as ItemPrice28_0_, orderitem0_.OrderRef as OrderRef28_0_, orderitem0_.ProductRef as ProductRef28_0_, orderitem0_.Quantity as Quantity28_0_ from OrderItems orderitem0_ where orderitem0_.ID=? for update
[2017-10-14 14:08:54,555]DEBUG 12342[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderItem [OPTIMISTIC]: select orderitem0_.ID as ID28_6_, orderitem0_.Cost as Cost28_6_, orderitem0_.DimensionRef as Dimensio5_28_6_, orderitem0_.ItemPrice as ItemPrice28_6_, orderitem0_.OrderRef as OrderRef28_6_, orderitem0_.ProductRef as ProductRef28_6_, orderitem0_.Quantity as Quantity28_6_, dimension1_.ID as ID27_0_, dimension1_.DimensionName as Dimensio2_27_0_, dimension1_.NumberOfProducts as NumberOf3_27_0_, order2_.ID as ID25_1_, order2_.Assigne as Assigne25_1_, order2_.Customer as Customer25_1_, order2_.DeliveryDate as Delivery2_25_1_, order2_.IsGift as IsGift25_1_, order2_.MaxDiscount as MaxDisco4_25_1_, order2_.OrderDate as OrderDate25_1_, order2_.OrderName as OrderName25_1_, order2_.OrderNumber as OrderNum7_25_1_, order2_.OrderStatusRef as OrderSt12_25_1_, order2_.PreferableDeliveryDate as Preferab8_25_1_, order2_.TotalPrice as TotalPrice25_1_, user3_.ID as ID23_2_, user3_.IsUserActive as IsUserAc2_23_2_, user3_.Balance as Balance23_2_, user3_.CustomerTypeRef as Customer9_23_2_, user3_.Email as Email23_2_, user3_.FirstName as FirstName23_2_, user3_.LastName as LastName23_2_, user3_.Login as Login23_2_, user3_.Password as Password23_2_, user3_.RegionRef as RegionRef23_2_, user3_.RoleRef as RoleRef23_2_, user4_.ID as ID23_3_, user4_.IsUserActive as IsUserAc2_23_3_, user4_.Balance as Balance23_3_, user4_.CustomerTypeRef as Customer9_23_3_, user4_.Email as Email23_3_, user4_.FirstName as FirstName23_3_, user4_.LastName as LastName23_3_, user4_.Login as Login23_3_, user4_.Password as Password23_3_, user4_.RegionRef as RegionRef23_3_, user4_.RoleRef as RoleRef23_3_, orderstatu5_.ID as ID24_4_, orderstatu5_.OrederStatusName as OrederSt2_24_4_, product6_.ID as ID26_5_, product6_.IsProductActive as IsProduc2_26_5_, product6_.ProductDescription as ProductD3_26_5_, product6_.ProductName as ProductN4_26_5_, product6_.ProductPrice as ProductP5_26_5_ from OrderItems orderitem0_ left outer join Dimensions dimension1_ on orderitem0_.DimensionRef=dimension1_.ID left outer join Orders order2_ on orderitem0_.OrderRef=order2_.ID left outer join Users user3_ on order2_.Assigne=user3_.ID left outer join Users user4_ on order2_.Customer=user4_.ID left outer join OrderStatuses orderstatu5_ on order2_.OrderStatusRef=orderstatu5_.ID left outer join Products product6_ on orderitem0_.ProductRef=product6_.ID where orderitem0_.ID=?
[2017-10-14 14:08:54,556]DEBUG 12343[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderItem [OPTIMISTIC_FORCE_INCREMENT]: select orderitem0_.ID as ID28_6_, orderitem0_.Cost as Cost28_6_, orderitem0_.DimensionRef as Dimensio5_28_6_, orderitem0_.ItemPrice as ItemPrice28_6_, orderitem0_.OrderRef as OrderRef28_6_, orderitem0_.ProductRef as ProductRef28_6_, orderitem0_.Quantity as Quantity28_6_, dimension1_.ID as ID27_0_, dimension1_.DimensionName as Dimensio2_27_0_, dimension1_.NumberOfProducts as NumberOf3_27_0_, order2_.ID as ID25_1_, order2_.Assigne as Assigne25_1_, order2_.Customer as Customer25_1_, order2_.DeliveryDate as Delivery2_25_1_, order2_.IsGift as IsGift25_1_, order2_.MaxDiscount as MaxDisco4_25_1_, order2_.OrderDate as OrderDate25_1_, order2_.OrderName as OrderName25_1_, order2_.OrderNumber as OrderNum7_25_1_, order2_.OrderStatusRef as OrderSt12_25_1_, order2_.PreferableDeliveryDate as Preferab8_25_1_, order2_.TotalPrice as TotalPrice25_1_, user3_.ID as ID23_2_, user3_.IsUserActive as IsUserAc2_23_2_, user3_.Balance as Balance23_2_, user3_.CustomerTypeRef as Customer9_23_2_, user3_.Email as Email23_2_, user3_.FirstName as FirstName23_2_, user3_.LastName as LastName23_2_, user3_.Login as Login23_2_, user3_.Password as Password23_2_, user3_.RegionRef as RegionRef23_2_, user3_.RoleRef as RoleRef23_2_, user4_.ID as ID23_3_, user4_.IsUserActive as IsUserAc2_23_3_, user4_.Balance as Balance23_3_, user4_.CustomerTypeRef as Customer9_23_3_, user4_.Email as Email23_3_, user4_.FirstName as FirstName23_3_, user4_.LastName as LastName23_3_, user4_.Login as Login23_3_, user4_.Password as Password23_3_, user4_.RegionRef as RegionRef23_3_, user4_.RoleRef as RoleRef23_3_, orderstatu5_.ID as ID24_4_, orderstatu5_.OrederStatusName as OrederSt2_24_4_, product6_.ID as ID26_5_, product6_.IsProductActive as IsProduc2_26_5_, product6_.ProductDescription as ProductD3_26_5_, product6_.ProductName as ProductN4_26_5_, product6_.ProductPrice as ProductP5_26_5_ from OrderItems orderitem0_ left outer join Dimensions dimension1_ on orderitem0_.DimensionRef=dimension1_.ID left outer join Orders order2_ on orderitem0_.OrderRef=order2_.ID left outer join Users user3_ on order2_.Assigne=user3_.ID left outer join Users user4_ on order2_.Customer=user4_.ID left outer join OrderStatuses orderstatu5_ on order2_.OrderStatusRef=orderstatu5_.ID left outer join Products product6_ on orderitem0_.ProductRef=product6_.ID where orderitem0_.ID=?
[2017-10-14 14:08:54,556]DEBUG 12343[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.softserveinc.edu.oms.domain.entities.OrderItem: select orderitem0_.ID as ID28_6_, orderitem0_.Cost as Cost28_6_, orderitem0_.DimensionRef as Dimensio5_28_6_, orderitem0_.ItemPrice as ItemPrice28_6_, orderitem0_.OrderRef as OrderRef28_6_, orderitem0_.ProductRef as ProductRef28_6_, orderitem0_.Quantity as Quantity28_6_, dimension1_.ID as ID27_0_, dimension1_.DimensionName as Dimensio2_27_0_, dimension1_.NumberOfProducts as NumberOf3_27_0_, order2_.ID as ID25_1_, order2_.Assigne as Assigne25_1_, order2_.Customer as Customer25_1_, order2_.DeliveryDate as Delivery2_25_1_, order2_.IsGift as IsGift25_1_, order2_.MaxDiscount as MaxDisco4_25_1_, order2_.OrderDate as OrderDate25_1_, order2_.OrderName as OrderName25_1_, order2_.OrderNumber as OrderNum7_25_1_, order2_.OrderStatusRef as OrderSt12_25_1_, order2_.PreferableDeliveryDate as Preferab8_25_1_, order2_.TotalPrice as TotalPrice25_1_, user3_.ID as ID23_2_, user3_.IsUserActive as IsUserAc2_23_2_, user3_.Balance as Balance23_2_, user3_.CustomerTypeRef as Customer9_23_2_, user3_.Email as Email23_2_, user3_.FirstName as FirstName23_2_, user3_.LastName as LastName23_2_, user3_.Login as Login23_2_, user3_.Password as Password23_2_, user3_.RegionRef as RegionRef23_2_, user3_.RoleRef as RoleRef23_2_, user4_.ID as ID23_3_, user4_.IsUserActive as IsUserAc2_23_3_, user4_.Balance as Balance23_3_, user4_.CustomerTypeRef as Customer9_23_3_, user4_.Email as Email23_3_, user4_.FirstName as FirstName23_3_, user4_.LastName as LastName23_3_, user4_.Login as Login23_3_, user4_.Password as Password23_3_, user4_.RegionRef as RegionRef23_3_, user4_.RoleRef as RoleRef23_3_, orderstatu5_.ID as ID24_4_, orderstatu5_.OrederStatusName as OrederSt2_24_4_, product6_.ID as ID26_5_, product6_.IsProductActive as IsProduc2_26_5_, product6_.ProductDescription as ProductD3_26_5_, product6_.ProductName as ProductN4_26_5_, product6_.ProductPrice as ProductP5_26_5_ from OrderItems orderitem0_ left outer join Dimensions dimension1_ on orderitem0_.DimensionRef=dimension1_.ID left outer join Orders order2_ on orderitem0_.OrderRef=order2_.ID left outer join Users user3_ on order2_.Assigne=user3_.ID left outer join Users user4_ on order2_.Customer=user4_.ID left outer join OrderStatuses orderstatu5_ on order2_.OrderStatusRef=orderstatu5_.ID left outer join Products product6_ on orderitem0_.ProductRef=product6_.ID where orderitem0_.ID=?
[2017-10-14 14:08:54,557]DEBUG 12344[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.softserveinc.edu.oms.domain.entities.OrderItem: select orderitem0_.ID as ID28_0_, orderitem0_.Cost as Cost28_0_, orderitem0_.DimensionRef as Dimensio5_28_0_, orderitem0_.ItemPrice as ItemPrice28_0_, orderitem0_.OrderRef as OrderRef28_0_, orderitem0_.ProductRef as ProductRef28_0_, orderitem0_.Quantity as Quantity28_0_ from OrderItems orderitem0_ where orderitem0_.ID=?
[2017-10-14 14:08:54,557]DEBUG 12344[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CreditCardType [NONE]: select creditcard0_.ID as ID29_0_, creditcard0_.CardType as CardType29_0_, creditcard0_.CardNumber as CardNumber29_0_, creditcard0_.CardCvv2 as CardCvv4_29_0_, creditcard0_.Expiration_Date as Expiration5_29_0_, creditcard0_.IssueDate as IssueDate29_0_, creditcard0_.IssueNumber as IssueNum7_29_0_ from CardType creditcard0_ where creditcard0_.ID=?
[2017-10-14 14:08:54,557]DEBUG 12344[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CreditCardType [READ]: select creditcard0_.ID as ID29_0_, creditcard0_.CardType as CardType29_0_, creditcard0_.CardNumber as CardNumber29_0_, creditcard0_.CardCvv2 as CardCvv4_29_0_, creditcard0_.Expiration_Date as Expiration5_29_0_, creditcard0_.IssueDate as IssueDate29_0_, creditcard0_.IssueNumber as IssueNum7_29_0_ from CardType creditcard0_ where creditcard0_.ID=?
[2017-10-14 14:08:54,557]DEBUG 12344[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CreditCardType [UPGRADE]: select creditcard0_.ID as ID29_0_, creditcard0_.CardType as CardType29_0_, creditcard0_.CardNumber as CardNumber29_0_, creditcard0_.CardCvv2 as CardCvv4_29_0_, creditcard0_.Expiration_Date as Expiration5_29_0_, creditcard0_.IssueDate as IssueDate29_0_, creditcard0_.IssueNumber as IssueNum7_29_0_ from CardType creditcard0_ where creditcard0_.ID=? for update
[2017-10-14 14:08:54,558]DEBUG 12345[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CreditCardType [UPGRADE_NOWAIT]: select creditcard0_.ID as ID29_0_, creditcard0_.CardType as CardType29_0_, creditcard0_.CardNumber as CardNumber29_0_, creditcard0_.CardCvv2 as CardCvv4_29_0_, creditcard0_.Expiration_Date as Expiration5_29_0_, creditcard0_.IssueDate as IssueDate29_0_, creditcard0_.IssueNumber as IssueNum7_29_0_ from CardType creditcard0_ where creditcard0_.ID=? for update
[2017-10-14 14:08:54,558]DEBUG 12345[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CreditCardType [FORCE]: select creditcard0_.ID as ID29_0_, creditcard0_.CardType as CardType29_0_, creditcard0_.CardNumber as CardNumber29_0_, creditcard0_.CardCvv2 as CardCvv4_29_0_, creditcard0_.Expiration_Date as Expiration5_29_0_, creditcard0_.IssueDate as IssueDate29_0_, creditcard0_.IssueNumber as IssueNum7_29_0_ from CardType creditcard0_ where creditcard0_.ID=? for update
[2017-10-14 14:08:54,558]DEBUG 12345[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CreditCardType [PESSIMISTIC_READ]: select creditcard0_.ID as ID29_0_, creditcard0_.CardType as CardType29_0_, creditcard0_.CardNumber as CardNumber29_0_, creditcard0_.CardCvv2 as CardCvv4_29_0_, creditcard0_.Expiration_Date as Expiration5_29_0_, creditcard0_.IssueDate as IssueDate29_0_, creditcard0_.IssueNumber as IssueNum7_29_0_ from CardType creditcard0_ where creditcard0_.ID=? lock in share mode
[2017-10-14 14:08:54,558]DEBUG 12345[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CreditCardType [PESSIMISTIC_WRITE]: select creditcard0_.ID as ID29_0_, creditcard0_.CardType as CardType29_0_, creditcard0_.CardNumber as CardNumber29_0_, creditcard0_.CardCvv2 as CardCvv4_29_0_, creditcard0_.Expiration_Date as Expiration5_29_0_, creditcard0_.IssueDate as IssueDate29_0_, creditcard0_.IssueNumber as IssueNum7_29_0_ from CardType creditcard0_ where creditcard0_.ID=? for update
[2017-10-14 14:08:54,559]DEBUG 12346[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CreditCardType [PESSIMISTIC_FORCE_INCREMENT]: select creditcard0_.ID as ID29_0_, creditcard0_.CardType as CardType29_0_, creditcard0_.CardNumber as CardNumber29_0_, creditcard0_.CardCvv2 as CardCvv4_29_0_, creditcard0_.Expiration_Date as Expiration5_29_0_, creditcard0_.IssueDate as IssueDate29_0_, creditcard0_.IssueNumber as IssueNum7_29_0_ from CardType creditcard0_ where creditcard0_.ID=? for update
[2017-10-14 14:08:54,559]DEBUG 12346[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CreditCardType [OPTIMISTIC]: select creditcard0_.ID as ID29_0_, creditcard0_.CardType as CardType29_0_, creditcard0_.CardNumber as CardNumber29_0_, creditcard0_.CardCvv2 as CardCvv4_29_0_, creditcard0_.Expiration_Date as Expiration5_29_0_, creditcard0_.IssueDate as IssueDate29_0_, creditcard0_.IssueNumber as IssueNum7_29_0_ from CardType creditcard0_ where creditcard0_.ID=?
[2017-10-14 14:08:54,559]DEBUG 12346[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CreditCardType [OPTIMISTIC_FORCE_INCREMENT]: select creditcard0_.ID as ID29_0_, creditcard0_.CardType as CardType29_0_, creditcard0_.CardNumber as CardNumber29_0_, creditcard0_.CardCvv2 as CardCvv4_29_0_, creditcard0_.Expiration_Date as Expiration5_29_0_, creditcard0_.IssueDate as IssueDate29_0_, creditcard0_.IssueNumber as IssueNum7_29_0_ from CardType creditcard0_ where creditcard0_.ID=?
[2017-10-14 14:08:54,559]DEBUG 12346[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.softserveinc.edu.oms.domain.entities.CreditCardType: select creditcard0_.ID as ID29_0_, creditcard0_.CardType as CardType29_0_, creditcard0_.CardNumber as CardNumber29_0_, creditcard0_.CardCvv2 as CardCvv4_29_0_, creditcard0_.Expiration_Date as Expiration5_29_0_, creditcard0_.IssueDate as IssueDate29_0_, creditcard0_.IssueNumber as IssueNum7_29_0_ from CardType creditcard0_ where creditcard0_.ID=?
[2017-10-14 14:08:54,559]DEBUG 12346[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.softserveinc.edu.oms.domain.entities.CreditCardType: select creditcard0_.ID as ID29_0_, creditcard0_.CardType as CardType29_0_, creditcard0_.CardNumber as CardNumber29_0_, creditcard0_.CardCvv2 as CardCvv4_29_0_, creditcard0_.Expiration_Date as Expiration5_29_0_, creditcard0_.IssueDate as IssueDate29_0_, creditcard0_.IssueNumber as IssueNum7_29_0_ from CardType creditcard0_ where creditcard0_.ID=?
[2017-10-14 14:08:54,560]DEBUG 12347[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Order [NONE]: select order0_.ID as ID25_6_, order0_.Assigne as Assigne25_6_, order0_.Customer as Customer25_6_, order0_.DeliveryDate as Delivery2_25_6_, order0_.IsGift as IsGift25_6_, order0_.MaxDiscount as MaxDisco4_25_6_, order0_.OrderDate as OrderDate25_6_, order0_.OrderName as OrderName25_6_, order0_.OrderNumber as OrderNum7_25_6_, order0_.OrderStatusRef as OrderSt12_25_6_, order0_.PreferableDeliveryDate as Preferab8_25_6_, order0_.TotalPrice as TotalPrice25_6_, user1_.ID as ID23_0_, user1_.IsUserActive as IsUserAc2_23_0_, user1_.Balance as Balance23_0_, user1_.CustomerTypeRef as Customer9_23_0_, user1_.Email as Email23_0_, user1_.FirstName as FirstName23_0_, user1_.LastName as LastName23_0_, user1_.Login as Login23_0_, user1_.Password as Password23_0_, user1_.RegionRef as RegionRef23_0_, user1_.RoleRef as RoleRef23_0_, customerty2_.ID as ID22_1_, customerty2_.Discount as Discount22_1_, customerty2_.MaxRange as MaxRange22_1_, customerty2_.MinRange as MinRange22_1_, customerty2_.TypeName as TypeName22_1_, region3_.ID as ID21_2_, region3_.RegionName as RegionName21_2_, role4_.ID as ID20_3_, role4_.RoleName as RoleName20_3_, user5_.ID as ID23_4_, user5_.IsUserActive as IsUserAc2_23_4_, user5_.Balance as Balance23_4_, user5_.CustomerTypeRef as Customer9_23_4_, user5_.Email as Email23_4_, user5_.FirstName as FirstName23_4_, user5_.LastName as LastName23_4_, user5_.Login as Login23_4_, user5_.Password as Password23_4_, user5_.RegionRef as RegionRef23_4_, user5_.RoleRef as RoleRef23_4_, orderstatu6_.ID as ID24_5_, orderstatu6_.OrederStatusName as OrederSt2_24_5_ from Orders order0_ left outer join Users user1_ on order0_.Assigne=user1_.ID left outer join CustomerTypes customerty2_ on user1_.CustomerTypeRef=customerty2_.ID left outer join Regions region3_ on user1_.RegionRef=region3_.ID left outer join Roles role4_ on user1_.RoleRef=role4_.ID left outer join Users user5_ on order0_.Customer=user5_.ID left outer join OrderStatuses orderstatu6_ on order0_.OrderStatusRef=orderstatu6_.ID where order0_.ID=?
[2017-10-14 14:08:54,561]DEBUG 12348[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Order [READ]: select order0_.ID as ID25_6_, order0_.Assigne as Assigne25_6_, order0_.Customer as Customer25_6_, order0_.DeliveryDate as Delivery2_25_6_, order0_.IsGift as IsGift25_6_, order0_.MaxDiscount as MaxDisco4_25_6_, order0_.OrderDate as OrderDate25_6_, order0_.OrderName as OrderName25_6_, order0_.OrderNumber as OrderNum7_25_6_, order0_.OrderStatusRef as OrderSt12_25_6_, order0_.PreferableDeliveryDate as Preferab8_25_6_, order0_.TotalPrice as TotalPrice25_6_, user1_.ID as ID23_0_, user1_.IsUserActive as IsUserAc2_23_0_, user1_.Balance as Balance23_0_, user1_.CustomerTypeRef as Customer9_23_0_, user1_.Email as Email23_0_, user1_.FirstName as FirstName23_0_, user1_.LastName as LastName23_0_, user1_.Login as Login23_0_, user1_.Password as Password23_0_, user1_.RegionRef as RegionRef23_0_, user1_.RoleRef as RoleRef23_0_, customerty2_.ID as ID22_1_, customerty2_.Discount as Discount22_1_, customerty2_.MaxRange as MaxRange22_1_, customerty2_.MinRange as MinRange22_1_, customerty2_.TypeName as TypeName22_1_, region3_.ID as ID21_2_, region3_.RegionName as RegionName21_2_, role4_.ID as ID20_3_, role4_.RoleName as RoleName20_3_, user5_.ID as ID23_4_, user5_.IsUserActive as IsUserAc2_23_4_, user5_.Balance as Balance23_4_, user5_.CustomerTypeRef as Customer9_23_4_, user5_.Email as Email23_4_, user5_.FirstName as FirstName23_4_, user5_.LastName as LastName23_4_, user5_.Login as Login23_4_, user5_.Password as Password23_4_, user5_.RegionRef as RegionRef23_4_, user5_.RoleRef as RoleRef23_4_, orderstatu6_.ID as ID24_5_, orderstatu6_.OrederStatusName as OrederSt2_24_5_ from Orders order0_ left outer join Users user1_ on order0_.Assigne=user1_.ID left outer join CustomerTypes customerty2_ on user1_.CustomerTypeRef=customerty2_.ID left outer join Regions region3_ on user1_.RegionRef=region3_.ID left outer join Roles role4_ on user1_.RoleRef=role4_.ID left outer join Users user5_ on order0_.Customer=user5_.ID left outer join OrderStatuses orderstatu6_ on order0_.OrderStatusRef=orderstatu6_.ID where order0_.ID=?
[2017-10-14 14:08:54,561]DEBUG 12348[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Order [UPGRADE]: select order0_.ID as ID25_0_, order0_.Assigne as Assigne25_0_, order0_.Customer as Customer25_0_, order0_.DeliveryDate as Delivery2_25_0_, order0_.IsGift as IsGift25_0_, order0_.MaxDiscount as MaxDisco4_25_0_, order0_.OrderDate as OrderDate25_0_, order0_.OrderName as OrderName25_0_, order0_.OrderNumber as OrderNum7_25_0_, order0_.OrderStatusRef as OrderSt12_25_0_, order0_.PreferableDeliveryDate as Preferab8_25_0_, order0_.TotalPrice as TotalPrice25_0_ from Orders order0_ where order0_.ID=? for update
[2017-10-14 14:08:54,561]DEBUG 12348[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Order [UPGRADE_NOWAIT]: select order0_.ID as ID25_0_, order0_.Assigne as Assigne25_0_, order0_.Customer as Customer25_0_, order0_.DeliveryDate as Delivery2_25_0_, order0_.IsGift as IsGift25_0_, order0_.MaxDiscount as MaxDisco4_25_0_, order0_.OrderDate as OrderDate25_0_, order0_.OrderName as OrderName25_0_, order0_.OrderNumber as OrderNum7_25_0_, order0_.OrderStatusRef as OrderSt12_25_0_, order0_.PreferableDeliveryDate as Preferab8_25_0_, order0_.TotalPrice as TotalPrice25_0_ from Orders order0_ where order0_.ID=? for update
[2017-10-14 14:08:54,562]DEBUG 12349[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Order [FORCE]: select order0_.ID as ID25_0_, order0_.Assigne as Assigne25_0_, order0_.Customer as Customer25_0_, order0_.DeliveryDate as Delivery2_25_0_, order0_.IsGift as IsGift25_0_, order0_.MaxDiscount as MaxDisco4_25_0_, order0_.OrderDate as OrderDate25_0_, order0_.OrderName as OrderName25_0_, order0_.OrderNumber as OrderNum7_25_0_, order0_.OrderStatusRef as OrderSt12_25_0_, order0_.PreferableDeliveryDate as Preferab8_25_0_, order0_.TotalPrice as TotalPrice25_0_ from Orders order0_ where order0_.ID=? for update
[2017-10-14 14:08:54,562]DEBUG 12349[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Order [PESSIMISTIC_READ]: select order0_.ID as ID25_0_, order0_.Assigne as Assigne25_0_, order0_.Customer as Customer25_0_, order0_.DeliveryDate as Delivery2_25_0_, order0_.IsGift as IsGift25_0_, order0_.MaxDiscount as MaxDisco4_25_0_, order0_.OrderDate as OrderDate25_0_, order0_.OrderName as OrderName25_0_, order0_.OrderNumber as OrderNum7_25_0_, order0_.OrderStatusRef as OrderSt12_25_0_, order0_.PreferableDeliveryDate as Preferab8_25_0_, order0_.TotalPrice as TotalPrice25_0_ from Orders order0_ where order0_.ID=? lock in share mode
[2017-10-14 14:08:54,562]DEBUG 12349[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Order [PESSIMISTIC_WRITE]: select order0_.ID as ID25_0_, order0_.Assigne as Assigne25_0_, order0_.Customer as Customer25_0_, order0_.DeliveryDate as Delivery2_25_0_, order0_.IsGift as IsGift25_0_, order0_.MaxDiscount as MaxDisco4_25_0_, order0_.OrderDate as OrderDate25_0_, order0_.OrderName as OrderName25_0_, order0_.OrderNumber as OrderNum7_25_0_, order0_.OrderStatusRef as OrderSt12_25_0_, order0_.PreferableDeliveryDate as Preferab8_25_0_, order0_.TotalPrice as TotalPrice25_0_ from Orders order0_ where order0_.ID=? for update
[2017-10-14 14:08:54,562]DEBUG 12349[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Order [PESSIMISTIC_FORCE_INCREMENT]: select order0_.ID as ID25_0_, order0_.Assigne as Assigne25_0_, order0_.Customer as Customer25_0_, order0_.DeliveryDate as Delivery2_25_0_, order0_.IsGift as IsGift25_0_, order0_.MaxDiscount as MaxDisco4_25_0_, order0_.OrderDate as OrderDate25_0_, order0_.OrderName as OrderName25_0_, order0_.OrderNumber as OrderNum7_25_0_, order0_.OrderStatusRef as OrderSt12_25_0_, order0_.PreferableDeliveryDate as Preferab8_25_0_, order0_.TotalPrice as TotalPrice25_0_ from Orders order0_ where order0_.ID=? for update
[2017-10-14 14:08:54,563]DEBUG 12350[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Order [OPTIMISTIC]: select order0_.ID as ID25_6_, order0_.Assigne as Assigne25_6_, order0_.Customer as Customer25_6_, order0_.DeliveryDate as Delivery2_25_6_, order0_.IsGift as IsGift25_6_, order0_.MaxDiscount as MaxDisco4_25_6_, order0_.OrderDate as OrderDate25_6_, order0_.OrderName as OrderName25_6_, order0_.OrderNumber as OrderNum7_25_6_, order0_.OrderStatusRef as OrderSt12_25_6_, order0_.PreferableDeliveryDate as Preferab8_25_6_, order0_.TotalPrice as TotalPrice25_6_, user1_.ID as ID23_0_, user1_.IsUserActive as IsUserAc2_23_0_, user1_.Balance as Balance23_0_, user1_.CustomerTypeRef as Customer9_23_0_, user1_.Email as Email23_0_, user1_.FirstName as FirstName23_0_, user1_.LastName as LastName23_0_, user1_.Login as Login23_0_, user1_.Password as Password23_0_, user1_.RegionRef as RegionRef23_0_, user1_.RoleRef as RoleRef23_0_, customerty2_.ID as ID22_1_, customerty2_.Discount as Discount22_1_, customerty2_.MaxRange as MaxRange22_1_, customerty2_.MinRange as MinRange22_1_, customerty2_.TypeName as TypeName22_1_, region3_.ID as ID21_2_, region3_.RegionName as RegionName21_2_, role4_.ID as ID20_3_, role4_.RoleName as RoleName20_3_, user5_.ID as ID23_4_, user5_.IsUserActive as IsUserAc2_23_4_, user5_.Balance as Balance23_4_, user5_.CustomerTypeRef as Customer9_23_4_, user5_.Email as Email23_4_, user5_.FirstName as FirstName23_4_, user5_.LastName as LastName23_4_, user5_.Login as Login23_4_, user5_.Password as Password23_4_, user5_.RegionRef as RegionRef23_4_, user5_.RoleRef as RoleRef23_4_, orderstatu6_.ID as ID24_5_, orderstatu6_.OrederStatusName as OrederSt2_24_5_ from Orders order0_ left outer join Users user1_ on order0_.Assigne=user1_.ID left outer join CustomerTypes customerty2_ on user1_.CustomerTypeRef=customerty2_.ID left outer join Regions region3_ on user1_.RegionRef=region3_.ID left outer join Roles role4_ on user1_.RoleRef=role4_.ID left outer join Users user5_ on order0_.Customer=user5_.ID left outer join OrderStatuses orderstatu6_ on order0_.OrderStatusRef=orderstatu6_.ID where order0_.ID=?
[2017-10-14 14:08:54,564]DEBUG 12351[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Order [OPTIMISTIC_FORCE_INCREMENT]: select order0_.ID as ID25_6_, order0_.Assigne as Assigne25_6_, order0_.Customer as Customer25_6_, order0_.DeliveryDate as Delivery2_25_6_, order0_.IsGift as IsGift25_6_, order0_.MaxDiscount as MaxDisco4_25_6_, order0_.OrderDate as OrderDate25_6_, order0_.OrderName as OrderName25_6_, order0_.OrderNumber as OrderNum7_25_6_, order0_.OrderStatusRef as OrderSt12_25_6_, order0_.PreferableDeliveryDate as Preferab8_25_6_, order0_.TotalPrice as TotalPrice25_6_, user1_.ID as ID23_0_, user1_.IsUserActive as IsUserAc2_23_0_, user1_.Balance as Balance23_0_, user1_.CustomerTypeRef as Customer9_23_0_, user1_.Email as Email23_0_, user1_.FirstName as FirstName23_0_, user1_.LastName as LastName23_0_, user1_.Login as Login23_0_, user1_.Password as Password23_0_, user1_.RegionRef as RegionRef23_0_, user1_.RoleRef as RoleRef23_0_, customerty2_.ID as ID22_1_, customerty2_.Discount as Discount22_1_, customerty2_.MaxRange as MaxRange22_1_, customerty2_.MinRange as MinRange22_1_, customerty2_.TypeName as TypeName22_1_, region3_.ID as ID21_2_, region3_.RegionName as RegionName21_2_, role4_.ID as ID20_3_, role4_.RoleName as RoleName20_3_, user5_.ID as ID23_4_, user5_.IsUserActive as IsUserAc2_23_4_, user5_.Balance as Balance23_4_, user5_.CustomerTypeRef as Customer9_23_4_, user5_.Email as Email23_4_, user5_.FirstName as FirstName23_4_, user5_.LastName as LastName23_4_, user5_.Login as Login23_4_, user5_.Password as Password23_4_, user5_.RegionRef as RegionRef23_4_, user5_.RoleRef as RoleRef23_4_, orderstatu6_.ID as ID24_5_, orderstatu6_.OrederStatusName as OrederSt2_24_5_ from Orders order0_ left outer join Users user1_ on order0_.Assigne=user1_.ID left outer join CustomerTypes customerty2_ on user1_.CustomerTypeRef=customerty2_.ID left outer join Regions region3_ on user1_.RegionRef=region3_.ID left outer join Roles role4_ on user1_.RoleRef=role4_.ID left outer join Users user5_ on order0_.Customer=user5_.ID left outer join OrderStatuses orderstatu6_ on order0_.OrderStatusRef=orderstatu6_.ID where order0_.ID=?
[2017-10-14 14:08:54,564]DEBUG 12351[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.softserveinc.edu.oms.domain.entities.Order: select order0_.ID as ID25_6_, order0_.Assigne as Assigne25_6_, order0_.Customer as Customer25_6_, order0_.DeliveryDate as Delivery2_25_6_, order0_.IsGift as IsGift25_6_, order0_.MaxDiscount as MaxDisco4_25_6_, order0_.OrderDate as OrderDate25_6_, order0_.OrderName as OrderName25_6_, order0_.OrderNumber as OrderNum7_25_6_, order0_.OrderStatusRef as OrderSt12_25_6_, order0_.PreferableDeliveryDate as Preferab8_25_6_, order0_.TotalPrice as TotalPrice25_6_, user1_.ID as ID23_0_, user1_.IsUserActive as IsUserAc2_23_0_, user1_.Balance as Balance23_0_, user1_.CustomerTypeRef as Customer9_23_0_, user1_.Email as Email23_0_, user1_.FirstName as FirstName23_0_, user1_.LastName as LastName23_0_, user1_.Login as Login23_0_, user1_.Password as Password23_0_, user1_.RegionRef as RegionRef23_0_, user1_.RoleRef as RoleRef23_0_, customerty2_.ID as ID22_1_, customerty2_.Discount as Discount22_1_, customerty2_.MaxRange as MaxRange22_1_, customerty2_.MinRange as MinRange22_1_, customerty2_.TypeName as TypeName22_1_, region3_.ID as ID21_2_, region3_.RegionName as RegionName21_2_, role4_.ID as ID20_3_, role4_.RoleName as RoleName20_3_, user5_.ID as ID23_4_, user5_.IsUserActive as IsUserAc2_23_4_, user5_.Balance as Balance23_4_, user5_.CustomerTypeRef as Customer9_23_4_, user5_.Email as Email23_4_, user5_.FirstName as FirstName23_4_, user5_.LastName as LastName23_4_, user5_.Login as Login23_4_, user5_.Password as Password23_4_, user5_.RegionRef as RegionRef23_4_, user5_.RoleRef as RoleRef23_4_, orderstatu6_.ID as ID24_5_, orderstatu6_.OrederStatusName as OrederSt2_24_5_ from Orders order0_ left outer join Users user1_ on order0_.Assigne=user1_.ID left outer join CustomerTypes customerty2_ on user1_.CustomerTypeRef=customerty2_.ID left outer join Regions region3_ on user1_.RegionRef=region3_.ID left outer join Roles role4_ on user1_.RoleRef=role4_.ID left outer join Users user5_ on order0_.Customer=user5_.ID left outer join OrderStatuses orderstatu6_ on order0_.OrderStatusRef=orderstatu6_.ID where order0_.ID=?
[2017-10-14 14:08:54,565]DEBUG 12352[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.softserveinc.edu.oms.domain.entities.Order: select order0_.ID as ID25_0_, order0_.Assigne as Assigne25_0_, order0_.Customer as Customer25_0_, order0_.DeliveryDate as Delivery2_25_0_, order0_.IsGift as IsGift25_0_, order0_.MaxDiscount as MaxDisco4_25_0_, order0_.OrderDate as OrderDate25_0_, order0_.OrderName as OrderName25_0_, order0_.OrderNumber as OrderNum7_25_0_, order0_.OrderStatusRef as OrderSt12_25_0_, order0_.PreferableDeliveryDate as Preferab8_25_0_, order0_.TotalPrice as TotalPrice25_0_ from Orders order0_ where order0_.ID=?
[2017-10-14 14:08:54,565]DEBUG 12352[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Dimension [NONE]: select dimension0_.ID as ID27_0_, dimension0_.DimensionName as Dimensio2_27_0_, dimension0_.NumberOfProducts as NumberOf3_27_0_ from Dimensions dimension0_ where dimension0_.ID=?
[2017-10-14 14:08:54,565]DEBUG 12352[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Dimension [READ]: select dimension0_.ID as ID27_0_, dimension0_.DimensionName as Dimensio2_27_0_, dimension0_.NumberOfProducts as NumberOf3_27_0_ from Dimensions dimension0_ where dimension0_.ID=?
[2017-10-14 14:08:54,565]DEBUG 12352[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Dimension [UPGRADE]: select dimension0_.ID as ID27_0_, dimension0_.DimensionName as Dimensio2_27_0_, dimension0_.NumberOfProducts as NumberOf3_27_0_ from Dimensions dimension0_ where dimension0_.ID=? for update
[2017-10-14 14:08:54,566]DEBUG 12353[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Dimension [UPGRADE_NOWAIT]: select dimension0_.ID as ID27_0_, dimension0_.DimensionName as Dimensio2_27_0_, dimension0_.NumberOfProducts as NumberOf3_27_0_ from Dimensions dimension0_ where dimension0_.ID=? for update
[2017-10-14 14:08:54,566]DEBUG 12353[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Dimension [FORCE]: select dimension0_.ID as ID27_0_, dimension0_.DimensionName as Dimensio2_27_0_, dimension0_.NumberOfProducts as NumberOf3_27_0_ from Dimensions dimension0_ where dimension0_.ID=? for update
[2017-10-14 14:08:54,566]DEBUG 12353[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Dimension [PESSIMISTIC_READ]: select dimension0_.ID as ID27_0_, dimension0_.DimensionName as Dimensio2_27_0_, dimension0_.NumberOfProducts as NumberOf3_27_0_ from Dimensions dimension0_ where dimension0_.ID=? lock in share mode
[2017-10-14 14:08:54,566]DEBUG 12353[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Dimension [PESSIMISTIC_WRITE]: select dimension0_.ID as ID27_0_, dimension0_.DimensionName as Dimensio2_27_0_, dimension0_.NumberOfProducts as NumberOf3_27_0_ from Dimensions dimension0_ where dimension0_.ID=? for update
[2017-10-14 14:08:54,566]DEBUG 12353[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Dimension [PESSIMISTIC_FORCE_INCREMENT]: select dimension0_.ID as ID27_0_, dimension0_.DimensionName as Dimensio2_27_0_, dimension0_.NumberOfProducts as NumberOf3_27_0_ from Dimensions dimension0_ where dimension0_.ID=? for update
[2017-10-14 14:08:54,567]DEBUG 12354[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Dimension [OPTIMISTIC]: select dimension0_.ID as ID27_0_, dimension0_.DimensionName as Dimensio2_27_0_, dimension0_.NumberOfProducts as NumberOf3_27_0_ from Dimensions dimension0_ where dimension0_.ID=?
[2017-10-14 14:08:54,567]DEBUG 12354[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Dimension [OPTIMISTIC_FORCE_INCREMENT]: select dimension0_.ID as ID27_0_, dimension0_.DimensionName as Dimensio2_27_0_, dimension0_.NumberOfProducts as NumberOf3_27_0_ from Dimensions dimension0_ where dimension0_.ID=?
[2017-10-14 14:08:54,567]DEBUG 12354[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.softserveinc.edu.oms.domain.entities.Dimension: select dimension0_.ID as ID27_0_, dimension0_.DimensionName as Dimensio2_27_0_, dimension0_.NumberOfProducts as NumberOf3_27_0_ from Dimensions dimension0_ where dimension0_.ID=?
[2017-10-14 14:08:54,567]DEBUG 12354[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.softserveinc.edu.oms.domain.entities.Dimension: select dimension0_.ID as ID27_0_, dimension0_.DimensionName as Dimensio2_27_0_, dimension0_.NumberOfProducts as NumberOf3_27_0_ from Dimensions dimension0_ where dimension0_.ID=?
[2017-10-14 14:08:54,567]DEBUG 12354[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderStatus [NONE]: select orderstatu0_.ID as ID24_0_, orderstatu0_.OrederStatusName as OrederSt2_24_0_ from OrderStatuses orderstatu0_ where orderstatu0_.ID=?
[2017-10-14 14:08:54,568]DEBUG 12355[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderStatus [READ]: select orderstatu0_.ID as ID24_0_, orderstatu0_.OrederStatusName as OrederSt2_24_0_ from OrderStatuses orderstatu0_ where orderstatu0_.ID=?
[2017-10-14 14:08:54,568]DEBUG 12355[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderStatus [UPGRADE]: select orderstatu0_.ID as ID24_0_, orderstatu0_.OrederStatusName as OrederSt2_24_0_ from OrderStatuses orderstatu0_ where orderstatu0_.ID=? for update
[2017-10-14 14:08:54,568]DEBUG 12355[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderStatus [UPGRADE_NOWAIT]: select orderstatu0_.ID as ID24_0_, orderstatu0_.OrederStatusName as OrederSt2_24_0_ from OrderStatuses orderstatu0_ where orderstatu0_.ID=? for update
[2017-10-14 14:08:54,568]DEBUG 12355[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderStatus [FORCE]: select orderstatu0_.ID as ID24_0_, orderstatu0_.OrederStatusName as OrederSt2_24_0_ from OrderStatuses orderstatu0_ where orderstatu0_.ID=? for update
[2017-10-14 14:08:54,568]DEBUG 12355[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderStatus [PESSIMISTIC_READ]: select orderstatu0_.ID as ID24_0_, orderstatu0_.OrederStatusName as OrederSt2_24_0_ from OrderStatuses orderstatu0_ where orderstatu0_.ID=? lock in share mode
[2017-10-14 14:08:54,569]DEBUG 12356[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderStatus [PESSIMISTIC_WRITE]: select orderstatu0_.ID as ID24_0_, orderstatu0_.OrederStatusName as OrederSt2_24_0_ from OrderStatuses orderstatu0_ where orderstatu0_.ID=? for update
[2017-10-14 14:08:54,569]DEBUG 12356[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderStatus [PESSIMISTIC_FORCE_INCREMENT]: select orderstatu0_.ID as ID24_0_, orderstatu0_.OrederStatusName as OrederSt2_24_0_ from OrderStatuses orderstatu0_ where orderstatu0_.ID=? for update
[2017-10-14 14:08:54,569]DEBUG 12356[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderStatus [OPTIMISTIC]: select orderstatu0_.ID as ID24_0_, orderstatu0_.OrederStatusName as OrederSt2_24_0_ from OrderStatuses orderstatu0_ where orderstatu0_.ID=?
[2017-10-14 14:08:54,569]DEBUG 12356[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderStatus [OPTIMISTIC_FORCE_INCREMENT]: select orderstatu0_.ID as ID24_0_, orderstatu0_.OrederStatusName as OrederSt2_24_0_ from OrderStatuses orderstatu0_ where orderstatu0_.ID=?
[2017-10-14 14:08:54,569]DEBUG 12356[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.softserveinc.edu.oms.domain.entities.OrderStatus: select orderstatu0_.ID as ID24_0_, orderstatu0_.OrederStatusName as OrederSt2_24_0_ from OrderStatuses orderstatu0_ where orderstatu0_.ID=?
[2017-10-14 14:08:54,570]DEBUG 12357[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.softserveinc.edu.oms.domain.entities.OrderStatus: select orderstatu0_.ID as ID24_0_, orderstatu0_.OrederStatusName as OrederSt2_24_0_ from OrderStatuses orderstatu0_ where orderstatu0_.ID=?
[2017-10-14 14:08:54,570]DEBUG 12357[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Region [NONE]: select region0_.ID as ID21_0_, region0_.RegionName as RegionName21_0_ from Regions region0_ where region0_.ID=?
[2017-10-14 14:08:54,570]DEBUG 12357[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Region [READ]: select region0_.ID as ID21_0_, region0_.RegionName as RegionName21_0_ from Regions region0_ where region0_.ID=?
[2017-10-14 14:08:54,570]DEBUG 12357[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Region [UPGRADE]: select region0_.ID as ID21_0_, region0_.RegionName as RegionName21_0_ from Regions region0_ where region0_.ID=? for update
[2017-10-14 14:08:54,570]DEBUG 12357[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Region [UPGRADE_NOWAIT]: select region0_.ID as ID21_0_, region0_.RegionName as RegionName21_0_ from Regions region0_ where region0_.ID=? for update
[2017-10-14 14:08:54,571]DEBUG 12358[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Region [FORCE]: select region0_.ID as ID21_0_, region0_.RegionName as RegionName21_0_ from Regions region0_ where region0_.ID=? for update
[2017-10-14 14:08:54,571]DEBUG 12358[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Region [PESSIMISTIC_READ]: select region0_.ID as ID21_0_, region0_.RegionName as RegionName21_0_ from Regions region0_ where region0_.ID=? lock in share mode
[2017-10-14 14:08:54,571]DEBUG 12358[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Region [PESSIMISTIC_WRITE]: select region0_.ID as ID21_0_, region0_.RegionName as RegionName21_0_ from Regions region0_ where region0_.ID=? for update
[2017-10-14 14:08:54,571]DEBUG 12358[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Region [PESSIMISTIC_FORCE_INCREMENT]: select region0_.ID as ID21_0_, region0_.RegionName as RegionName21_0_ from Regions region0_ where region0_.ID=? for update
[2017-10-14 14:08:54,571]DEBUG 12358[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Region [OPTIMISTIC]: select region0_.ID as ID21_0_, region0_.RegionName as RegionName21_0_ from Regions region0_ where region0_.ID=?
[2017-10-14 14:08:54,572]DEBUG 12359[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Region [OPTIMISTIC_FORCE_INCREMENT]: select region0_.ID as ID21_0_, region0_.RegionName as RegionName21_0_ from Regions region0_ where region0_.ID=?
[2017-10-14 14:08:54,572]DEBUG 12359[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.softserveinc.edu.oms.domain.entities.Region: select region0_.ID as ID21_0_, region0_.RegionName as RegionName21_0_ from Regions region0_ where region0_.ID=?
[2017-10-14 14:08:54,572]DEBUG 12359[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.softserveinc.edu.oms.domain.entities.Region: select region0_.ID as ID21_0_, region0_.RegionName as RegionName21_0_ from Regions region0_ where region0_.ID=?
[2017-10-14 14:08:54,572]DEBUG 12359[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.User [NONE]: select user0_.ID as ID23_3_, user0_.IsUserActive as IsUserAc2_23_3_, user0_.Balance as Balance23_3_, user0_.CustomerTypeRef as Customer9_23_3_, user0_.Email as Email23_3_, user0_.FirstName as FirstName23_3_, user0_.LastName as LastName23_3_, user0_.Login as Login23_3_, user0_.Password as Password23_3_, user0_.RegionRef as RegionRef23_3_, user0_.RoleRef as RoleRef23_3_, customerty1_.ID as ID22_0_, customerty1_.Discount as Discount22_0_, customerty1_.MaxRange as MaxRange22_0_, customerty1_.MinRange as MinRange22_0_, customerty1_.TypeName as TypeName22_0_, region2_.ID as ID21_1_, region2_.RegionName as RegionName21_1_, role3_.ID as ID20_2_, role3_.RoleName as RoleName20_2_ from Users user0_ left outer join CustomerTypes customerty1_ on user0_.CustomerTypeRef=customerty1_.ID left outer join Regions region2_ on user0_.RegionRef=region2_.ID inner join Roles role3_ on user0_.RoleRef=role3_.ID where user0_.ID=?
[2017-10-14 14:08:54,573]DEBUG 12360[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.User [READ]: select user0_.ID as ID23_3_, user0_.IsUserActive as IsUserAc2_23_3_, user0_.Balance as Balance23_3_, user0_.CustomerTypeRef as Customer9_23_3_, user0_.Email as Email23_3_, user0_.FirstName as FirstName23_3_, user0_.LastName as LastName23_3_, user0_.Login as Login23_3_, user0_.Password as Password23_3_, user0_.RegionRef as RegionRef23_3_, user0_.RoleRef as RoleRef23_3_, customerty1_.ID as ID22_0_, customerty1_.Discount as Discount22_0_, customerty1_.MaxRange as MaxRange22_0_, customerty1_.MinRange as MinRange22_0_, customerty1_.TypeName as TypeName22_0_, region2_.ID as ID21_1_, region2_.RegionName as RegionName21_1_, role3_.ID as ID20_2_, role3_.RoleName as RoleName20_2_ from Users user0_ left outer join CustomerTypes customerty1_ on user0_.CustomerTypeRef=customerty1_.ID left outer join Regions region2_ on user0_.RegionRef=region2_.ID inner join Roles role3_ on user0_.RoleRef=role3_.ID where user0_.ID=?
[2017-10-14 14:08:54,573]DEBUG 12360[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.User [UPGRADE]: select user0_.ID as ID23_0_, user0_.IsUserActive as IsUserAc2_23_0_, user0_.Balance as Balance23_0_, user0_.CustomerTypeRef as Customer9_23_0_, user0_.Email as Email23_0_, user0_.FirstName as FirstName23_0_, user0_.LastName as LastName23_0_, user0_.Login as Login23_0_, user0_.Password as Password23_0_, user0_.RegionRef as RegionRef23_0_, user0_.RoleRef as RoleRef23_0_ from Users user0_ where user0_.ID=? for update
[2017-10-14 14:08:54,573]DEBUG 12360[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.User [UPGRADE_NOWAIT]: select user0_.ID as ID23_0_, user0_.IsUserActive as IsUserAc2_23_0_, user0_.Balance as Balance23_0_, user0_.CustomerTypeRef as Customer9_23_0_, user0_.Email as Email23_0_, user0_.FirstName as FirstName23_0_, user0_.LastName as LastName23_0_, user0_.Login as Login23_0_, user0_.Password as Password23_0_, user0_.RegionRef as RegionRef23_0_, user0_.RoleRef as RoleRef23_0_ from Users user0_ where user0_.ID=? for update
[2017-10-14 14:08:54,574]DEBUG 12361[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.User [FORCE]: select user0_.ID as ID23_0_, user0_.IsUserActive as IsUserAc2_23_0_, user0_.Balance as Balance23_0_, user0_.CustomerTypeRef as Customer9_23_0_, user0_.Email as Email23_0_, user0_.FirstName as FirstName23_0_, user0_.LastName as LastName23_0_, user0_.Login as Login23_0_, user0_.Password as Password23_0_, user0_.RegionRef as RegionRef23_0_, user0_.RoleRef as RoleRef23_0_ from Users user0_ where user0_.ID=? for update
[2017-10-14 14:08:54,574]DEBUG 12361[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.User [PESSIMISTIC_READ]: select user0_.ID as ID23_0_, user0_.IsUserActive as IsUserAc2_23_0_, user0_.Balance as Balance23_0_, user0_.CustomerTypeRef as Customer9_23_0_, user0_.Email as Email23_0_, user0_.FirstName as FirstName23_0_, user0_.LastName as LastName23_0_, user0_.Login as Login23_0_, user0_.Password as Password23_0_, user0_.RegionRef as RegionRef23_0_, user0_.RoleRef as RoleRef23_0_ from Users user0_ where user0_.ID=? lock in share mode
[2017-10-14 14:08:54,574]DEBUG 12361[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.User [PESSIMISTIC_WRITE]: select user0_.ID as ID23_0_, user0_.IsUserActive as IsUserAc2_23_0_, user0_.Balance as Balance23_0_, user0_.CustomerTypeRef as Customer9_23_0_, user0_.Email as Email23_0_, user0_.FirstName as FirstName23_0_, user0_.LastName as LastName23_0_, user0_.Login as Login23_0_, user0_.Password as Password23_0_, user0_.RegionRef as RegionRef23_0_, user0_.RoleRef as RoleRef23_0_ from Users user0_ where user0_.ID=? for update
[2017-10-14 14:08:54,574]DEBUG 12361[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.ID as ID23_0_, user0_.IsUserActive as IsUserAc2_23_0_, user0_.Balance as Balance23_0_, user0_.CustomerTypeRef as Customer9_23_0_, user0_.Email as Email23_0_, user0_.FirstName as FirstName23_0_, user0_.LastName as LastName23_0_, user0_.Login as Login23_0_, user0_.Password as Password23_0_, user0_.RegionRef as RegionRef23_0_, user0_.RoleRef as RoleRef23_0_ from Users user0_ where user0_.ID=? for update
[2017-10-14 14:08:54,575]DEBUG 12362[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.User [OPTIMISTIC]: select user0_.ID as ID23_3_, user0_.IsUserActive as IsUserAc2_23_3_, user0_.Balance as Balance23_3_, user0_.CustomerTypeRef as Customer9_23_3_, user0_.Email as Email23_3_, user0_.FirstName as FirstName23_3_, user0_.LastName as LastName23_3_, user0_.Login as Login23_3_, user0_.Password as Password23_3_, user0_.RegionRef as RegionRef23_3_, user0_.RoleRef as RoleRef23_3_, customerty1_.ID as ID22_0_, customerty1_.Discount as Discount22_0_, customerty1_.MaxRange as MaxRange22_0_, customerty1_.MinRange as MinRange22_0_, customerty1_.TypeName as TypeName22_0_, region2_.ID as ID21_1_, region2_.RegionName as RegionName21_1_, role3_.ID as ID20_2_, role3_.RoleName as RoleName20_2_ from Users user0_ left outer join CustomerTypes customerty1_ on user0_.CustomerTypeRef=customerty1_.ID left outer join Regions region2_ on user0_.RegionRef=region2_.ID inner join Roles role3_ on user0_.RoleRef=role3_.ID where user0_.ID=?
[2017-10-14 14:08:54,575]DEBUG 12362[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.ID as ID23_3_, user0_.IsUserActive as IsUserAc2_23_3_, user0_.Balance as Balance23_3_, user0_.CustomerTypeRef as Customer9_23_3_, user0_.Email as Email23_3_, user0_.FirstName as FirstName23_3_, user0_.LastName as LastName23_3_, user0_.Login as Login23_3_, user0_.Password as Password23_3_, user0_.RegionRef as RegionRef23_3_, user0_.RoleRef as RoleRef23_3_, customerty1_.ID as ID22_0_, customerty1_.Discount as Discount22_0_, customerty1_.MaxRange as MaxRange22_0_, customerty1_.MinRange as MinRange22_0_, customerty1_.TypeName as TypeName22_0_, region2_.ID as ID21_1_, region2_.RegionName as RegionName21_1_, role3_.ID as ID20_2_, role3_.RoleName as RoleName20_2_ from Users user0_ left outer join CustomerTypes customerty1_ on user0_.CustomerTypeRef=customerty1_.ID left outer join Regions region2_ on user0_.RegionRef=region2_.ID inner join Roles role3_ on user0_.RoleRef=role3_.ID where user0_.ID=?
[2017-10-14 14:08:54,576]DEBUG 12363[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.softserveinc.edu.oms.domain.entities.User: select user0_.ID as ID23_3_, user0_.IsUserActive as IsUserAc2_23_3_, user0_.Balance as Balance23_3_, user0_.CustomerTypeRef as Customer9_23_3_, user0_.Email as Email23_3_, user0_.FirstName as FirstName23_3_, user0_.LastName as LastName23_3_, user0_.Login as Login23_3_, user0_.Password as Password23_3_, user0_.RegionRef as RegionRef23_3_, user0_.RoleRef as RoleRef23_3_, customerty1_.ID as ID22_0_, customerty1_.Discount as Discount22_0_, customerty1_.MaxRange as MaxRange22_0_, customerty1_.MinRange as MinRange22_0_, customerty1_.TypeName as TypeName22_0_, region2_.ID as ID21_1_, region2_.RegionName as RegionName21_1_, role3_.ID as ID20_2_, role3_.RoleName as RoleName20_2_ from Users user0_ left outer join CustomerTypes customerty1_ on user0_.CustomerTypeRef=customerty1_.ID left outer join Regions region2_ on user0_.RegionRef=region2_.ID inner join Roles role3_ on user0_.RoleRef=role3_.ID where user0_.ID=?
[2017-10-14 14:08:54,576]DEBUG 12363[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.softserveinc.edu.oms.domain.entities.User: select user0_.ID as ID23_0_, user0_.IsUserActive as IsUserAc2_23_0_, user0_.Balance as Balance23_0_, user0_.CustomerTypeRef as Customer9_23_0_, user0_.Email as Email23_0_, user0_.FirstName as FirstName23_0_, user0_.LastName as LastName23_0_, user0_.Login as Login23_0_, user0_.Password as Password23_0_, user0_.RegionRef as RegionRef23_0_, user0_.RoleRef as RoleRef23_0_ from Users user0_ where user0_.ID=?
[2017-10-14 14:08:54,576]DEBUG 12363[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CustomerType [NONE]: select customerty0_.ID as ID22_0_, customerty0_.Discount as Discount22_0_, customerty0_.MaxRange as MaxRange22_0_, customerty0_.MinRange as MinRange22_0_, customerty0_.TypeName as TypeName22_0_ from CustomerTypes customerty0_ where customerty0_.ID=?
[2017-10-14 14:08:54,576]DEBUG 12363[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CustomerType [READ]: select customerty0_.ID as ID22_0_, customerty0_.Discount as Discount22_0_, customerty0_.MaxRange as MaxRange22_0_, customerty0_.MinRange as MinRange22_0_, customerty0_.TypeName as TypeName22_0_ from CustomerTypes customerty0_ where customerty0_.ID=?
[2017-10-14 14:08:54,577]DEBUG 12364[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CustomerType [UPGRADE]: select customerty0_.ID as ID22_0_, customerty0_.Discount as Discount22_0_, customerty0_.MaxRange as MaxRange22_0_, customerty0_.MinRange as MinRange22_0_, customerty0_.TypeName as TypeName22_0_ from CustomerTypes customerty0_ where customerty0_.ID=? for update
[2017-10-14 14:08:54,577]DEBUG 12364[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CustomerType [UPGRADE_NOWAIT]: select customerty0_.ID as ID22_0_, customerty0_.Discount as Discount22_0_, customerty0_.MaxRange as MaxRange22_0_, customerty0_.MinRange as MinRange22_0_, customerty0_.TypeName as TypeName22_0_ from CustomerTypes customerty0_ where customerty0_.ID=? for update
[2017-10-14 14:08:54,577]DEBUG 12364[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CustomerType [FORCE]: select customerty0_.ID as ID22_0_, customerty0_.Discount as Discount22_0_, customerty0_.MaxRange as MaxRange22_0_, customerty0_.MinRange as MinRange22_0_, customerty0_.TypeName as TypeName22_0_ from CustomerTypes customerty0_ where customerty0_.ID=? for update
[2017-10-14 14:08:54,577]DEBUG 12364[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CustomerType [PESSIMISTIC_READ]: select customerty0_.ID as ID22_0_, customerty0_.Discount as Discount22_0_, customerty0_.MaxRange as MaxRange22_0_, customerty0_.MinRange as MinRange22_0_, customerty0_.TypeName as TypeName22_0_ from CustomerTypes customerty0_ where customerty0_.ID=? lock in share mode
[2017-10-14 14:08:54,577]DEBUG 12364[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CustomerType [PESSIMISTIC_WRITE]: select customerty0_.ID as ID22_0_, customerty0_.Discount as Discount22_0_, customerty0_.MaxRange as MaxRange22_0_, customerty0_.MinRange as MinRange22_0_, customerty0_.TypeName as TypeName22_0_ from CustomerTypes customerty0_ where customerty0_.ID=? for update
[2017-10-14 14:08:54,578]DEBUG 12365[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CustomerType [PESSIMISTIC_FORCE_INCREMENT]: select customerty0_.ID as ID22_0_, customerty0_.Discount as Discount22_0_, customerty0_.MaxRange as MaxRange22_0_, customerty0_.MinRange as MinRange22_0_, customerty0_.TypeName as TypeName22_0_ from CustomerTypes customerty0_ where customerty0_.ID=? for update
[2017-10-14 14:08:54,578]DEBUG 12365[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CustomerType [OPTIMISTIC]: select customerty0_.ID as ID22_0_, customerty0_.Discount as Discount22_0_, customerty0_.MaxRange as MaxRange22_0_, customerty0_.MinRange as MinRange22_0_, customerty0_.TypeName as TypeName22_0_ from CustomerTypes customerty0_ where customerty0_.ID=?
[2017-10-14 14:08:54,578]DEBUG 12365[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CustomerType [OPTIMISTIC_FORCE_INCREMENT]: select customerty0_.ID as ID22_0_, customerty0_.Discount as Discount22_0_, customerty0_.MaxRange as MaxRange22_0_, customerty0_.MinRange as MinRange22_0_, customerty0_.TypeName as TypeName22_0_ from CustomerTypes customerty0_ where customerty0_.ID=?
[2017-10-14 14:08:54,578]DEBUG 12365[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.softserveinc.edu.oms.domain.entities.CustomerType: select customerty0_.ID as ID22_0_, customerty0_.Discount as Discount22_0_, customerty0_.MaxRange as MaxRange22_0_, customerty0_.MinRange as MinRange22_0_, customerty0_.TypeName as TypeName22_0_ from CustomerTypes customerty0_ where customerty0_.ID=?
[2017-10-14 14:08:54,579]DEBUG 12366[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.softserveinc.edu.oms.domain.entities.CustomerType: select customerty0_.ID as ID22_0_, customerty0_.Discount as Discount22_0_, customerty0_.MaxRange as MaxRange22_0_, customerty0_.MinRange as MinRange22_0_, customerty0_.TypeName as TypeName22_0_ from CustomerTypes customerty0_ where customerty0_.ID=?
[2017-10-14 14:08:54,579]DEBUG 12366[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Product [NONE]: select product0_.ID as ID26_0_, product0_.IsProductActive as IsProduc2_26_0_, product0_.ProductDescription as ProductD3_26_0_, product0_.ProductName as ProductN4_26_0_, product0_.ProductPrice as ProductP5_26_0_ from Products product0_ where product0_.ID=?
[2017-10-14 14:08:54,579]DEBUG 12366[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Product [READ]: select product0_.ID as ID26_0_, product0_.IsProductActive as IsProduc2_26_0_, product0_.ProductDescription as ProductD3_26_0_, product0_.ProductName as ProductN4_26_0_, product0_.ProductPrice as ProductP5_26_0_ from Products product0_ where product0_.ID=?
[2017-10-14 14:08:54,579]DEBUG 12366[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Product [UPGRADE]: select product0_.ID as ID26_0_, product0_.IsProductActive as IsProduc2_26_0_, product0_.ProductDescription as ProductD3_26_0_, product0_.ProductName as ProductN4_26_0_, product0_.ProductPrice as ProductP5_26_0_ from Products product0_ where product0_.ID=? for update
[2017-10-14 14:08:54,579]DEBUG 12366[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Product [UPGRADE_NOWAIT]: select product0_.ID as ID26_0_, product0_.IsProductActive as IsProduc2_26_0_, product0_.ProductDescription as ProductD3_26_0_, product0_.ProductName as ProductN4_26_0_, product0_.ProductPrice as ProductP5_26_0_ from Products product0_ where product0_.ID=? for update
[2017-10-14 14:08:54,580]DEBUG 12367[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Product [FORCE]: select product0_.ID as ID26_0_, product0_.IsProductActive as IsProduc2_26_0_, product0_.ProductDescription as ProductD3_26_0_, product0_.ProductName as ProductN4_26_0_, product0_.ProductPrice as ProductP5_26_0_ from Products product0_ where product0_.ID=? for update
[2017-10-14 14:08:54,580]DEBUG 12367[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Product [PESSIMISTIC_READ]: select product0_.ID as ID26_0_, product0_.IsProductActive as IsProduc2_26_0_, product0_.ProductDescription as ProductD3_26_0_, product0_.ProductName as ProductN4_26_0_, product0_.ProductPrice as ProductP5_26_0_ from Products product0_ where product0_.ID=? lock in share mode
[2017-10-14 14:08:54,580]DEBUG 12367[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Product [PESSIMISTIC_WRITE]: select product0_.ID as ID26_0_, product0_.IsProductActive as IsProduc2_26_0_, product0_.ProductDescription as ProductD3_26_0_, product0_.ProductName as ProductN4_26_0_, product0_.ProductPrice as ProductP5_26_0_ from Products product0_ where product0_.ID=? for update
[2017-10-14 14:08:54,580]DEBUG 12367[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Product [PESSIMISTIC_FORCE_INCREMENT]: select product0_.ID as ID26_0_, product0_.IsProductActive as IsProduc2_26_0_, product0_.ProductDescription as ProductD3_26_0_, product0_.ProductName as ProductN4_26_0_, product0_.ProductPrice as ProductP5_26_0_ from Products product0_ where product0_.ID=? for update
[2017-10-14 14:08:54,580]DEBUG 12367[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Product [OPTIMISTIC]: select product0_.ID as ID26_0_, product0_.IsProductActive as IsProduc2_26_0_, product0_.ProductDescription as ProductD3_26_0_, product0_.ProductName as ProductN4_26_0_, product0_.ProductPrice as ProductP5_26_0_ from Products product0_ where product0_.ID=?
[2017-10-14 14:08:54,581]DEBUG 12368[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Product [OPTIMISTIC_FORCE_INCREMENT]: select product0_.ID as ID26_0_, product0_.IsProductActive as IsProduc2_26_0_, product0_.ProductDescription as ProductD3_26_0_, product0_.ProductName as ProductN4_26_0_, product0_.ProductPrice as ProductP5_26_0_ from Products product0_ where product0_.ID=?
[2017-10-14 14:08:54,581]DEBUG 12368[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.softserveinc.edu.oms.domain.entities.Product: select product0_.ID as ID26_0_, product0_.IsProductActive as IsProduc2_26_0_, product0_.ProductDescription as ProductD3_26_0_, product0_.ProductName as ProductN4_26_0_, product0_.ProductPrice as ProductP5_26_0_ from Products product0_ where product0_.ID=?
[2017-10-14 14:08:54,581]DEBUG 12368[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.softserveinc.edu.oms.domain.entities.Product: select product0_.ID as ID26_0_, product0_.IsProductActive as IsProduc2_26_0_, product0_.ProductDescription as ProductD3_26_0_, product0_.ProductName as ProductN4_26_0_, product0_.ProductPrice as ProductP5_26_0_ from Products product0_ where product0_.ID=?
[2017-10-14 14:08:54,581]DEBUG 12368[main] - org.hibernate.impl.SessionFactoryObjectFactory.addInstance(SessionFactoryObjectFactory.java:99) - registered: 19ff4b8b-4470-45b0-b7d0-dcd90e1309f5 (unnamed)
[2017-10-14 14:08:54,581] INFO 12368[main] - org.hibernate.impl.SessionFactoryObjectFactory.addInstance(SessionFactoryObjectFactory.java:105) - Not binding factory to JNDI, no JNDI name configured
[2017-10-14 14:08:54,582]DEBUG 12369[main] - org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:369) - instantiated session factory
[2017-10-14 14:08:54,582]DEBUG 12369[main] - org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) - Processing hbm.xml files
[2017-10-14 14:08:54,582]DEBUG 12369[main] - org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) - Process annotated classes
[2017-10-14 14:08:54,582]DEBUG 12369[main] - org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) - processing fk mappings (*ToOne and JoinedSubclass)
[2017-10-14 14:08:54,582]DEBUG 12369[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) - processing extends queue
[2017-10-14 14:08:54,582]DEBUG 12369[main] - org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) - processing extends queue
[2017-10-14 14:08:54,582]DEBUG 12369[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) - processing collection mappings
[2017-10-14 14:08:54,582]DEBUG 12369[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) - processing native query and ResultSetMapping mappings
[2017-10-14 14:08:54,583]DEBUG 12370[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) - processing association property references
[2017-10-14 14:08:54,583]DEBUG 12370[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) - processing foreign key constraints
[2017-10-14 14:08:54,583]DEBUG 12370[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Product
[2017-10-14 14:08:54,583]DEBUG 12370[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Dimension
[2017-10-14 14:08:54,583]DEBUG 12370[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Order
[2017-10-14 14:08:54,583]DEBUG 12370[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.OrderStatus
[2017-10-14 14:08:54,583]DEBUG 12370[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.User
[2017-10-14 14:08:54,583]DEBUG 12370[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.User
[2017-10-14 14:08:54,584]DEBUG 12371[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Role
[2017-10-14 14:08:54,584]DEBUG 12371[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.CustomerType
[2017-10-14 14:08:54,584]DEBUG 12371[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Region
[2017-10-14 14:08:54,584]DEBUG 12371[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:107) - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2017-10-14 14:08:54,585]DEBUG 12372[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:118) - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.engine.resolver.JPATraversableResolver.
[2017-10-14 14:08:54,585]DEBUG 12372[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:203) - Trying to load META-INF/validation.xml for XML based Validator configuration.
[2017-10-14 14:08:54,585]DEBUG 12372[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:206) - No META-INF/validation.xml found. Using annotation based configuration only
[2017-10-14 14:08:54,594]DEBUG 12381[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:54,594]DEBUG 12381[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:54,595]DEBUG 12382[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:54,595]DEBUG 12382[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:54,595]DEBUG 12382[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:54,595]DEBUG 12382[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:54,595]DEBUG 12382[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:54,595]DEBUG 12382[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:54,596]DEBUG 12383[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:54,596]DEBUG 12383[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:54,596]DEBUG 12383[main] - org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) - Processing hbm.xml files
[2017-10-14 14:08:54,596]DEBUG 12383[main] - org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) - Process annotated classes
[2017-10-14 14:08:54,596]DEBUG 12383[main] - org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) - processing fk mappings (*ToOne and JoinedSubclass)
[2017-10-14 14:08:54,596]DEBUG 12383[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) - processing extends queue
[2017-10-14 14:08:54,596]DEBUG 12383[main] - org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) - processing extends queue
[2017-10-14 14:08:54,596]DEBUG 12383[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) - processing collection mappings
[2017-10-14 14:08:54,597]DEBUG 12384[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) - processing native query and ResultSetMapping mappings
[2017-10-14 14:08:54,597]DEBUG 12384[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) - processing association property references
[2017-10-14 14:08:54,597]DEBUG 12384[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) - processing foreign key constraints
[2017-10-14 14:08:54,597]DEBUG 12384[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Product
[2017-10-14 14:08:54,597]DEBUG 12384[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Dimension
[2017-10-14 14:08:54,597]DEBUG 12384[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Order
[2017-10-14 14:08:54,597]DEBUG 12384[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.OrderStatus
[2017-10-14 14:08:54,597]DEBUG 12384[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.User
[2017-10-14 14:08:54,598]DEBUG 12385[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.User
[2017-10-14 14:08:54,598]DEBUG 12385[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Role
[2017-10-14 14:08:54,598]DEBUG 12385[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.CustomerType
[2017-10-14 14:08:54,598]DEBUG 12385[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Region
[2017-10-14 14:08:54,598]DEBUG 12385[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:107) - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2017-10-14 14:08:54,599]DEBUG 12386[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:118) - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.engine.resolver.JPATraversableResolver.
[2017-10-14 14:08:54,599]DEBUG 12386[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:203) - Trying to load META-INF/validation.xml for XML based Validator configuration.
[2017-10-14 14:08:54,599]DEBUG 12386[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:206) - No META-INF/validation.xml found. Using annotation based configuration only
[2017-10-14 14:08:54,609]DEBUG 12396[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:54,609]DEBUG 12396[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:54,609]DEBUG 12396[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:54,609]DEBUG 12396[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:54,609]DEBUG 12396[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:54,610]DEBUG 12397[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:54,610]DEBUG 12397[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:54,610]DEBUG 12397[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:54,610]DEBUG 12397[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:54,610]DEBUG 12397[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:54,611]DEBUG 12398[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:54,611]DEBUG 12398[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:54,611]DEBUG 12398[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:54,611]DEBUG 12398[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:54,611]DEBUG 12398[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:54,611]DEBUG 12398[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:54,612]DEBUG 12399[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:54,612]DEBUG 12399[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:54,612]DEBUG 12399[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:54,612]DEBUG 12399[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 14:08:54,612] INFO 12399[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:234) - Running hbm2ddl schema export
[2017-10-14 14:08:54,613]DEBUG 12400[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:252) - import file not found: /import.sql
[2017-10-14 14:08:54,613] INFO 12400[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:262) - exporting generated schema to database
[2017-10-14 14:08:54,613]DEBUG 12400[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table OrderItems drop foreign key FKA2B1AD3262E1ABF7
[2017-10-14 14:08:54,817]DEBUG 12604[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table OrderItems drop foreign key FKA2B1AD32A6376397
[2017-10-14 14:08:55,018]DEBUG 12805[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table OrderItems drop foreign key FKA2B1AD32BCDB3C97
[2017-10-14 14:08:55,218]DEBUG 13005[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Orders drop foreign key FK8D444F05990DB877
[2017-10-14 14:08:55,419]DEBUG 13206[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Orders drop foreign key FK8D444F05C0F431DD
[2017-10-14 14:08:55,669]DEBUG 13456[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Orders drop foreign key FK8D444F05F161465
[2017-10-14 14:08:55,878]DEBUG 13665[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Users drop foreign key FK4E39DE83D05058F
[2017-10-14 14:08:56,095]DEBUG 13882[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Users drop foreign key FK4E39DE89AEF426F
[2017-10-14 14:08:56,321]DEBUG 14108[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Users drop foreign key FK4E39DE8FEAD4DCF
[2017-10-14 14:08:56,530]DEBUG 14317[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists CardType
[2017-10-14 14:08:56,597]DEBUG 14384[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists CustomerTypes
[2017-10-14 14:08:56,630]DEBUG 14417[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists Dimensions
[2017-10-14 14:08:56,672]DEBUG 14459[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists OrderItems
[2017-10-14 14:08:56,705]DEBUG 14492[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists OrderStatuses
[2017-10-14 14:08:56,738]DEBUG 14525[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists Orders
[2017-10-14 14:08:56,780]DEBUG 14567[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists Products
[2017-10-14 14:08:56,822]DEBUG 14609[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists Regions
[2017-10-14 14:08:56,864]DEBUG 14651[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists Roles
[2017-10-14 14:08:56,905]DEBUG 14692[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists Users
[2017-10-14 14:08:56,947]DEBUG 14734[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - create table CardType (ID integer not null auto_increment, CardType varchar(255), CardNumber varchar(255), CardCvv2 integer, Expiration_Date varchar(255), IssueDate varchar(255), IssueNumber varchar(255), primary key (ID))
[2017-10-14 14:08:57,064]DEBUG 14851[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - create table CustomerTypes (ID integer not null auto_increment, Discount double precision, MaxRange double precision, MinRange double precision, TypeName varchar(255), primary key (ID))
[2017-10-14 14:08:57,173]DEBUG 14960[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - create table Dimensions (ID integer not null auto_increment, DimensionName varchar(255), NumberOfProducts integer, primary key (ID))
[2017-10-14 14:08:57,273]DEBUG 15060[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - create table OrderItems (ID integer not null auto_increment, Cost double precision, ItemPrice double precision, Quantity integer, DimensionRef integer, OrderRef integer, ProductRef integer, primary key (ID))
[2017-10-14 14:08:57,373]DEBUG 15160[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - create table OrderStatuses (ID integer not null auto_increment, OrederStatusName varchar(255), primary key (ID))
[2017-10-14 14:08:57,474]DEBUG 15261[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - create table Orders (ID integer not null auto_increment, DeliveryDate datetime, IsGift bit, MaxDiscount integer, OrderDate datetime, OrderName varchar(100), OrderNumber integer unique, PreferableDeliveryDate datetime, TotalPrice double precision, Assigne integer, Customer integer, OrderStatusRef integer, primary key (ID))
[2017-10-14 14:08:57,574]DEBUG 15361[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - create table Products (ID integer not null auto_increment, IsProductActive bit, ProductDescription varchar(255), ProductName varchar(255), ProductPrice double precision, primary key (ID))
[2017-10-14 14:08:57,750]DEBUG 15537[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - create table Regions (ID integer not null auto_increment, RegionName varchar(255), primary key (ID))
[2017-10-14 14:08:57,859]DEBUG 15646[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - create table Roles (ID integer not null auto_increment, RoleName varchar(255), primary key (ID))
[2017-10-14 14:08:57,959]DEBUG 15746[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - create table Users (ID integer not null auto_increment, IsUserActive bit, Balance double precision, Email varchar(255) not null, FirstName varchar(255) not null, LastName varchar(255) not null, Login varchar(255) not null, Password varchar(255) not null, CustomerTypeRef integer, RegionRef integer, RoleRef integer not null, primary key (ID))
[2017-10-14 14:08:58,059]DEBUG 15846[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table OrderItems add index FKA2B1AD3262E1ABF7 (ProductRef), add constraint FKA2B1AD3262E1ABF7 foreign key (ProductRef) references Products (ID)
[2017-10-14 14:08:58,293]DEBUG 16080[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table OrderItems add index FKA2B1AD32A6376397 (DimensionRef), add constraint FKA2B1AD32A6376397 foreign key (DimensionRef) references Dimensions (ID)
[2017-10-14 14:08:58,552]DEBUG 16339[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table OrderItems add index FKA2B1AD32BCDB3C97 (OrderRef), add constraint FKA2B1AD32BCDB3C97 foreign key (OrderRef) references Orders (ID)
[2017-10-14 14:08:58,802]DEBUG 16589[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Orders add index FK8D444F05990DB877 (OrderStatusRef), add constraint FK8D444F05990DB877 foreign key (OrderStatusRef) references OrderStatuses (ID)
[2017-10-14 14:08:59,103]DEBUG 16890[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Orders add index FK8D444F05C0F431DD (Assigne), add constraint FK8D444F05C0F431DD foreign key (Assigne) references Users (ID)
[2017-10-14 14:08:59,312]DEBUG 17099[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Orders add index FK8D444F05F161465 (Customer), add constraint FK8D444F05F161465 foreign key (Customer) references Users (ID)
[2017-10-14 14:08:59,512]DEBUG 17299[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Users add index FK4E39DE83D05058F (RoleRef), add constraint FK4E39DE83D05058F foreign key (RoleRef) references Roles (ID)
[2017-10-14 14:08:59,721]DEBUG 17508[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Users add index FK4E39DE89AEF426F (CustomerTypeRef), add constraint FK4E39DE89AEF426F foreign key (CustomerTypeRef) references CustomerTypes (ID)
[2017-10-14 14:08:59,922]DEBUG 17709[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Users add index FK4E39DE8FEAD4DCF (RegionRef), add constraint FK4E39DE8FEAD4DCF foreign key (RegionRef) references Regions (ID)
