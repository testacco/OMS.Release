[2017-10-02 14:02:50,635]DEBUG     0[main] - org.springframework.test.context.junit4.SpringJUnit4ClassRunner.<init>(SpringJUnit4ClassRunner.java:106) - SpringJUnit4ClassRunner constructor called with [class com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase].
[2017-10-02 14:02:50,666] INFO    31[main] - org.springframework.test.context.TestContextManager.retrieveTestExecutionListeners(TestContextManager.java:185) - @TestExecutionListeners is not present for class [class com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase]: using defaults.
[2017-10-02 14:02:50,681]DEBUG    46[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase]
[2017-10-02 14:02:50,681]DEBUG    46[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase]
[2017-10-02 14:02:50,683]DEBUG    48[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase]
[2017-10-02 14:02:50,686]DEBUG    51[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase]
[2017-10-02 14:02:50,686]DEBUG    51[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase]
[2017-10-02 14:02:50,687]DEBUG    52[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase]
[2017-10-02 14:02:50,688]DEBUG    53[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase]
[2017-10-02 14:02:50,688]DEBUG    53[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase]
[2017-10-02 14:02:50,694]DEBUG    59[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@36c8e545 testClass = CleanUpDBTestCase, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase@3f44311c, testMethod = [null], testException = [null]]].
[2017-10-02 14:02:50,694]DEBUG    59[main] - org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:75) - Loading ApplicationContext for locations [classpath:testApplicationContex.xml].
[2017-10-02 14:02:50,740] INFO   105[main] - org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:315) - Loading XML bean definitions from class path resource [testApplicationContex.xml]
[2017-10-02 14:02:50,835]DEBUG   200[main] - org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:72) - Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
[2017-10-02 14:02:50,983]DEBUG   348[main] - org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:140) - Loading schema mappings from [META-INF/spring.schemas]
[2017-10-02 14:02:50,992]DEBUG   357[main] - org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:146) - Loaded schema mappings: {http://www.springframework.org/schema/security/spring-security-3.0.4.xsd=org/springframework/security/config/spring-security-3.0.4.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/security/spring-security-2.0.2.xsd=org/springframework/security/config/spring-security-2.0.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/security/spring-security-3.0.3.xsd=org/springframework/security/config/spring-security-3.0.3.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/security/spring-security-2.0.1.xsd=org/springframework/security/config/spring-security-2.0.1.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/security/spring-security-2.0.xsd=org/springframework/security/config/spring-security-2.0.xsd, http://www.springframework.org/schema/security/spring-security-3.0.xsd=org/springframework/security/config/spring-security-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/security/spring-security-2.0.4.xsd=org/springframework/security/config/spring-security-2.0.4.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/security/spring-security.xsd=org/springframework/security/config/spring-security-3.0.4.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd}
[2017-10-02 14:02:50,995]DEBUG   360[main] - org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:118) - Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
[2017-10-02 14:02:51,046]DEBUG   411[main] - org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:118) - Found XML schema [http://www.springframework.org/schema/tx/spring-tx-2.5.xsd] in classpath: org/springframework/transaction/config/spring-tx-2.5.xsd
[2017-10-02 14:02:51,063]DEBUG   428[main] - org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:118) - Found XML schema [http://www.springframework.org/schema/tool/spring-tool-2.5.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-2.5.xsd
[2017-10-02 14:02:51,068]DEBUG   433[main] - org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:118) - Found XML schema [http://www.springframework.org/schema/context/spring-context.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd
[2017-10-02 14:02:51,081]DEBUG   446[main] - org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:87) - Loading bean definitions
[2017-10-02 14:02:51,127]DEBUG   492[main] - org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(DefaultNamespaceHandlerResolver.java:156) - Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/security=org.springframework.security.config.SecurityNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
[2017-10-02 14:02:51,178] INFO   543[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.registerDefaultFilters(ClassPathScanningCandidateComponentProvider.java:186) - JSR-330 'javax.inject.Named' annotation found and supported for component scanning
[2017-10-02 14:02:51,193]DEBUG   558[main] - org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:552) - Looking for matching resources in directory tree [/home/mary/Documents/backup/OMS.Release/target/generated-classes/emma/classes/com/softserveinc/edu/oms/domain/entities]
[2017-10-02 14:02:51,194]DEBUG   559[main] - org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:614) - Searching directory [/home/mary/Documents/backup/OMS.Release/target/generated-classes/emma/classes/com/softserveinc/edu/oms/domain/entities] for files matching pattern [/home/mary/Documents/backup/OMS.Release/target/generated-classes/emma/classes/com/softserveinc/edu/oms/domain/entities/**/*.class]
[2017-10-02 14:02:51,202]DEBUG   567[main] - org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:353) - Resolved location pattern [classpath*:com/softserveinc/edu/oms/domain/entities/**/*.class] to resources [file [/home/mary/Documents/backup/OMS.Release/target/generated-classes/emma/classes/com/softserveinc/edu/oms/domain/entities/CreditCardType.class], file [/home/mary/Documents/backup/OMS.Release/target/generated-classes/emma/classes/com/softserveinc/edu/oms/domain/entities/CustomerType.class], file [/home/mary/Documents/backup/OMS.Release/target/generated-classes/emma/classes/com/softserveinc/edu/oms/domain/entities/Dimension.class], file [/home/mary/Documents/backup/OMS.Release/target/generated-classes/emma/classes/com/softserveinc/edu/oms/domain/entities/Order.class], file [/home/mary/Documents/backup/OMS.Release/target/generated-classes/emma/classes/com/softserveinc/edu/oms/domain/entities/OrderItem.class], file [/home/mary/Documents/backup/OMS.Release/target/generated-classes/emma/classes/com/softserveinc/edu/oms/domain/entities/OrderStatus.class], file [/home/mary/Documents/backup/OMS.Release/target/generated-classes/emma/classes/com/softserveinc/edu/oms/domain/entities/Product.class], file [/home/mary/Documents/backup/OMS.Release/target/generated-classes/emma/classes/com/softserveinc/edu/oms/domain/entities/Region.class], file [/home/mary/Documents/backup/OMS.Release/target/generated-classes/emma/classes/com/softserveinc/edu/oms/domain/entities/Role.class], file [/home/mary/Documents/backup/OMS.Release/target/generated-classes/emma/classes/com/softserveinc/edu/oms/domain/entities/User.class]]
[2017-10-02 14:02:51,241] INFO   606[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.registerDefaultFilters(ClassPathScanningCandidateComponentProvider.java:186) - JSR-330 'javax.inject.Named' annotation found and supported for component scanning
[2017-10-02 14:02:51,242]DEBUG   607[main] - org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:552) - Looking for matching resources in directory tree [/home/mary/Documents/backup/OMS.Release/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete]
[2017-10-02 14:02:51,243]DEBUG   608[main] - org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:614) - Searching directory [/home/mary/Documents/backup/OMS.Release/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete] for files matching pattern [/home/mary/Documents/backup/OMS.Release/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/**/*.class]
[2017-10-02 14:02:51,251]DEBUG   616[main] - org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:353) - Resolved location pattern [classpath*:com/softserveinc/edu/oms/persistence/dao/concrete/**/*.class] to resources [file [/home/mary/Documents/backup/OMS.Release/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/CreditCardTypeDao.class], file [/home/mary/Documents/backup/OMS.Release/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/CustomerTypeDao.class], file [/home/mary/Documents/backup/OMS.Release/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/DimensionDao.class], file [/home/mary/Documents/backup/OMS.Release/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/OrderDao.class], file [/home/mary/Documents/backup/OMS.Release/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/OrderItemDao.class], file [/home/mary/Documents/backup/OMS.Release/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/OrderStatusDao.class], file [/home/mary/Documents/backup/OMS.Release/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/ProductDao.class], file [/home/mary/Documents/backup/OMS.Release/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/RegionDao.class], file [/home/mary/Documents/backup/OMS.Release/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/RoleDao.class], file [/home/mary/Documents/backup/OMS.Release/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/UserDao$1.class], file [/home/mary/Documents/backup/OMS.Release/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/UserDao.class]]
[2017-10-02 14:02:51,254]DEBUG   619[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:220) - Identified candidate component class: file [/home/mary/Documents/backup/OMS.Release/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/CreditCardTypeDao.class]
[2017-10-02 14:02:51,255]DEBUG   620[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:220) - Identified candidate component class: file [/home/mary/Documents/backup/OMS.Release/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/CustomerTypeDao.class]
[2017-10-02 14:02:51,256]DEBUG   621[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:220) - Identified candidate component class: file [/home/mary/Documents/backup/OMS.Release/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/DimensionDao.class]
[2017-10-02 14:02:51,260]DEBUG   625[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:220) - Identified candidate component class: file [/home/mary/Documents/backup/OMS.Release/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/OrderDao.class]
[2017-10-02 14:02:51,261]DEBUG   626[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:220) - Identified candidate component class: file [/home/mary/Documents/backup/OMS.Release/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/OrderItemDao.class]
[2017-10-02 14:02:51,262]DEBUG   627[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:220) - Identified candidate component class: file [/home/mary/Documents/backup/OMS.Release/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/OrderStatusDao.class]
[2017-10-02 14:02:51,263]DEBUG   628[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:220) - Identified candidate component class: file [/home/mary/Documents/backup/OMS.Release/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/ProductDao.class]
[2017-10-02 14:02:51,264]DEBUG   629[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:220) - Identified candidate component class: file [/home/mary/Documents/backup/OMS.Release/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/RegionDao.class]
[2017-10-02 14:02:51,265]DEBUG   630[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:220) - Identified candidate component class: file [/home/mary/Documents/backup/OMS.Release/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/RoleDao.class]
[2017-10-02 14:02:51,267]DEBUG   632[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:220) - Identified candidate component class: file [/home/mary/Documents/backup/OMS.Release/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/UserDao.class]
[2017-10-02 14:02:51,270]DEBUG   635[main] - org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:185) - Loaded 21 bean definitions from location pattern [classpath:testApplicationContex.xml]
[2017-10-02 14:02:51,273] INFO   638[main] - org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:456) - Refreshing org.springframework.context.support.GenericApplicationContext@41de4499: startup date [Mon Oct 02 14:02:51 EEST 2017]; root of context hierarchy
[2017-10-02 14:02:51,273]DEBUG   638[main] - org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:470) - Bean factory for org.springframework.context.support.GenericApplicationContext@41de4499: org.springframework.beans.factory.support.DefaultListableBeanFactory@173f393e: defining beans [transactionManager,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,creditCardTypeDao,customerTypeDao,dimensionDao,orderDao,orderItemDao,orderStatusDao,productDao,regionDao,roleDao,userDao,sessionFactory]; root of factory hierarchy
[2017-10-02 14:02:51,288]DEBUG   653[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
[2017-10-02 14:02:51,288]DEBUG   653[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
[2017-10-02 14:02:51,315]DEBUG   680[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
[2017-10-02 14:02:51,316]DEBUG   681[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
[2017-10-02 14:02:51,362]DEBUG   727[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
[2017-10-02 14:02:51,363]DEBUG   728[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
[2017-10-02 14:02:51,363] INFO   728[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:137) - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2017-10-02 14:02:51,364]DEBUG   729[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
[2017-10-02 14:02:51,364]DEBUG   729[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
[2017-10-02 14:02:51,364]DEBUG   729[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
[2017-10-02 14:02:51,365]DEBUG   730[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
[2017-10-02 14:02:51,365]DEBUG   730[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
[2017-10-02 14:02:51,366]DEBUG   731[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
[2017-10-02 14:02:51,366]DEBUG   731[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
[2017-10-02 14:02:51,366]DEBUG   731[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
[2017-10-02 14:02:51,380]DEBUG   745[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
[2017-10-02 14:02:51,381]DEBUG   746[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
[2017-10-02 14:02:51,381]DEBUG   746[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
[2017-10-02 14:02:51,381]DEBUG   746[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
[2017-10-02 14:02:51,382]DEBUG   747[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' to allow for resolving potential circular references
[2017-10-02 14:02:51,382]DEBUG   747[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
[2017-10-02 14:02:51,383]DEBUG   748[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
[2017-10-02 14:02:51,383]DEBUG   748[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
[2017-10-02 14:02:51,390]DEBUG   755[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
[2017-10-02 14:02:51,407]DEBUG   772[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
[2017-10-02 14:02:51,409]DEBUG   774[main] - org.springframework.context.support.AbstractApplicationContext.initMessageSource(AbstractApplicationContext.java:776) - Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@50157bfb]
[2017-10-02 14:02:51,411]DEBUG   776[main] - org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(AbstractApplicationContext.java:800) - Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@4fe677c4]
[2017-10-02 14:02:51,413] INFO   778[main] - org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:555) - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@173f393e: defining beans [transactionManager,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,creditCardTypeDao,customerTypeDao,dimensionDao,orderDao,orderItemDao,orderStatusDao,productDao,regionDao,roleDao,userDao,sessionFactory]; root of factory hierarchy
[2017-10-02 14:02:51,414]DEBUG   779[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'transactionManager'
[2017-10-02 14:02:51,414]DEBUG   779[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'transactionManager'
[2017-10-02 14:02:51,431]DEBUG   796[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
[2017-10-02 14:02:51,444]DEBUG   809[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'sessionFactory'
[2017-10-02 14:02:51,444]DEBUG   809[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'sessionFactory'
[2017-10-02 14:02:51,453]DEBUG   818[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'sessionFactory' to allow for resolving potential circular references
[2017-10-02 14:02:51,461]DEBUG   826[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1461) - Invoking afterPropertiesSet() on bean with name 'sessionFactory'
[2017-10-02 14:02:51,484]DEBUG   849[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration boolean -> org.hibernate.type.BooleanType@9240189
[2017-10-02 14:02:51,484]DEBUG   849[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration boolean -> org.hibernate.type.BooleanType@9240189
[2017-10-02 14:02:51,485]DEBUG   850[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@9240189
[2017-10-02 14:02:51,486]DEBUG   851[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5fdd5c69
[2017-10-02 14:02:51,488]DEBUG   853[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@225f6411
[2017-10-02 14:02:51,489]DEBUG   854[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration yes_no -> org.hibernate.type.YesNoType@45f0d31e
[2017-10-02 14:02:51,490]DEBUG   855[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration byte -> org.hibernate.type.ByteType@618d7f32
[2017-10-02 14:02:51,491]DEBUG   856[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration byte -> org.hibernate.type.ByteType@618d7f32
[2017-10-02 14:02:51,491]DEBUG   856[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@618d7f32
[2017-10-02 14:02:51,493]DEBUG   858[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration character -> org.hibernate.type.CharacterType@1e317636
[2017-10-02 14:02:51,493]DEBUG   858[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration char -> org.hibernate.type.CharacterType@1e317636
[2017-10-02 14:02:51,493]DEBUG   858[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1e317636
[2017-10-02 14:02:51,495]DEBUG   860[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration short -> org.hibernate.type.ShortType@5b470886
[2017-10-02 14:02:51,495]DEBUG   860[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration short -> org.hibernate.type.ShortType@5b470886
[2017-10-02 14:02:51,496]DEBUG   861[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5b470886
[2017-10-02 14:02:51,497]DEBUG   862[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration integer -> org.hibernate.type.IntegerType@45ea27
[2017-10-02 14:02:51,497]DEBUG   862[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration int -> org.hibernate.type.IntegerType@45ea27
[2017-10-02 14:02:51,498]DEBUG   863[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@45ea27
[2017-10-02 14:02:51,499]DEBUG   864[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration long -> org.hibernate.type.LongType@4bc2d25e
[2017-10-02 14:02:51,500]DEBUG   865[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration long -> org.hibernate.type.LongType@4bc2d25e
[2017-10-02 14:02:51,500]DEBUG   865[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4bc2d25e
[2017-10-02 14:02:51,502]DEBUG   867[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration float -> org.hibernate.type.FloatType@b46c38f
[2017-10-02 14:02:51,502]DEBUG   867[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration float -> org.hibernate.type.FloatType@b46c38f
[2017-10-02 14:02:51,503]DEBUG   868[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@b46c38f
[2017-10-02 14:02:51,504]DEBUG   869[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration double -> org.hibernate.type.DoubleType@23346e3
[2017-10-02 14:02:51,504]DEBUG   869[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration double -> org.hibernate.type.DoubleType@23346e3
[2017-10-02 14:02:51,505]DEBUG   870[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@23346e3
[2017-10-02 14:02:51,514]DEBUG   879[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@19ebcb16
[2017-10-02 14:02:51,514]DEBUG   879[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@19ebcb16
[2017-10-02 14:02:51,515]DEBUG   880[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@16377658
[2017-10-02 14:02:51,516]DEBUG   881[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@16377658
[2017-10-02 14:02:51,517]DEBUG   882[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration string -> org.hibernate.type.StringType@2142ea45
[2017-10-02 14:02:51,517]DEBUG   882[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.String -> org.hibernate.type.StringType@2142ea45
[2017-10-02 14:02:51,519]DEBUG   884[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration url -> org.hibernate.type.UrlType@1b41b392
[2017-10-02 14:02:51,519]DEBUG   884[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1b41b392
[2017-10-02 14:02:51,521]DEBUG   886[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration date -> org.hibernate.type.DateType@6ee33b3d
[2017-10-02 14:02:51,521]DEBUG   886[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6ee33b3d
[2017-10-02 14:02:51,523]DEBUG   888[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration time -> org.hibernate.type.TimeType@18f7206d
[2017-10-02 14:02:51,523]DEBUG   888[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@18f7206d
[2017-10-02 14:02:51,525]DEBUG   890[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration timestamp -> org.hibernate.type.TimestampType@23c4a572
[2017-10-02 14:02:51,526]DEBUG   891[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@23c4a572
[2017-10-02 14:02:51,526]DEBUG   891[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@23c4a572
[2017-10-02 14:02:51,527]DEBUG   892[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4a7b933
[2017-10-02 14:02:51,529]DEBUG   894[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration calendar -> org.hibernate.type.CalendarType@a810524
[2017-10-02 14:02:51,529]DEBUG   894[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@a810524
[2017-10-02 14:02:51,530]DEBUG   895[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@a810524
[2017-10-02 14:02:51,531]DEBUG   896[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5fe8cf60
[2017-10-02 14:02:51,532]DEBUG   897[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration locale -> org.hibernate.type.LocaleType@330bc6ce
[2017-10-02 14:02:51,533]DEBUG   898[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@330bc6ce
[2017-10-02 14:02:51,534]DEBUG   899[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration currency -> org.hibernate.type.CurrencyType@a49582b
[2017-10-02 14:02:51,534]DEBUG   899[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@a49582b
[2017-10-02 14:02:51,536]DEBUG   901[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3dac04
[2017-10-02 14:02:51,536]DEBUG   901[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3dac04
[2017-10-02 14:02:51,538]DEBUG   903[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration class -> org.hibernate.type.ClassType@b5e9ce
[2017-10-02 14:02:51,538]DEBUG   903[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@b5e9ce
[2017-10-02 14:02:51,540]DEBUG   905[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@71932060
[2017-10-02 14:02:51,541]DEBUG   906[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@71932060
[2017-10-02 14:02:51,542]DEBUG   907[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4b9ba20
[2017-10-02 14:02:51,543]DEBUG   908[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@13d982e4
[2017-10-02 14:02:51,544]DEBUG   909[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration binary -> org.hibernate.type.BinaryType@294eb467
[2017-10-02 14:02:51,544]DEBUG   909[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration byte[] -> org.hibernate.type.BinaryType@294eb467
[2017-10-02 14:02:51,545]DEBUG   910[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration [B -> org.hibernate.type.BinaryType@294eb467
[2017-10-02 14:02:51,546]DEBUG   911[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@44d5ce53
[2017-10-02 14:02:51,546]DEBUG   911[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@44d5ce53
[2017-10-02 14:02:51,547]DEBUG   912[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@44d5ce53
[2017-10-02 14:02:51,548]DEBUG   913[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration image -> org.hibernate.type.ImageType@5a65f5e
[2017-10-02 14:02:51,549]DEBUG   914[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration characters -> org.hibernate.type.CharArrayType@34293ad8
[2017-10-02 14:02:51,550]DEBUG   915[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration char[] -> org.hibernate.type.CharArrayType@34293ad8
[2017-10-02 14:02:51,550]DEBUG   915[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration [C -> org.hibernate.type.CharArrayType@34293ad8
[2017-10-02 14:02:51,551]DEBUG   916[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@32b196b2
[2017-10-02 14:02:51,552]DEBUG   917[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@32b196b2
[2017-10-02 14:02:51,552]DEBUG   917[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@32b196b2
[2017-10-02 14:02:51,553]DEBUG   918[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration text -> org.hibernate.type.TextType@5280da83
[2017-10-02 14:02:51,559]DEBUG   924[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration blob -> org.hibernate.type.BlobType@1bde4427
[2017-10-02 14:02:51,559]DEBUG   924[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1bde4427
[2017-10-02 14:02:51,560]DEBUG   925[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3ef374ce
[2017-10-02 14:02:51,561]DEBUG   926[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@ddc5a99
[2017-10-02 14:02:51,565]DEBUG   930[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration clob -> org.hibernate.type.ClobType@6f7e20ff
[2017-10-02 14:02:51,565]DEBUG   930[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6f7e20ff
[2017-10-02 14:02:51,566]DEBUG   931[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@160608ba
[2017-10-02 14:02:51,566]DEBUG   931[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@32b25421
[2017-10-02 14:02:51,567]DEBUG   932[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@15e1356d
[2017-10-02 14:02:51,568]DEBUG   933[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration serializable -> org.hibernate.type.SerializableType@460367c3
[2017-10-02 14:02:51,571]DEBUG   936[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration object -> org.hibernate.type.ObjectType@74d52b2b
[2017-10-02 14:02:51,572]DEBUG   937[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@74d52b2b
[2017-10-02 14:02:51,572]DEBUG   937[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@db363fa
[2017-10-02 14:02:51,573]DEBUG   938[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3f511d13
[2017-10-02 14:02:51,573]DEBUG   938[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@228c94a
[2017-10-02 14:02:51,573]DEBUG   938[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2a24f902
[2017-10-02 14:02:51,574]DEBUG   939[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5a70073a
[2017-10-02 14:02:51,574]DEBUG   939[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3b7b4f72
[2017-10-02 14:02:51,574]DEBUG   939[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3495cd
[2017-10-02 14:02:51,575]DEBUG   940[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@24d662b9
[2017-10-02 14:02:51,598] INFO   963[main] - org.hibernate.annotations.common.Version.<clinit>(Version.java:37) - Hibernate Commons Annotations 3.2.0.Final
[2017-10-02 14:02:51,614] INFO   979[main] - org.hibernate.cfg.Environment.<clinit>(Environment.java:603) - Hibernate 3.6.5.Final
[2017-10-02 14:02:51,615] INFO   980[main] - org.hibernate.cfg.Environment.<clinit>(Environment.java:636) - hibernate.properties not found
[2017-10-02 14:02:51,617] INFO   982[main] - org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:814) - Bytecode provider name : javassist
[2017-10-02 14:02:51,635] INFO  1000[main] - org.hibernate.cfg.Environment.<clinit>(Environment.java:695) - using JDK 1.4 java.sql.Timestamp handling
[2017-10-02 14:02:51,699]DEBUG  1064[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]
[2017-10-02 14:02:51,700]DEBUG  1065[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]
[2017-10-02 14:02:51,708]DEBUG  1073[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]
[2017-10-02 14:02:51,708]DEBUG  1073[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]
[2017-10-02 14:02:51,710]DEBUG  1075[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]
[2017-10-02 14:02:51,710]DEBUG  1075[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]
[2017-10-02 14:02:51,711]DEBUG  1076[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]
[2017-10-02 14:02:51,712]DEBUG  1077[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]
[2017-10-02 14:02:51,712]DEBUG  1077[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]
[2017-10-02 14:02:51,713]DEBUG  1078[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]
[2017-10-02 14:02:51,713]DEBUG  1078[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]
[2017-10-02 14:02:51,714]DEBUG  1079[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]
[2017-10-02 14:02:51,714]DEBUG  1079[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]
[2017-10-02 14:02:51,715]DEBUG  1080[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]
[2017-10-02 14:02:51,716]DEBUG  1081[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]
[2017-10-02 14:02:51,718] INFO  1083[main] - org.hibernate.cfg.Configuration.configure(Configuration.java:2192) - configuring from url: file:/home/mary/Documents/backup/OMS.Release/target/test-classes/hibernate_test.cfg.xml
[2017-10-02 14:02:51,766]DEBUG  1131[main] - org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:67) - trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
[2017-10-02 14:02:51,766] WARN  1131[main] - org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:73) - recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!
[2017-10-02 14:02:51,767]DEBUG  1132[main] - org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:77) - attempting to resolve on classpath under org/hibernate/
[2017-10-02 14:02:51,767]DEBUG  1132[main] - org.hibernate.util.DTDEntityResolver.resolveOnClassPath(DTDEntityResolver.java:109) - located [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd] in classpath
[2017-10-02 14:02:51,781]DEBUG  1146[main] - org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) - hibernate.connection.driver_class=com.mysql.jdbc.Driver
[2017-10-02 14:02:51,781]DEBUG  1146[main] - org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) - dialect=org.hibernate.dialect.MySQL5Dialect
[2017-10-02 14:02:51,781]DEBUG  1146[main] - org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) - hibernate.connection.url=jdbc:mysql://localhost:3306/test1
[2017-10-02 14:02:51,782]DEBUG  1147[main] - org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) - hibernate.connection.username=maria
[2017-10-02 14:02:51,782]DEBUG  1147[main] - org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) - hibernate.connection.password=333qwerb
[2017-10-02 14:02:51,782]DEBUG  1147[main] - org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) - hibernate.hbm2ddl.auto=create-drop
[2017-10-02 14:02:51,782]DEBUG  1147[main] - org.hibernate.cfg.Configuration.parseMappingElement(Configuration.java:2363) - session-factory config [null] named class [com.softserveinc.edu.oms.domain.entities.Role] for mapping
[2017-10-02 14:02:51,788]DEBUG  1153[main] - org.hibernate.cfg.Configuration.parseMappingElement(Configuration.java:2363) - session-factory config [null] named class [com.softserveinc.edu.oms.domain.entities.Region] for mapping
[2017-10-02 14:02:51,788]DEBUG  1153[main] - org.hibernate.cfg.Configuration.parseMappingElement(Configuration.java:2363) - session-factory config [null] named class [com.softserveinc.edu.oms.domain.entities.CustomerType] for mapping
[2017-10-02 14:02:51,788]DEBUG  1153[main] - org.hibernate.cfg.Configuration.parseMappingElement(Configuration.java:2363) - session-factory config [null] named class [com.softserveinc.edu.oms.domain.entities.User] for mapping
[2017-10-02 14:02:51,788]DEBUG  1153[main] - org.hibernate.cfg.Configuration.parseMappingElement(Configuration.java:2363) - session-factory config [null] named class [com.softserveinc.edu.oms.domain.entities.OrderStatus] for mapping
[2017-10-02 14:02:51,788]DEBUG  1153[main] - org.hibernate.cfg.Configuration.parseMappingElement(Configuration.java:2363) - session-factory config [null] named class [com.softserveinc.edu.oms.domain.entities.Order] for mapping
[2017-10-02 14:02:51,789]DEBUG  1154[main] - org.hibernate.cfg.Configuration.parseMappingElement(Configuration.java:2363) - session-factory config [null] named class [com.softserveinc.edu.oms.domain.entities.Product] for mapping
[2017-10-02 14:02:51,789]DEBUG  1154[main] - org.hibernate.cfg.Configuration.parseMappingElement(Configuration.java:2363) - session-factory config [null] named class [com.softserveinc.edu.oms.domain.entities.Dimension] for mapping
[2017-10-02 14:02:51,789]DEBUG  1154[main] - org.hibernate.cfg.Configuration.parseMappingElement(Configuration.java:2363) - session-factory config [null] named class [com.softserveinc.edu.oms.domain.entities.OrderItem] for mapping
[2017-10-02 14:02:51,789]DEBUG  1154[main] - org.hibernate.cfg.Configuration.parseMappingElement(Configuration.java:2363) - session-factory config [null] named class [com.softserveinc.edu.oms.domain.entities.CreditCardType] for mapping
[2017-10-02 14:02:51,790] INFO  1155[main] - org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2297) - Configured SessionFactory: null
[2017-10-02 14:02:51,790]DEBUG  1155[main] - org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2298) - properties: {hibernate.connection.password=333qwerb, java.runtime.name=OpenJDK Runtime Environment, sun.boot.library.path=/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre/lib/amd64, java.vm.version=24.151-b00, hibernate.connection.username=maria, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=OpenJDK 64-Bit Server VM, file.encoding.pkg=sun.io, user.country=US, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=unknown, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/mary/Documents/backup/OMS.Release, java.runtime.version=1.7.0_151-mockbuild_2017_08_23_16_26-b00, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, basedir=/home/mary/Documents/backup/OMS.Release, hibernate.current_session_context_class=org.springframework.orm.hibernate3.SpringSessionContext, java.endorsed.dirs=/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre/lib/endorsed, os.arch=amd64, surefire.real.class.path=/home/mary/Documents/backup/OMS.Release/target/surefire/surefirebooter2606429873392295188.jar, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, surefire.test.class.path=/home/mary/Documents/backup/OMS.Release/target/test-classes:/home/mary/Documents/backup/OMS.Release/target/generated-classes/emma/classes:/home/mary/.m2/repository/org/springframework/spring-context/3.0.5.RELEASE/spring-context-3.0.5.RELEASE.jar:/home/mary/.m2/repository/org/springframework/spring-aop/3.0.5.RELEASE/spring-aop-3.0.5.RELEASE.jar:/home/mary/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/home/mary/.m2/repository/org/springframework/spring-beans/3.0.5.RELEASE/spring-beans-3.0.5.RELEASE.jar:/home/mary/.m2/repository/org/springframework/spring-core/3.0.5.RELEASE/spring-core-3.0.5.RELEASE.jar:/home/mary/.m2/repository/org/springframework/spring-expression/3.0.5.RELEASE/spring-expression-3.0.5.RELEASE.jar:/home/mary/.m2/repository/org/springframework/spring-asm/3.0.5.RELEASE/spring-asm-3.0.5.RELEASE.jar:/home/mary/.m2/repository/org/springframework/spring-webmvc/3.0.5.RELEASE/spring-webmvc-3.0.5.RELEASE.jar:/home/mary/.m2/repository/org/springframework/spring-context-support/3.0.5.RELEASE/spring-context-support-3.0.5.RELEASE.jar:/home/mary/.m2/repository/org/springframework/spring-web/3.0.5.RELEASE/spring-web-3.0.5.RELEASE.jar:/home/mary/.m2/repository/org/springframework/roo/org.springframework.roo.annotations/1.0.2.RELEASE/org.springframework.roo.annotations-1.0.2.RELEASE.jar:/home/mary/.m2/repository/org/aspectj/aspectjrt/1.6.9/aspectjrt-1.6.9.jar:/home/mary/.m2/repository/org/slf4j/slf4j-api/1.5.10/slf4j-api-1.5.10.jar:/home/mary/.m2/repository/org/slf4j/jcl-over-slf4j/1.5.10/jcl-over-slf4j-1.5.10.jar:/home/mary/.m2/repository/org/slf4j/slf4j-log4j12/1.5.10/slf4j-log4j12-1.5.10.jar:/home/mary/.m2/repository/log4j/log4j/1.2.15/log4j-1.2.15.jar:/home/mary/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar:/home/mary/.m2/repository/javax/servlet/jstl/1.2/jstl-1.2.jar:/home/mary/.m2/repository/junit/junit/4.7/junit-4.7.jar:/home/mary/.m2/repository/org/hibernate/hibernate-core/3.6.5.Final/hibernate-core-3.6.5.Final.jar:/home/mary/.m2/repository/antlr/antlr/2.7.6/antlr-2.7.6.jar:/home/mary/.m2/repository/commons-collections/commons-collections/3.1/commons-collections-3.1.jar:/home/mary/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/home/mary/.m2/repository/org/hibernate/hibernate-commons-annotations/3.2.0.Final/hibernate-commons-annotations-3.2.0.Final.jar:/home/mary/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.0-api/1.0.0.Final/hibernate-jpa-2.0-api-1.0.0.Final.jar:/home/mary/.m2/repository/javax/transaction/jta/1.1/jta-1.1.jar:/home/mary/.m2/repository/net/sourceforge/jtds/jtds/1.2.4/jtds-1.2.4.jar:/home/mary/.m2/repository/javassist/javassist/3.12.1.GA/javassist-3.12.1.GA.jar:/home/mary/.m2/repository/org/springframework/spring-orm/3.0.5.RELEASE/spring-orm-3.0.5.RELEASE.jar:/home/mary/.m2/repository/org/springframework/spring-jdbc/3.0.5.RELEASE/spring-jdbc-3.0.5.RELEASE.jar:/home/mary/.m2/repository/org/springframework/spring-tx/3.0.5.RELEASE/spring-tx-3.0.5.RELEASE.jar:/home/mary/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar:/home/mary/.m2/repository/org/springframework/spring-test/3.0.5.RELEASE/spring-test-3.0.5.RELEASE.jar:/home/mary/.m2/repository/org/springframework/security/spring-security-core/3.0.5.RELEASE/spring-security-core-3.0.5.RELEASE.jar:/home/mary/.m2/repository/org/aspectj/aspectjweaver/1.6.8/aspectjweaver-1.6.8.jar:/home/mary/.m2/repository/org/springframework/security/spring-security-config/3.0.5.RELEASE/spring-security-config-3.0.5.RELEASE.jar:/home/mary/.m2/repository/org/springframework/security/spring-security-web/3.0.5.RELEASE/spring-security-web-3.0.5.RELEASE.jar:/home/mary/.m2/repository/cglib/cglib/2.2.2/cglib-2.2.2.jar:/home/mary/.m2/repository/asm/asm/3.3.1/asm-3.3.1.jar:/home/mary/.m2/repository/mysql/mysql-connector-java/5.1.17/mysql-connector-java-5.1.17.jar:/home/mary/.m2/repository/org/hibernate/hibernate-validator/4.2.0.Final/hibernate-validator-4.2.0.Final.jar:/home/mary/.m2/repository/javax/validation/validation-api/1.0.0.GA/validation-api-1.0.0.GA.jar:/home/mary/.m2/repository/org/apache/tiles/tiles-jsp/2.2.2/tiles-jsp-2.2.2.jar:/home/mary/.m2/repository/org/apache/tiles/tiles-servlet/2.2.2/tiles-servlet-2.2.2.jar:/home/mary/.m2/repository/org/apache/tiles/tiles-core/2.2.2/tiles-core-2.2.2.jar:/home/mary/.m2/repository/org/apache/tiles/tiles-template/2.2.2/tiles-template-2.2.2.jar:/home/mary/.m2/repository/org/apache/tiles/tiles-api/2.2.2/tiles-api-2.2.2.jar:/home/mary/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.8.3/jackson-mapper-asl-1.8.3.jar:/home/mary/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.8.3/jackson-core-asl-1.8.3.jar:/home/mary/.m2/repository/net/sf/jasperreports/jasperreports/4.0.1/jasperreports-4.0.1.jar:/home/mary/.m2/repository/commons-beanutils/commons-beanutils/1.8.0/commons-beanutils-1.8.0.jar:/home/mary/.m2/repository/commons-digester/commons-digester/1.7/commons-digester-1.7.jar:/home/mary/.m2/repository/commons-logging/commons-logging/1.0.2/commons-logging-1.0.2.jar:/home/mary/.m2/repository/com/lowagie/itext/2.1.7/itext-2.1.7.jar:/home/mary/.m2/repository/bouncycastle/bcmail-jdk14/138/bcmail-jdk14-138.jar:/home/mary/.m2/repository/bouncycastle/bcprov-jdk14/138/bcprov-jdk14-138.jar:/home/mary/.m2/repository/org/bouncycastle/bctsp-jdk14/1.38/bctsp-jdk14-1.38.jar:/home/mary/.m2/repository/org/bouncycastle/bcprov-jdk14/1.38/bcprov-jdk14-1.38.jar:/home/mary/.m2/repository/org/bouncycastle/bcmail-jdk14/1.38/bcmail-jdk14-1.38.jar:/home/mary/.m2/repository/jfree/jcommon/1.0.15/jcommon-1.0.15.jar:/home/mary/.m2/repository/jfree/jfreechart/1.0.12/jfreechart-1.0.12.jar:/home/mary/.m2/repository/xml-apis/xml-apis/1.3.02/xml-apis-1.3.02.jar:/home/mary/.m2/repository/eclipse/jdtcore/3.1.0/jdtcore-3.1.0.jar:/home/mary/.m2/repository/org/springframework/security/spring-security-taglibs/3.0.5.RELEASE/spring-security-taglibs-3.0.5.RELEASE.jar:/home/mary/.m2/repository/org/springframework/security/spring-security-acl/3.0.5.RELEASE/spring-security-acl-3.0.5.RELEASE.jar:/home/mary/.m2/repository/emma/emma/2.0.5312/emma-2.0.5312.jar:, java.specification.name=Java Platform API Specification, java.class.version=51.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.transaction.factory_class=org.springframework.orm.hibernate3.SpringTransactionFactory, os.version=3.10.0-693.2.2.el7.x86_64, user.home=/home/mary, user.timezone=Europe/Kiev, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.7, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.class.path=/home/mary/Documents/backup/OMS.Release/target/test-classes:/home/mary/Documents/backup/OMS.Release/target/generated-classes/emma/classes:/home/mary/.m2/repository/org/springframework/spring-context/3.0.5.RELEASE/spring-context-3.0.5.RELEASE.jar:/home/mary/.m2/repository/org/springframework/spring-aop/3.0.5.RELEASE/spring-aop-3.0.5.RELEASE.jar:/home/mary/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/home/mary/.m2/repository/org/springframework/spring-beans/3.0.5.RELEASE/spring-beans-3.0.5.RELEASE.jar:/home/mary/.m2/repository/org/springframework/spring-core/3.0.5.RELEASE/spring-core-3.0.5.RELEASE.jar:/home/mary/.m2/repository/org/springframework/spring-expression/3.0.5.RELEASE/spring-expression-3.0.5.RELEASE.jar:/home/mary/.m2/repository/org/springframework/spring-asm/3.0.5.RELEASE/spring-asm-3.0.5.RELEASE.jar:/home/mary/.m2/repository/org/springframework/spring-webmvc/3.0.5.RELEASE/spring-webmvc-3.0.5.RELEASE.jar:/home/mary/.m2/repository/org/springframework/spring-context-support/3.0.5.RELEASE/spring-context-support-3.0.5.RELEASE.jar:/home/mary/.m2/repository/org/springframework/spring-web/3.0.5.RELEASE/spring-web-3.0.5.RELEASE.jar:/home/mary/.m2/repository/org/springframework/roo/org.springframework.roo.annotations/1.0.2.RELEASE/org.springframework.roo.annotations-1.0.2.RELEASE.jar:/home/mary/.m2/repository/org/aspectj/aspectjrt/1.6.9/aspectjrt-1.6.9.jar:/home/mary/.m2/repository/org/slf4j/slf4j-api/1.5.10/slf4j-api-1.5.10.jar:/home/mary/.m2/repository/org/slf4j/jcl-over-slf4j/1.5.10/jcl-over-slf4j-1.5.10.jar:/home/mary/.m2/repository/org/slf4j/slf4j-log4j12/1.5.10/slf4j-log4j12-1.5.10.jar:/home/mary/.m2/repository/log4j/log4j/1.2.15/log4j-1.2.15.jar:/home/mary/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar:/home/mary/.m2/repository/javax/servlet/jstl/1.2/jstl-1.2.jar:/home/mary/.m2/repository/junit/junit/4.7/junit-4.7.jar:/home/mary/.m2/repository/org/hibernate/hibernate-core/3.6.5.Final/hibernate-core-3.6.5.Final.jar:/home/mary/.m2/repository/antlr/antlr/2.7.6/antlr-2.7.6.jar:/home/mary/.m2/repository/commons-collections/commons-collections/3.1/commons-collections-3.1.jar:/home/mary/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/home/mary/.m2/repository/org/hibernate/hibernate-commons-annotations/3.2.0.Final/hibernate-commons-annotations-3.2.0.Final.jar:/home/mary/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.0-api/1.0.0.Final/hibernate-jpa-2.0-api-1.0.0.Final.jar:/home/mary/.m2/repository/javax/transaction/jta/1.1/jta-1.1.jar:/home/mary/.m2/repository/net/sourceforge/jtds/jtds/1.2.4/jtds-1.2.4.jar:/home/mary/.m2/repository/javassist/javassist/3.12.1.GA/javassist-3.12.1.GA.jar:/home/mary/.m2/repository/org/springframework/spring-orm/3.0.5.RELEASE/spring-orm-3.0.5.RELEASE.jar:/home/mary/.m2/repository/org/springframework/spring-jdbc/3.0.5.RELEASE/spring-jdbc-3.0.5.RELEASE.jar:/home/mary/.m2/repository/org/springframework/spring-tx/3.0.5.RELEASE/spring-tx-3.0.5.RELEASE.jar:/home/mary/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar:/home/mary/.m2/repository/org/springframework/spring-test/3.0.5.RELEASE/spring-test-3.0.5.RELEASE.jar:/home/mary/.m2/repository/org/springframework/security/spring-security-core/3.0.5.RELEASE/spring-security-core-3.0.5.RELEASE.jar:/home/mary/.m2/repository/org/aspectj/aspectjweaver/1.6.8/aspectjweaver-1.6.8.jar:/home/mary/.m2/repository/org/springframework/security/spring-security-config/3.0.5.RELEASE/spring-security-config-3.0.5.RELEASE.jar:/home/mary/.m2/repository/org/springframework/security/spring-security-web/3.0.5.RELEASE/spring-security-web-3.0.5.RELEASE.jar:/home/mary/.m2/repository/cglib/cglib/2.2.2/cglib-2.2.2.jar:/home/mary/.m2/repository/asm/asm/3.3.1/asm-3.3.1.jar:/home/mary/.m2/repository/mysql/mysql-connector-java/5.1.17/mysql-connector-java-5.1.17.jar:/home/mary/.m2/repository/org/hibernate/hibernate-validator/4.2.0.Final/hibernate-validator-4.2.0.Final.jar:/home/mary/.m2/repository/javax/validation/validation-api/1.0.0.GA/validation-api-1.0.0.GA.jar:/home/mary/.m2/repository/org/apache/tiles/tiles-jsp/2.2.2/tiles-jsp-2.2.2.jar:/home/mary/.m2/repository/org/apache/tiles/tiles-servlet/2.2.2/tiles-servlet-2.2.2.jar:/home/mary/.m2/repository/org/apache/tiles/tiles-core/2.2.2/tiles-core-2.2.2.jar:/home/mary/.m2/repository/org/apache/tiles/tiles-template/2.2.2/tiles-template-2.2.2.jar:/home/mary/.m2/repository/org/apache/tiles/tiles-api/2.2.2/tiles-api-2.2.2.jar:/home/mary/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.8.3/jackson-mapper-asl-1.8.3.jar:/home/mary/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.8.3/jackson-core-asl-1.8.3.jar:/home/mary/.m2/repository/net/sf/jasperreports/jasperreports/4.0.1/jasperreports-4.0.1.jar:/home/mary/.m2/repository/commons-beanutils/commons-beanutils/1.8.0/commons-beanutils-1.8.0.jar:/home/mary/.m2/repository/commons-digester/commons-digester/1.7/commons-digester-1.7.jar:/home/mary/.m2/repository/commons-logging/commons-logging/1.0.2/commons-logging-1.0.2.jar:/home/mary/.m2/repository/com/lowagie/itext/2.1.7/itext-2.1.7.jar:/home/mary/.m2/repository/bouncycastle/bcmail-jdk14/138/bcmail-jdk14-138.jar:/home/mary/.m2/repository/bouncycastle/bcprov-jdk14/138/bcprov-jdk14-138.jar:/home/mary/.m2/repository/org/bouncycastle/bctsp-jdk14/1.38/bctsp-jdk14-1.38.jar:/home/mary/.m2/repository/org/bouncycastle/bcprov-jdk14/1.38/bcprov-jdk14-1.38.jar:/home/mary/.m2/repository/org/bouncycastle/bcmail-jdk14/1.38/bcmail-jdk14-1.38.jar:/home/mary/.m2/repository/jfree/jcommon/1.0.15/jcommon-1.0.15.jar:/home/mary/.m2/repository/jfree/jfreechart/1.0.12/jfreechart-1.0.12.jar:/home/mary/.m2/repository/xml-apis/xml-apis/1.3.02/xml-apis-1.3.02.jar:/home/mary/.m2/repository/eclipse/jdtcore/3.1.0/jdtcore-3.1.0.jar:/home/mary/.m2/repository/org/springframework/security/spring-security-taglibs/3.0.5.RELEASE/spring-security-taglibs-3.0.5.RELEASE.jar:/home/mary/.m2/repository/org/springframework/security/spring-security-acl/3.0.5.RELEASE/spring-security-acl-3.0.5.RELEASE.jar:/home/mary/.m2/repository/emma/emma/2.0.5312/emma-2.0.5312.jar:, user.name=mary, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.version=1.7, sun.java.command=/home/mary/Documents/backup/OMS.Release/target/surefire/surefirebooter2606429873392295188.jar /home/mary/Documents/backup/OMS.Release/target/surefire 2017-10-02T14-02-49_383-jvmRun1 surefire5200917196388570548tmp surefire_08449828057425122986tmp, java.home=/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre, sun.arch.data.model=64, hibernate.connection.url=jdbc:mysql://localhost:3306/test1, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.7.0_151, java.ext.dirs=/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre/lib/resources.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre/lib/rt.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre/lib/jsse.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre/lib/jce.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre/lib/charsets.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre/lib/rhino.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre/lib/jfr.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre/classes, java.vendor=Oracle Corporation, localRepository=/home/mary/.m2/repository, file.separator=/, hibernate.hbm2ddl.auto=create-drop, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=gnome, dialect=org.hibernate.dialect.MySQL5Dialect, sun.cpu.isalist=}
[2017-10-02 14:02:51,813]DEBUG  1178[main] - org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) - Processing hbm.xml files
[2017-10-02 14:02:51,813]DEBUG  1178[main] - org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) - Process annotated classes
[2017-10-02 14:02:51,817] INFO  1182[main] - org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:532) - Binding entity from annotated class: com.softserveinc.edu.oms.domain.entities.Role
[2017-10-02 14:02:51,834]DEBUG  1199[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2017-10-02 14:02:51,836]DEBUG  1201[main] - org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1019) - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2017-10-02 14:02:51,840]DEBUG  1205[main] - org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name Role
[2017-10-02 14:02:51,843] INFO  1208[main] - org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:530) - Bind entity com.softserveinc.edu.oms.domain.entities.Role on table Roles
[2017-10-02 14:02:51,865]DEBUG  1230[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Roles), mappingColumn=ID, insertable=true, updatable=true, unique=false}
[2017-10-02 14:02:51,870]DEBUG  1235[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property id with lazy=false
[2017-10-02 14:02:51,872]DEBUG  1237[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for id
[2017-10-02 14:02:51,873]DEBUG  1238[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property id
[2017-10-02 14:02:51,876]DEBUG  1241[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Roles), mappingColumn=RoleName, insertable=true, updatable=true, unique=false}
[2017-10-02 14:02:51,877]DEBUG  1242[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property roleName with lazy=false
[2017-10-02 14:02:51,877]DEBUG  1242[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for roleName
[2017-10-02 14:02:51,877]DEBUG  1242[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property roleName
[2017-10-02 14:02:51,879] INFO  1244[main] - org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:532) - Binding entity from annotated class: com.softserveinc.edu.oms.domain.entities.Region
[2017-10-02 14:02:51,880]DEBUG  1245[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2017-10-02 14:02:51,880]DEBUG  1245[main] - org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1019) - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2017-10-02 14:02:51,880]DEBUG  1245[main] - org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name Region
[2017-10-02 14:02:51,880] INFO  1245[main] - org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:530) - Bind entity com.softserveinc.edu.oms.domain.entities.Region on table Regions
[2017-10-02 14:02:51,882]DEBUG  1247[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Regions), mappingColumn=ID, insertable=true, updatable=true, unique=false}
[2017-10-02 14:02:51,882]DEBUG  1247[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property id with lazy=false
[2017-10-02 14:02:51,882]DEBUG  1247[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for id
[2017-10-02 14:02:51,883]DEBUG  1248[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property id
[2017-10-02 14:02:51,883]DEBUG  1248[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Regions), mappingColumn=RegionName, insertable=true, updatable=true, unique=false}
[2017-10-02 14:02:51,883]DEBUG  1248[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property regionName with lazy=false
[2017-10-02 14:02:51,884]DEBUG  1249[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for regionName
[2017-10-02 14:02:51,884]DEBUG  1249[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property regionName
[2017-10-02 14:02:51,884] INFO  1249[main] - org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:532) - Binding entity from annotated class: com.softserveinc.edu.oms.domain.entities.CustomerType
[2017-10-02 14:02:51,884]DEBUG  1249[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2017-10-02 14:02:51,885]DEBUG  1250[main] - org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1019) - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2017-10-02 14:02:51,885]DEBUG  1250[main] - org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name CustomerType
[2017-10-02 14:02:51,885] INFO  1250[main] - org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:530) - Bind entity com.softserveinc.edu.oms.domain.entities.CustomerType on table CustomerTypes
[2017-10-02 14:02:51,887]DEBUG  1252[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerTypes), mappingColumn=ID, insertable=true, updatable=true, unique=false}
[2017-10-02 14:02:51,888]DEBUG  1253[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property id with lazy=false
[2017-10-02 14:02:51,888]DEBUG  1253[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for id
[2017-10-02 14:02:51,888]DEBUG  1253[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property id
[2017-10-02 14:02:51,889]DEBUG  1254[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerTypes), mappingColumn=Discount, insertable=true, updatable=true, unique=false}
[2017-10-02 14:02:51,889]DEBUG  1254[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property discount with lazy=false
[2017-10-02 14:02:51,889]DEBUG  1254[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for discount
[2017-10-02 14:02:51,889]DEBUG  1254[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property discount
[2017-10-02 14:02:51,890]DEBUG  1255[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerTypes), mappingColumn=MaxRange, insertable=true, updatable=true, unique=false}
[2017-10-02 14:02:51,890]DEBUG  1255[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property maxRange with lazy=false
[2017-10-02 14:02:51,890]DEBUG  1255[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for maxRange
[2017-10-02 14:02:51,891]DEBUG  1256[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property maxRange
[2017-10-02 14:02:51,891]DEBUG  1256[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerTypes), mappingColumn=MinRange, insertable=true, updatable=true, unique=false}
[2017-10-02 14:02:51,891]DEBUG  1256[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property minRange with lazy=false
[2017-10-02 14:02:51,891]DEBUG  1256[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for minRange
[2017-10-02 14:02:51,892]DEBUG  1257[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property minRange
[2017-10-02 14:02:51,892]DEBUG  1257[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerTypes), mappingColumn=TypeName, insertable=true, updatable=true, unique=false}
[2017-10-02 14:02:51,892]DEBUG  1257[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property typeName with lazy=false
[2017-10-02 14:02:51,892]DEBUG  1257[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for typeName
[2017-10-02 14:02:51,893]DEBUG  1258[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property typeName
[2017-10-02 14:02:51,893] INFO  1258[main] - org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:532) - Binding entity from annotated class: com.softserveinc.edu.oms.domain.entities.User
[2017-10-02 14:02:51,893]DEBUG  1258[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2017-10-02 14:02:51,894]DEBUG  1259[main] - org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1019) - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2017-10-02 14:02:51,894]DEBUG  1259[main] - org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name User
[2017-10-02 14:02:51,894] INFO  1259[main] - org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:530) - Bind entity com.softserveinc.edu.oms.domain.entities.User on table Users
[2017-10-02 14:02:51,903]DEBUG  1268[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=ID, insertable=true, updatable=true, unique=false}
[2017-10-02 14:02:51,903]DEBUG  1268[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property id with lazy=false
[2017-10-02 14:02:51,903]DEBUG  1268[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for id
[2017-10-02 14:02:51,904]DEBUG  1269[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property id
[2017-10-02 14:02:51,904]DEBUG  1269[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=IsUserActive, insertable=true, updatable=true, unique=false}
[2017-10-02 14:02:51,904]DEBUG  1269[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property active with lazy=false
[2017-10-02 14:02:51,904]DEBUG  1269[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for active
[2017-10-02 14:02:51,905]DEBUG  1270[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property active
[2017-10-02 14:02:51,905]DEBUG  1270[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=Balance, insertable=true, updatable=true, unique=false}
[2017-10-02 14:02:51,905]DEBUG  1270[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property balance with lazy=false
[2017-10-02 14:02:51,905]DEBUG  1270[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for balance
[2017-10-02 14:02:51,906]DEBUG  1271[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property balance
[2017-10-02 14:02:51,907]DEBUG  1272[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3JoinColumn{logicalColumnName='CustomerTypeRef', referencedColumn='', mappedBy=''}
[2017-10-02 14:02:51,907]DEBUG  1272[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=customerType, insertable=true, updatable=true, unique=false}
[2017-10-02 14:02:51,910]DEBUG  1275[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property customerType
[2017-10-02 14:02:51,910]DEBUG  1275[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=Email, insertable=true, updatable=true, unique=false}
[2017-10-02 14:02:51,910]DEBUG  1275[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property email with lazy=false
[2017-10-02 14:02:51,911]DEBUG  1276[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for email
[2017-10-02 14:02:51,911]DEBUG  1276[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property email
[2017-10-02 14:02:51,911]DEBUG  1276[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=FirstName, insertable=true, updatable=true, unique=false}
[2017-10-02 14:02:51,911]DEBUG  1276[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property firstName with lazy=false
[2017-10-02 14:02:51,912]DEBUG  1277[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for firstName
[2017-10-02 14:02:51,912]DEBUG  1277[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property firstName
[2017-10-02 14:02:51,912]DEBUG  1277[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=LastName, insertable=true, updatable=true, unique=false}
[2017-10-02 14:02:51,912]DEBUG  1277[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property lastName with lazy=false
[2017-10-02 14:02:51,915]DEBUG  1280[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for lastName
[2017-10-02 14:02:51,915]DEBUG  1280[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property lastName
[2017-10-02 14:02:51,916]DEBUG  1281[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=Login, insertable=true, updatable=true, unique=false}
[2017-10-02 14:02:51,916]DEBUG  1281[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property login with lazy=false
[2017-10-02 14:02:51,916]DEBUG  1281[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for login
[2017-10-02 14:02:51,916]DEBUG  1281[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property login
[2017-10-02 14:02:51,917]DEBUG  1282[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=Password, insertable=true, updatable=true, unique=false}
[2017-10-02 14:02:51,917]DEBUG  1282[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property password with lazy=false
[2017-10-02 14:02:51,917]DEBUG  1282[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for password
[2017-10-02 14:02:51,917]DEBUG  1282[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property password
[2017-10-02 14:02:51,917]DEBUG  1282[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3JoinColumn{logicalColumnName='RegionRef', referencedColumn='', mappedBy=''}
[2017-10-02 14:02:51,918]DEBUG  1283[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=region, insertable=true, updatable=true, unique=false}
[2017-10-02 14:02:51,923]DEBUG  1288[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property region
[2017-10-02 14:02:51,924]DEBUG  1289[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3JoinColumn{logicalColumnName='RoleRef', referencedColumn='', mappedBy=''}
[2017-10-02 14:02:51,924]DEBUG  1289[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=role, insertable=true, updatable=true, unique=false}
[2017-10-02 14:02:51,924]DEBUG  1289[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property role
[2017-10-02 14:02:51,924] INFO  1289[main] - org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:532) - Binding entity from annotated class: com.softserveinc.edu.oms.domain.entities.OrderStatus
[2017-10-02 14:02:51,925]DEBUG  1290[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2017-10-02 14:02:51,925]DEBUG  1290[main] - org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1019) - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2017-10-02 14:02:51,925]DEBUG  1290[main] - org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name OrderStatus
[2017-10-02 14:02:51,926] INFO  1291[main] - org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:530) - Bind entity com.softserveinc.edu.oms.domain.entities.OrderStatus on table OrderStatuses
[2017-10-02 14:02:51,927]DEBUG  1292[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderStatuses), mappingColumn=ID, insertable=true, updatable=true, unique=false}
[2017-10-02 14:02:51,928]DEBUG  1293[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property id with lazy=false
[2017-10-02 14:02:51,928]DEBUG  1293[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for id
[2017-10-02 14:02:51,928]DEBUG  1293[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property id
[2017-10-02 14:02:51,929]DEBUG  1294[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderStatuses), mappingColumn=OrederStatusName, insertable=true, updatable=true, unique=false}
[2017-10-02 14:02:51,929]DEBUG  1294[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property orderStatusName with lazy=false
[2017-10-02 14:02:51,929]DEBUG  1294[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for orderStatusName
[2017-10-02 14:02:51,930]DEBUG  1295[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property orderStatusName
[2017-10-02 14:02:51,930] INFO  1295[main] - org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:532) - Binding entity from annotated class: com.softserveinc.edu.oms.domain.entities.Order
[2017-10-02 14:02:51,930]DEBUG  1295[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2017-10-02 14:02:51,931]DEBUG  1296[main] - org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1019) - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2017-10-02 14:02:51,931]DEBUG  1296[main] - org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name Order
[2017-10-02 14:02:51,931] INFO  1296[main] - org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:530) - Bind entity com.softserveinc.edu.oms.domain.entities.Order on table Orders
[2017-10-02 14:02:51,936]DEBUG  1301[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=ID, insertable=true, updatable=true, unique=false}
[2017-10-02 14:02:51,936]DEBUG  1301[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property id with lazy=false
[2017-10-02 14:02:51,936]DEBUG  1301[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for id
[2017-10-02 14:02:51,936]DEBUG  1301[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property id
[2017-10-02 14:02:51,937]DEBUG  1302[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3JoinColumn{logicalColumnName='Assigne', referencedColumn='', mappedBy=''}
[2017-10-02 14:02:51,937]DEBUG  1302[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=assigne, insertable=true, updatable=true, unique=false}
[2017-10-02 14:02:51,937]DEBUG  1302[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property assigne
[2017-10-02 14:02:51,937]DEBUG  1302[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3JoinColumn{logicalColumnName='Customer', referencedColumn='', mappedBy=''}
[2017-10-02 14:02:51,938]DEBUG  1303[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=customer, insertable=true, updatable=true, unique=false}
[2017-10-02 14:02:51,938]DEBUG  1303[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property customer
[2017-10-02 14:02:51,938]DEBUG  1303[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=DeliveryDate, insertable=true, updatable=true, unique=false}
[2017-10-02 14:02:51,938]DEBUG  1303[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property deliveryDate with lazy=false
[2017-10-02 14:02:51,938]DEBUG  1303[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for deliveryDate
[2017-10-02 14:02:51,939]DEBUG  1304[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property deliveryDate
[2017-10-02 14:02:51,939]DEBUG  1304[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=IsGift, insertable=true, updatable=true, unique=false}
[2017-10-02 14:02:51,939]DEBUG  1304[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property isGift with lazy=false
[2017-10-02 14:02:51,939]DEBUG  1304[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for isGift
[2017-10-02 14:02:51,940]DEBUG  1305[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property isGift
[2017-10-02 14:02:51,940]DEBUG  1305[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=MaxDiscount, insertable=true, updatable=true, unique=false}
[2017-10-02 14:02:51,940]DEBUG  1305[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property maxDiscount with lazy=false
[2017-10-02 14:02:51,940]DEBUG  1305[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for maxDiscount
[2017-10-02 14:02:51,940]DEBUG  1305[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property maxDiscount
[2017-10-02 14:02:51,941]DEBUG  1306[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=OrderDate, insertable=true, updatable=true, unique=false}
[2017-10-02 14:02:51,941]DEBUG  1306[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property orderDate with lazy=false
[2017-10-02 14:02:51,942]DEBUG  1307[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for orderDate
[2017-10-02 14:02:51,942]DEBUG  1307[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property orderDate
[2017-10-02 14:02:51,942]DEBUG  1307[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=OrderName, insertable=true, updatable=true, unique=false}
[2017-10-02 14:02:51,942]DEBUG  1307[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property orderName with lazy=false
[2017-10-02 14:02:51,942]DEBUG  1307[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for orderName
[2017-10-02 14:02:51,943]DEBUG  1308[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property orderName
[2017-10-02 14:02:51,943]DEBUG  1308[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=OrderNumber, insertable=true, updatable=true, unique=true}
[2017-10-02 14:02:51,943]DEBUG  1308[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property orderNumber with lazy=false
[2017-10-02 14:02:51,943]DEBUG  1308[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for orderNumber
[2017-10-02 14:02:51,944]DEBUG  1309[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property orderNumber
[2017-10-02 14:02:51,944]DEBUG  1309[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3JoinColumn{logicalColumnName='OrderStatusRef', referencedColumn='', mappedBy=''}
[2017-10-02 14:02:51,944]DEBUG  1309[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=orderStatus, insertable=true, updatable=true, unique=false}
[2017-10-02 14:02:51,944]DEBUG  1309[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property orderStatus
[2017-10-02 14:02:51,944]DEBUG  1309[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=PreferableDeliveryDate, insertable=true, updatable=true, unique=false}
[2017-10-02 14:02:51,945]DEBUG  1310[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property preferableDeliveryDate with lazy=false
[2017-10-02 14:02:51,945]DEBUG  1310[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for preferableDeliveryDate
[2017-10-02 14:02:51,945]DEBUG  1310[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property preferableDeliveryDate
[2017-10-02 14:02:51,945]DEBUG  1310[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=TotalPrice, insertable=true, updatable=true, unique=false}
[2017-10-02 14:02:51,946]DEBUG  1311[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property totalPrice with lazy=false
[2017-10-02 14:02:51,946]DEBUG  1311[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for totalPrice
[2017-10-02 14:02:51,946]DEBUG  1311[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property totalPrice
[2017-10-02 14:02:51,946] INFO  1311[main] - org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:532) - Binding entity from annotated class: com.softserveinc.edu.oms.domain.entities.Product
[2017-10-02 14:02:51,946]DEBUG  1311[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2017-10-02 14:02:51,947]DEBUG  1312[main] - org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1019) - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2017-10-02 14:02:51,947]DEBUG  1312[main] - org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name Product
[2017-10-02 14:02:51,947] INFO  1312[main] - org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:530) - Bind entity com.softserveinc.edu.oms.domain.entities.Product on table Products
[2017-10-02 14:02:51,948]DEBUG  1313[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Products), mappingColumn=ID, insertable=true, updatable=true, unique=false}
[2017-10-02 14:02:51,949]DEBUG  1314[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property id with lazy=false
[2017-10-02 14:02:51,949]DEBUG  1314[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for id
[2017-10-02 14:02:51,949]DEBUG  1314[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property id
[2017-10-02 14:02:51,950]DEBUG  1315[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Products), mappingColumn=IsProductActive, insertable=true, updatable=true, unique=false}
[2017-10-02 14:02:51,950]DEBUG  1315[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property active with lazy=false
[2017-10-02 14:02:51,950]DEBUG  1315[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for active
[2017-10-02 14:02:51,950]DEBUG  1315[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property active
[2017-10-02 14:02:51,951]DEBUG  1316[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Products), mappingColumn=ProductDescription, insertable=true, updatable=true, unique=false}
[2017-10-02 14:02:51,951]DEBUG  1316[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property productDescription with lazy=false
[2017-10-02 14:02:51,951]DEBUG  1316[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for productDescription
[2017-10-02 14:02:51,951]DEBUG  1316[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property productDescription
[2017-10-02 14:02:51,951]DEBUG  1316[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Products), mappingColumn=ProductName, insertable=true, updatable=true, unique=false}
[2017-10-02 14:02:51,952]DEBUG  1317[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property productName with lazy=false
[2017-10-02 14:02:51,952]DEBUG  1317[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for productName
[2017-10-02 14:02:51,952]DEBUG  1317[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property productName
[2017-10-02 14:02:51,952]DEBUG  1317[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Products), mappingColumn=ProductPrice, insertable=true, updatable=true, unique=false}
[2017-10-02 14:02:51,952]DEBUG  1317[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property productPrice with lazy=false
[2017-10-02 14:02:51,953]DEBUG  1318[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for productPrice
[2017-10-02 14:02:51,953]DEBUG  1318[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property productPrice
[2017-10-02 14:02:51,953] INFO  1318[main] - org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:532) - Binding entity from annotated class: com.softserveinc.edu.oms.domain.entities.Dimension
[2017-10-02 14:02:51,953]DEBUG  1318[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2017-10-02 14:02:51,953]DEBUG  1318[main] - org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1019) - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2017-10-02 14:02:51,954]DEBUG  1319[main] - org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name Dimension
[2017-10-02 14:02:51,954] INFO  1319[main] - org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:530) - Bind entity com.softserveinc.edu.oms.domain.entities.Dimension on table Dimensions
[2017-10-02 14:02:51,955]DEBUG  1320[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Dimensions), mappingColumn=ID, insertable=true, updatable=true, unique=false}
[2017-10-02 14:02:51,955]DEBUG  1320[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property id with lazy=false
[2017-10-02 14:02:51,955]DEBUG  1320[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for id
[2017-10-02 14:02:51,956]DEBUG  1321[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property id
[2017-10-02 14:02:51,956]DEBUG  1321[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Dimensions), mappingColumn=DimensionName, insertable=true, updatable=true, unique=false}
[2017-10-02 14:02:51,956]DEBUG  1321[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property dimensionName with lazy=false
[2017-10-02 14:02:51,956]DEBUG  1321[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for dimensionName
[2017-10-02 14:02:51,957]DEBUG  1322[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property dimensionName
[2017-10-02 14:02:51,957]DEBUG  1322[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Dimensions), mappingColumn=NumberOfProducts, insertable=true, updatable=true, unique=false}
[2017-10-02 14:02:51,957]DEBUG  1322[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property numberOfProduct with lazy=false
[2017-10-02 14:02:51,957]DEBUG  1322[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for numberOfProduct
[2017-10-02 14:02:51,957]DEBUG  1322[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property numberOfProduct
[2017-10-02 14:02:51,958] INFO  1323[main] - org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:532) - Binding entity from annotated class: com.softserveinc.edu.oms.domain.entities.OrderItem
[2017-10-02 14:02:51,958]DEBUG  1323[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2017-10-02 14:02:51,958]DEBUG  1323[main] - org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1019) - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2017-10-02 14:02:51,958]DEBUG  1323[main] - org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name OrderItem
[2017-10-02 14:02:51,958] INFO  1323[main] - org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:530) - Bind entity com.softserveinc.edu.oms.domain.entities.OrderItem on table OrderItems
[2017-10-02 14:02:51,960]DEBUG  1325[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderItems), mappingColumn=ID, insertable=true, updatable=true, unique=false}
[2017-10-02 14:02:51,961]DEBUG  1326[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property id with lazy=false
[2017-10-02 14:02:51,961]DEBUG  1326[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for id
[2017-10-02 14:02:51,961]DEBUG  1326[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property id
[2017-10-02 14:02:51,962]DEBUG  1327[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderItems), mappingColumn=Cost, insertable=true, updatable=true, unique=false}
[2017-10-02 14:02:51,962]DEBUG  1327[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property cost with lazy=false
[2017-10-02 14:02:51,962]DEBUG  1327[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for cost
[2017-10-02 14:02:51,962]DEBUG  1327[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property cost
[2017-10-02 14:02:51,963]DEBUG  1328[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3JoinColumn{logicalColumnName='DimensionRef', referencedColumn='', mappedBy=''}
[2017-10-02 14:02:51,963]DEBUG  1328[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderItems), mappingColumn=dimension, insertable=true, updatable=true, unique=false}
[2017-10-02 14:02:51,963]DEBUG  1328[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property dimension
[2017-10-02 14:02:51,963]DEBUG  1328[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderItems), mappingColumn=ItemPrice, insertable=true, updatable=true, unique=false}
[2017-10-02 14:02:51,964]DEBUG  1329[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property itemPrice with lazy=false
[2017-10-02 14:02:51,964]DEBUG  1329[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for itemPrice
[2017-10-02 14:02:51,964]DEBUG  1329[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property itemPrice
[2017-10-02 14:02:51,964]DEBUG  1329[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3JoinColumn{logicalColumnName='OrderRef', referencedColumn='', mappedBy=''}
[2017-10-02 14:02:51,964]DEBUG  1329[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderItems), mappingColumn=order, insertable=true, updatable=true, unique=false}
[2017-10-02 14:02:51,965]DEBUG  1330[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property order
[2017-10-02 14:02:51,965]DEBUG  1330[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3JoinColumn{logicalColumnName='ProductRef', referencedColumn='', mappedBy=''}
[2017-10-02 14:02:51,965]DEBUG  1330[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderItems), mappingColumn=product, insertable=true, updatable=true, unique=false}
[2017-10-02 14:02:51,966]DEBUG  1331[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property product
[2017-10-02 14:02:51,966]DEBUG  1331[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderItems), mappingColumn=Quantity, insertable=true, updatable=true, unique=false}
[2017-10-02 14:02:51,966]DEBUG  1331[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property quantity with lazy=false
[2017-10-02 14:02:51,966]DEBUG  1331[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for quantity
[2017-10-02 14:02:51,966]DEBUG  1331[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property quantity
[2017-10-02 14:02:51,967] INFO  1332[main] - org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:532) - Binding entity from annotated class: com.softserveinc.edu.oms.domain.entities.CreditCardType
[2017-10-02 14:02:51,967]DEBUG  1332[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2017-10-02 14:02:51,967]DEBUG  1332[main] - org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1019) - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2017-10-02 14:02:51,967]DEBUG  1332[main] - org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name CreditCardType
[2017-10-02 14:02:51,967] INFO  1332[main] - org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:530) - Bind entity com.softserveinc.edu.oms.domain.entities.CreditCardType on table CardType
[2017-10-02 14:02:51,969]DEBUG  1334[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CardType), mappingColumn=ID, insertable=true, updatable=true, unique=false}
[2017-10-02 14:02:51,969]DEBUG  1334[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property id with lazy=false
[2017-10-02 14:02:51,970]DEBUG  1335[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for id
[2017-10-02 14:02:51,970]DEBUG  1335[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property id
[2017-10-02 14:02:51,970]DEBUG  1335[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CardType), mappingColumn=CardType, insertable=true, updatable=true, unique=false}
[2017-10-02 14:02:51,970]DEBUG  1335[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property cardType with lazy=false
[2017-10-02 14:02:51,971]DEBUG  1336[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for cardType
[2017-10-02 14:02:51,971]DEBUG  1336[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property cardType
[2017-10-02 14:02:51,971]DEBUG  1336[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CardType), mappingColumn=CardNumber, insertable=true, updatable=true, unique=false}
[2017-10-02 14:02:51,971]DEBUG  1336[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property creditCardNumber with lazy=false
[2017-10-02 14:02:51,971]DEBUG  1336[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for creditCardNumber
[2017-10-02 14:02:51,972]DEBUG  1337[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property creditCardNumber
[2017-10-02 14:02:51,972]DEBUG  1337[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CardType), mappingColumn=CardCvv2, insertable=true, updatable=true, unique=false}
[2017-10-02 14:02:51,972]DEBUG  1337[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property cvv2 with lazy=false
[2017-10-02 14:02:51,972]DEBUG  1337[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for cvv2
[2017-10-02 14:02:51,972]DEBUG  1337[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property cvv2
[2017-10-02 14:02:51,973]DEBUG  1338[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CardType), mappingColumn=Expiration_Date, insertable=true, updatable=true, unique=false}
[2017-10-02 14:02:51,973]DEBUG  1338[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property expDate with lazy=false
[2017-10-02 14:02:51,973]DEBUG  1338[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for expDate
[2017-10-02 14:02:51,973]DEBUG  1338[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property expDate
[2017-10-02 14:02:51,974]DEBUG  1339[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CardType), mappingColumn=IssueDate, insertable=true, updatable=true, unique=false}
[2017-10-02 14:02:51,974]DEBUG  1339[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property issueDate with lazy=false
[2017-10-02 14:02:51,974]DEBUG  1339[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for issueDate
[2017-10-02 14:02:51,974]DEBUG  1339[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property issueDate
[2017-10-02 14:02:51,974]DEBUG  1339[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CardType), mappingColumn=IssueNumber, insertable=true, updatable=true, unique=false}
[2017-10-02 14:02:51,975]DEBUG  1340[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property issueNumber with lazy=false
[2017-10-02 14:02:51,975]DEBUG  1340[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for issueNumber
[2017-10-02 14:02:51,975]DEBUG  1340[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property issueNumber
[2017-10-02 14:02:51,976]DEBUG  1341[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for id
[2017-10-02 14:02:51,976]DEBUG  1341[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for roleName
[2017-10-02 14:02:51,976]DEBUG  1341[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for id
[2017-10-02 14:02:51,976]DEBUG  1341[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for regionName
[2017-10-02 14:02:51,976]DEBUG  1341[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for id
[2017-10-02 14:02:51,977]DEBUG  1342[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for discount
[2017-10-02 14:02:51,977]DEBUG  1342[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for maxRange
[2017-10-02 14:02:51,977]DEBUG  1342[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for minRange
[2017-10-02 14:02:51,977]DEBUG  1342[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for typeName
[2017-10-02 14:02:51,977]DEBUG  1342[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for id
[2017-10-02 14:02:51,977]DEBUG  1342[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for active
[2017-10-02 14:02:51,978]DEBUG  1343[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for balance
[2017-10-02 14:02:51,978]DEBUG  1343[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for email
[2017-10-02 14:02:51,978]DEBUG  1343[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for firstName
[2017-10-02 14:02:51,978]DEBUG  1343[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for lastName
[2017-10-02 14:02:51,978]DEBUG  1343[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for login
[2017-10-02 14:02:51,978]DEBUG  1343[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for password
[2017-10-02 14:02:51,979]DEBUG  1344[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for id
[2017-10-02 14:02:51,979]DEBUG  1344[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for orderStatusName
[2017-10-02 14:02:51,979]DEBUG  1344[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for id
[2017-10-02 14:02:51,979]DEBUG  1344[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for deliveryDate
[2017-10-02 14:02:51,979]DEBUG  1344[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for isGift
[2017-10-02 14:02:51,979]DEBUG  1344[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for maxDiscount
[2017-10-02 14:02:51,980]DEBUG  1345[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for orderDate
[2017-10-02 14:02:51,980]DEBUG  1345[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for orderName
[2017-10-02 14:02:51,980]DEBUG  1345[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for orderNumber
[2017-10-02 14:02:51,980]DEBUG  1345[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for preferableDeliveryDate
[2017-10-02 14:02:51,980]DEBUG  1345[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for totalPrice
[2017-10-02 14:02:51,980]DEBUG  1345[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for id
[2017-10-02 14:02:51,981]DEBUG  1346[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for active
[2017-10-02 14:02:51,981]DEBUG  1346[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for productDescription
[2017-10-02 14:02:51,981]DEBUG  1346[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for productName
[2017-10-02 14:02:51,981]DEBUG  1346[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for productPrice
[2017-10-02 14:02:51,981]DEBUG  1346[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for id
[2017-10-02 14:02:51,981]DEBUG  1346[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for dimensionName
[2017-10-02 14:02:51,982]DEBUG  1347[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for numberOfProduct
[2017-10-02 14:02:51,982]DEBUG  1347[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for id
[2017-10-02 14:02:51,982]DEBUG  1347[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for cost
[2017-10-02 14:02:51,982]DEBUG  1347[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for itemPrice
[2017-10-02 14:02:51,982]DEBUG  1347[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for quantity
[2017-10-02 14:02:51,982]DEBUG  1347[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for id
[2017-10-02 14:02:51,983]DEBUG  1348[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for cardType
[2017-10-02 14:02:51,983]DEBUG  1348[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for creditCardNumber
[2017-10-02 14:02:51,983]DEBUG  1348[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for cvv2
[2017-10-02 14:02:51,983]DEBUG  1348[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for expDate
[2017-10-02 14:02:51,983]DEBUG  1348[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for issueDate
[2017-10-02 14:02:51,983]DEBUG  1348[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for issueNumber
[2017-10-02 14:02:51,984]DEBUG  1349[main] - org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) - processing fk mappings (*ToOne and JoinedSubclass)
[2017-10-02 14:02:51,988]DEBUG  1353[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) - processing extends queue
[2017-10-02 14:02:51,988]DEBUG  1353[main] - org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) - processing extends queue
[2017-10-02 14:02:51,988]DEBUG  1353[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) - processing collection mappings
[2017-10-02 14:02:51,989]DEBUG  1354[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) - processing native query and ResultSetMapping mappings
[2017-10-02 14:02:51,989]DEBUG  1354[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) - processing association property references
[2017-10-02 14:02:51,989]DEBUG  1354[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) - processing foreign key constraints
[2017-10-02 14:02:51,989]DEBUG  1354[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Product
[2017-10-02 14:02:51,989]DEBUG  1354[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Dimension
[2017-10-02 14:02:51,989]DEBUG  1354[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Order
[2017-10-02 14:02:51,990]DEBUG  1355[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.OrderStatus
[2017-10-02 14:02:51,990]DEBUG  1355[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.User
[2017-10-02 14:02:51,990]DEBUG  1355[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.User
[2017-10-02 14:02:51,990]DEBUG  1355[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Role
[2017-10-02 14:02:51,990]DEBUG  1355[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.CustomerType
[2017-10-02 14:02:51,990]DEBUG  1355[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Region
[2017-10-02 14:02:51,991] INFO  1356[main] - org.hibernate.cfg.Configuration.applyHibernateValidatorLegacyConstraintsOnDDL(Configuration.java:1676) - Hibernate Validator not found: ignoring
[2017-10-02 14:02:52,000] INFO  1365[main] - org.hibernate.validator.util.Version.<clinit>(Version.java:24) - Hibernate Validator 4.2.0.Final
[2017-10-02 14:02:52,006]DEBUG  1371[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:107) - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2017-10-02 14:02:52,007]DEBUG  1372[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:118) - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.engine.resolver.JPATraversableResolver.
[2017-10-02 14:02:52,027]DEBUG  1392[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:203) - Trying to load META-INF/validation.xml for XML based Validator configuration.
[2017-10-02 14:02:52,028]DEBUG  1393[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:206) - No META-INF/validation.xml found. Using annotation based configuration only
[2017-10-02 14:02:52,085] INFO  1450[main] - org.springframework.orm.hibernate3.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:777) - Building new Hibernate SessionFactory
[2017-10-02 14:02:52,086]DEBUG  1451[main] - org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1854) - Preparing to build session factory with filters : {}
[2017-10-02 14:02:52,086]DEBUG  1451[main] - org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) - Processing hbm.xml files
[2017-10-02 14:02:52,086]DEBUG  1451[main] - org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) - Process annotated classes
[2017-10-02 14:02:52,086]DEBUG  1451[main] - org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) - processing fk mappings (*ToOne and JoinedSubclass)
[2017-10-02 14:02:52,086]DEBUG  1451[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) - processing extends queue
[2017-10-02 14:02:52,087]DEBUG  1452[main] - org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) - processing extends queue
[2017-10-02 14:02:52,087]DEBUG  1452[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) - processing collection mappings
[2017-10-02 14:02:52,087]DEBUG  1452[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) - processing native query and ResultSetMapping mappings
[2017-10-02 14:02:52,087]DEBUG  1452[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) - processing association property references
[2017-10-02 14:02:52,087]DEBUG  1452[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) - processing foreign key constraints
[2017-10-02 14:02:52,087]DEBUG  1452[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Product
[2017-10-02 14:02:52,088]DEBUG  1453[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Dimension
[2017-10-02 14:02:52,088]DEBUG  1453[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Order
[2017-10-02 14:02:52,088]DEBUG  1453[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.OrderStatus
[2017-10-02 14:02:52,088]DEBUG  1453[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.User
[2017-10-02 14:02:52,088]DEBUG  1453[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.User
[2017-10-02 14:02:52,088]DEBUG  1453[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Role
[2017-10-02 14:02:52,089]DEBUG  1454[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.CustomerType
[2017-10-02 14:02:52,089]DEBUG  1454[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Region
[2017-10-02 14:02:52,089]DEBUG  1454[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:107) - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2017-10-02 14:02:52,090]DEBUG  1455[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:118) - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.engine.resolver.JPATraversableResolver.
[2017-10-02 14:02:52,090]DEBUG  1455[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:203) - Trying to load META-INF/validation.xml for XML based Validator configuration.
[2017-10-02 14:02:52,090]DEBUG  1455[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:206) - No META-INF/validation.xml found. Using annotation based configuration only
[2017-10-02 14:02:52,110]DEBUG  1475[main] - org.hibernate.cfg.Configuration.enableLegacyHibernateValidator(Configuration.java:1896) - Legacy Validator not present in classpath, ignoring event listener registration
[2017-10-02 14:02:52,110]DEBUG  1475[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:107) - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2017-10-02 14:02:52,111]DEBUG  1476[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:118) - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.engine.resolver.JPATraversableResolver.
[2017-10-02 14:02:52,111]DEBUG  1476[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:203) - Trying to load META-INF/validation.xml for XML based Validator configuration.
[2017-10-02 14:02:52,111]DEBUG  1476[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:206) - No META-INF/validation.xml found. Using annotation based configuration only
[2017-10-02 14:02:52,114]DEBUG  1479[main] - org.hibernate.cfg.search.HibernateSearchEventListenerRegister.attemptToLoadSearchEventListener(HibernateSearchEventListenerRegister.java:231) - Search not present in classpath, ignoring event listener registration.
[2017-10-02 14:02:52,115] INFO  1480[main] - org.hibernate.cfg.search.HibernateSearchEventListenerRegister.enableHibernateSearch(HibernateSearchEventListenerRegister.java:75) - Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled.
[2017-10-02 14:02:52,119] INFO  1484[main] - org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:64) - Using Hibernate built-in connection pool (not for production use!)
[2017-10-02 14:02:52,119] INFO  1484[main] - org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:65) - Hibernate connection pool size: 20
[2017-10-02 14:02:52,119] INFO  1484[main] - org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:68) - autocommit mode: false
[2017-10-02 14:02:52,123] INFO  1488[main] - org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:103) - using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost:3306/test1
[2017-10-02 14:02:52,123] INFO  1488[main] - org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:106) - connection properties: {user=maria, password=333qwerb}
[2017-10-02 14:02:52,123]DEBUG  1488[main] - org.hibernate.connection.DriverManagerConnectionProvider.getConnection(DriverManagerConnectionProvider.java:132) - opening new JDBC connection
[2017-10-02 14:02:52,289]DEBUG  1654[main] - org.hibernate.connection.DriverManagerConnectionProvider.getConnection(DriverManagerConnectionProvider.java:138) - created connection to: jdbc:mysql://localhost:3306/test1, Isolation Level: 4
[2017-10-02 14:02:52,306] INFO  1671[main] - org.hibernate.dialect.Dialect.<init>(Dialect.java:135) - Using dialect: org.hibernate.dialect.MySQL5Dialect
[2017-10-02 14:02:52,316] INFO  1681[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:126) - Database ->
       name : MySQL
    version : 5.5.56-MariaDB
      major : 5
      minor : 5
[2017-10-02 14:02:52,316] INFO  1681[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:132) - Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.17 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1
[2017-10-02 14:02:52,317] INFO  1682[main] - org.hibernate.transaction.TransactionFactoryFactory.buildTransactionFactory(TransactionFactoryFactory.java:65) - Transaction strategy: org.springframework.orm.hibernate3.SpringTransactionFactory
[2017-10-02 14:02:52,318] INFO  1683[main] - org.hibernate.transaction.TransactionManagerLookupFactory.getTransactionManagerLookup(TransactionManagerLookupFactory.java:83) - No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)
[2017-10-02 14:02:52,318] INFO  1683[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:179) - Automatic flush during beforeCompletion(): disabled
[2017-10-02 14:02:52,318] INFO  1683[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:183) - Automatic session close at end of transaction: disabled
[2017-10-02 14:02:52,318] INFO  1683[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:190) - JDBC batch size: 15
[2017-10-02 14:02:52,319] INFO  1684[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:193) - JDBC batch updates for versioned data: disabled
[2017-10-02 14:02:52,319] INFO  1684[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:198) - Scrollable result sets: enabled
[2017-10-02 14:02:52,319]DEBUG  1684[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:202) - Wrap result sets: disabled
[2017-10-02 14:02:52,319] INFO  1684[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:206) - JDBC3 getGeneratedKeys(): enabled
[2017-10-02 14:02:52,320] INFO  1685[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:214) - Connection release mode: auto
[2017-10-02 14:02:52,320] INFO  1685[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:238) - Maximum outer join fetch depth: 2
[2017-10-02 14:02:52,320] INFO  1685[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:241) - Default batch fetch size: 1
[2017-10-02 14:02:52,321] INFO  1686[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:245) - Generate SQL with comments: disabled
[2017-10-02 14:02:52,321] INFO  1686[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:249) - Order SQL updates by primary key: disabled
[2017-10-02 14:02:52,321] INFO  1686[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:253) - Order SQL inserts for batching: disabled
[2017-10-02 14:02:52,321] INFO  1686[main] - org.hibernate.cfg.SettingsFactory.createQueryTranslatorFactory(SettingsFactory.java:431) - Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory
[2017-10-02 14:02:52,322] INFO  1687[main] - org.hibernate.hql.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:47) - Using ASTQueryTranslatorFactory
[2017-10-02 14:02:52,323] INFO  1688[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:261) - Query language substitutions: {}
[2017-10-02 14:02:52,323] INFO  1688[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:266) - JPA-QL strict compliance: disabled
[2017-10-02 14:02:52,323] INFO  1688[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:271) - Second-level cache: enabled
[2017-10-02 14:02:52,323] INFO  1688[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:275) - Query cache: disabled
[2017-10-02 14:02:52,323] INFO  1688[main] - org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:406) - Cache region factory : org.hibernate.cache.impl.NoCachingRegionFactory
[2017-10-02 14:02:52,324] INFO  1689[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:285) - Optimize cache for minimal puts: disabled
[2017-10-02 14:02:52,325] INFO  1690[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:294) - Structured second-level cache entries: disabled
[2017-10-02 14:02:52,328] INFO  1693[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:323) - Statistics: disabled
[2017-10-02 14:02:52,328] INFO  1693[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:327) - Deleted entity synthetic identifier rollback: disabled
[2017-10-02 14:02:52,328] INFO  1693[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:343) - Default entity-mode: pojo
[2017-10-02 14:02:52,328] INFO  1693[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:347) - Named query checking : enabled
[2017-10-02 14:02:52,328] INFO  1693[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:351) - Check Nullability in Core (should be disabled when Bean Validation is on): disabled
[2017-10-02 14:02:52,353] INFO  1718[main] - org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:202) - building session factory
[2017-10-02 14:02:52,356]DEBUG  1721[main] - org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:206) - Statistics initialized [enabled=false]}
[2017-10-02 14:02:52,357]DEBUG  1722[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration boolean -> org.hibernate.type.BooleanType@9240189
[2017-10-02 14:02:52,357]DEBUG  1722[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration boolean -> org.hibernate.type.BooleanType@9240189
[2017-10-02 14:02:52,357]DEBUG  1722[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@9240189
[2017-10-02 14:02:52,357]DEBUG  1722[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5fdd5c69
[2017-10-02 14:02:52,358]DEBUG  1723[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@225f6411
[2017-10-02 14:02:52,358]DEBUG  1723[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration yes_no -> org.hibernate.type.YesNoType@45f0d31e
[2017-10-02 14:02:52,358]DEBUG  1723[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration byte -> org.hibernate.type.ByteType@618d7f32
[2017-10-02 14:02:52,358]DEBUG  1723[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration byte -> org.hibernate.type.ByteType@618d7f32
[2017-10-02 14:02:52,358]DEBUG  1723[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@618d7f32
[2017-10-02 14:02:52,359]DEBUG  1724[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration character -> org.hibernate.type.CharacterType@1e317636
[2017-10-02 14:02:52,359]DEBUG  1724[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration char -> org.hibernate.type.CharacterType@1e317636
[2017-10-02 14:02:52,359]DEBUG  1724[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1e317636
[2017-10-02 14:02:52,359]DEBUG  1724[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration short -> org.hibernate.type.ShortType@5b470886
[2017-10-02 14:02:52,359]DEBUG  1724[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration short -> org.hibernate.type.ShortType@5b470886
[2017-10-02 14:02:52,360]DEBUG  1725[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5b470886
[2017-10-02 14:02:52,360]DEBUG  1725[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration integer -> org.hibernate.type.IntegerType@45ea27
[2017-10-02 14:02:52,360]DEBUG  1725[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration int -> org.hibernate.type.IntegerType@45ea27
[2017-10-02 14:02:52,360]DEBUG  1725[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@45ea27
[2017-10-02 14:02:52,360]DEBUG  1725[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration long -> org.hibernate.type.LongType@4bc2d25e
[2017-10-02 14:02:52,361]DEBUG  1726[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration long -> org.hibernate.type.LongType@4bc2d25e
[2017-10-02 14:02:52,361]DEBUG  1726[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4bc2d25e
[2017-10-02 14:02:52,361]DEBUG  1726[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration float -> org.hibernate.type.FloatType@b46c38f
[2017-10-02 14:02:52,361]DEBUG  1726[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration float -> org.hibernate.type.FloatType@b46c38f
[2017-10-02 14:02:52,361]DEBUG  1726[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@b46c38f
[2017-10-02 14:02:52,362]DEBUG  1727[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration double -> org.hibernate.type.DoubleType@23346e3
[2017-10-02 14:02:52,362]DEBUG  1727[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration double -> org.hibernate.type.DoubleType@23346e3
[2017-10-02 14:02:52,362]DEBUG  1727[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@23346e3
[2017-10-02 14:02:52,362]DEBUG  1727[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@19ebcb16
[2017-10-02 14:02:52,362]DEBUG  1727[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@19ebcb16
[2017-10-02 14:02:52,363]DEBUG  1728[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@16377658
[2017-10-02 14:02:52,363]DEBUG  1728[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@16377658
[2017-10-02 14:02:52,363]DEBUG  1728[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration string -> org.hibernate.type.StringType@2142ea45
[2017-10-02 14:02:52,363]DEBUG  1728[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.String -> org.hibernate.type.StringType@2142ea45
[2017-10-02 14:02:52,363]DEBUG  1728[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration url -> org.hibernate.type.UrlType@1b41b392
[2017-10-02 14:02:52,364]DEBUG  1729[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1b41b392
[2017-10-02 14:02:52,364]DEBUG  1729[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration date -> org.hibernate.type.DateType@6ee33b3d
[2017-10-02 14:02:52,364]DEBUG  1729[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6ee33b3d
[2017-10-02 14:02:52,364]DEBUG  1729[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration time -> org.hibernate.type.TimeType@18f7206d
[2017-10-02 14:02:52,364]DEBUG  1729[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@18f7206d
[2017-10-02 14:02:52,365]DEBUG  1730[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration timestamp -> org.hibernate.type.TimestampType@23c4a572
[2017-10-02 14:02:52,365]DEBUG  1730[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@23c4a572
[2017-10-02 14:02:52,365]DEBUG  1730[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@23c4a572
[2017-10-02 14:02:52,365]DEBUG  1730[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4a7b933
[2017-10-02 14:02:52,365]DEBUG  1730[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration calendar -> org.hibernate.type.CalendarType@a810524
[2017-10-02 14:02:52,366]DEBUG  1731[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@a810524
[2017-10-02 14:02:52,366]DEBUG  1731[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@a810524
[2017-10-02 14:02:52,366]DEBUG  1731[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5fe8cf60
[2017-10-02 14:02:52,366]DEBUG  1731[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration locale -> org.hibernate.type.LocaleType@330bc6ce
[2017-10-02 14:02:52,366]DEBUG  1731[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@330bc6ce
[2017-10-02 14:02:52,367]DEBUG  1732[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration currency -> org.hibernate.type.CurrencyType@a49582b
[2017-10-02 14:02:52,367]DEBUG  1732[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@a49582b
[2017-10-02 14:02:52,367]DEBUG  1732[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3dac04
[2017-10-02 14:02:52,367]DEBUG  1732[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3dac04
[2017-10-02 14:02:52,367]DEBUG  1732[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration class -> org.hibernate.type.ClassType@b5e9ce
[2017-10-02 14:02:52,368]DEBUG  1733[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@b5e9ce
[2017-10-02 14:02:52,368]DEBUG  1733[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@71932060
[2017-10-02 14:02:52,368]DEBUG  1733[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@71932060
[2017-10-02 14:02:52,368]DEBUG  1733[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4b9ba20
[2017-10-02 14:02:52,369]DEBUG  1734[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@13d982e4
[2017-10-02 14:02:52,369]DEBUG  1734[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration binary -> org.hibernate.type.BinaryType@294eb467
[2017-10-02 14:02:52,369]DEBUG  1734[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration byte[] -> org.hibernate.type.BinaryType@294eb467
[2017-10-02 14:02:52,369]DEBUG  1734[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration [B -> org.hibernate.type.BinaryType@294eb467
[2017-10-02 14:02:52,369]DEBUG  1734[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@44d5ce53
[2017-10-02 14:02:52,370]DEBUG  1735[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@44d5ce53
[2017-10-02 14:02:52,370]DEBUG  1735[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@44d5ce53
[2017-10-02 14:02:52,370]DEBUG  1735[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration image -> org.hibernate.type.ImageType@5a65f5e
[2017-10-02 14:02:52,370]DEBUG  1735[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration characters -> org.hibernate.type.CharArrayType@34293ad8
[2017-10-02 14:02:52,370]DEBUG  1735[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration char[] -> org.hibernate.type.CharArrayType@34293ad8
[2017-10-02 14:02:52,371]DEBUG  1736[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration [C -> org.hibernate.type.CharArrayType@34293ad8
[2017-10-02 14:02:52,371]DEBUG  1736[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@32b196b2
[2017-10-02 14:02:52,371]DEBUG  1736[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@32b196b2
[2017-10-02 14:02:52,371]DEBUG  1736[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@32b196b2
[2017-10-02 14:02:52,371]DEBUG  1736[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration text -> org.hibernate.type.TextType@5280da83
[2017-10-02 14:02:52,372]DEBUG  1737[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration blob -> org.hibernate.type.BlobType@1bde4427
[2017-10-02 14:02:52,372]DEBUG  1737[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1bde4427
[2017-10-02 14:02:52,372]DEBUG  1737[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3ef374ce
[2017-10-02 14:02:52,372]DEBUG  1737[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@ddc5a99
[2017-10-02 14:02:52,373]DEBUG  1738[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration clob -> org.hibernate.type.ClobType@6f7e20ff
[2017-10-02 14:02:52,373]DEBUG  1738[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6f7e20ff
[2017-10-02 14:02:52,373]DEBUG  1738[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@160608ba
[2017-10-02 14:02:52,373]DEBUG  1738[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@32b25421
[2017-10-02 14:02:52,374]DEBUG  1739[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@15e1356d
[2017-10-02 14:02:52,374]DEBUG  1739[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration serializable -> org.hibernate.type.SerializableType@460367c3
[2017-10-02 14:02:52,374]DEBUG  1739[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration object -> org.hibernate.type.ObjectType@74d52b2b
[2017-10-02 14:02:52,374]DEBUG  1739[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@74d52b2b
[2017-10-02 14:02:52,375]DEBUG  1740[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7ab18869
[2017-10-02 14:02:52,375]DEBUG  1740[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@61f2bf35
[2017-10-02 14:02:52,375]DEBUG  1740[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@680849bd
[2017-10-02 14:02:52,375]DEBUG  1740[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@522f63e7
[2017-10-02 14:02:52,375]DEBUG  1740[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1928dc07
[2017-10-02 14:02:52,376]DEBUG  1741[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5279effd
[2017-10-02 14:02:52,376]DEBUG  1741[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3d818704
[2017-10-02 14:02:52,376]DEBUG  1741[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@64f62484
[2017-10-02 14:02:52,376]DEBUG  1741[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@55405fa
[2017-10-02 14:02:52,377] INFO  1742[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) - Type registration [characters_clob] overrides previous : org.hibernate.type.PrimitiveCharacterArrayClobType@15e1356d
[2017-10-02 14:02:52,377]DEBUG  1742[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1a9c7dfe
[2017-10-02 14:02:52,377] INFO  1742[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) - Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@3ef374ce
[2017-10-02 14:02:52,377]DEBUG  1742[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@605f2094
[2017-10-02 14:02:52,378] INFO  1743[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) - Type registration [wrapper_characters_clob] overrides previous : org.hibernate.type.CharacterArrayClobType@32b25421
[2017-10-02 14:02:52,378]DEBUG  1743[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration clob -> org.hibernate.type.ClobType@37b241c1
[2017-10-02 14:02:52,378] INFO  1743[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) - Type registration [clob] overrides previous : org.hibernate.type.ClobType@6f7e20ff
[2017-10-02 14:02:52,378]DEBUG  1743[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@37b241c1
[2017-10-02 14:02:52,379] INFO  1744[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) - Type registration [java.sql.Clob] overrides previous : org.hibernate.type.ClobType@6f7e20ff
[2017-10-02 14:02:52,379]DEBUG  1744[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@17fb0278
[2017-10-02 14:02:52,379] INFO  1744[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) - Type registration [materialized_clob] overrides previous : org.hibernate.type.MaterializedClobType@160608ba
[2017-10-02 14:02:52,379]DEBUG  1744[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@1813bc58
[2017-10-02 14:02:52,379] INFO  1744[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) - Type registration [wrapper_materialized_blob] overrides previous : org.hibernate.type.WrappedMaterializedBlobType@ddc5a99
[2017-10-02 14:02:52,380]DEBUG  1745[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration blob -> org.hibernate.type.BlobType@47c22350
[2017-10-02 14:02:52,380] INFO  1745[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) - Type registration [blob] overrides previous : org.hibernate.type.BlobType@1bde4427
[2017-10-02 14:02:52,380]DEBUG  1745[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@47c22350
[2017-10-02 14:02:52,380] INFO  1745[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) - Type registration [java.sql.Blob] overrides previous : org.hibernate.type.BlobType@1bde4427
[2017-10-02 14:02:52,382]DEBUG  1747[main] - org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:228) - Session factory constructed with filter configurations : {}
[2017-10-02 14:02:52,382]DEBUG  1747[main] - org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:232) - instantiating session factory with properties: {java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.password=333qwerb, sun.boot.library.path=/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre/lib/amd64, java.vm.version=24.151-b00, hibernate.connection.username=maria, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=OpenJDK 64-Bit Server VM, file.encoding.pkg=sun.io, user.country=US, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=unknown, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/mary/Documents/backup/OMS.Release, java.runtime.version=1.7.0_151-mockbuild_2017_08_23_16_26-b00, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, basedir=/home/mary/Documents/backup/OMS.Release, hibernate.current_session_context_class=org.springframework.orm.hibernate3.SpringSessionContext, java.endorsed.dirs=/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre/lib/endorsed, os.arch=amd64, surefire.real.class.path=/home/mary/Documents/backup/OMS.Release/target/surefire/surefirebooter2606429873392295188.jar, hibernate.check_nullability=false, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, surefire.test.class.path=/home/mary/Documents/backup/OMS.Release/target/test-classes:/home/mary/Documents/backup/OMS.Release/target/generated-classes/emma/classes:/home/mary/.m2/repository/org/springframework/spring-context/3.0.5.RELEASE/spring-context-3.0.5.RELEASE.jar:/home/mary/.m2/repository/org/springframework/spring-aop/3.0.5.RELEASE/spring-aop-3.0.5.RELEASE.jar:/home/mary/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/home/mary/.m2/repository/org/springframework/spring-beans/3.0.5.RELEASE/spring-beans-3.0.5.RELEASE.jar:/home/mary/.m2/repository/org/springframework/spring-core/3.0.5.RELEASE/spring-core-3.0.5.RELEASE.jar:/home/mary/.m2/repository/org/springframework/spring-expression/3.0.5.RELEASE/spring-expression-3.0.5.RELEASE.jar:/home/mary/.m2/repository/org/springframework/spring-asm/3.0.5.RELEASE/spring-asm-3.0.5.RELEASE.jar:/home/mary/.m2/repository/org/springframework/spring-webmvc/3.0.5.RELEASE/spring-webmvc-3.0.5.RELEASE.jar:/home/mary/.m2/repository/org/springframework/spring-context-support/3.0.5.RELEASE/spring-context-support-3.0.5.RELEASE.jar:/home/mary/.m2/repository/org/springframework/spring-web/3.0.5.RELEASE/spring-web-3.0.5.RELEASE.jar:/home/mary/.m2/repository/org/springframework/roo/org.springframework.roo.annotations/1.0.2.RELEASE/org.springframework.roo.annotations-1.0.2.RELEASE.jar:/home/mary/.m2/repository/org/aspectj/aspectjrt/1.6.9/aspectjrt-1.6.9.jar:/home/mary/.m2/repository/org/slf4j/slf4j-api/1.5.10/slf4j-api-1.5.10.jar:/home/mary/.m2/repository/org/slf4j/jcl-over-slf4j/1.5.10/jcl-over-slf4j-1.5.10.jar:/home/mary/.m2/repository/org/slf4j/slf4j-log4j12/1.5.10/slf4j-log4j12-1.5.10.jar:/home/mary/.m2/repository/log4j/log4j/1.2.15/log4j-1.2.15.jar:/home/mary/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar:/home/mary/.m2/repository/javax/servlet/jstl/1.2/jstl-1.2.jar:/home/mary/.m2/repository/junit/junit/4.7/junit-4.7.jar:/home/mary/.m2/repository/org/hibernate/hibernate-core/3.6.5.Final/hibernate-core-3.6.5.Final.jar:/home/mary/.m2/repository/antlr/antlr/2.7.6/antlr-2.7.6.jar:/home/mary/.m2/repository/commons-collections/commons-collections/3.1/commons-collections-3.1.jar:/home/mary/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/home/mary/.m2/repository/org/hibernate/hibernate-commons-annotations/3.2.0.Final/hibernate-commons-annotations-3.2.0.Final.jar:/home/mary/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.0-api/1.0.0.Final/hibernate-jpa-2.0-api-1.0.0.Final.jar:/home/mary/.m2/repository/javax/transaction/jta/1.1/jta-1.1.jar:/home/mary/.m2/repository/net/sourceforge/jtds/jtds/1.2.4/jtds-1.2.4.jar:/home/mary/.m2/repository/javassist/javassist/3.12.1.GA/javassist-3.12.1.GA.jar:/home/mary/.m2/repository/org/springframework/spring-orm/3.0.5.RELEASE/spring-orm-3.0.5.RELEASE.jar:/home/mary/.m2/repository/org/springframework/spring-jdbc/3.0.5.RELEASE/spring-jdbc-3.0.5.RELEASE.jar:/home/mary/.m2/repository/org/springframework/spring-tx/3.0.5.RELEASE/spring-tx-3.0.5.RELEASE.jar:/home/mary/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar:/home/mary/.m2/repository/org/springframework/spring-test/3.0.5.RELEASE/spring-test-3.0.5.RELEASE.jar:/home/mary/.m2/repository/org/springframework/security/spring-security-core/3.0.5.RELEASE/spring-security-core-3.0.5.RELEASE.jar:/home/mary/.m2/repository/org/aspectj/aspectjweaver/1.6.8/aspectjweaver-1.6.8.jar:/home/mary/.m2/repository/org/springframework/security/spring-security-config/3.0.5.RELEASE/spring-security-config-3.0.5.RELEASE.jar:/home/mary/.m2/repository/org/springframework/security/spring-security-web/3.0.5.RELEASE/spring-security-web-3.0.5.RELEASE.jar:/home/mary/.m2/repository/cglib/cglib/2.2.2/cglib-2.2.2.jar:/home/mary/.m2/repository/asm/asm/3.3.1/asm-3.3.1.jar:/home/mary/.m2/repository/mysql/mysql-connector-java/5.1.17/mysql-connector-java-5.1.17.jar:/home/mary/.m2/repository/org/hibernate/hibernate-validator/4.2.0.Final/hibernate-validator-4.2.0.Final.jar:/home/mary/.m2/repository/javax/validation/validation-api/1.0.0.GA/validation-api-1.0.0.GA.jar:/home/mary/.m2/repository/org/apache/tiles/tiles-jsp/2.2.2/tiles-jsp-2.2.2.jar:/home/mary/.m2/repository/org/apache/tiles/tiles-servlet/2.2.2/tiles-servlet-2.2.2.jar:/home/mary/.m2/repository/org/apache/tiles/tiles-core/2.2.2/tiles-core-2.2.2.jar:/home/mary/.m2/repository/org/apache/tiles/tiles-template/2.2.2/tiles-template-2.2.2.jar:/home/mary/.m2/repository/org/apache/tiles/tiles-api/2.2.2/tiles-api-2.2.2.jar:/home/mary/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.8.3/jackson-mapper-asl-1.8.3.jar:/home/mary/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.8.3/jackson-core-asl-1.8.3.jar:/home/mary/.m2/repository/net/sf/jasperreports/jasperreports/4.0.1/jasperreports-4.0.1.jar:/home/mary/.m2/repository/commons-beanutils/commons-beanutils/1.8.0/commons-beanutils-1.8.0.jar:/home/mary/.m2/repository/commons-digester/commons-digester/1.7/commons-digester-1.7.jar:/home/mary/.m2/repository/commons-logging/commons-logging/1.0.2/commons-logging-1.0.2.jar:/home/mary/.m2/repository/com/lowagie/itext/2.1.7/itext-2.1.7.jar:/home/mary/.m2/repository/bouncycastle/bcmail-jdk14/138/bcmail-jdk14-138.jar:/home/mary/.m2/repository/bouncycastle/bcprov-jdk14/138/bcprov-jdk14-138.jar:/home/mary/.m2/repository/org/bouncycastle/bctsp-jdk14/1.38/bctsp-jdk14-1.38.jar:/home/mary/.m2/repository/org/bouncycastle/bcprov-jdk14/1.38/bcprov-jdk14-1.38.jar:/home/mary/.m2/repository/org/bouncycastle/bcmail-jdk14/1.38/bcmail-jdk14-1.38.jar:/home/mary/.m2/repository/jfree/jcommon/1.0.15/jcommon-1.0.15.jar:/home/mary/.m2/repository/jfree/jfreechart/1.0.12/jfreechart-1.0.12.jar:/home/mary/.m2/repository/xml-apis/xml-apis/1.3.02/xml-apis-1.3.02.jar:/home/mary/.m2/repository/eclipse/jdtcore/3.1.0/jdtcore-3.1.0.jar:/home/mary/.m2/repository/org/springframework/security/spring-security-taglibs/3.0.5.RELEASE/spring-security-taglibs-3.0.5.RELEASE.jar:/home/mary/.m2/repository/org/springframework/security/spring-security-acl/3.0.5.RELEASE/spring-security-acl-3.0.5.RELEASE.jar:/home/mary/.m2/repository/emma/emma/2.0.5312/emma-2.0.5312.jar:, java.specification.name=Java Platform API Specification, java.class.version=51.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.transaction.factory_class=org.springframework.orm.hibernate3.SpringTransactionFactory, os.version=3.10.0-693.2.2.el7.x86_64, user.home=/home/mary, user.timezone=Europe/Kiev, java.awt.printerjob=sun.print.PSPrinterJob, java.specification.version=1.7, file.encoding=UTF-8, hibernate.connection.driver_class=com.mysql.jdbc.Driver, user.name=mary, java.class.path=/home/mary/Documents/backup/OMS.Release/target/test-classes:/home/mary/Documents/backup/OMS.Release/target/generated-classes/emma/classes:/home/mary/.m2/repository/org/springframework/spring-context/3.0.5.RELEASE/spring-context-3.0.5.RELEASE.jar:/home/mary/.m2/repository/org/springframework/spring-aop/3.0.5.RELEASE/spring-aop-3.0.5.RELEASE.jar:/home/mary/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/home/mary/.m2/repository/org/springframework/spring-beans/3.0.5.RELEASE/spring-beans-3.0.5.RELEASE.jar:/home/mary/.m2/repository/org/springframework/spring-core/3.0.5.RELEASE/spring-core-3.0.5.RELEASE.jar:/home/mary/.m2/repository/org/springframework/spring-expression/3.0.5.RELEASE/spring-expression-3.0.5.RELEASE.jar:/home/mary/.m2/repository/org/springframework/spring-asm/3.0.5.RELEASE/spring-asm-3.0.5.RELEASE.jar:/home/mary/.m2/repository/org/springframework/spring-webmvc/3.0.5.RELEASE/spring-webmvc-3.0.5.RELEASE.jar:/home/mary/.m2/repository/org/springframework/spring-context-support/3.0.5.RELEASE/spring-context-support-3.0.5.RELEASE.jar:/home/mary/.m2/repository/org/springframework/spring-web/3.0.5.RELEASE/spring-web-3.0.5.RELEASE.jar:/home/mary/.m2/repository/org/springframework/roo/org.springframework.roo.annotations/1.0.2.RELEASE/org.springframework.roo.annotations-1.0.2.RELEASE.jar:/home/mary/.m2/repository/org/aspectj/aspectjrt/1.6.9/aspectjrt-1.6.9.jar:/home/mary/.m2/repository/org/slf4j/slf4j-api/1.5.10/slf4j-api-1.5.10.jar:/home/mary/.m2/repository/org/slf4j/jcl-over-slf4j/1.5.10/jcl-over-slf4j-1.5.10.jar:/home/mary/.m2/repository/org/slf4j/slf4j-log4j12/1.5.10/slf4j-log4j12-1.5.10.jar:/home/mary/.m2/repository/log4j/log4j/1.2.15/log4j-1.2.15.jar:/home/mary/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar:/home/mary/.m2/repository/javax/servlet/jstl/1.2/jstl-1.2.jar:/home/mary/.m2/repository/junit/junit/4.7/junit-4.7.jar:/home/mary/.m2/repository/org/hibernate/hibernate-core/3.6.5.Final/hibernate-core-3.6.5.Final.jar:/home/mary/.m2/repository/antlr/antlr/2.7.6/antlr-2.7.6.jar:/home/mary/.m2/repository/commons-collections/commons-collections/3.1/commons-collections-3.1.jar:/home/mary/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/home/mary/.m2/repository/org/hibernate/hibernate-commons-annotations/3.2.0.Final/hibernate-commons-annotations-3.2.0.Final.jar:/home/mary/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.0-api/1.0.0.Final/hibernate-jpa-2.0-api-1.0.0.Final.jar:/home/mary/.m2/repository/javax/transaction/jta/1.1/jta-1.1.jar:/home/mary/.m2/repository/net/sourceforge/jtds/jtds/1.2.4/jtds-1.2.4.jar:/home/mary/.m2/repository/javassist/javassist/3.12.1.GA/javassist-3.12.1.GA.jar:/home/mary/.m2/repository/org/springframework/spring-orm/3.0.5.RELEASE/spring-orm-3.0.5.RELEASE.jar:/home/mary/.m2/repository/org/springframework/spring-jdbc/3.0.5.RELEASE/spring-jdbc-3.0.5.RELEASE.jar:/home/mary/.m2/repository/org/springframework/spring-tx/3.0.5.RELEASE/spring-tx-3.0.5.RELEASE.jar:/home/mary/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar:/home/mary/.m2/repository/org/springframework/spring-test/3.0.5.RELEASE/spring-test-3.0.5.RELEASE.jar:/home/mary/.m2/repository/org/springframework/security/spring-security-core/3.0.5.RELEASE/spring-security-core-3.0.5.RELEASE.jar:/home/mary/.m2/repository/org/aspectj/aspectjweaver/1.6.8/aspectjweaver-1.6.8.jar:/home/mary/.m2/repository/org/springframework/security/spring-security-config/3.0.5.RELEASE/spring-security-config-3.0.5.RELEASE.jar:/home/mary/.m2/repository/org/springframework/security/spring-security-web/3.0.5.RELEASE/spring-security-web-3.0.5.RELEASE.jar:/home/mary/.m2/repository/cglib/cglib/2.2.2/cglib-2.2.2.jar:/home/mary/.m2/repository/asm/asm/3.3.1/asm-3.3.1.jar:/home/mary/.m2/repository/mysql/mysql-connector-java/5.1.17/mysql-connector-java-5.1.17.jar:/home/mary/.m2/repository/org/hibernate/hibernate-validator/4.2.0.Final/hibernate-validator-4.2.0.Final.jar:/home/mary/.m2/repository/javax/validation/validation-api/1.0.0.GA/validation-api-1.0.0.GA.jar:/home/mary/.m2/repository/org/apache/tiles/tiles-jsp/2.2.2/tiles-jsp-2.2.2.jar:/home/mary/.m2/repository/org/apache/tiles/tiles-servlet/2.2.2/tiles-servlet-2.2.2.jar:/home/mary/.m2/repository/org/apache/tiles/tiles-core/2.2.2/tiles-core-2.2.2.jar:/home/mary/.m2/repository/org/apache/tiles/tiles-template/2.2.2/tiles-template-2.2.2.jar:/home/mary/.m2/repository/org/apache/tiles/tiles-api/2.2.2/tiles-api-2.2.2.jar:/home/mary/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.8.3/jackson-mapper-asl-1.8.3.jar:/home/mary/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.8.3/jackson-core-asl-1.8.3.jar:/home/mary/.m2/repository/net/sf/jasperreports/jasperreports/4.0.1/jasperreports-4.0.1.jar:/home/mary/.m2/repository/commons-beanutils/commons-beanutils/1.8.0/commons-beanutils-1.8.0.jar:/home/mary/.m2/repository/commons-digester/commons-digester/1.7/commons-digester-1.7.jar:/home/mary/.m2/repository/commons-logging/commons-logging/1.0.2/commons-logging-1.0.2.jar:/home/mary/.m2/repository/com/lowagie/itext/2.1.7/itext-2.1.7.jar:/home/mary/.m2/repository/bouncycastle/bcmail-jdk14/138/bcmail-jdk14-138.jar:/home/mary/.m2/repository/bouncycastle/bcprov-jdk14/138/bcprov-jdk14-138.jar:/home/mary/.m2/repository/org/bouncycastle/bctsp-jdk14/1.38/bctsp-jdk14-1.38.jar:/home/mary/.m2/repository/org/bouncycastle/bcprov-jdk14/1.38/bcprov-jdk14-1.38.jar:/home/mary/.m2/repository/org/bouncycastle/bcmail-jdk14/1.38/bcmail-jdk14-1.38.jar:/home/mary/.m2/repository/jfree/jcommon/1.0.15/jcommon-1.0.15.jar:/home/mary/.m2/repository/jfree/jfreechart/1.0.12/jfreechart-1.0.12.jar:/home/mary/.m2/repository/xml-apis/xml-apis/1.3.02/xml-apis-1.3.02.jar:/home/mary/.m2/repository/eclipse/jdtcore/3.1.0/jdtcore-3.1.0.jar:/home/mary/.m2/repository/org/springframework/security/spring-security-taglibs/3.0.5.RELEASE/spring-security-taglibs-3.0.5.RELEASE.jar:/home/mary/.m2/repository/org/springframework/security/spring-security-acl/3.0.5.RELEASE/spring-security-acl-3.0.5.RELEASE.jar:/home/mary/.m2/repository/emma/emma/2.0.5312/emma-2.0.5312.jar:, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.version=1.7, sun.arch.data.model=64, java.home=/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre, sun.java.command=/home/mary/Documents/backup/OMS.Release/target/surefire/surefirebooter2606429873392295188.jar /home/mary/Documents/backup/OMS.Release/target/surefire 2017-10-02T14-02-49_383-jvmRun1 surefire5200917196388570548tmp surefire_08449828057425122986tmp, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, hibernate.connection.url=jdbc:mysql://localhost:3306/test1, java.specification.vendor=Oracle Corporation, user.language=en, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.7.0_151, java.ext.dirs=/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre/lib/resources.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre/lib/rt.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre/lib/jsse.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre/lib/jce.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre/lib/charsets.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre/lib/rhino.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre/lib/jfr.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre/classes, java.vendor=Oracle Corporation, localRepository=/home/mary/.m2/repository, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=create-drop, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=gnome, sun.cpu.isalist=, dialect=org.hibernate.dialect.MySQL5Dialect}
[2017-10-02 14:02:52,389]DEBUG  1754[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-02 14:02:52,390]DEBUG  1755[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-02 14:02:52,390]DEBUG  1755[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-02 14:02:52,390]DEBUG  1755[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-02 14:02:52,391]DEBUG  1756[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-02 14:02:52,391]DEBUG  1756[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-02 14:02:52,391]DEBUG  1756[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-02 14:02:52,391]DEBUG  1756[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-02 14:02:52,392]DEBUG  1757[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-02 14:02:52,392]DEBUG  1757[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-02 14:02:52,506]DEBUG  1871[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) - Static SQL for entity: com.softserveinc.edu.oms.domain.entities.Role
[2017-10-02 14:02:52,507]DEBUG  1872[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) -  Version select: select ID from Roles where ID =?
[2017-10-02 14:02:52,507]DEBUG  1872[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) -  Snapshot select: select role_.ID, role_.RoleName as RoleName0_ from Roles role_ where role_.ID=?
[2017-10-02 14:02:52,507]DEBUG  1872[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) -  Insert 0: insert into Roles (RoleName, ID) values (?, ?)
[2017-10-02 14:02:52,507]DEBUG  1872[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) -  Update 0: update Roles set RoleName=? where ID=?
[2017-10-02 14:02:52,507]DEBUG  1872[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) -  Delete 0: delete from Roles where ID=?
[2017-10-02 14:02:52,508]DEBUG  1873[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2969) -  Identity insert: insert into Roles (RoleName) values (?)
[2017-10-02 14:02:52,514]DEBUG  1879[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) - Static SQL for entity: com.softserveinc.edu.oms.domain.entities.CreditCardType
[2017-10-02 14:02:52,515]DEBUG  1880[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) -  Version select: select ID from CardType where ID =?
[2017-10-02 14:02:52,515]DEBUG  1880[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) -  Snapshot select: select creditcard_.ID, creditcard_.CardType as CardType9_, creditcard_.CardNumber as CardNumber9_, creditcard_.CardCvv2 as CardCvv4_9_, creditcard_.Expiration_Date as Expiration5_9_, creditcard_.IssueDate as IssueDate9_, creditcard_.IssueNumber as IssueNum7_9_ from CardType creditcard_ where creditcard_.ID=?
[2017-10-02 14:02:52,515]DEBUG  1880[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) -  Insert 0: insert into CardType (CardType, CardNumber, CardCvv2, Expiration_Date, IssueDate, IssueNumber, ID) values (?, ?, ?, ?, ?, ?, ?)
[2017-10-02 14:02:52,515]DEBUG  1880[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) -  Update 0: update CardType set CardType=?, CardNumber=?, CardCvv2=?, Expiration_Date=?, IssueDate=?, IssueNumber=? where ID=?
[2017-10-02 14:02:52,515]DEBUG  1880[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) -  Delete 0: delete from CardType where ID=?
[2017-10-02 14:02:52,516]DEBUG  1881[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2969) -  Identity insert: insert into CardType (CardType, CardNumber, CardCvv2, Expiration_Date, IssueDate, IssueNumber) values (?, ?, ?, ?, ?, ?)
[2017-10-02 14:02:52,522]DEBUG  1887[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) - Static SQL for entity: com.softserveinc.edu.oms.domain.entities.OrderItem
[2017-10-02 14:02:52,522]DEBUG  1887[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) -  Version select: select ID from OrderItems where ID =?
[2017-10-02 14:02:52,523]DEBUG  1888[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) -  Snapshot select: select orderitem_.ID, orderitem_.Cost as Cost8_, orderitem_.DimensionRef as Dimensio5_8_, orderitem_.ItemPrice as ItemPrice8_, orderitem_.OrderRef as OrderRef8_, orderitem_.ProductRef as ProductRef8_, orderitem_.Quantity as Quantity8_ from OrderItems orderitem_ where orderitem_.ID=?
[2017-10-02 14:02:52,523]DEBUG  1888[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) -  Insert 0: insert into OrderItems (Cost, DimensionRef, ItemPrice, OrderRef, ProductRef, Quantity, ID) values (?, ?, ?, ?, ?, ?, ?)
[2017-10-02 14:02:52,523]DEBUG  1888[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) -  Update 0: update OrderItems set Cost=?, DimensionRef=?, ItemPrice=?, OrderRef=?, ProductRef=?, Quantity=? where ID=?
[2017-10-02 14:02:52,523]DEBUG  1888[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) -  Delete 0: delete from OrderItems where ID=?
[2017-10-02 14:02:52,523]DEBUG  1888[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2969) -  Identity insert: insert into OrderItems (Cost, DimensionRef, ItemPrice, OrderRef, ProductRef, Quantity) values (?, ?, ?, ?, ?, ?)
[2017-10-02 14:02:52,527]DEBUG  1892[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) - Static SQL for entity: com.softserveinc.edu.oms.domain.entities.Dimension
[2017-10-02 14:02:52,527]DEBUG  1892[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) -  Version select: select ID from Dimensions where ID =?
[2017-10-02 14:02:52,527]DEBUG  1892[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) -  Snapshot select: select dimension_.ID, dimension_.DimensionName as Dimensio2_7_, dimension_.NumberOfProducts as NumberOf3_7_ from Dimensions dimension_ where dimension_.ID=?
[2017-10-02 14:02:52,527]DEBUG  1892[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) -  Insert 0: insert into Dimensions (DimensionName, NumberOfProducts, ID) values (?, ?, ?)
[2017-10-02 14:02:52,528]DEBUG  1893[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) -  Update 0: update Dimensions set DimensionName=?, NumberOfProducts=? where ID=?
[2017-10-02 14:02:52,528]DEBUG  1893[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) -  Delete 0: delete from Dimensions where ID=?
[2017-10-02 14:02:52,528]DEBUG  1893[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2969) -  Identity insert: insert into Dimensions (DimensionName, NumberOfProducts) values (?, ?)
[2017-10-02 14:02:52,538]DEBUG  1903[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) - Static SQL for entity: com.softserveinc.edu.oms.domain.entities.Order
[2017-10-02 14:02:52,538]DEBUG  1903[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) -  Version select: select ID from Orders where ID =?
[2017-10-02 14:02:52,538]DEBUG  1903[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) -  Snapshot select: select order_.ID, order_.Assigne as Assigne5_, order_.Customer as Customer5_, order_.DeliveryDate as Delivery2_5_, order_.IsGift as IsGift5_, order_.MaxDiscount as MaxDisco4_5_, order_.OrderDate as OrderDate5_, order_.OrderName as OrderName5_, order_.OrderNumber as OrderNum7_5_, order_.OrderStatusRef as OrderSt12_5_, order_.PreferableDeliveryDate as Preferab8_5_, order_.TotalPrice as TotalPrice5_ from Orders order_ where order_.ID=?
[2017-10-02 14:02:52,539]DEBUG  1904[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) -  Insert 0: insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice, ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-02 14:02:52,539]DEBUG  1904[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) -  Update 0: update Orders set Assigne=?, Customer=?, DeliveryDate=?, IsGift=?, MaxDiscount=?, OrderDate=?, OrderName=?, OrderNumber=?, OrderStatusRef=?, PreferableDeliveryDate=?, TotalPrice=? where ID=?
[2017-10-02 14:02:52,539]DEBUG  1904[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) -  Delete 0: delete from Orders where ID=?
[2017-10-02 14:02:52,539]DEBUG  1904[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2969) -  Identity insert: insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-02 14:02:52,542]DEBUG  1907[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) - Static SQL for entity: com.softserveinc.edu.oms.domain.entities.OrderStatus
[2017-10-02 14:02:52,542]DEBUG  1907[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) -  Version select: select ID from OrderStatuses where ID =?
[2017-10-02 14:02:52,543]DEBUG  1908[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) -  Snapshot select: select orderstatu_.ID, orderstatu_.OrederStatusName as OrederSt2_4_ from OrderStatuses orderstatu_ where orderstatu_.ID=?
[2017-10-02 14:02:52,543]DEBUG  1908[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) -  Insert 0: insert into OrderStatuses (OrederStatusName, ID) values (?, ?)
[2017-10-02 14:02:52,543]DEBUG  1908[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) -  Update 0: update OrderStatuses set OrederStatusName=? where ID=?
[2017-10-02 14:02:52,543]DEBUG  1908[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) -  Delete 0: delete from OrderStatuses where ID=?
[2017-10-02 14:02:52,543]DEBUG  1908[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2969) -  Identity insert: insert into OrderStatuses (OrederStatusName) values (?)
[2017-10-02 14:02:52,546]DEBUG  1911[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) - Static SQL for entity: com.softserveinc.edu.oms.domain.entities.Region
[2017-10-02 14:02:52,546]DEBUG  1911[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) -  Version select: select ID from Regions where ID =?
[2017-10-02 14:02:52,547]DEBUG  1912[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) -  Snapshot select: select region_.ID, region_.RegionName as RegionName1_ from Regions region_ where region_.ID=?
[2017-10-02 14:02:52,547]DEBUG  1912[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) -  Insert 0: insert into Regions (RegionName, ID) values (?, ?)
[2017-10-02 14:02:52,547]DEBUG  1912[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) -  Update 0: update Regions set RegionName=? where ID=?
[2017-10-02 14:02:52,547]DEBUG  1912[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) -  Delete 0: delete from Regions where ID=?
[2017-10-02 14:02:52,548]DEBUG  1913[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2969) -  Identity insert: insert into Regions (RegionName) values (?)
[2017-10-02 14:02:52,554]DEBUG  1919[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) - Static SQL for entity: com.softserveinc.edu.oms.domain.entities.User
[2017-10-02 14:02:52,554]DEBUG  1919[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) -  Version select: select ID from Users where ID =?
[2017-10-02 14:02:52,554]DEBUG  1919[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) -  Snapshot select: select user_.ID, user_.IsUserActive as IsUserAc2_3_, user_.Balance as Balance3_, user_.CustomerTypeRef as Customer9_3_, user_.Email as Email3_, user_.FirstName as FirstName3_, user_.LastName as LastName3_, user_.Login as Login3_, user_.Password as Password3_, user_.RegionRef as RegionRef3_, user_.RoleRef as RoleRef3_ from Users user_ where user_.ID=?
[2017-10-02 14:02:52,555]DEBUG  1920[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) -  Insert 0: insert into Users (IsUserActive, Balance, CustomerTypeRef, Email, FirstName, LastName, Login, Password, RegionRef, RoleRef, ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-02 14:02:52,555]DEBUG  1920[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) -  Update 0: update Users set IsUserActive=?, Balance=?, CustomerTypeRef=?, Email=?, FirstName=?, LastName=?, Login=?, Password=?, RegionRef=?, RoleRef=? where ID=?
[2017-10-02 14:02:52,555]DEBUG  1920[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) -  Delete 0: delete from Users where ID=?
[2017-10-02 14:02:52,555]DEBUG  1920[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2969) -  Identity insert: insert into Users (IsUserActive, Balance, CustomerTypeRef, Email, FirstName, LastName, Login, Password, RegionRef, RoleRef) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-02 14:02:52,559]DEBUG  1924[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) - Static SQL for entity: com.softserveinc.edu.oms.domain.entities.Product
[2017-10-02 14:02:52,559]DEBUG  1924[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) -  Version select: select ID from Products where ID =?
[2017-10-02 14:02:52,560]DEBUG  1925[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) -  Snapshot select: select product_.ID, product_.IsProductActive as IsProduc2_6_, product_.ProductDescription as ProductD3_6_, product_.ProductName as ProductN4_6_, product_.ProductPrice as ProductP5_6_ from Products product_ where product_.ID=?
[2017-10-02 14:02:52,560]DEBUG  1925[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) -  Insert 0: insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2017-10-02 14:02:52,566]DEBUG  1931[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) -  Update 0: update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-02 14:02:52,566]DEBUG  1931[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) -  Delete 0: delete from Products where ID=?
[2017-10-02 14:02:52,566]DEBUG  1931[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2969) -  Identity insert: insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-02 14:02:52,570]DEBUG  1935[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) - Static SQL for entity: com.softserveinc.edu.oms.domain.entities.CustomerType
[2017-10-02 14:02:52,570]DEBUG  1935[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) -  Version select: select ID from CustomerTypes where ID =?
[2017-10-02 14:02:52,570]DEBUG  1935[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) -  Snapshot select: select customerty_.ID, customerty_.Discount as Discount2_, customerty_.MaxRange as MaxRange2_, customerty_.MinRange as MinRange2_, customerty_.TypeName as TypeName2_ from CustomerTypes customerty_ where customerty_.ID=?
[2017-10-02 14:02:52,571]DEBUG  1936[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) -  Insert 0: insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2017-10-02 14:02:52,571]DEBUG  1936[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) -  Update 0: update CustomerTypes set Discount=?, MaxRange=?, MinRange=?, TypeName=? where ID=?
[2017-10-02 14:02:52,571]DEBUG  1936[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) -  Delete 0: delete from CustomerTypes where ID=?
[2017-10-02 14:02:52,571]DEBUG  1936[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2969) -  Identity insert: insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-02 14:02:52,583]DEBUG  1948[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Role [NONE]: select role0_.ID as ID0_0_, role0_.RoleName as RoleName0_0_ from Roles role0_ where role0_.ID=?
[2017-10-02 14:02:52,584]DEBUG  1949[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Role [READ]: select role0_.ID as ID0_0_, role0_.RoleName as RoleName0_0_ from Roles role0_ where role0_.ID=?
[2017-10-02 14:02:52,584]DEBUG  1949[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Role [UPGRADE]: select role0_.ID as ID0_0_, role0_.RoleName as RoleName0_0_ from Roles role0_ where role0_.ID=? for update
[2017-10-02 14:02:52,584]DEBUG  1949[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Role [UPGRADE_NOWAIT]: select role0_.ID as ID0_0_, role0_.RoleName as RoleName0_0_ from Roles role0_ where role0_.ID=? for update
[2017-10-02 14:02:52,585]DEBUG  1950[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Role [FORCE]: select role0_.ID as ID0_0_, role0_.RoleName as RoleName0_0_ from Roles role0_ where role0_.ID=? for update
[2017-10-02 14:02:52,585]DEBUG  1950[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Role [PESSIMISTIC_READ]: select role0_.ID as ID0_0_, role0_.RoleName as RoleName0_0_ from Roles role0_ where role0_.ID=? lock in share mode
[2017-10-02 14:02:52,585]DEBUG  1950[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Role [PESSIMISTIC_WRITE]: select role0_.ID as ID0_0_, role0_.RoleName as RoleName0_0_ from Roles role0_ where role0_.ID=? for update
[2017-10-02 14:02:52,586]DEBUG  1951[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Role [PESSIMISTIC_FORCE_INCREMENT]: select role0_.ID as ID0_0_, role0_.RoleName as RoleName0_0_ from Roles role0_ where role0_.ID=? for update
[2017-10-02 14:02:52,586]DEBUG  1951[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Role [OPTIMISTIC]: select role0_.ID as ID0_0_, role0_.RoleName as RoleName0_0_ from Roles role0_ where role0_.ID=?
[2017-10-02 14:02:52,586]DEBUG  1951[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Role [OPTIMISTIC_FORCE_INCREMENT]: select role0_.ID as ID0_0_, role0_.RoleName as RoleName0_0_ from Roles role0_ where role0_.ID=?
[2017-10-02 14:02:52,591]DEBUG  1956[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.softserveinc.edu.oms.domain.entities.Role: select role0_.ID as ID0_0_, role0_.RoleName as RoleName0_0_ from Roles role0_ where role0_.ID=?
[2017-10-02 14:02:52,591]DEBUG  1956[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.softserveinc.edu.oms.domain.entities.Role: select role0_.ID as ID0_0_, role0_.RoleName as RoleName0_0_ from Roles role0_ where role0_.ID=?
[2017-10-02 14:02:52,595]DEBUG  1960[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderItem [NONE]: select orderitem0_.ID as ID8_6_, orderitem0_.Cost as Cost8_6_, orderitem0_.DimensionRef as Dimensio5_8_6_, orderitem0_.ItemPrice as ItemPrice8_6_, orderitem0_.OrderRef as OrderRef8_6_, orderitem0_.ProductRef as ProductRef8_6_, orderitem0_.Quantity as Quantity8_6_, dimension1_.ID as ID7_0_, dimension1_.DimensionName as Dimensio2_7_0_, dimension1_.NumberOfProducts as NumberOf3_7_0_, order2_.ID as ID5_1_, order2_.Assigne as Assigne5_1_, order2_.Customer as Customer5_1_, order2_.DeliveryDate as Delivery2_5_1_, order2_.IsGift as IsGift5_1_, order2_.MaxDiscount as MaxDisco4_5_1_, order2_.OrderDate as OrderDate5_1_, order2_.OrderName as OrderName5_1_, order2_.OrderNumber as OrderNum7_5_1_, order2_.OrderStatusRef as OrderSt12_5_1_, order2_.PreferableDeliveryDate as Preferab8_5_1_, order2_.TotalPrice as TotalPrice5_1_, user3_.ID as ID3_2_, user3_.IsUserActive as IsUserAc2_3_2_, user3_.Balance as Balance3_2_, user3_.CustomerTypeRef as Customer9_3_2_, user3_.Email as Email3_2_, user3_.FirstName as FirstName3_2_, user3_.LastName as LastName3_2_, user3_.Login as Login3_2_, user3_.Password as Password3_2_, user3_.RegionRef as RegionRef3_2_, user3_.RoleRef as RoleRef3_2_, user4_.ID as ID3_3_, user4_.IsUserActive as IsUserAc2_3_3_, user4_.Balance as Balance3_3_, user4_.CustomerTypeRef as Customer9_3_3_, user4_.Email as Email3_3_, user4_.FirstName as FirstName3_3_, user4_.LastName as LastName3_3_, user4_.Login as Login3_3_, user4_.Password as Password3_3_, user4_.RegionRef as RegionRef3_3_, user4_.RoleRef as RoleRef3_3_, orderstatu5_.ID as ID4_4_, orderstatu5_.OrederStatusName as OrederSt2_4_4_, product6_.ID as ID6_5_, product6_.IsProductActive as IsProduc2_6_5_, product6_.ProductDescription as ProductD3_6_5_, product6_.ProductName as ProductN4_6_5_, product6_.ProductPrice as ProductP5_6_5_ from OrderItems orderitem0_ left outer join Dimensions dimension1_ on orderitem0_.DimensionRef=dimension1_.ID left outer join Orders order2_ on orderitem0_.OrderRef=order2_.ID left outer join Users user3_ on order2_.Assigne=user3_.ID left outer join Users user4_ on order2_.Customer=user4_.ID left outer join OrderStatuses orderstatu5_ on order2_.OrderStatusRef=orderstatu5_.ID left outer join Products product6_ on orderitem0_.ProductRef=product6_.ID where orderitem0_.ID=?
[2017-10-02 14:02:52,596]DEBUG  1961[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderItem [READ]: select orderitem0_.ID as ID8_6_, orderitem0_.Cost as Cost8_6_, orderitem0_.DimensionRef as Dimensio5_8_6_, orderitem0_.ItemPrice as ItemPrice8_6_, orderitem0_.OrderRef as OrderRef8_6_, orderitem0_.ProductRef as ProductRef8_6_, orderitem0_.Quantity as Quantity8_6_, dimension1_.ID as ID7_0_, dimension1_.DimensionName as Dimensio2_7_0_, dimension1_.NumberOfProducts as NumberOf3_7_0_, order2_.ID as ID5_1_, order2_.Assigne as Assigne5_1_, order2_.Customer as Customer5_1_, order2_.DeliveryDate as Delivery2_5_1_, order2_.IsGift as IsGift5_1_, order2_.MaxDiscount as MaxDisco4_5_1_, order2_.OrderDate as OrderDate5_1_, order2_.OrderName as OrderName5_1_, order2_.OrderNumber as OrderNum7_5_1_, order2_.OrderStatusRef as OrderSt12_5_1_, order2_.PreferableDeliveryDate as Preferab8_5_1_, order2_.TotalPrice as TotalPrice5_1_, user3_.ID as ID3_2_, user3_.IsUserActive as IsUserAc2_3_2_, user3_.Balance as Balance3_2_, user3_.CustomerTypeRef as Customer9_3_2_, user3_.Email as Email3_2_, user3_.FirstName as FirstName3_2_, user3_.LastName as LastName3_2_, user3_.Login as Login3_2_, user3_.Password as Password3_2_, user3_.RegionRef as RegionRef3_2_, user3_.RoleRef as RoleRef3_2_, user4_.ID as ID3_3_, user4_.IsUserActive as IsUserAc2_3_3_, user4_.Balance as Balance3_3_, user4_.CustomerTypeRef as Customer9_3_3_, user4_.Email as Email3_3_, user4_.FirstName as FirstName3_3_, user4_.LastName as LastName3_3_, user4_.Login as Login3_3_, user4_.Password as Password3_3_, user4_.RegionRef as RegionRef3_3_, user4_.RoleRef as RoleRef3_3_, orderstatu5_.ID as ID4_4_, orderstatu5_.OrederStatusName as OrederSt2_4_4_, product6_.ID as ID6_5_, product6_.IsProductActive as IsProduc2_6_5_, product6_.ProductDescription as ProductD3_6_5_, product6_.ProductName as ProductN4_6_5_, product6_.ProductPrice as ProductP5_6_5_ from OrderItems orderitem0_ left outer join Dimensions dimension1_ on orderitem0_.DimensionRef=dimension1_.ID left outer join Orders order2_ on orderitem0_.OrderRef=order2_.ID left outer join Users user3_ on order2_.Assigne=user3_.ID left outer join Users user4_ on order2_.Customer=user4_.ID left outer join OrderStatuses orderstatu5_ on order2_.OrderStatusRef=orderstatu5_.ID left outer join Products product6_ on orderitem0_.ProductRef=product6_.ID where orderitem0_.ID=?
[2017-10-02 14:02:52,596]DEBUG  1961[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderItem [UPGRADE]: select orderitem0_.ID as ID8_0_, orderitem0_.Cost as Cost8_0_, orderitem0_.DimensionRef as Dimensio5_8_0_, orderitem0_.ItemPrice as ItemPrice8_0_, orderitem0_.OrderRef as OrderRef8_0_, orderitem0_.ProductRef as ProductRef8_0_, orderitem0_.Quantity as Quantity8_0_ from OrderItems orderitem0_ where orderitem0_.ID=? for update
[2017-10-02 14:02:52,597]DEBUG  1962[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderItem [UPGRADE_NOWAIT]: select orderitem0_.ID as ID8_0_, orderitem0_.Cost as Cost8_0_, orderitem0_.DimensionRef as Dimensio5_8_0_, orderitem0_.ItemPrice as ItemPrice8_0_, orderitem0_.OrderRef as OrderRef8_0_, orderitem0_.ProductRef as ProductRef8_0_, orderitem0_.Quantity as Quantity8_0_ from OrderItems orderitem0_ where orderitem0_.ID=? for update
[2017-10-02 14:02:52,597]DEBUG  1962[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderItem [FORCE]: select orderitem0_.ID as ID8_0_, orderitem0_.Cost as Cost8_0_, orderitem0_.DimensionRef as Dimensio5_8_0_, orderitem0_.ItemPrice as ItemPrice8_0_, orderitem0_.OrderRef as OrderRef8_0_, orderitem0_.ProductRef as ProductRef8_0_, orderitem0_.Quantity as Quantity8_0_ from OrderItems orderitem0_ where orderitem0_.ID=? for update
[2017-10-02 14:02:52,597]DEBUG  1962[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderItem [PESSIMISTIC_READ]: select orderitem0_.ID as ID8_0_, orderitem0_.Cost as Cost8_0_, orderitem0_.DimensionRef as Dimensio5_8_0_, orderitem0_.ItemPrice as ItemPrice8_0_, orderitem0_.OrderRef as OrderRef8_0_, orderitem0_.ProductRef as ProductRef8_0_, orderitem0_.Quantity as Quantity8_0_ from OrderItems orderitem0_ where orderitem0_.ID=? lock in share mode
[2017-10-02 14:02:52,598]DEBUG  1963[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderItem [PESSIMISTIC_WRITE]: select orderitem0_.ID as ID8_0_, orderitem0_.Cost as Cost8_0_, orderitem0_.DimensionRef as Dimensio5_8_0_, orderitem0_.ItemPrice as ItemPrice8_0_, orderitem0_.OrderRef as OrderRef8_0_, orderitem0_.ProductRef as ProductRef8_0_, orderitem0_.Quantity as Quantity8_0_ from OrderItems orderitem0_ where orderitem0_.ID=? for update
[2017-10-02 14:02:52,598]DEBUG  1963[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderItem [PESSIMISTIC_FORCE_INCREMENT]: select orderitem0_.ID as ID8_0_, orderitem0_.Cost as Cost8_0_, orderitem0_.DimensionRef as Dimensio5_8_0_, orderitem0_.ItemPrice as ItemPrice8_0_, orderitem0_.OrderRef as OrderRef8_0_, orderitem0_.ProductRef as ProductRef8_0_, orderitem0_.Quantity as Quantity8_0_ from OrderItems orderitem0_ where orderitem0_.ID=? for update
[2017-10-02 14:02:52,599]DEBUG  1964[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderItem [OPTIMISTIC]: select orderitem0_.ID as ID8_6_, orderitem0_.Cost as Cost8_6_, orderitem0_.DimensionRef as Dimensio5_8_6_, orderitem0_.ItemPrice as ItemPrice8_6_, orderitem0_.OrderRef as OrderRef8_6_, orderitem0_.ProductRef as ProductRef8_6_, orderitem0_.Quantity as Quantity8_6_, dimension1_.ID as ID7_0_, dimension1_.DimensionName as Dimensio2_7_0_, dimension1_.NumberOfProducts as NumberOf3_7_0_, order2_.ID as ID5_1_, order2_.Assigne as Assigne5_1_, order2_.Customer as Customer5_1_, order2_.DeliveryDate as Delivery2_5_1_, order2_.IsGift as IsGift5_1_, order2_.MaxDiscount as MaxDisco4_5_1_, order2_.OrderDate as OrderDate5_1_, order2_.OrderName as OrderName5_1_, order2_.OrderNumber as OrderNum7_5_1_, order2_.OrderStatusRef as OrderSt12_5_1_, order2_.PreferableDeliveryDate as Preferab8_5_1_, order2_.TotalPrice as TotalPrice5_1_, user3_.ID as ID3_2_, user3_.IsUserActive as IsUserAc2_3_2_, user3_.Balance as Balance3_2_, user3_.CustomerTypeRef as Customer9_3_2_, user3_.Email as Email3_2_, user3_.FirstName as FirstName3_2_, user3_.LastName as LastName3_2_, user3_.Login as Login3_2_, user3_.Password as Password3_2_, user3_.RegionRef as RegionRef3_2_, user3_.RoleRef as RoleRef3_2_, user4_.ID as ID3_3_, user4_.IsUserActive as IsUserAc2_3_3_, user4_.Balance as Balance3_3_, user4_.CustomerTypeRef as Customer9_3_3_, user4_.Email as Email3_3_, user4_.FirstName as FirstName3_3_, user4_.LastName as LastName3_3_, user4_.Login as Login3_3_, user4_.Password as Password3_3_, user4_.RegionRef as RegionRef3_3_, user4_.RoleRef as RoleRef3_3_, orderstatu5_.ID as ID4_4_, orderstatu5_.OrederStatusName as OrederSt2_4_4_, product6_.ID as ID6_5_, product6_.IsProductActive as IsProduc2_6_5_, product6_.ProductDescription as ProductD3_6_5_, product6_.ProductName as ProductN4_6_5_, product6_.ProductPrice as ProductP5_6_5_ from OrderItems orderitem0_ left outer join Dimensions dimension1_ on orderitem0_.DimensionRef=dimension1_.ID left outer join Orders order2_ on orderitem0_.OrderRef=order2_.ID left outer join Users user3_ on order2_.Assigne=user3_.ID left outer join Users user4_ on order2_.Customer=user4_.ID left outer join OrderStatuses orderstatu5_ on order2_.OrderStatusRef=orderstatu5_.ID left outer join Products product6_ on orderitem0_.ProductRef=product6_.ID where orderitem0_.ID=?
[2017-10-02 14:02:52,600]DEBUG  1965[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderItem [OPTIMISTIC_FORCE_INCREMENT]: select orderitem0_.ID as ID8_6_, orderitem0_.Cost as Cost8_6_, orderitem0_.DimensionRef as Dimensio5_8_6_, orderitem0_.ItemPrice as ItemPrice8_6_, orderitem0_.OrderRef as OrderRef8_6_, orderitem0_.ProductRef as ProductRef8_6_, orderitem0_.Quantity as Quantity8_6_, dimension1_.ID as ID7_0_, dimension1_.DimensionName as Dimensio2_7_0_, dimension1_.NumberOfProducts as NumberOf3_7_0_, order2_.ID as ID5_1_, order2_.Assigne as Assigne5_1_, order2_.Customer as Customer5_1_, order2_.DeliveryDate as Delivery2_5_1_, order2_.IsGift as IsGift5_1_, order2_.MaxDiscount as MaxDisco4_5_1_, order2_.OrderDate as OrderDate5_1_, order2_.OrderName as OrderName5_1_, order2_.OrderNumber as OrderNum7_5_1_, order2_.OrderStatusRef as OrderSt12_5_1_, order2_.PreferableDeliveryDate as Preferab8_5_1_, order2_.TotalPrice as TotalPrice5_1_, user3_.ID as ID3_2_, user3_.IsUserActive as IsUserAc2_3_2_, user3_.Balance as Balance3_2_, user3_.CustomerTypeRef as Customer9_3_2_, user3_.Email as Email3_2_, user3_.FirstName as FirstName3_2_, user3_.LastName as LastName3_2_, user3_.Login as Login3_2_, user3_.Password as Password3_2_, user3_.RegionRef as RegionRef3_2_, user3_.RoleRef as RoleRef3_2_, user4_.ID as ID3_3_, user4_.IsUserActive as IsUserAc2_3_3_, user4_.Balance as Balance3_3_, user4_.CustomerTypeRef as Customer9_3_3_, user4_.Email as Email3_3_, user4_.FirstName as FirstName3_3_, user4_.LastName as LastName3_3_, user4_.Login as Login3_3_, user4_.Password as Password3_3_, user4_.RegionRef as RegionRef3_3_, user4_.RoleRef as RoleRef3_3_, orderstatu5_.ID as ID4_4_, orderstatu5_.OrederStatusName as OrederSt2_4_4_, product6_.ID as ID6_5_, product6_.IsProductActive as IsProduc2_6_5_, product6_.ProductDescription as ProductD3_6_5_, product6_.ProductName as ProductN4_6_5_, product6_.ProductPrice as ProductP5_6_5_ from OrderItems orderitem0_ left outer join Dimensions dimension1_ on orderitem0_.DimensionRef=dimension1_.ID left outer join Orders order2_ on orderitem0_.OrderRef=order2_.ID left outer join Users user3_ on order2_.Assigne=user3_.ID left outer join Users user4_ on order2_.Customer=user4_.ID left outer join OrderStatuses orderstatu5_ on order2_.OrderStatusRef=orderstatu5_.ID left outer join Products product6_ on orderitem0_.ProductRef=product6_.ID where orderitem0_.ID=?
[2017-10-02 14:02:52,601]DEBUG  1966[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.softserveinc.edu.oms.domain.entities.OrderItem: select orderitem0_.ID as ID8_6_, orderitem0_.Cost as Cost8_6_, orderitem0_.DimensionRef as Dimensio5_8_6_, orderitem0_.ItemPrice as ItemPrice8_6_, orderitem0_.OrderRef as OrderRef8_6_, orderitem0_.ProductRef as ProductRef8_6_, orderitem0_.Quantity as Quantity8_6_, dimension1_.ID as ID7_0_, dimension1_.DimensionName as Dimensio2_7_0_, dimension1_.NumberOfProducts as NumberOf3_7_0_, order2_.ID as ID5_1_, order2_.Assigne as Assigne5_1_, order2_.Customer as Customer5_1_, order2_.DeliveryDate as Delivery2_5_1_, order2_.IsGift as IsGift5_1_, order2_.MaxDiscount as MaxDisco4_5_1_, order2_.OrderDate as OrderDate5_1_, order2_.OrderName as OrderName5_1_, order2_.OrderNumber as OrderNum7_5_1_, order2_.OrderStatusRef as OrderSt12_5_1_, order2_.PreferableDeliveryDate as Preferab8_5_1_, order2_.TotalPrice as TotalPrice5_1_, user3_.ID as ID3_2_, user3_.IsUserActive as IsUserAc2_3_2_, user3_.Balance as Balance3_2_, user3_.CustomerTypeRef as Customer9_3_2_, user3_.Email as Email3_2_, user3_.FirstName as FirstName3_2_, user3_.LastName as LastName3_2_, user3_.Login as Login3_2_, user3_.Password as Password3_2_, user3_.RegionRef as RegionRef3_2_, user3_.RoleRef as RoleRef3_2_, user4_.ID as ID3_3_, user4_.IsUserActive as IsUserAc2_3_3_, user4_.Balance as Balance3_3_, user4_.CustomerTypeRef as Customer9_3_3_, user4_.Email as Email3_3_, user4_.FirstName as FirstName3_3_, user4_.LastName as LastName3_3_, user4_.Login as Login3_3_, user4_.Password as Password3_3_, user4_.RegionRef as RegionRef3_3_, user4_.RoleRef as RoleRef3_3_, orderstatu5_.ID as ID4_4_, orderstatu5_.OrederStatusName as OrederSt2_4_4_, product6_.ID as ID6_5_, product6_.IsProductActive as IsProduc2_6_5_, product6_.ProductDescription as ProductD3_6_5_, product6_.ProductName as ProductN4_6_5_, product6_.ProductPrice as ProductP5_6_5_ from OrderItems orderitem0_ left outer join Dimensions dimension1_ on orderitem0_.DimensionRef=dimension1_.ID left outer join Orders order2_ on orderitem0_.OrderRef=order2_.ID left outer join Users user3_ on order2_.Assigne=user3_.ID left outer join Users user4_ on order2_.Customer=user4_.ID left outer join OrderStatuses orderstatu5_ on order2_.OrderStatusRef=orderstatu5_.ID left outer join Products product6_ on orderitem0_.ProductRef=product6_.ID where orderitem0_.ID=?
[2017-10-02 14:02:52,601]DEBUG  1966[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.softserveinc.edu.oms.domain.entities.OrderItem: select orderitem0_.ID as ID8_0_, orderitem0_.Cost as Cost8_0_, orderitem0_.DimensionRef as Dimensio5_8_0_, orderitem0_.ItemPrice as ItemPrice8_0_, orderitem0_.OrderRef as OrderRef8_0_, orderitem0_.ProductRef as ProductRef8_0_, orderitem0_.Quantity as Quantity8_0_ from OrderItems orderitem0_ where orderitem0_.ID=?
[2017-10-02 14:02:52,602]DEBUG  1967[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CreditCardType [NONE]: select creditcard0_.ID as ID9_0_, creditcard0_.CardType as CardType9_0_, creditcard0_.CardNumber as CardNumber9_0_, creditcard0_.CardCvv2 as CardCvv4_9_0_, creditcard0_.Expiration_Date as Expiration5_9_0_, creditcard0_.IssueDate as IssueDate9_0_, creditcard0_.IssueNumber as IssueNum7_9_0_ from CardType creditcard0_ where creditcard0_.ID=?
[2017-10-02 14:02:52,602]DEBUG  1967[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CreditCardType [READ]: select creditcard0_.ID as ID9_0_, creditcard0_.CardType as CardType9_0_, creditcard0_.CardNumber as CardNumber9_0_, creditcard0_.CardCvv2 as CardCvv4_9_0_, creditcard0_.Expiration_Date as Expiration5_9_0_, creditcard0_.IssueDate as IssueDate9_0_, creditcard0_.IssueNumber as IssueNum7_9_0_ from CardType creditcard0_ where creditcard0_.ID=?
[2017-10-02 14:02:52,602]DEBUG  1967[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CreditCardType [UPGRADE]: select creditcard0_.ID as ID9_0_, creditcard0_.CardType as CardType9_0_, creditcard0_.CardNumber as CardNumber9_0_, creditcard0_.CardCvv2 as CardCvv4_9_0_, creditcard0_.Expiration_Date as Expiration5_9_0_, creditcard0_.IssueDate as IssueDate9_0_, creditcard0_.IssueNumber as IssueNum7_9_0_ from CardType creditcard0_ where creditcard0_.ID=? for update
[2017-10-02 14:02:52,603]DEBUG  1968[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CreditCardType [UPGRADE_NOWAIT]: select creditcard0_.ID as ID9_0_, creditcard0_.CardType as CardType9_0_, creditcard0_.CardNumber as CardNumber9_0_, creditcard0_.CardCvv2 as CardCvv4_9_0_, creditcard0_.Expiration_Date as Expiration5_9_0_, creditcard0_.IssueDate as IssueDate9_0_, creditcard0_.IssueNumber as IssueNum7_9_0_ from CardType creditcard0_ where creditcard0_.ID=? for update
[2017-10-02 14:02:52,603]DEBUG  1968[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CreditCardType [FORCE]: select creditcard0_.ID as ID9_0_, creditcard0_.CardType as CardType9_0_, creditcard0_.CardNumber as CardNumber9_0_, creditcard0_.CardCvv2 as CardCvv4_9_0_, creditcard0_.Expiration_Date as Expiration5_9_0_, creditcard0_.IssueDate as IssueDate9_0_, creditcard0_.IssueNumber as IssueNum7_9_0_ from CardType creditcard0_ where creditcard0_.ID=? for update
[2017-10-02 14:02:52,603]DEBUG  1968[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CreditCardType [PESSIMISTIC_READ]: select creditcard0_.ID as ID9_0_, creditcard0_.CardType as CardType9_0_, creditcard0_.CardNumber as CardNumber9_0_, creditcard0_.CardCvv2 as CardCvv4_9_0_, creditcard0_.Expiration_Date as Expiration5_9_0_, creditcard0_.IssueDate as IssueDate9_0_, creditcard0_.IssueNumber as IssueNum7_9_0_ from CardType creditcard0_ where creditcard0_.ID=? lock in share mode
[2017-10-02 14:02:52,606]DEBUG  1971[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CreditCardType [PESSIMISTIC_WRITE]: select creditcard0_.ID as ID9_0_, creditcard0_.CardType as CardType9_0_, creditcard0_.CardNumber as CardNumber9_0_, creditcard0_.CardCvv2 as CardCvv4_9_0_, creditcard0_.Expiration_Date as Expiration5_9_0_, creditcard0_.IssueDate as IssueDate9_0_, creditcard0_.IssueNumber as IssueNum7_9_0_ from CardType creditcard0_ where creditcard0_.ID=? for update
[2017-10-02 14:02:52,606]DEBUG  1971[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CreditCardType [PESSIMISTIC_FORCE_INCREMENT]: select creditcard0_.ID as ID9_0_, creditcard0_.CardType as CardType9_0_, creditcard0_.CardNumber as CardNumber9_0_, creditcard0_.CardCvv2 as CardCvv4_9_0_, creditcard0_.Expiration_Date as Expiration5_9_0_, creditcard0_.IssueDate as IssueDate9_0_, creditcard0_.IssueNumber as IssueNum7_9_0_ from CardType creditcard0_ where creditcard0_.ID=? for update
[2017-10-02 14:02:52,607]DEBUG  1972[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CreditCardType [OPTIMISTIC]: select creditcard0_.ID as ID9_0_, creditcard0_.CardType as CardType9_0_, creditcard0_.CardNumber as CardNumber9_0_, creditcard0_.CardCvv2 as CardCvv4_9_0_, creditcard0_.Expiration_Date as Expiration5_9_0_, creditcard0_.IssueDate as IssueDate9_0_, creditcard0_.IssueNumber as IssueNum7_9_0_ from CardType creditcard0_ where creditcard0_.ID=?
[2017-10-02 14:02:52,607]DEBUG  1972[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CreditCardType [OPTIMISTIC_FORCE_INCREMENT]: select creditcard0_.ID as ID9_0_, creditcard0_.CardType as CardType9_0_, creditcard0_.CardNumber as CardNumber9_0_, creditcard0_.CardCvv2 as CardCvv4_9_0_, creditcard0_.Expiration_Date as Expiration5_9_0_, creditcard0_.IssueDate as IssueDate9_0_, creditcard0_.IssueNumber as IssueNum7_9_0_ from CardType creditcard0_ where creditcard0_.ID=?
[2017-10-02 14:02:52,607]DEBUG  1972[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.softserveinc.edu.oms.domain.entities.CreditCardType: select creditcard0_.ID as ID9_0_, creditcard0_.CardType as CardType9_0_, creditcard0_.CardNumber as CardNumber9_0_, creditcard0_.CardCvv2 as CardCvv4_9_0_, creditcard0_.Expiration_Date as Expiration5_9_0_, creditcard0_.IssueDate as IssueDate9_0_, creditcard0_.IssueNumber as IssueNum7_9_0_ from CardType creditcard0_ where creditcard0_.ID=?
[2017-10-02 14:02:52,608]DEBUG  1973[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.softserveinc.edu.oms.domain.entities.CreditCardType: select creditcard0_.ID as ID9_0_, creditcard0_.CardType as CardType9_0_, creditcard0_.CardNumber as CardNumber9_0_, creditcard0_.CardCvv2 as CardCvv4_9_0_, creditcard0_.Expiration_Date as Expiration5_9_0_, creditcard0_.IssueDate as IssueDate9_0_, creditcard0_.IssueNumber as IssueNum7_9_0_ from CardType creditcard0_ where creditcard0_.ID=?
[2017-10-02 14:02:52,609]DEBUG  1974[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Order [NONE]: select order0_.ID as ID5_6_, order0_.Assigne as Assigne5_6_, order0_.Customer as Customer5_6_, order0_.DeliveryDate as Delivery2_5_6_, order0_.IsGift as IsGift5_6_, order0_.MaxDiscount as MaxDisco4_5_6_, order0_.OrderDate as OrderDate5_6_, order0_.OrderName as OrderName5_6_, order0_.OrderNumber as OrderNum7_5_6_, order0_.OrderStatusRef as OrderSt12_5_6_, order0_.PreferableDeliveryDate as Preferab8_5_6_, order0_.TotalPrice as TotalPrice5_6_, user1_.ID as ID3_0_, user1_.IsUserActive as IsUserAc2_3_0_, user1_.Balance as Balance3_0_, user1_.CustomerTypeRef as Customer9_3_0_, user1_.Email as Email3_0_, user1_.FirstName as FirstName3_0_, user1_.LastName as LastName3_0_, user1_.Login as Login3_0_, user1_.Password as Password3_0_, user1_.RegionRef as RegionRef3_0_, user1_.RoleRef as RoleRef3_0_, customerty2_.ID as ID2_1_, customerty2_.Discount as Discount2_1_, customerty2_.MaxRange as MaxRange2_1_, customerty2_.MinRange as MinRange2_1_, customerty2_.TypeName as TypeName2_1_, region3_.ID as ID1_2_, region3_.RegionName as RegionName1_2_, role4_.ID as ID0_3_, role4_.RoleName as RoleName0_3_, user5_.ID as ID3_4_, user5_.IsUserActive as IsUserAc2_3_4_, user5_.Balance as Balance3_4_, user5_.CustomerTypeRef as Customer9_3_4_, user5_.Email as Email3_4_, user5_.FirstName as FirstName3_4_, user5_.LastName as LastName3_4_, user5_.Login as Login3_4_, user5_.Password as Password3_4_, user5_.RegionRef as RegionRef3_4_, user5_.RoleRef as RoleRef3_4_, orderstatu6_.ID as ID4_5_, orderstatu6_.OrederStatusName as OrederSt2_4_5_ from Orders order0_ left outer join Users user1_ on order0_.Assigne=user1_.ID left outer join CustomerTypes customerty2_ on user1_.CustomerTypeRef=customerty2_.ID left outer join Regions region3_ on user1_.RegionRef=region3_.ID left outer join Roles role4_ on user1_.RoleRef=role4_.ID left outer join Users user5_ on order0_.Customer=user5_.ID left outer join OrderStatuses orderstatu6_ on order0_.OrderStatusRef=orderstatu6_.ID where order0_.ID=?
[2017-10-02 14:02:52,609]DEBUG  1974[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Order [READ]: select order0_.ID as ID5_6_, order0_.Assigne as Assigne5_6_, order0_.Customer as Customer5_6_, order0_.DeliveryDate as Delivery2_5_6_, order0_.IsGift as IsGift5_6_, order0_.MaxDiscount as MaxDisco4_5_6_, order0_.OrderDate as OrderDate5_6_, order0_.OrderName as OrderName5_6_, order0_.OrderNumber as OrderNum7_5_6_, order0_.OrderStatusRef as OrderSt12_5_6_, order0_.PreferableDeliveryDate as Preferab8_5_6_, order0_.TotalPrice as TotalPrice5_6_, user1_.ID as ID3_0_, user1_.IsUserActive as IsUserAc2_3_0_, user1_.Balance as Balance3_0_, user1_.CustomerTypeRef as Customer9_3_0_, user1_.Email as Email3_0_, user1_.FirstName as FirstName3_0_, user1_.LastName as LastName3_0_, user1_.Login as Login3_0_, user1_.Password as Password3_0_, user1_.RegionRef as RegionRef3_0_, user1_.RoleRef as RoleRef3_0_, customerty2_.ID as ID2_1_, customerty2_.Discount as Discount2_1_, customerty2_.MaxRange as MaxRange2_1_, customerty2_.MinRange as MinRange2_1_, customerty2_.TypeName as TypeName2_1_, region3_.ID as ID1_2_, region3_.RegionName as RegionName1_2_, role4_.ID as ID0_3_, role4_.RoleName as RoleName0_3_, user5_.ID as ID3_4_, user5_.IsUserActive as IsUserAc2_3_4_, user5_.Balance as Balance3_4_, user5_.CustomerTypeRef as Customer9_3_4_, user5_.Email as Email3_4_, user5_.FirstName as FirstName3_4_, user5_.LastName as LastName3_4_, user5_.Login as Login3_4_, user5_.Password as Password3_4_, user5_.RegionRef as RegionRef3_4_, user5_.RoleRef as RoleRef3_4_, orderstatu6_.ID as ID4_5_, orderstatu6_.OrederStatusName as OrederSt2_4_5_ from Orders order0_ left outer join Users user1_ on order0_.Assigne=user1_.ID left outer join CustomerTypes customerty2_ on user1_.CustomerTypeRef=customerty2_.ID left outer join Regions region3_ on user1_.RegionRef=region3_.ID left outer join Roles role4_ on user1_.RoleRef=role4_.ID left outer join Users user5_ on order0_.Customer=user5_.ID left outer join OrderStatuses orderstatu6_ on order0_.OrderStatusRef=orderstatu6_.ID where order0_.ID=?
[2017-10-02 14:02:52,610]DEBUG  1975[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Order [UPGRADE]: select order0_.ID as ID5_0_, order0_.Assigne as Assigne5_0_, order0_.Customer as Customer5_0_, order0_.DeliveryDate as Delivery2_5_0_, order0_.IsGift as IsGift5_0_, order0_.MaxDiscount as MaxDisco4_5_0_, order0_.OrderDate as OrderDate5_0_, order0_.OrderName as OrderName5_0_, order0_.OrderNumber as OrderNum7_5_0_, order0_.OrderStatusRef as OrderSt12_5_0_, order0_.PreferableDeliveryDate as Preferab8_5_0_, order0_.TotalPrice as TotalPrice5_0_ from Orders order0_ where order0_.ID=? for update
[2017-10-02 14:02:52,610]DEBUG  1975[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Order [UPGRADE_NOWAIT]: select order0_.ID as ID5_0_, order0_.Assigne as Assigne5_0_, order0_.Customer as Customer5_0_, order0_.DeliveryDate as Delivery2_5_0_, order0_.IsGift as IsGift5_0_, order0_.MaxDiscount as MaxDisco4_5_0_, order0_.OrderDate as OrderDate5_0_, order0_.OrderName as OrderName5_0_, order0_.OrderNumber as OrderNum7_5_0_, order0_.OrderStatusRef as OrderSt12_5_0_, order0_.PreferableDeliveryDate as Preferab8_5_0_, order0_.TotalPrice as TotalPrice5_0_ from Orders order0_ where order0_.ID=? for update
[2017-10-02 14:02:52,611]DEBUG  1976[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Order [FORCE]: select order0_.ID as ID5_0_, order0_.Assigne as Assigne5_0_, order0_.Customer as Customer5_0_, order0_.DeliveryDate as Delivery2_5_0_, order0_.IsGift as IsGift5_0_, order0_.MaxDiscount as MaxDisco4_5_0_, order0_.OrderDate as OrderDate5_0_, order0_.OrderName as OrderName5_0_, order0_.OrderNumber as OrderNum7_5_0_, order0_.OrderStatusRef as OrderSt12_5_0_, order0_.PreferableDeliveryDate as Preferab8_5_0_, order0_.TotalPrice as TotalPrice5_0_ from Orders order0_ where order0_.ID=? for update
[2017-10-02 14:02:52,611]DEBUG  1976[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Order [PESSIMISTIC_READ]: select order0_.ID as ID5_0_, order0_.Assigne as Assigne5_0_, order0_.Customer as Customer5_0_, order0_.DeliveryDate as Delivery2_5_0_, order0_.IsGift as IsGift5_0_, order0_.MaxDiscount as MaxDisco4_5_0_, order0_.OrderDate as OrderDate5_0_, order0_.OrderName as OrderName5_0_, order0_.OrderNumber as OrderNum7_5_0_, order0_.OrderStatusRef as OrderSt12_5_0_, order0_.PreferableDeliveryDate as Preferab8_5_0_, order0_.TotalPrice as TotalPrice5_0_ from Orders order0_ where order0_.ID=? lock in share mode
[2017-10-02 14:02:52,611]DEBUG  1976[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Order [PESSIMISTIC_WRITE]: select order0_.ID as ID5_0_, order0_.Assigne as Assigne5_0_, order0_.Customer as Customer5_0_, order0_.DeliveryDate as Delivery2_5_0_, order0_.IsGift as IsGift5_0_, order0_.MaxDiscount as MaxDisco4_5_0_, order0_.OrderDate as OrderDate5_0_, order0_.OrderName as OrderName5_0_, order0_.OrderNumber as OrderNum7_5_0_, order0_.OrderStatusRef as OrderSt12_5_0_, order0_.PreferableDeliveryDate as Preferab8_5_0_, order0_.TotalPrice as TotalPrice5_0_ from Orders order0_ where order0_.ID=? for update
[2017-10-02 14:02:52,612]DEBUG  1977[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Order [PESSIMISTIC_FORCE_INCREMENT]: select order0_.ID as ID5_0_, order0_.Assigne as Assigne5_0_, order0_.Customer as Customer5_0_, order0_.DeliveryDate as Delivery2_5_0_, order0_.IsGift as IsGift5_0_, order0_.MaxDiscount as MaxDisco4_5_0_, order0_.OrderDate as OrderDate5_0_, order0_.OrderName as OrderName5_0_, order0_.OrderNumber as OrderNum7_5_0_, order0_.OrderStatusRef as OrderSt12_5_0_, order0_.PreferableDeliveryDate as Preferab8_5_0_, order0_.TotalPrice as TotalPrice5_0_ from Orders order0_ where order0_.ID=? for update
[2017-10-02 14:02:52,613]DEBUG  1978[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Order [OPTIMISTIC]: select order0_.ID as ID5_6_, order0_.Assigne as Assigne5_6_, order0_.Customer as Customer5_6_, order0_.DeliveryDate as Delivery2_5_6_, order0_.IsGift as IsGift5_6_, order0_.MaxDiscount as MaxDisco4_5_6_, order0_.OrderDate as OrderDate5_6_, order0_.OrderName as OrderName5_6_, order0_.OrderNumber as OrderNum7_5_6_, order0_.OrderStatusRef as OrderSt12_5_6_, order0_.PreferableDeliveryDate as Preferab8_5_6_, order0_.TotalPrice as TotalPrice5_6_, user1_.ID as ID3_0_, user1_.IsUserActive as IsUserAc2_3_0_, user1_.Balance as Balance3_0_, user1_.CustomerTypeRef as Customer9_3_0_, user1_.Email as Email3_0_, user1_.FirstName as FirstName3_0_, user1_.LastName as LastName3_0_, user1_.Login as Login3_0_, user1_.Password as Password3_0_, user1_.RegionRef as RegionRef3_0_, user1_.RoleRef as RoleRef3_0_, customerty2_.ID as ID2_1_, customerty2_.Discount as Discount2_1_, customerty2_.MaxRange as MaxRange2_1_, customerty2_.MinRange as MinRange2_1_, customerty2_.TypeName as TypeName2_1_, region3_.ID as ID1_2_, region3_.RegionName as RegionName1_2_, role4_.ID as ID0_3_, role4_.RoleName as RoleName0_3_, user5_.ID as ID3_4_, user5_.IsUserActive as IsUserAc2_3_4_, user5_.Balance as Balance3_4_, user5_.CustomerTypeRef as Customer9_3_4_, user5_.Email as Email3_4_, user5_.FirstName as FirstName3_4_, user5_.LastName as LastName3_4_, user5_.Login as Login3_4_, user5_.Password as Password3_4_, user5_.RegionRef as RegionRef3_4_, user5_.RoleRef as RoleRef3_4_, orderstatu6_.ID as ID4_5_, orderstatu6_.OrederStatusName as OrederSt2_4_5_ from Orders order0_ left outer join Users user1_ on order0_.Assigne=user1_.ID left outer join CustomerTypes customerty2_ on user1_.CustomerTypeRef=customerty2_.ID left outer join Regions region3_ on user1_.RegionRef=region3_.ID left outer join Roles role4_ on user1_.RoleRef=role4_.ID left outer join Users user5_ on order0_.Customer=user5_.ID left outer join OrderStatuses orderstatu6_ on order0_.OrderStatusRef=orderstatu6_.ID where order0_.ID=?
[2017-10-02 14:02:52,614]DEBUG  1979[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Order [OPTIMISTIC_FORCE_INCREMENT]: select order0_.ID as ID5_6_, order0_.Assigne as Assigne5_6_, order0_.Customer as Customer5_6_, order0_.DeliveryDate as Delivery2_5_6_, order0_.IsGift as IsGift5_6_, order0_.MaxDiscount as MaxDisco4_5_6_, order0_.OrderDate as OrderDate5_6_, order0_.OrderName as OrderName5_6_, order0_.OrderNumber as OrderNum7_5_6_, order0_.OrderStatusRef as OrderSt12_5_6_, order0_.PreferableDeliveryDate as Preferab8_5_6_, order0_.TotalPrice as TotalPrice5_6_, user1_.ID as ID3_0_, user1_.IsUserActive as IsUserAc2_3_0_, user1_.Balance as Balance3_0_, user1_.CustomerTypeRef as Customer9_3_0_, user1_.Email as Email3_0_, user1_.FirstName as FirstName3_0_, user1_.LastName as LastName3_0_, user1_.Login as Login3_0_, user1_.Password as Password3_0_, user1_.RegionRef as RegionRef3_0_, user1_.RoleRef as RoleRef3_0_, customerty2_.ID as ID2_1_, customerty2_.Discount as Discount2_1_, customerty2_.MaxRange as MaxRange2_1_, customerty2_.MinRange as MinRange2_1_, customerty2_.TypeName as TypeName2_1_, region3_.ID as ID1_2_, region3_.RegionName as RegionName1_2_, role4_.ID as ID0_3_, role4_.RoleName as RoleName0_3_, user5_.ID as ID3_4_, user5_.IsUserActive as IsUserAc2_3_4_, user5_.Balance as Balance3_4_, user5_.CustomerTypeRef as Customer9_3_4_, user5_.Email as Email3_4_, user5_.FirstName as FirstName3_4_, user5_.LastName as LastName3_4_, user5_.Login as Login3_4_, user5_.Password as Password3_4_, user5_.RegionRef as RegionRef3_4_, user5_.RoleRef as RoleRef3_4_, orderstatu6_.ID as ID4_5_, orderstatu6_.OrederStatusName as OrederSt2_4_5_ from Orders order0_ left outer join Users user1_ on order0_.Assigne=user1_.ID left outer join CustomerTypes customerty2_ on user1_.CustomerTypeRef=customerty2_.ID left outer join Regions region3_ on user1_.RegionRef=region3_.ID left outer join Roles role4_ on user1_.RoleRef=role4_.ID left outer join Users user5_ on order0_.Customer=user5_.ID left outer join OrderStatuses orderstatu6_ on order0_.OrderStatusRef=orderstatu6_.ID where order0_.ID=?
[2017-10-02 14:02:52,614]DEBUG  1979[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.softserveinc.edu.oms.domain.entities.Order: select order0_.ID as ID5_6_, order0_.Assigne as Assigne5_6_, order0_.Customer as Customer5_6_, order0_.DeliveryDate as Delivery2_5_6_, order0_.IsGift as IsGift5_6_, order0_.MaxDiscount as MaxDisco4_5_6_, order0_.OrderDate as OrderDate5_6_, order0_.OrderName as OrderName5_6_, order0_.OrderNumber as OrderNum7_5_6_, order0_.OrderStatusRef as OrderSt12_5_6_, order0_.PreferableDeliveryDate as Preferab8_5_6_, order0_.TotalPrice as TotalPrice5_6_, user1_.ID as ID3_0_, user1_.IsUserActive as IsUserAc2_3_0_, user1_.Balance as Balance3_0_, user1_.CustomerTypeRef as Customer9_3_0_, user1_.Email as Email3_0_, user1_.FirstName as FirstName3_0_, user1_.LastName as LastName3_0_, user1_.Login as Login3_0_, user1_.Password as Password3_0_, user1_.RegionRef as RegionRef3_0_, user1_.RoleRef as RoleRef3_0_, customerty2_.ID as ID2_1_, customerty2_.Discount as Discount2_1_, customerty2_.MaxRange as MaxRange2_1_, customerty2_.MinRange as MinRange2_1_, customerty2_.TypeName as TypeName2_1_, region3_.ID as ID1_2_, region3_.RegionName as RegionName1_2_, role4_.ID as ID0_3_, role4_.RoleName as RoleName0_3_, user5_.ID as ID3_4_, user5_.IsUserActive as IsUserAc2_3_4_, user5_.Balance as Balance3_4_, user5_.CustomerTypeRef as Customer9_3_4_, user5_.Email as Email3_4_, user5_.FirstName as FirstName3_4_, user5_.LastName as LastName3_4_, user5_.Login as Login3_4_, user5_.Password as Password3_4_, user5_.RegionRef as RegionRef3_4_, user5_.RoleRef as RoleRef3_4_, orderstatu6_.ID as ID4_5_, orderstatu6_.OrederStatusName as OrederSt2_4_5_ from Orders order0_ left outer join Users user1_ on order0_.Assigne=user1_.ID left outer join CustomerTypes customerty2_ on user1_.CustomerTypeRef=customerty2_.ID left outer join Regions region3_ on user1_.RegionRef=region3_.ID left outer join Roles role4_ on user1_.RoleRef=role4_.ID left outer join Users user5_ on order0_.Customer=user5_.ID left outer join OrderStatuses orderstatu6_ on order0_.OrderStatusRef=orderstatu6_.ID where order0_.ID=?
[2017-10-02 14:02:52,615]DEBUG  1980[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.softserveinc.edu.oms.domain.entities.Order: select order0_.ID as ID5_0_, order0_.Assigne as Assigne5_0_, order0_.Customer as Customer5_0_, order0_.DeliveryDate as Delivery2_5_0_, order0_.IsGift as IsGift5_0_, order0_.MaxDiscount as MaxDisco4_5_0_, order0_.OrderDate as OrderDate5_0_, order0_.OrderName as OrderName5_0_, order0_.OrderNumber as OrderNum7_5_0_, order0_.OrderStatusRef as OrderSt12_5_0_, order0_.PreferableDeliveryDate as Preferab8_5_0_, order0_.TotalPrice as TotalPrice5_0_ from Orders order0_ where order0_.ID=?
[2017-10-02 14:02:52,615]DEBUG  1980[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Dimension [NONE]: select dimension0_.ID as ID7_0_, dimension0_.DimensionName as Dimensio2_7_0_, dimension0_.NumberOfProducts as NumberOf3_7_0_ from Dimensions dimension0_ where dimension0_.ID=?
[2017-10-02 14:02:52,615]DEBUG  1980[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Dimension [READ]: select dimension0_.ID as ID7_0_, dimension0_.DimensionName as Dimensio2_7_0_, dimension0_.NumberOfProducts as NumberOf3_7_0_ from Dimensions dimension0_ where dimension0_.ID=?
[2017-10-02 14:02:52,616]DEBUG  1981[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Dimension [UPGRADE]: select dimension0_.ID as ID7_0_, dimension0_.DimensionName as Dimensio2_7_0_, dimension0_.NumberOfProducts as NumberOf3_7_0_ from Dimensions dimension0_ where dimension0_.ID=? for update
[2017-10-02 14:02:52,616]DEBUG  1981[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Dimension [UPGRADE_NOWAIT]: select dimension0_.ID as ID7_0_, dimension0_.DimensionName as Dimensio2_7_0_, dimension0_.NumberOfProducts as NumberOf3_7_0_ from Dimensions dimension0_ where dimension0_.ID=? for update
[2017-10-02 14:02:52,616]DEBUG  1981[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Dimension [FORCE]: select dimension0_.ID as ID7_0_, dimension0_.DimensionName as Dimensio2_7_0_, dimension0_.NumberOfProducts as NumberOf3_7_0_ from Dimensions dimension0_ where dimension0_.ID=? for update
[2017-10-02 14:02:52,616]DEBUG  1981[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Dimension [PESSIMISTIC_READ]: select dimension0_.ID as ID7_0_, dimension0_.DimensionName as Dimensio2_7_0_, dimension0_.NumberOfProducts as NumberOf3_7_0_ from Dimensions dimension0_ where dimension0_.ID=? lock in share mode
[2017-10-02 14:02:52,617]DEBUG  1982[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Dimension [PESSIMISTIC_WRITE]: select dimension0_.ID as ID7_0_, dimension0_.DimensionName as Dimensio2_7_0_, dimension0_.NumberOfProducts as NumberOf3_7_0_ from Dimensions dimension0_ where dimension0_.ID=? for update
[2017-10-02 14:02:52,617]DEBUG  1982[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Dimension [PESSIMISTIC_FORCE_INCREMENT]: select dimension0_.ID as ID7_0_, dimension0_.DimensionName as Dimensio2_7_0_, dimension0_.NumberOfProducts as NumberOf3_7_0_ from Dimensions dimension0_ where dimension0_.ID=? for update
[2017-10-02 14:02:52,617]DEBUG  1982[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Dimension [OPTIMISTIC]: select dimension0_.ID as ID7_0_, dimension0_.DimensionName as Dimensio2_7_0_, dimension0_.NumberOfProducts as NumberOf3_7_0_ from Dimensions dimension0_ where dimension0_.ID=?
[2017-10-02 14:02:52,617]DEBUG  1982[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Dimension [OPTIMISTIC_FORCE_INCREMENT]: select dimension0_.ID as ID7_0_, dimension0_.DimensionName as Dimensio2_7_0_, dimension0_.NumberOfProducts as NumberOf3_7_0_ from Dimensions dimension0_ where dimension0_.ID=?
[2017-10-02 14:02:52,618]DEBUG  1983[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.softserveinc.edu.oms.domain.entities.Dimension: select dimension0_.ID as ID7_0_, dimension0_.DimensionName as Dimensio2_7_0_, dimension0_.NumberOfProducts as NumberOf3_7_0_ from Dimensions dimension0_ where dimension0_.ID=?
[2017-10-02 14:02:52,618]DEBUG  1983[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.softserveinc.edu.oms.domain.entities.Dimension: select dimension0_.ID as ID7_0_, dimension0_.DimensionName as Dimensio2_7_0_, dimension0_.NumberOfProducts as NumberOf3_7_0_ from Dimensions dimension0_ where dimension0_.ID=?
[2017-10-02 14:02:52,618]DEBUG  1983[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderStatus [NONE]: select orderstatu0_.ID as ID4_0_, orderstatu0_.OrederStatusName as OrederSt2_4_0_ from OrderStatuses orderstatu0_ where orderstatu0_.ID=?
[2017-10-02 14:02:52,619]DEBUG  1984[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderStatus [READ]: select orderstatu0_.ID as ID4_0_, orderstatu0_.OrederStatusName as OrederSt2_4_0_ from OrderStatuses orderstatu0_ where orderstatu0_.ID=?
[2017-10-02 14:02:52,619]DEBUG  1984[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderStatus [UPGRADE]: select orderstatu0_.ID as ID4_0_, orderstatu0_.OrederStatusName as OrederSt2_4_0_ from OrderStatuses orderstatu0_ where orderstatu0_.ID=? for update
[2017-10-02 14:02:52,619]DEBUG  1984[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderStatus [UPGRADE_NOWAIT]: select orderstatu0_.ID as ID4_0_, orderstatu0_.OrederStatusName as OrederSt2_4_0_ from OrderStatuses orderstatu0_ where orderstatu0_.ID=? for update
[2017-10-02 14:02:52,619]DEBUG  1984[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderStatus [FORCE]: select orderstatu0_.ID as ID4_0_, orderstatu0_.OrederStatusName as OrederSt2_4_0_ from OrderStatuses orderstatu0_ where orderstatu0_.ID=? for update
[2017-10-02 14:02:52,620]DEBUG  1985[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderStatus [PESSIMISTIC_READ]: select orderstatu0_.ID as ID4_0_, orderstatu0_.OrederStatusName as OrederSt2_4_0_ from OrderStatuses orderstatu0_ where orderstatu0_.ID=? lock in share mode
[2017-10-02 14:02:52,620]DEBUG  1985[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderStatus [PESSIMISTIC_WRITE]: select orderstatu0_.ID as ID4_0_, orderstatu0_.OrederStatusName as OrederSt2_4_0_ from OrderStatuses orderstatu0_ where orderstatu0_.ID=? for update
[2017-10-02 14:02:52,620]DEBUG  1985[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderStatus [PESSIMISTIC_FORCE_INCREMENT]: select orderstatu0_.ID as ID4_0_, orderstatu0_.OrederStatusName as OrederSt2_4_0_ from OrderStatuses orderstatu0_ where orderstatu0_.ID=? for update
[2017-10-02 14:02:52,620]DEBUG  1985[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderStatus [OPTIMISTIC]: select orderstatu0_.ID as ID4_0_, orderstatu0_.OrederStatusName as OrederSt2_4_0_ from OrderStatuses orderstatu0_ where orderstatu0_.ID=?
[2017-10-02 14:02:52,621]DEBUG  1986[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderStatus [OPTIMISTIC_FORCE_INCREMENT]: select orderstatu0_.ID as ID4_0_, orderstatu0_.OrederStatusName as OrederSt2_4_0_ from OrderStatuses orderstatu0_ where orderstatu0_.ID=?
[2017-10-02 14:02:52,621]DEBUG  1986[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.softserveinc.edu.oms.domain.entities.OrderStatus: select orderstatu0_.ID as ID4_0_, orderstatu0_.OrederStatusName as OrederSt2_4_0_ from OrderStatuses orderstatu0_ where orderstatu0_.ID=?
[2017-10-02 14:02:52,621]DEBUG  1986[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.softserveinc.edu.oms.domain.entities.OrderStatus: select orderstatu0_.ID as ID4_0_, orderstatu0_.OrederStatusName as OrederSt2_4_0_ from OrderStatuses orderstatu0_ where orderstatu0_.ID=?
[2017-10-02 14:02:52,622]DEBUG  1987[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Region [NONE]: select region0_.ID as ID1_0_, region0_.RegionName as RegionName1_0_ from Regions region0_ where region0_.ID=?
[2017-10-02 14:02:52,622]DEBUG  1987[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Region [READ]: select region0_.ID as ID1_0_, region0_.RegionName as RegionName1_0_ from Regions region0_ where region0_.ID=?
[2017-10-02 14:02:52,622]DEBUG  1987[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Region [UPGRADE]: select region0_.ID as ID1_0_, region0_.RegionName as RegionName1_0_ from Regions region0_ where region0_.ID=? for update
[2017-10-02 14:02:52,622]DEBUG  1987[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Region [UPGRADE_NOWAIT]: select region0_.ID as ID1_0_, region0_.RegionName as RegionName1_0_ from Regions region0_ where region0_.ID=? for update
[2017-10-02 14:02:52,623]DEBUG  1988[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Region [FORCE]: select region0_.ID as ID1_0_, region0_.RegionName as RegionName1_0_ from Regions region0_ where region0_.ID=? for update
[2017-10-02 14:02:52,623]DEBUG  1988[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Region [PESSIMISTIC_READ]: select region0_.ID as ID1_0_, region0_.RegionName as RegionName1_0_ from Regions region0_ where region0_.ID=? lock in share mode
[2017-10-02 14:02:52,623]DEBUG  1988[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Region [PESSIMISTIC_WRITE]: select region0_.ID as ID1_0_, region0_.RegionName as RegionName1_0_ from Regions region0_ where region0_.ID=? for update
[2017-10-02 14:02:52,623]DEBUG  1988[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Region [PESSIMISTIC_FORCE_INCREMENT]: select region0_.ID as ID1_0_, region0_.RegionName as RegionName1_0_ from Regions region0_ where region0_.ID=? for update
[2017-10-02 14:02:52,624]DEBUG  1989[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Region [OPTIMISTIC]: select region0_.ID as ID1_0_, region0_.RegionName as RegionName1_0_ from Regions region0_ where region0_.ID=?
[2017-10-02 14:02:52,624]DEBUG  1989[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Region [OPTIMISTIC_FORCE_INCREMENT]: select region0_.ID as ID1_0_, region0_.RegionName as RegionName1_0_ from Regions region0_ where region0_.ID=?
[2017-10-02 14:02:52,624]DEBUG  1989[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.softserveinc.edu.oms.domain.entities.Region: select region0_.ID as ID1_0_, region0_.RegionName as RegionName1_0_ from Regions region0_ where region0_.ID=?
[2017-10-02 14:02:52,624]DEBUG  1989[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.softserveinc.edu.oms.domain.entities.Region: select region0_.ID as ID1_0_, region0_.RegionName as RegionName1_0_ from Regions region0_ where region0_.ID=?
[2017-10-02 14:02:52,625]DEBUG  1990[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.User [NONE]: select user0_.ID as ID3_3_, user0_.IsUserActive as IsUserAc2_3_3_, user0_.Balance as Balance3_3_, user0_.CustomerTypeRef as Customer9_3_3_, user0_.Email as Email3_3_, user0_.FirstName as FirstName3_3_, user0_.LastName as LastName3_3_, user0_.Login as Login3_3_, user0_.Password as Password3_3_, user0_.RegionRef as RegionRef3_3_, user0_.RoleRef as RoleRef3_3_, customerty1_.ID as ID2_0_, customerty1_.Discount as Discount2_0_, customerty1_.MaxRange as MaxRange2_0_, customerty1_.MinRange as MinRange2_0_, customerty1_.TypeName as TypeName2_0_, region2_.ID as ID1_1_, region2_.RegionName as RegionName1_1_, role3_.ID as ID0_2_, role3_.RoleName as RoleName0_2_ from Users user0_ left outer join CustomerTypes customerty1_ on user0_.CustomerTypeRef=customerty1_.ID left outer join Regions region2_ on user0_.RegionRef=region2_.ID inner join Roles role3_ on user0_.RoleRef=role3_.ID where user0_.ID=?
[2017-10-02 14:02:52,625]DEBUG  1990[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.User [READ]: select user0_.ID as ID3_3_, user0_.IsUserActive as IsUserAc2_3_3_, user0_.Balance as Balance3_3_, user0_.CustomerTypeRef as Customer9_3_3_, user0_.Email as Email3_3_, user0_.FirstName as FirstName3_3_, user0_.LastName as LastName3_3_, user0_.Login as Login3_3_, user0_.Password as Password3_3_, user0_.RegionRef as RegionRef3_3_, user0_.RoleRef as RoleRef3_3_, customerty1_.ID as ID2_0_, customerty1_.Discount as Discount2_0_, customerty1_.MaxRange as MaxRange2_0_, customerty1_.MinRange as MinRange2_0_, customerty1_.TypeName as TypeName2_0_, region2_.ID as ID1_1_, region2_.RegionName as RegionName1_1_, role3_.ID as ID0_2_, role3_.RoleName as RoleName0_2_ from Users user0_ left outer join CustomerTypes customerty1_ on user0_.CustomerTypeRef=customerty1_.ID left outer join Regions region2_ on user0_.RegionRef=region2_.ID inner join Roles role3_ on user0_.RoleRef=role3_.ID where user0_.ID=?
[2017-10-02 14:02:52,626]DEBUG  1991[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.User [UPGRADE]: select user0_.ID as ID3_0_, user0_.IsUserActive as IsUserAc2_3_0_, user0_.Balance as Balance3_0_, user0_.CustomerTypeRef as Customer9_3_0_, user0_.Email as Email3_0_, user0_.FirstName as FirstName3_0_, user0_.LastName as LastName3_0_, user0_.Login as Login3_0_, user0_.Password as Password3_0_, user0_.RegionRef as RegionRef3_0_, user0_.RoleRef as RoleRef3_0_ from Users user0_ where user0_.ID=? for update
[2017-10-02 14:02:52,626]DEBUG  1991[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.User [UPGRADE_NOWAIT]: select user0_.ID as ID3_0_, user0_.IsUserActive as IsUserAc2_3_0_, user0_.Balance as Balance3_0_, user0_.CustomerTypeRef as Customer9_3_0_, user0_.Email as Email3_0_, user0_.FirstName as FirstName3_0_, user0_.LastName as LastName3_0_, user0_.Login as Login3_0_, user0_.Password as Password3_0_, user0_.RegionRef as RegionRef3_0_, user0_.RoleRef as RoleRef3_0_ from Users user0_ where user0_.ID=? for update
[2017-10-02 14:02:52,626]DEBUG  1991[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.User [FORCE]: select user0_.ID as ID3_0_, user0_.IsUserActive as IsUserAc2_3_0_, user0_.Balance as Balance3_0_, user0_.CustomerTypeRef as Customer9_3_0_, user0_.Email as Email3_0_, user0_.FirstName as FirstName3_0_, user0_.LastName as LastName3_0_, user0_.Login as Login3_0_, user0_.Password as Password3_0_, user0_.RegionRef as RegionRef3_0_, user0_.RoleRef as RoleRef3_0_ from Users user0_ where user0_.ID=? for update
[2017-10-02 14:02:52,627]DEBUG  1992[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.User [PESSIMISTIC_READ]: select user0_.ID as ID3_0_, user0_.IsUserActive as IsUserAc2_3_0_, user0_.Balance as Balance3_0_, user0_.CustomerTypeRef as Customer9_3_0_, user0_.Email as Email3_0_, user0_.FirstName as FirstName3_0_, user0_.LastName as LastName3_0_, user0_.Login as Login3_0_, user0_.Password as Password3_0_, user0_.RegionRef as RegionRef3_0_, user0_.RoleRef as RoleRef3_0_ from Users user0_ where user0_.ID=? lock in share mode
[2017-10-02 14:02:52,627]DEBUG  1992[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.User [PESSIMISTIC_WRITE]: select user0_.ID as ID3_0_, user0_.IsUserActive as IsUserAc2_3_0_, user0_.Balance as Balance3_0_, user0_.CustomerTypeRef as Customer9_3_0_, user0_.Email as Email3_0_, user0_.FirstName as FirstName3_0_, user0_.LastName as LastName3_0_, user0_.Login as Login3_0_, user0_.Password as Password3_0_, user0_.RegionRef as RegionRef3_0_, user0_.RoleRef as RoleRef3_0_ from Users user0_ where user0_.ID=? for update
[2017-10-02 14:02:52,627]DEBUG  1992[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.ID as ID3_0_, user0_.IsUserActive as IsUserAc2_3_0_, user0_.Balance as Balance3_0_, user0_.CustomerTypeRef as Customer9_3_0_, user0_.Email as Email3_0_, user0_.FirstName as FirstName3_0_, user0_.LastName as LastName3_0_, user0_.Login as Login3_0_, user0_.Password as Password3_0_, user0_.RegionRef as RegionRef3_0_, user0_.RoleRef as RoleRef3_0_ from Users user0_ where user0_.ID=? for update
[2017-10-02 14:02:52,628]DEBUG  1993[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.User [OPTIMISTIC]: select user0_.ID as ID3_3_, user0_.IsUserActive as IsUserAc2_3_3_, user0_.Balance as Balance3_3_, user0_.CustomerTypeRef as Customer9_3_3_, user0_.Email as Email3_3_, user0_.FirstName as FirstName3_3_, user0_.LastName as LastName3_3_, user0_.Login as Login3_3_, user0_.Password as Password3_3_, user0_.RegionRef as RegionRef3_3_, user0_.RoleRef as RoleRef3_3_, customerty1_.ID as ID2_0_, customerty1_.Discount as Discount2_0_, customerty1_.MaxRange as MaxRange2_0_, customerty1_.MinRange as MinRange2_0_, customerty1_.TypeName as TypeName2_0_, region2_.ID as ID1_1_, region2_.RegionName as RegionName1_1_, role3_.ID as ID0_2_, role3_.RoleName as RoleName0_2_ from Users user0_ left outer join CustomerTypes customerty1_ on user0_.CustomerTypeRef=customerty1_.ID left outer join Regions region2_ on user0_.RegionRef=region2_.ID inner join Roles role3_ on user0_.RoleRef=role3_.ID where user0_.ID=?
[2017-10-02 14:02:52,629]DEBUG  1994[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.ID as ID3_3_, user0_.IsUserActive as IsUserAc2_3_3_, user0_.Balance as Balance3_3_, user0_.CustomerTypeRef as Customer9_3_3_, user0_.Email as Email3_3_, user0_.FirstName as FirstName3_3_, user0_.LastName as LastName3_3_, user0_.Login as Login3_3_, user0_.Password as Password3_3_, user0_.RegionRef as RegionRef3_3_, user0_.RoleRef as RoleRef3_3_, customerty1_.ID as ID2_0_, customerty1_.Discount as Discount2_0_, customerty1_.MaxRange as MaxRange2_0_, customerty1_.MinRange as MinRange2_0_, customerty1_.TypeName as TypeName2_0_, region2_.ID as ID1_1_, region2_.RegionName as RegionName1_1_, role3_.ID as ID0_2_, role3_.RoleName as RoleName0_2_ from Users user0_ left outer join CustomerTypes customerty1_ on user0_.CustomerTypeRef=customerty1_.ID left outer join Regions region2_ on user0_.RegionRef=region2_.ID inner join Roles role3_ on user0_.RoleRef=role3_.ID where user0_.ID=?
[2017-10-02 14:02:52,629]DEBUG  1994[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.softserveinc.edu.oms.domain.entities.User: select user0_.ID as ID3_3_, user0_.IsUserActive as IsUserAc2_3_3_, user0_.Balance as Balance3_3_, user0_.CustomerTypeRef as Customer9_3_3_, user0_.Email as Email3_3_, user0_.FirstName as FirstName3_3_, user0_.LastName as LastName3_3_, user0_.Login as Login3_3_, user0_.Password as Password3_3_, user0_.RegionRef as RegionRef3_3_, user0_.RoleRef as RoleRef3_3_, customerty1_.ID as ID2_0_, customerty1_.Discount as Discount2_0_, customerty1_.MaxRange as MaxRange2_0_, customerty1_.MinRange as MinRange2_0_, customerty1_.TypeName as TypeName2_0_, region2_.ID as ID1_1_, region2_.RegionName as RegionName1_1_, role3_.ID as ID0_2_, role3_.RoleName as RoleName0_2_ from Users user0_ left outer join CustomerTypes customerty1_ on user0_.CustomerTypeRef=customerty1_.ID left outer join Regions region2_ on user0_.RegionRef=region2_.ID inner join Roles role3_ on user0_.RoleRef=role3_.ID where user0_.ID=?
[2017-10-02 14:02:52,629]DEBUG  1994[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.softserveinc.edu.oms.domain.entities.User: select user0_.ID as ID3_0_, user0_.IsUserActive as IsUserAc2_3_0_, user0_.Balance as Balance3_0_, user0_.CustomerTypeRef as Customer9_3_0_, user0_.Email as Email3_0_, user0_.FirstName as FirstName3_0_, user0_.LastName as LastName3_0_, user0_.Login as Login3_0_, user0_.Password as Password3_0_, user0_.RegionRef as RegionRef3_0_, user0_.RoleRef as RoleRef3_0_ from Users user0_ where user0_.ID=?
[2017-10-02 14:02:52,630]DEBUG  1995[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CustomerType [NONE]: select customerty0_.ID as ID2_0_, customerty0_.Discount as Discount2_0_, customerty0_.MaxRange as MaxRange2_0_, customerty0_.MinRange as MinRange2_0_, customerty0_.TypeName as TypeName2_0_ from CustomerTypes customerty0_ where customerty0_.ID=?
[2017-10-02 14:02:52,630]DEBUG  1995[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CustomerType [READ]: select customerty0_.ID as ID2_0_, customerty0_.Discount as Discount2_0_, customerty0_.MaxRange as MaxRange2_0_, customerty0_.MinRange as MinRange2_0_, customerty0_.TypeName as TypeName2_0_ from CustomerTypes customerty0_ where customerty0_.ID=?
[2017-10-02 14:02:52,630]DEBUG  1995[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CustomerType [UPGRADE]: select customerty0_.ID as ID2_0_, customerty0_.Discount as Discount2_0_, customerty0_.MaxRange as MaxRange2_0_, customerty0_.MinRange as MinRange2_0_, customerty0_.TypeName as TypeName2_0_ from CustomerTypes customerty0_ where customerty0_.ID=? for update
[2017-10-02 14:02:52,631]DEBUG  1996[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CustomerType [UPGRADE_NOWAIT]: select customerty0_.ID as ID2_0_, customerty0_.Discount as Discount2_0_, customerty0_.MaxRange as MaxRange2_0_, customerty0_.MinRange as MinRange2_0_, customerty0_.TypeName as TypeName2_0_ from CustomerTypes customerty0_ where customerty0_.ID=? for update
[2017-10-02 14:02:52,631]DEBUG  1996[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CustomerType [FORCE]: select customerty0_.ID as ID2_0_, customerty0_.Discount as Discount2_0_, customerty0_.MaxRange as MaxRange2_0_, customerty0_.MinRange as MinRange2_0_, customerty0_.TypeName as TypeName2_0_ from CustomerTypes customerty0_ where customerty0_.ID=? for update
[2017-10-02 14:02:52,631]DEBUG  1996[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CustomerType [PESSIMISTIC_READ]: select customerty0_.ID as ID2_0_, customerty0_.Discount as Discount2_0_, customerty0_.MaxRange as MaxRange2_0_, customerty0_.MinRange as MinRange2_0_, customerty0_.TypeName as TypeName2_0_ from CustomerTypes customerty0_ where customerty0_.ID=? lock in share mode
[2017-10-02 14:02:52,631]DEBUG  1996[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CustomerType [PESSIMISTIC_WRITE]: select customerty0_.ID as ID2_0_, customerty0_.Discount as Discount2_0_, customerty0_.MaxRange as MaxRange2_0_, customerty0_.MinRange as MinRange2_0_, customerty0_.TypeName as TypeName2_0_ from CustomerTypes customerty0_ where customerty0_.ID=? for update
[2017-10-02 14:02:52,632]DEBUG  1997[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CustomerType [PESSIMISTIC_FORCE_INCREMENT]: select customerty0_.ID as ID2_0_, customerty0_.Discount as Discount2_0_, customerty0_.MaxRange as MaxRange2_0_, customerty0_.MinRange as MinRange2_0_, customerty0_.TypeName as TypeName2_0_ from CustomerTypes customerty0_ where customerty0_.ID=? for update
[2017-10-02 14:02:52,632]DEBUG  1997[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CustomerType [OPTIMISTIC]: select customerty0_.ID as ID2_0_, customerty0_.Discount as Discount2_0_, customerty0_.MaxRange as MaxRange2_0_, customerty0_.MinRange as MinRange2_0_, customerty0_.TypeName as TypeName2_0_ from CustomerTypes customerty0_ where customerty0_.ID=?
[2017-10-02 14:02:52,632]DEBUG  1997[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CustomerType [OPTIMISTIC_FORCE_INCREMENT]: select customerty0_.ID as ID2_0_, customerty0_.Discount as Discount2_0_, customerty0_.MaxRange as MaxRange2_0_, customerty0_.MinRange as MinRange2_0_, customerty0_.TypeName as TypeName2_0_ from CustomerTypes customerty0_ where customerty0_.ID=?
[2017-10-02 14:02:52,632]DEBUG  1997[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.softserveinc.edu.oms.domain.entities.CustomerType: select customerty0_.ID as ID2_0_, customerty0_.Discount as Discount2_0_, customerty0_.MaxRange as MaxRange2_0_, customerty0_.MinRange as MinRange2_0_, customerty0_.TypeName as TypeName2_0_ from CustomerTypes customerty0_ where customerty0_.ID=?
[2017-10-02 14:02:52,633]DEBUG  1998[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.softserveinc.edu.oms.domain.entities.CustomerType: select customerty0_.ID as ID2_0_, customerty0_.Discount as Discount2_0_, customerty0_.MaxRange as MaxRange2_0_, customerty0_.MinRange as MinRange2_0_, customerty0_.TypeName as TypeName2_0_ from CustomerTypes customerty0_ where customerty0_.ID=?
[2017-10-02 14:02:52,633]DEBUG  1998[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Product [NONE]: select product0_.ID as ID6_0_, product0_.IsProductActive as IsProduc2_6_0_, product0_.ProductDescription as ProductD3_6_0_, product0_.ProductName as ProductN4_6_0_, product0_.ProductPrice as ProductP5_6_0_ from Products product0_ where product0_.ID=?
[2017-10-02 14:02:52,633]DEBUG  1998[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Product [READ]: select product0_.ID as ID6_0_, product0_.IsProductActive as IsProduc2_6_0_, product0_.ProductDescription as ProductD3_6_0_, product0_.ProductName as ProductN4_6_0_, product0_.ProductPrice as ProductP5_6_0_ from Products product0_ where product0_.ID=?
[2017-10-02 14:02:52,634]DEBUG  1999[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Product [UPGRADE]: select product0_.ID as ID6_0_, product0_.IsProductActive as IsProduc2_6_0_, product0_.ProductDescription as ProductD3_6_0_, product0_.ProductName as ProductN4_6_0_, product0_.ProductPrice as ProductP5_6_0_ from Products product0_ where product0_.ID=? for update
[2017-10-02 14:02:52,634]DEBUG  1999[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Product [UPGRADE_NOWAIT]: select product0_.ID as ID6_0_, product0_.IsProductActive as IsProduc2_6_0_, product0_.ProductDescription as ProductD3_6_0_, product0_.ProductName as ProductN4_6_0_, product0_.ProductPrice as ProductP5_6_0_ from Products product0_ where product0_.ID=? for update
[2017-10-02 14:02:52,634]DEBUG  1999[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Product [FORCE]: select product0_.ID as ID6_0_, product0_.IsProductActive as IsProduc2_6_0_, product0_.ProductDescription as ProductD3_6_0_, product0_.ProductName as ProductN4_6_0_, product0_.ProductPrice as ProductP5_6_0_ from Products product0_ where product0_.ID=? for update
[2017-10-02 14:02:52,635]DEBUG  2000[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Product [PESSIMISTIC_READ]: select product0_.ID as ID6_0_, product0_.IsProductActive as IsProduc2_6_0_, product0_.ProductDescription as ProductD3_6_0_, product0_.ProductName as ProductN4_6_0_, product0_.ProductPrice as ProductP5_6_0_ from Products product0_ where product0_.ID=? lock in share mode
[2017-10-02 14:02:52,635]DEBUG  2000[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Product [PESSIMISTIC_WRITE]: select product0_.ID as ID6_0_, product0_.IsProductActive as IsProduc2_6_0_, product0_.ProductDescription as ProductD3_6_0_, product0_.ProductName as ProductN4_6_0_, product0_.ProductPrice as ProductP5_6_0_ from Products product0_ where product0_.ID=? for update
[2017-10-02 14:02:52,635]DEBUG  2000[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Product [PESSIMISTIC_FORCE_INCREMENT]: select product0_.ID as ID6_0_, product0_.IsProductActive as IsProduc2_6_0_, product0_.ProductDescription as ProductD3_6_0_, product0_.ProductName as ProductN4_6_0_, product0_.ProductPrice as ProductP5_6_0_ from Products product0_ where product0_.ID=? for update
[2017-10-02 14:02:52,635]DEBUG  2000[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Product [OPTIMISTIC]: select product0_.ID as ID6_0_, product0_.IsProductActive as IsProduc2_6_0_, product0_.ProductDescription as ProductD3_6_0_, product0_.ProductName as ProductN4_6_0_, product0_.ProductPrice as ProductP5_6_0_ from Products product0_ where product0_.ID=?
[2017-10-02 14:02:52,636]DEBUG  2001[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Product [OPTIMISTIC_FORCE_INCREMENT]: select product0_.ID as ID6_0_, product0_.IsProductActive as IsProduc2_6_0_, product0_.ProductDescription as ProductD3_6_0_, product0_.ProductName as ProductN4_6_0_, product0_.ProductPrice as ProductP5_6_0_ from Products product0_ where product0_.ID=?
[2017-10-02 14:02:52,636]DEBUG  2001[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.softserveinc.edu.oms.domain.entities.Product: select product0_.ID as ID6_0_, product0_.IsProductActive as IsProduc2_6_0_, product0_.ProductDescription as ProductD3_6_0_, product0_.ProductName as ProductN4_6_0_, product0_.ProductPrice as ProductP5_6_0_ from Products product0_ where product0_.ID=?
[2017-10-02 14:02:52,636]DEBUG  2001[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.softserveinc.edu.oms.domain.entities.Product: select product0_.ID as ID6_0_, product0_.IsProductActive as IsProduc2_6_0_, product0_.ProductDescription as ProductD3_6_0_, product0_.ProductName as ProductN4_6_0_, product0_.ProductPrice as ProductP5_6_0_ from Products product0_ where product0_.ID=?
[2017-10-02 14:02:52,638]DEBUG  2003[main] - org.hibernate.impl.SessionFactoryObjectFactory.<clinit>(SessionFactoryObjectFactory.java:61) - initializing class SessionFactoryObjectFactory
[2017-10-02 14:02:52,639]DEBUG  2004[main] - org.hibernate.impl.SessionFactoryObjectFactory.addInstance(SessionFactoryObjectFactory.java:99) - registered: 3fb371c1-c2d6-48ae-9e82-98c3bbc2b040 (unnamed)
[2017-10-02 14:02:52,639] INFO  2004[main] - org.hibernate.impl.SessionFactoryObjectFactory.addInstance(SessionFactoryObjectFactory.java:105) - Not binding factory to JNDI, no JNDI name configured
[2017-10-02 14:02:52,639]DEBUG  2004[main] - org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:369) - instantiated session factory
[2017-10-02 14:02:52,641]DEBUG  2006[main] - org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) - Processing hbm.xml files
[2017-10-02 14:02:52,642]DEBUG  2007[main] - org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) - Process annotated classes
[2017-10-02 14:02:52,642]DEBUG  2007[main] - org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) - processing fk mappings (*ToOne and JoinedSubclass)
[2017-10-02 14:02:52,642]DEBUG  2007[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) - processing extends queue
[2017-10-02 14:02:52,642]DEBUG  2007[main] - org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) - processing extends queue
[2017-10-02 14:02:52,642]DEBUG  2007[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) - processing collection mappings
[2017-10-02 14:02:52,643]DEBUG  2008[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) - processing native query and ResultSetMapping mappings
[2017-10-02 14:02:52,643]DEBUG  2008[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) - processing association property references
[2017-10-02 14:02:52,643]DEBUG  2008[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) - processing foreign key constraints
[2017-10-02 14:02:52,643]DEBUG  2008[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Product
[2017-10-02 14:02:52,643]DEBUG  2008[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Dimension
[2017-10-02 14:02:52,643]DEBUG  2008[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Order
[2017-10-02 14:02:52,644]DEBUG  2009[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.OrderStatus
[2017-10-02 14:02:52,644]DEBUG  2009[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.User
[2017-10-02 14:02:52,644]DEBUG  2009[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.User
[2017-10-02 14:02:52,644]DEBUG  2009[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Role
[2017-10-02 14:02:52,644]DEBUG  2009[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.CustomerType
[2017-10-02 14:02:52,644]DEBUG  2009[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Region
[2017-10-02 14:02:52,645]DEBUG  2010[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:107) - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2017-10-02 14:02:52,645]DEBUG  2010[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:118) - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.engine.resolver.JPATraversableResolver.
[2017-10-02 14:02:52,645]DEBUG  2010[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:203) - Trying to load META-INF/validation.xml for XML based Validator configuration.
[2017-10-02 14:02:52,646]DEBUG  2011[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:206) - No META-INF/validation.xml found. Using annotation based configuration only
[2017-10-02 14:02:52,662]DEBUG  2027[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-02 14:02:52,663]DEBUG  2028[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-02 14:02:52,663]DEBUG  2028[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-02 14:02:52,663]DEBUG  2028[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-02 14:02:52,663]DEBUG  2028[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-02 14:02:52,664]DEBUG  2029[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-02 14:02:52,664]DEBUG  2029[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-02 14:02:52,664]DEBUG  2029[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-02 14:02:52,665]DEBUG  2030[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-02 14:02:52,665]DEBUG  2030[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-02 14:02:52,665]DEBUG  2030[main] - org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) - Processing hbm.xml files
[2017-10-02 14:02:52,665]DEBUG  2030[main] - org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) - Process annotated classes
[2017-10-02 14:02:52,665]DEBUG  2030[main] - org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) - processing fk mappings (*ToOne and JoinedSubclass)
[2017-10-02 14:02:52,665]DEBUG  2030[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) - processing extends queue
[2017-10-02 14:02:52,666]DEBUG  2031[main] - org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) - processing extends queue
[2017-10-02 14:02:52,666]DEBUG  2031[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) - processing collection mappings
[2017-10-02 14:02:52,666]DEBUG  2031[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) - processing native query and ResultSetMapping mappings
[2017-10-02 14:02:52,666]DEBUG  2031[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) - processing association property references
[2017-10-02 14:02:52,666]DEBUG  2031[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) - processing foreign key constraints
[2017-10-02 14:02:52,666]DEBUG  2031[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Product
[2017-10-02 14:02:52,666]DEBUG  2031[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Dimension
[2017-10-02 14:02:52,667]DEBUG  2032[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Order
[2017-10-02 14:02:52,667]DEBUG  2032[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.OrderStatus
[2017-10-02 14:02:52,667]DEBUG  2032[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.User
[2017-10-02 14:02:52,667]DEBUG  2032[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.User
[2017-10-02 14:02:52,667]DEBUG  2032[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Role
[2017-10-02 14:02:52,667]DEBUG  2032[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.CustomerType
[2017-10-02 14:02:52,668]DEBUG  2033[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Region
[2017-10-02 14:02:52,668]DEBUG  2033[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:107) - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2017-10-02 14:02:52,668]DEBUG  2033[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:118) - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.engine.resolver.JPATraversableResolver.
[2017-10-02 14:02:52,669]DEBUG  2034[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:203) - Trying to load META-INF/validation.xml for XML based Validator configuration.
[2017-10-02 14:02:52,669]DEBUG  2034[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:206) - No META-INF/validation.xml found. Using annotation based configuration only
[2017-10-02 14:02:52,684]DEBUG  2049[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-02 14:02:52,685]DEBUG  2050[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-02 14:02:52,685]DEBUG  2050[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-02 14:02:52,685]DEBUG  2050[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-02 14:02:52,685]DEBUG  2050[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-02 14:02:52,686]DEBUG  2051[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-02 14:02:52,686]DEBUG  2051[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-02 14:02:52,686]DEBUG  2051[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-02 14:02:52,686]DEBUG  2051[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-02 14:02:52,687]DEBUG  2052[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-02 14:02:52,687]DEBUG  2052[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-02 14:02:52,687]DEBUG  2052[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-02 14:02:52,688]DEBUG  2053[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-02 14:02:52,688]DEBUG  2053[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-02 14:02:52,688]DEBUG  2053[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-02 14:02:52,688]DEBUG  2053[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-02 14:02:52,688]DEBUG  2053[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-02 14:02:52,689]DEBUG  2054[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-02 14:02:52,689]DEBUG  2054[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-02 14:02:52,689]DEBUG  2054[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-02 14:02:52,691] INFO  2056[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:234) - Running hbm2ddl schema export
[2017-10-02 14:02:52,691]DEBUG  2056[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:252) - import file not found: /import.sql
[2017-10-02 14:02:52,692] INFO  2057[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:262) - exporting generated schema to database
[2017-10-02 14:02:52,692]DEBUG  2057[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table OrderItems drop foreign key FKA2B1AD3262E1ABF7
[2017-10-02 14:02:52,699]DEBUG  2064[main] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: alter table OrderItems drop foreign key FKA2B1AD3262E1ABF7
[2017-10-02 14:02:52,699]DEBUG  2064[main] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - Table 'test1.OrderItems' doesn't exist
[2017-10-02 14:02:52,699]DEBUG  2064[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table OrderItems drop foreign key FKA2B1AD32A6376397
[2017-10-02 14:02:52,700]DEBUG  2065[main] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: alter table OrderItems drop foreign key FKA2B1AD32A6376397
[2017-10-02 14:02:52,700]DEBUG  2065[main] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - Table 'test1.OrderItems' doesn't exist
[2017-10-02 14:02:52,700]DEBUG  2065[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table OrderItems drop foreign key FKA2B1AD32BCDB3C97
[2017-10-02 14:02:52,701]DEBUG  2066[main] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: alter table OrderItems drop foreign key FKA2B1AD32BCDB3C97
[2017-10-02 14:02:52,701]DEBUG  2066[main] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - Table 'test1.OrderItems' doesn't exist
[2017-10-02 14:02:52,701]DEBUG  2066[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Orders drop foreign key FK8D444F05990DB877
[2017-10-02 14:02:52,701]DEBUG  2066[main] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: alter table Orders drop foreign key FK8D444F05990DB877
[2017-10-02 14:02:52,701]DEBUG  2066[main] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - Table 'test1.Orders' doesn't exist
[2017-10-02 14:02:52,702]DEBUG  2067[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Orders drop foreign key FK8D444F05C0F431DD
[2017-10-02 14:02:52,702]DEBUG  2067[main] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: alter table Orders drop foreign key FK8D444F05C0F431DD
[2017-10-02 14:02:52,702]DEBUG  2067[main] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - Table 'test1.Orders' doesn't exist
[2017-10-02 14:02:52,702]DEBUG  2067[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Orders drop foreign key FK8D444F05F161465
[2017-10-02 14:02:52,702]DEBUG  2067[main] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: alter table Orders drop foreign key FK8D444F05F161465
[2017-10-02 14:02:52,703]DEBUG  2068[main] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - Table 'test1.Orders' doesn't exist
[2017-10-02 14:02:52,703]DEBUG  2068[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Users drop foreign key FK4E39DE83D05058F
[2017-10-02 14:02:52,703]DEBUG  2068[main] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: alter table Users drop foreign key FK4E39DE83D05058F
[2017-10-02 14:02:52,703]DEBUG  2068[main] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - Table 'test1.Users' doesn't exist
[2017-10-02 14:02:52,703]DEBUG  2068[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Users drop foreign key FK4E39DE89AEF426F
[2017-10-02 14:02:52,704]DEBUG  2069[main] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: alter table Users drop foreign key FK4E39DE89AEF426F
[2017-10-02 14:02:52,704]DEBUG  2069[main] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - Table 'test1.Users' doesn't exist
[2017-10-02 14:02:52,704]DEBUG  2069[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Users drop foreign key FK4E39DE8FEAD4DCF
[2017-10-02 14:02:52,704]DEBUG  2069[main] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: alter table Users drop foreign key FK4E39DE8FEAD4DCF
[2017-10-02 14:02:52,704]DEBUG  2069[main] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - Table 'test1.Users' doesn't exist
[2017-10-02 14:02:52,705]DEBUG  2070[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists CardType
[2017-10-02 14:02:52,707]DEBUG  2072[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists CustomerTypes
[2017-10-02 14:02:52,707]DEBUG  2072[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists Dimensions
[2017-10-02 14:02:52,708]DEBUG  2073[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists OrderItems
[2017-10-02 14:02:52,708]DEBUG  2073[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists OrderStatuses
[2017-10-02 14:02:52,709]DEBUG  2074[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists Orders
[2017-10-02 14:02:52,710]DEBUG  2075[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists Products
[2017-10-02 14:02:52,710]DEBUG  2075[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists Regions
[2017-10-02 14:02:52,711]DEBUG  2076[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists Roles
[2017-10-02 14:02:52,712]DEBUG  2077[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists Users
[2017-10-02 14:02:52,713]DEBUG  2078[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - create table CardType (ID integer not null auto_increment, CardType varchar(255), CardNumber varchar(255), CardCvv2 integer, Expiration_Date varchar(255), IssueDate varchar(255), IssueNumber varchar(255), primary key (ID))
[2017-10-02 14:02:52,889]DEBUG  2254[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - create table CustomerTypes (ID integer not null auto_increment, Discount double precision, MaxRange double precision, MinRange double precision, TypeName varchar(255), primary key (ID))
[2017-10-02 14:02:52,998]DEBUG  2363[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - create table Dimensions (ID integer not null auto_increment, DimensionName varchar(255), NumberOfProducts integer, primary key (ID))
[2017-10-02 14:02:53,149]DEBUG  2514[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - create table OrderItems (ID integer not null auto_increment, Cost double precision, ItemPrice double precision, Quantity integer, DimensionRef integer, OrderRef integer, ProductRef integer, primary key (ID))
[2017-10-02 14:02:53,384]DEBUG  2749[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - create table OrderStatuses (ID integer not null auto_increment, OrederStatusName varchar(255), primary key (ID))
[2017-10-02 14:02:53,616]DEBUG  2981[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - create table Orders (ID integer not null auto_increment, DeliveryDate datetime, IsGift bit, MaxDiscount integer, OrderDate datetime, OrderName varchar(100), OrderNumber integer unique, PreferableDeliveryDate datetime, TotalPrice double precision, Assigne integer, Customer integer, OrderStatusRef integer, primary key (ID))
[2017-10-02 14:02:53,742]DEBUG  3107[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - create table Products (ID integer not null auto_increment, IsProductActive bit, ProductDescription varchar(255), ProductName varchar(255), ProductPrice double precision, primary key (ID))
[2017-10-02 14:02:53,900]DEBUG  3265[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - create table Regions (ID integer not null auto_increment, RegionName varchar(255), primary key (ID))
[2017-10-02 14:02:54,083]DEBUG  3448[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - create table Roles (ID integer not null auto_increment, RoleName varchar(255), primary key (ID))
[2017-10-02 14:02:54,252]DEBUG  3617[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - create table Users (ID integer not null auto_increment, IsUserActive bit, Balance double precision, Email varchar(255) not null, FirstName varchar(255) not null, LastName varchar(255) not null, Login varchar(255) not null, Password varchar(255) not null, CustomerTypeRef integer, RegionRef integer, RoleRef integer not null, primary key (ID))
[2017-10-02 14:02:54,409]DEBUG  3774[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table OrderItems add index FKA2B1AD3262E1ABF7 (ProductRef), add constraint FKA2B1AD3262E1ABF7 foreign key (ProductRef) references Products (ID)
[2017-10-02 14:02:54,718]DEBUG  4083[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table OrderItems add index FKA2B1AD32A6376397 (DimensionRef), add constraint FKA2B1AD32A6376397 foreign key (DimensionRef) references Dimensions (ID)
[2017-10-02 14:02:55,027]DEBUG  4392[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table OrderItems add index FKA2B1AD32BCDB3C97 (OrderRef), add constraint FKA2B1AD32BCDB3C97 foreign key (OrderRef) references Orders (ID)
[2017-10-02 14:02:55,427]DEBUG  4792[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Orders add index FK8D444F05990DB877 (OrderStatusRef), add constraint FK8D444F05990DB877 foreign key (OrderStatusRef) references OrderStatuses (ID)
[2017-10-02 14:02:55,695]DEBUG  5060[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Orders add index FK8D444F05C0F431DD (Assigne), add constraint FK8D444F05C0F431DD foreign key (Assigne) references Users (ID)
[2017-10-02 14:02:56,037]DEBUG  5402[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Orders add index FK8D444F05F161465 (Customer), add constraint FK8D444F05F161465 foreign key (Customer) references Users (ID)
[2017-10-02 14:02:56,279]DEBUG  5644[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Users add index FK4E39DE83D05058F (RoleRef), add constraint FK4E39DE83D05058F foreign key (RoleRef) references Roles (ID)
[2017-10-02 14:02:56,554]DEBUG  5919[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Users add index FK4E39DE89AEF426F (CustomerTypeRef), add constraint FK4E39DE89AEF426F foreign key (CustomerTypeRef) references CustomerTypes (ID)
[2017-10-02 14:02:56,788]DEBUG  6153[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Users add index FK4E39DE8FEAD4DCF (RegionRef), add constraint FK4E39DE8FEAD4DCF foreign key (RegionRef) references Regions (ID)
[2017-10-02 14:02:56,947] INFO  6312[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:281) - schema export complete
[2017-10-02 14:02:56,948]DEBUG  6313[main] - org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) - Processing hbm.xml files
[2017-10-02 14:02:56,948]DEBUG  6313[main] - org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) - Process annotated classes
[2017-10-02 14:02:56,948]DEBUG  6313[main] - org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) - processing fk mappings (*ToOne and JoinedSubclass)
[2017-10-02 14:02:56,948]DEBUG  6313[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) - processing extends queue
[2017-10-02 14:02:56,948]DEBUG  6313[main] - org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) - processing extends queue
[2017-10-02 14:02:56,949]DEBUG  6314[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) - processing collection mappings
[2017-10-02 14:02:56,949]DEBUG  6314[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) - processing native query and ResultSetMapping mappings
[2017-10-02 14:02:56,949]DEBUG  6314[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) - processing association property references
[2017-10-02 14:02:56,949]DEBUG  6314[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) - processing foreign key constraints
[2017-10-02 14:02:56,949]DEBUG  6314[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Product
[2017-10-02 14:02:56,950]DEBUG  6315[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Dimension
[2017-10-02 14:02:56,950]DEBUG  6315[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Order
[2017-10-02 14:02:56,950]DEBUG  6315[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.OrderStatus
[2017-10-02 14:02:56,950]DEBUG  6315[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.User
[2017-10-02 14:02:56,950]DEBUG  6315[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.User
[2017-10-02 14:02:56,951]DEBUG  6316[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Role
[2017-10-02 14:02:56,951]DEBUG  6316[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.CustomerType
[2017-10-02 14:02:56,951]DEBUG  6316[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Region
[2017-10-02 14:02:56,952]DEBUG  6317[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:107) - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2017-10-02 14:02:56,952]DEBUG  6317[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:118) - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.engine.resolver.JPATraversableResolver.
[2017-10-02 14:02:56,952]DEBUG  6317[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:203) - Trying to load META-INF/validation.xml for XML based Validator configuration.
[2017-10-02 14:02:56,953]DEBUG  6318[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:206) - No META-INF/validation.xml found. Using annotation based configuration only
[2017-10-02 14:02:56,967]DEBUG  6332[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-02 14:02:56,967]DEBUG  6332[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-02 14:02:56,967]DEBUG  6332[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-02 14:02:56,968]DEBUG  6333[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-02 14:02:56,968]DEBUG  6333[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-02 14:02:56,968]DEBUG  6333[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-02 14:02:56,968]DEBUG  6333[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-02 14:02:56,968]DEBUG  6333[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-02 14:02:56,969]DEBUG  6334[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-02 14:02:56,969]DEBUG  6334[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-02 14:02:56,969]DEBUG  6334[main] - org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) - Processing hbm.xml files
[2017-10-02 14:02:56,969]DEBUG  6334[main] - org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) - Process annotated classes
[2017-10-02 14:02:56,969]DEBUG  6334[main] - org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) - processing fk mappings (*ToOne and JoinedSubclass)
[2017-10-02 14:02:56,970]DEBUG  6335[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) - processing extends queue
[2017-10-02 14:02:56,970]DEBUG  6335[main] - org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) - processing extends queue
[2017-10-02 14:02:56,970]DEBUG  6335[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) - processing collection mappings
[2017-10-02 14:02:56,970]DEBUG  6335[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) - processing native query and ResultSetMapping mappings
[2017-10-02 14:02:56,970]DEBUG  6335[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) - processing association property references
[2017-10-02 14:02:56,970]DEBUG  6335[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) - processing foreign key constraints
[2017-10-02 14:02:56,971]DEBUG  6336[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Product
[2017-10-02 14:02:56,971]DEBUG  6336[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Dimension
[2017-10-02 14:02:56,971]DEBUG  6336[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Order
[2017-10-02 14:02:56,971]DEBUG  6336[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.OrderStatus
[2017-10-02 14:02:56,971]DEBUG  6336[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.User
[2017-10-02 14:02:56,971]DEBUG  6336[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.User
[2017-10-02 14:02:56,971]DEBUG  6336[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Role
[2017-10-02 14:02:56,972]DEBUG  6337[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.CustomerType
[2017-10-02 14:02:56,972]DEBUG  6337[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Region
[2017-10-02 14:02:56,972]DEBUG  6337[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:107) - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2017-10-02 14:02:56,973]DEBUG  6338[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:118) - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.engine.resolver.JPATraversableResolver.
[2017-10-02 14:02:56,973]DEBUG  6338[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:203) - Trying to load META-INF/validation.xml for XML based Validator configuration.
[2017-10-02 14:02:56,973]DEBUG  6338[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:206) - No META-INF/validation.xml found. Using annotation based configuration only
[2017-10-02 14:02:56,987]DEBUG  6352[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-02 14:02:56,987]DEBUG  6352[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-02 14:02:56,987]DEBUG  6352[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-02 14:02:56,987]DEBUG  6352[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-02 14:02:56,988]DEBUG  6353[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-02 14:02:56,988]DEBUG  6353[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-02 14:02:56,988]DEBUG  6353[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-02 14:02:56,988]DEBUG  6353[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-02 14:02:56,989]DEBUG  6354[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-02 14:02:56,989]DEBUG  6354[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-02 14:02:56,989]DEBUG  6354[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-02 14:02:56,989]DEBUG  6354[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-02 14:02:56,990]DEBUG  6355[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-02 14:02:56,990]DEBUG  6355[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-02 14:02:56,990]DEBUG  6355[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-02 14:02:56,990]DEBUG  6355[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-02 14:02:56,990]DEBUG  6355[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-02 14:02:56,991]DEBUG  6356[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-02 14:02:56,991]DEBUG  6356[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-02 14:02:56,991]DEBUG  6356[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-02 14:02:56,991]DEBUG  6356[main] - org.hibernate.impl.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:539) - Checking 0 named HQL queries
[2017-10-02 14:02:56,992]DEBUG  6357[main] - org.hibernate.impl.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:559) - Checking 0 named SQL queries
[2017-10-02 14:02:56,993]DEBUG  6358[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-02 14:02:56,993]DEBUG  6358[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-02 14:02:56,995]DEBUG  6360[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'org.springframework.transaction.config.internalTransactionAdvisor' to allow for resolving potential circular references
[2017-10-02 14:02:56,999]DEBUG  6364[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
[2017-10-02 14:02:57,000]DEBUG  6365[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
[2017-10-02 14:02:57,000]DEBUG  6365[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' to allow for resolving potential circular references
[2017-10-02 14:02:57,005]DEBUG  6370[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
[2017-10-02 14:02:57,005]DEBUG  6370[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-02 14:02:57,009]DEBUG  6374[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'sessionFactory'
[2017-10-02 14:02:57,009]DEBUG  6374[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-02 14:02:57,019]DEBUG  6384[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1461) - Invoking afterPropertiesSet() on bean with name 'transactionManager'
[2017-10-02 14:02:57,025]DEBUG  6390[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-02 14:02:57,027]DEBUG  6392[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'transactionManager'
[2017-10-02 14:02:57,027]DEBUG  6392[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
[2017-10-02 14:02:57,027]DEBUG  6392[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
[2017-10-02 14:02:57,027]DEBUG  6392[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
[2017-10-02 14:02:57,027]DEBUG  6392[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
[2017-10-02 14:02:57,029]DEBUG  6394[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' to allow for resolving potential circular references
[2017-10-02 14:02:57,032]DEBUG  6397[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
[2017-10-02 14:02:57,032]DEBUG  6397[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1461) - Invoking afterPropertiesSet() on bean with name 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
[2017-10-02 14:02:57,033]DEBUG  6398[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
[2017-10-02 14:02:57,033]DEBUG  6398[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-02 14:02:57,033]DEBUG  6398[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
[2017-10-02 14:02:57,033]DEBUG  6398[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
[2017-10-02 14:02:57,033]DEBUG  6398[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
[2017-10-02 14:02:57,033]DEBUG  6398[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
[2017-10-02 14:02:57,033]DEBUG  6398[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
[2017-10-02 14:02:57,034]DEBUG  6399[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'creditCardTypeDao'
[2017-10-02 14:02:57,034]DEBUG  6399[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'creditCardTypeDao'
[2017-10-02 14:02:57,039]DEBUG  6404[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.concrete.CreditCardTypeDao]: AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2017-10-02 14:02:57,040]DEBUG  6405[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'creditCardTypeDao' to allow for resolving potential circular references
[2017-10-02 14:02:57,050]DEBUG  6415[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'creditCardTypeDao': AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2017-10-02 14:02:57,051]DEBUG  6416[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-02 14:02:57,051]DEBUG  6416[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'creditCardTypeDao' to bean named 'sessionFactory'
[2017-10-02 14:02:57,052]DEBUG  6417[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-02 14:02:57,054]DEBUG  6419[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'creditCardTypeDao'
[2017-10-02 14:02:57,055]DEBUG  6420[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'customerTypeDao'
[2017-10-02 14:02:57,055]DEBUG  6420[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'customerTypeDao'
[2017-10-02 14:02:57,056]DEBUG  6421[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao]: AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2017-10-02 14:02:57,056]DEBUG  6421[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'customerTypeDao' to allow for resolving potential circular references
[2017-10-02 14:02:57,060]DEBUG  6425[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'customerTypeDao': AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2017-10-02 14:02:57,060]DEBUG  6425[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-02 14:02:57,060]DEBUG  6425[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'customerTypeDao' to bean named 'sessionFactory'
[2017-10-02 14:02:57,061]DEBUG  6426[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-02 14:02:57,062]DEBUG  6427[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'customerTypeDao'
[2017-10-02 14:02:57,062]DEBUG  6427[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'dimensionDao'
[2017-10-02 14:02:57,063]DEBUG  6428[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'dimensionDao'
[2017-10-02 14:02:57,064]DEBUG  6429[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao]: AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2017-10-02 14:02:57,064]DEBUG  6429[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'dimensionDao' to allow for resolving potential circular references
[2017-10-02 14:02:57,068]DEBUG  6433[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'dimensionDao': AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2017-10-02 14:02:57,068]DEBUG  6433[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-02 14:02:57,069]DEBUG  6434[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'dimensionDao' to bean named 'sessionFactory'
[2017-10-02 14:02:57,069]DEBUG  6434[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-02 14:02:57,071]DEBUG  6436[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'dimensionDao'
[2017-10-02 14:02:57,071]DEBUG  6436[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'orderDao'
[2017-10-02 14:02:57,071]DEBUG  6436[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'orderDao'
[2017-10-02 14:02:57,077]DEBUG  6442[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao]: AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2017-10-02 14:02:57,077]DEBUG  6442[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao]: AutowiredFieldElement for private com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao.orderStatusDao
[2017-10-02 14:02:57,077]DEBUG  6442[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao]: AutowiredFieldElement for private com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao.roleDao
[2017-10-02 14:02:57,077]DEBUG  6442[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'orderDao' to allow for resolving potential circular references
[2017-10-02 14:02:57,083]DEBUG  6448[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'orderDao': AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2017-10-02 14:02:57,084]DEBUG  6449[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-02 14:02:57,084]DEBUG  6449[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'orderDao' to bean named 'sessionFactory'
[2017-10-02 14:02:57,084]DEBUG  6449[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'orderDao': AutowiredFieldElement for private com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao.orderStatusDao
[2017-10-02 14:02:57,085]DEBUG  6450[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'orderStatusDao'
[2017-10-02 14:02:57,085]DEBUG  6450[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'orderStatusDao'
[2017-10-02 14:02:57,086]DEBUG  6451[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao]: AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2017-10-02 14:02:57,086]DEBUG  6451[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'orderStatusDao' to allow for resolving potential circular references
[2017-10-02 14:02:57,090]DEBUG  6455[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'orderStatusDao': AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2017-10-02 14:02:57,090]DEBUG  6455[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-02 14:02:57,090]DEBUG  6455[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'orderStatusDao' to bean named 'sessionFactory'
[2017-10-02 14:02:57,091]DEBUG  6456[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-02 14:02:57,092]DEBUG  6457[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'orderStatusDao'
[2017-10-02 14:02:57,092]DEBUG  6457[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'orderDao' to bean named 'orderStatusDao'
[2017-10-02 14:02:57,093]DEBUG  6458[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'orderDao': AutowiredFieldElement for private com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao.roleDao
[2017-10-02 14:02:57,093]DEBUG  6458[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'roleDao'
[2017-10-02 14:02:57,093]DEBUG  6458[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'roleDao'
[2017-10-02 14:02:57,095]DEBUG  6460[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao]: AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2017-10-02 14:02:57,095]DEBUG  6460[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'roleDao' to allow for resolving potential circular references
[2017-10-02 14:02:57,099]DEBUG  6464[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'roleDao': AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2017-10-02 14:02:57,099]DEBUG  6464[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-02 14:02:57,099]DEBUG  6464[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'roleDao' to bean named 'sessionFactory'
[2017-10-02 14:02:57,100]DEBUG  6465[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-02 14:02:57,101]DEBUG  6466[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'roleDao'
[2017-10-02 14:02:57,102]DEBUG  6467[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'orderDao' to bean named 'roleDao'
[2017-10-02 14:02:57,102]DEBUG  6467[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-02 14:02:57,112]DEBUG  6477[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'orderDao'
[2017-10-02 14:02:57,112]DEBUG  6477[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'orderItemDao'
[2017-10-02 14:02:57,112]DEBUG  6477[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'orderItemDao'
[2017-10-02 14:02:57,114]DEBUG  6479[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao]: AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2017-10-02 14:02:57,114]DEBUG  6479[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'orderItemDao' to allow for resolving potential circular references
[2017-10-02 14:02:57,119]DEBUG  6484[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'orderItemDao': AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2017-10-02 14:02:57,119]DEBUG  6484[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-02 14:02:57,119]DEBUG  6484[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'orderItemDao' to bean named 'sessionFactory'
[2017-10-02 14:02:57,119]DEBUG  6484[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-02 14:02:57,121]DEBUG  6486[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'orderItemDao'
[2017-10-02 14:02:57,122]DEBUG  6487[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-02 14:02:57,122]DEBUG  6487[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'productDao'
[2017-10-02 14:02:57,122]DEBUG  6487[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'productDao'
[2017-10-02 14:02:57,124]DEBUG  6489[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao]: AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2017-10-02 14:02:57,125]DEBUG  6490[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'productDao' to allow for resolving potential circular references
[2017-10-02 14:02:57,131]DEBUG  6496[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'productDao': AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2017-10-02 14:02:57,131]DEBUG  6496[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-02 14:02:57,131]DEBUG  6496[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'productDao' to bean named 'sessionFactory'
[2017-10-02 14:02:57,132]DEBUG  6497[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-02 14:02:57,134]DEBUG  6499[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'productDao'
[2017-10-02 14:02:57,134]DEBUG  6499[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'regionDao'
[2017-10-02 14:02:57,135]DEBUG  6500[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'regionDao'
[2017-10-02 14:02:57,135]DEBUG  6500[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao]: AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2017-10-02 14:02:57,136]DEBUG  6501[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'regionDao' to allow for resolving potential circular references
[2017-10-02 14:02:57,139]DEBUG  6504[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'regionDao': AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2017-10-02 14:02:57,140]DEBUG  6505[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-02 14:02:57,140]DEBUG  6505[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'regionDao' to bean named 'sessionFactory'
[2017-10-02 14:02:57,140]DEBUG  6505[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-02 14:02:57,141]DEBUG  6506[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'regionDao'
[2017-10-02 14:02:57,142]DEBUG  6507[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-02 14:02:57,142]DEBUG  6507[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'userDao'
[2017-10-02 14:02:57,142]DEBUG  6507[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'userDao'
[2017-10-02 14:02:57,144]DEBUG  6509[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.concrete.UserDao]: AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2017-10-02 14:02:57,144]DEBUG  6509[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'userDao' to allow for resolving potential circular references
[2017-10-02 14:02:57,149]DEBUG  6514[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'userDao': AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2017-10-02 14:02:57,150]DEBUG  6515[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-02 14:02:57,150]DEBUG  6515[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'userDao' to bean named 'sessionFactory'
[2017-10-02 14:02:57,150]DEBUG  6515[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-02 14:02:57,152]DEBUG  6517[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'userDao'
[2017-10-02 14:02:57,153]DEBUG  6518[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-02 14:02:57,154]DEBUG  6519[main] - org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(AbstractApplicationContext.java:827) - Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@714a8a37]
[2017-10-02 14:02:57,155]DEBUG  6520[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'lifecycleProcessor'
[2017-10-02 14:02:57,159]DEBUG  6524[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-02 14:02:57,160]DEBUG  6525[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-02 14:02:57,160]DEBUG  6525[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-02 14:02:57,160]DEBUG  6525[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-02 14:02:57,160]DEBUG  6525[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-02 14:02:57,160]DEBUG  6525[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-02 14:02:57,160]DEBUG  6525[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-02 14:02:57,160]DEBUG  6525[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-02 14:02:57,161]DEBUG  6526[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-02 14:02:57,161]DEBUG  6526[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase]: AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-02 14:02:57,161]DEBUG  6526[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-02 14:02:57,161]DEBUG  6526[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-02 14:02:57,162]DEBUG  6527[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase' to bean named 'customerTypeDao'
[2017-10-02 14:02:57,162]DEBUG  6527[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-02 14:02:57,162]DEBUG  6527[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-02 14:02:57,162]DEBUG  6527[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase' to bean named 'dimensionDao'
[2017-10-02 14:02:57,162]DEBUG  6527[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-02 14:02:57,163]DEBUG  6528[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-02 14:02:57,163]DEBUG  6528[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase' to bean named 'orderDao'
[2017-10-02 14:02:57,163]DEBUG  6528[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-02 14:02:57,163]DEBUG  6528[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-02 14:02:57,164]DEBUG  6529[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase' to bean named 'orderItemDao'
[2017-10-02 14:02:57,164]DEBUG  6529[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-02 14:02:57,164]DEBUG  6529[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-02 14:02:57,164]DEBUG  6529[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase' to bean named 'orderStatusDao'
[2017-10-02 14:02:57,164]DEBUG  6529[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-02 14:02:57,165]DEBUG  6530[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-02 14:02:57,165]DEBUG  6530[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase' to bean named 'productDao'
[2017-10-02 14:02:57,165]DEBUG  6530[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-02 14:02:57,165]DEBUG  6530[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-02 14:02:57,165]DEBUG  6530[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase' to bean named 'regionDao'
[2017-10-02 14:02:57,166]DEBUG  6531[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-02 14:02:57,166]DEBUG  6531[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-02 14:02:57,166]DEBUG  6531[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase' to bean named 'roleDao'
[2017-10-02 14:02:57,166]DEBUG  6531[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-02 14:02:57,167]DEBUG  6532[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-02 14:02:57,167]DEBUG  6532[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase' to bean named 'userDao'
[2017-10-02 14:02:57,167]DEBUG  6532[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-02 14:02:57,167]DEBUG  6532[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-02 14:02:57,167]DEBUG  6532[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase' to bean named 'sessionFactory'
[2017-10-02 14:02:57,168]DEBUG  6533[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-02 14:02:57,169]DEBUG  6534[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testContextFile' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-02 14:02:57,173]DEBUG  6538[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase' with 0 common interceptors and 1 specific interceptors
[2017-10-02 14:02:57,177]DEBUG  6542[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase@3f44311c]
[2017-10-02 14:02:57,229]DEBUG  6594[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
[2017-10-02 14:02:57,231]DEBUG  6596[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.testContextFile()
[2017-10-02 14:02:57,232]DEBUG  6597[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanUser()
[2017-10-02 14:02:57,232]DEBUG  6597[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanRole()
[2017-10-02 14:02:57,232]DEBUG  6597[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanRegion()
[2017-10-02 14:02:57,232]DEBUG  6597[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanProduct()
[2017-10-02 14:02:57,232]DEBUG  6597[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrderStatus()
[2017-10-02 14:02:57,232]DEBUG  6597[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrderItem()
[2017-10-02 14:02:57,233]DEBUG  6598[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrder()
[2017-10-02 14:02:57,233]DEBUG  6598[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanDimension()
[2017-10-02 14:02:57,233]DEBUG  6598[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanCustomerType()
[2017-10-02 14:02:57,233]DEBUG  6598[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanDB()
[2017-10-02 14:02:57,233]DEBUG  6598[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:749) - Found finalize() method - using NO_OVERRIDE
[2017-10-02 14:02:57,233]DEBUG  6598[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:761) - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
[2017-10-02 14:02:57,234]DEBUG  6599[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
[2017-10-02 14:02:57,234]DEBUG  6599[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:766) - Found 'hashCode' method: public native int java.lang.Object.hashCode()
[2017-10-02 14:02:57,234]DEBUG  6599[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
[2017-10-02 14:02:57,234]DEBUG  6599[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
[2017-10-02 14:02:57,234]DEBUG  6599[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
[2017-10-02 14:02:57,234]DEBUG  6599[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2017-10-02 14:02:57,235]DEBUG  6600[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2017-10-02 14:02:57,235]DEBUG  6600[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
[2017-10-02 14:02:57,235]DEBUG  6600[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
[2017-10-02 14:02:57,235]DEBUG  6600[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
[2017-10-02 14:02:57,235]DEBUG  6600[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
[2017-10-02 14:02:57,235]DEBUG  6600[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2017-10-02 14:02:57,236]DEBUG  6601[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
[2017-10-02 14:02:57,236]DEBUG  6601[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
[2017-10-02 14:02:57,236]DEBUG  6601[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
[2017-10-02 14:02:57,236]DEBUG  6601[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
[2017-10-02 14:02:57,236]DEBUG  6601[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
[2017-10-02 14:02:57,236]DEBUG  6601[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
[2017-10-02 14:02:57,236]DEBUG  6601[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
[2017-10-02 14:02:57,237]DEBUG  6602[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
[2017-10-02 14:02:57,237]DEBUG  6602[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
[2017-10-02 14:02:57,237]DEBUG  6602[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
[2017-10-02 14:02:57,237]DEBUG  6602[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
[2017-10-02 14:02:57,237]DEBUG  6602[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
[2017-10-02 14:02:57,237]DEBUG  6602[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
[2017-10-02 14:02:57,237]DEBUG  6602[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
[2017-10-02 14:02:57,256]DEBUG  6621[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testContextFile' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-02 14:02:57,257]DEBUG  6622[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@36c8e545 testClass = CleanUpDBTestCase, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase@3f44311c, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2017-10-02 14:02:57,257]DEBUG  6622[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.retrieveConfigurationAttributes(TransactionalTestExecutionListener.java:466) - Retrieved @TransactionConfiguration [@org.springframework.test.context.transaction.TransactionConfiguration(transactionManager=transactionManager, defaultRollback=true)] for test class [class com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase]
[2017-10-02 14:02:57,258]DEBUG  6623[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.retrieveConfigurationAttributes(TransactionalTestExecutionListener.java:483) - Retrieved TransactionConfigurationAttributes [[TransactionConfigurationAttributes@54337562 transactionManagerName = 'transactionManager', defaultRollback = true]] for class [class com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase]
[2017-10-02 14:02:57,258]DEBUG  6623[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-02 14:02:57,262]DEBUG  6627[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testContextFile]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-02 14:02:57,281]DEBUG  6646[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15069421772
[2017-10-02 14:02:57,281]DEBUG  6646[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@1ca34126] for Hibernate transaction
[2017-10-02 14:02:57,283]DEBUG  6648[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@1ca34126]
[2017-10-02 14:02:57,293]DEBUG  6658[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-02 14:02:57,293]DEBUG  6658[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-02 14:02:57,293]DEBUG  6658[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-02 14:02:57,294]DEBUG  6659[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@36c8e545 testClass = CleanUpDBTestCase, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase@3f44311c, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2017-10-02 14:02:57,294] INFO  6659[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (1): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@24af5c74]; rollback [true]
[2017-10-02 14:02:57,295]DEBUG  6660[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@36c8e545 testClass = CleanUpDBTestCase, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase@3f44311c, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2017-10-02 14:02:57,295]DEBUG  6660[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-02 14:02:57,295]DEBUG  6660[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@1ca34126]
[2017-10-02 14:02:57,295]DEBUG  6660[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-02 14:02:57,295]DEBUG  6660[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-02 14:02:57,296]DEBUG  6661[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-02 14:02:57,296]DEBUG  6661[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@1ca34126] after transaction
[2017-10-02 14:02:57,296]DEBUG  6661[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-02 14:02:57,296]DEBUG  6661[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-02 14:02:57,297]DEBUG  6662[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-02 14:02:57,298] INFO  6663[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@36c8e545 testClass = CleanUpDBTestCase, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase@3f44311c, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2017-10-02 14:02:57,299]DEBUG  6664[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@36c8e545 testClass = CleanUpDBTestCase, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase@3f44311c, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-02 14:02:57,299]DEBUG  6664[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestClass(DirtiesContextTestExecutionListener.java:113) - After test class: context [[TestContext@36c8e545 testClass = CleanUpDBTestCase, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = [null], testMethod = [null], testException = [null]]], dirtiesContext [false].
[2017-10-02 14:02:57,303]DEBUG  6668[main] - org.springframework.test.context.junit4.SpringJUnit4ClassRunner.<init>(SpringJUnit4ClassRunner.java:106) - SpringJUnit4ClassRunner constructor called with [class com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest].
[2017-10-02 14:02:57,304] INFO  6669[main] - org.springframework.test.context.TestContextManager.retrieveTestExecutionListeners(TestContextManager.java:185) - @TestExecutionListeners is not present for class [class com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]: using defaults.
[2017-10-02 14:02:57,304]DEBUG  6669[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2017-10-02 14:02:57,304]DEBUG  6669[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2017-10-02 14:02:57,306]DEBUG  6671[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2017-10-02 14:02:57,306]DEBUG  6671[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2017-10-02 14:02:57,306]DEBUG  6671[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2017-10-02 14:02:57,306]DEBUG  6671[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2017-10-02 14:02:57,308]DEBUG  6673[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2017-10-02 14:02:57,309]DEBUG  6674[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2017-10-02 14:02:57,309]DEBUG  6674[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@5a568cad testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@682de030, testMethod = [null], testException = [null]]].
[2017-10-02 14:02:57,315]DEBUG  6680[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-02 14:02:57,315]DEBUG  6680[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-02 14:02:57,315]DEBUG  6680[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-02 14:02:57,315]DEBUG  6680[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-02 14:02:57,315]DEBUG  6680[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-02 14:02:57,315]DEBUG  6680[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-02 14:02:57,316]DEBUG  6681[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-02 14:02:57,316]DEBUG  6681[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-02 14:02:57,316]DEBUG  6681[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-02 14:02:57,316]DEBUG  6681[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]: AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-02 14:02:57,316]DEBUG  6681[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-02 14:02:57,317]DEBUG  6682[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-02 14:02:57,317]DEBUG  6682[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' to bean named 'customerTypeDao'
[2017-10-02 14:02:57,317]DEBUG  6682[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-02 14:02:57,317]DEBUG  6682[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-02 14:02:57,318]DEBUG  6683[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' to bean named 'dimensionDao'
[2017-10-02 14:02:57,318]DEBUG  6683[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-02 14:02:57,318]DEBUG  6683[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-02 14:02:57,318]DEBUG  6683[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' to bean named 'orderDao'
[2017-10-02 14:02:57,318]DEBUG  6683[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-02 14:02:57,319]DEBUG  6684[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-02 14:02:57,319]DEBUG  6684[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' to bean named 'orderItemDao'
[2017-10-02 14:02:57,319]DEBUG  6684[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-02 14:02:57,320]DEBUG  6685[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-02 14:02:57,320]DEBUG  6685[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' to bean named 'orderStatusDao'
[2017-10-02 14:02:57,320]DEBUG  6685[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-02 14:02:57,320]DEBUG  6685[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-02 14:02:57,320]DEBUG  6685[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' to bean named 'productDao'
[2017-10-02 14:02:57,321]DEBUG  6686[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-02 14:02:57,321]DEBUG  6686[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-02 14:02:57,321]DEBUG  6686[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' to bean named 'regionDao'
[2017-10-02 14:02:57,321]DEBUG  6686[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-02 14:02:57,322]DEBUG  6687[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-02 14:02:57,322]DEBUG  6687[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' to bean named 'roleDao'
[2017-10-02 14:02:57,322]DEBUG  6687[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-02 14:02:57,322]DEBUG  6687[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-02 14:02:57,322]DEBUG  6687[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' to bean named 'userDao'
[2017-10-02 14:02:57,323]DEBUG  6688[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-02 14:02:57,323]DEBUG  6688[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-02 14:02:57,323]DEBUG  6688[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' to bean named 'sessionFactory'
[2017-10-02 14:02:57,324]DEBUG  6689[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-02 14:02:57,324]DEBUG  6689[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'tearDown' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-02 14:02:57,325]DEBUG  6690[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-02 14:02:57,325]DEBUG  6690[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@682de030]
[2017-10-02 14:02:57,326]DEBUG  6691[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest.tearDown()
[2017-10-02 14:02:57,326]DEBUG  6691[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByID' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-02 14:02:57,326]DEBUG  6691[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest.testFindByID()
[2017-10-02 14:02:57,327]DEBUG  6692[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetStandartTypeDiscount' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-02 14:02:57,327]DEBUG  6692[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest.testGetStandartTypeDiscount()
[2017-10-02 14:02:57,327]DEBUG  6692[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetSilverTypeDiscount' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-02 14:02:57,327]DEBUG  6692[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest.testGetSilverTypeDiscount()
[2017-10-02 14:02:57,327]DEBUG  6692[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetGoldTypeDiscount' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-02 14:02:57,328]DEBUG  6693[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest.testGetGoldTypeDiscount()
[2017-10-02 14:02:57,328]DEBUG  6693[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetPlatinumTypeDiscount' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-02 14:02:57,328]DEBUG  6693[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest.testGetPlatinumTypeDiscount()
[2017-10-02 14:02:57,328]DEBUG  6693[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindAll' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-02 14:02:57,329]DEBUG  6694[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest.testFindAll()
[2017-10-02 14:02:57,329]DEBUG  6694[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByCriterions' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-02 14:02:57,329]DEBUG  6694[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest.testFindByCriterions()
[2017-10-02 14:02:57,329]DEBUG  6694[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByOneOfCriterions' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-02 14:02:57,330]DEBUG  6695[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest.testFindByOneOfCriterions()
[2017-10-02 14:02:57,330]DEBUG  6695[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testInsertOrUpdate' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-02 14:02:57,330]DEBUG  6695[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest.testInsertOrUpdate()
[2017-10-02 14:02:57,330]DEBUG  6695[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testDelete' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-02 14:02:57,330]DEBUG  6695[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest.testDelete()
[2017-10-02 14:02:57,331]DEBUG  6696[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'setUp' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-02 14:02:57,331]DEBUG  6696[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest.setUp() throws java.lang.Exception
[2017-10-02 14:02:57,331]DEBUG  6696[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testContextFile' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-02 14:02:57,332]DEBUG  6697[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.testContextFile()
[2017-10-02 14:02:57,332]DEBUG  6697[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanUser()
[2017-10-02 14:02:57,332]DEBUG  6697[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanRole()
[2017-10-02 14:02:57,332]DEBUG  6697[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanRegion()
[2017-10-02 14:02:57,332]DEBUG  6697[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanProduct()
[2017-10-02 14:02:57,332]DEBUG  6697[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrderStatus()
[2017-10-02 14:02:57,333]DEBUG  6698[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrderItem()
[2017-10-02 14:02:57,333]DEBUG  6698[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrder()
[2017-10-02 14:02:57,333]DEBUG  6698[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanDimension()
[2017-10-02 14:02:57,333]DEBUG  6698[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanCustomerType()
[2017-10-02 14:02:57,333]DEBUG  6698[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanDB()
[2017-10-02 14:02:57,334]DEBUG  6699[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:749) - Found finalize() method - using NO_OVERRIDE
[2017-10-02 14:02:57,334]DEBUG  6699[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:761) - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
[2017-10-02 14:02:57,334]DEBUG  6699[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
[2017-10-02 14:02:57,334]DEBUG  6699[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:766) - Found 'hashCode' method: public native int java.lang.Object.hashCode()
[2017-10-02 14:02:57,334]DEBUG  6699[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
[2017-10-02 14:02:57,334]DEBUG  6699[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
[2017-10-02 14:02:57,335]DEBUG  6700[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
[2017-10-02 14:02:57,335]DEBUG  6700[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2017-10-02 14:02:57,335]DEBUG  6700[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2017-10-02 14:02:57,335]DEBUG  6700[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
[2017-10-02 14:02:57,335]DEBUG  6700[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
[2017-10-02 14:02:57,335]DEBUG  6700[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
[2017-10-02 14:02:57,336]DEBUG  6701[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
[2017-10-02 14:02:57,336]DEBUG  6701[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2017-10-02 14:02:57,336]DEBUG  6701[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
[2017-10-02 14:02:57,336]DEBUG  6701[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
[2017-10-02 14:02:57,336]DEBUG  6701[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
[2017-10-02 14:02:57,336]DEBUG  6701[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
[2017-10-02 14:02:57,336]DEBUG  6701[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
[2017-10-02 14:02:57,337]DEBUG  6702[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
[2017-10-02 14:02:57,337]DEBUG  6702[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
[2017-10-02 14:02:57,337]DEBUG  6702[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
[2017-10-02 14:02:57,337]DEBUG  6702[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
[2017-10-02 14:02:57,337]DEBUG  6702[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
[2017-10-02 14:02:57,337]DEBUG  6702[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
[2017-10-02 14:02:57,338]DEBUG  6703[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
[2017-10-02 14:02:57,338]DEBUG  6703[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
[2017-10-02 14:02:57,338]DEBUG  6703[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
[2017-10-02 14:02:57,352]DEBUG  6717[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByID' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-02 14:02:57,352]DEBUG  6717[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@5a568cad testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@682de030, testMethod = testFindByID@CustomerTypeDaoTest, testException = [null]]]
[2017-10-02 14:02:57,352]DEBUG  6717[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.retrieveConfigurationAttributes(TransactionalTestExecutionListener.java:466) - Retrieved @TransactionConfiguration [@org.springframework.test.context.transaction.TransactionConfiguration(transactionManager=transactionManager, defaultRollback=true)] for test class [class com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2017-10-02 14:02:57,352]DEBUG  6717[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.retrieveConfigurationAttributes(TransactionalTestExecutionListener.java:483) - Retrieved TransactionConfigurationAttributes [[TransactionConfigurationAttributes@701ce28a transactionManagerName = 'transactionManager', defaultRollback = true]] for class [class com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2017-10-02 14:02:57,352]DEBUG  6717[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-02 14:02:57,353]DEBUG  6718[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByID]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-02 14:02:57,353]DEBUG  6718[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15069421773
[2017-10-02 14:02:57,354]DEBUG  6719[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@54c09437] for Hibernate transaction
[2017-10-02 14:02:57,354]DEBUG  6719[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@54c09437]
[2017-10-02 14:02:57,354]DEBUG  6719[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-02 14:02:57,354]DEBUG  6719[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-02 14:02:57,354]DEBUG  6719[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-02 14:02:57,354]DEBUG  6719[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5a568cad testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@682de030, testMethod = testFindByID@CustomerTypeDaoTest, testException = [null]]]
[2017-10-02 14:02:57,355] INFO  6720[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (1): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@24af5c74]; rollback [true]
[2017-10-02 14:02:57,365]DEBUG  6730[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:57,374]DEBUG  6739[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:57,374]DEBUG  6739[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-02 14:02:57,385]DEBUG  6750[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 1
[2017-10-02 14:02:57,385]DEBUG  6750[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:57,387]DEBUG  6752[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:57,387]DEBUG  6752[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:57,387]DEBUG  6752[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-02 14:02:57,388]DEBUG  6753[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 2
[2017-10-02 14:02:57,389]DEBUG  6754[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:57,389]DEBUG  6754[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:57,389]DEBUG  6754[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:57,389]DEBUG  6754[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-02 14:02:57,390]DEBUG  6755[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 3
[2017-10-02 14:02:57,390]DEBUG  6755[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:57,391]DEBUG  6756[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:57,391]DEBUG  6756[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:57,391]DEBUG  6756[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-02 14:02:57,392]DEBUG  6757[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 4
[2017-10-02 14:02:57,392]DEBUG  6757[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:57,430]DEBUG  6795[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: from com.softserveinc.edu.oms.domain.entities.CustomerType customerT where customerT.typeName = :Standard
[2017-10-02 14:02:57,452]DEBUG  6817[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  |  |  +-[IDENT] Node: 'com'
    |        |  |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
    |        |  |  |  |  |  \-[IDENT] Node: 'edu'
    |        |  |  |  |  \-[IDENT] Node: 'oms'
    |        |  |  |  \-[IDENT] Node: 'domain'
    |        |  |  \-[IDENT] Node: 'entities'
    |        |  \-[IDENT] Node: 'CustomerType'
    |        \-[ALIAS] Node: 'customerT'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'customerT'
          |  \-[IDENT] Node: 'typeName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'Standard'

[2017-10-02 14:02:57,452]DEBUG  6817[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-02 14:02:57,473]DEBUG  6838[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - select << begin [level=1, statement=select]
[2017-10-02 14:02:57,482]DEBUG  6847[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.CustomerType (customerT) -> customerty0_
[2017-10-02 14:02:57,484]DEBUG  6849[main] - org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  customerT -> customerty0_.ID
[2017-10-02 14:02:57,485]DEBUG  6850[main] - org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : typeName -> org.hibernate.type.StringType@2142ea45
[2017-10-02 14:02:57,486]DEBUG  6851[main] - org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  customerT.typeName -> customerty0_.TypeName
[2017-10-02 14:02:57,488]DEBUG  6853[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - select : finishing up [level=1, statement=select]
[2017-10-02 14:02:57,488]DEBUG  6853[main] - org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) - processQuery() :  ( SELECT ( FromClause{level=1} CustomerTypes customerty0_ ) ( where ( = ( customerty0_.TypeName customerty0_.ID typeName ) ? ) ) )
[2017-10-02 14:02:57,492]DEBUG  6857[main] - org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) - Derived SELECT clause created.
[2017-10-02 14:02:57,495]DEBUG  6860[main] - org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) - Using FROM fragment [CustomerTypes customerty0_]
[2017-10-02 14:02:57,495]DEBUG  6860[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - select >> end [level=1, statement=select]
[2017-10-02 14:02:57,496]DEBUG  6861[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerTypes)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'customerty0_.ID as ID2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=customerT,role=null,tableName=CustomerTypes,tableAlias=customerty0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.CustomerType}}}
    |  \-[SQL_TOKEN] SqlFragment: 'customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[customerT], fromElementByTableAlias=[customerty0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CustomerTypes customerty0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=customerT,role=null,tableName=CustomerTypes,tableAlias=customerty0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.CustomerType}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customerty0_.TypeName' {propertyName=typeName,dereferenceType=ALL,propertyPath=typeName,path=customerT.typeName,tableAlias=customerty0_,className=com.softserveinc.edu.oms.domain.entities.CustomerType,classAlias=customerT}
          |  +-[ALIAS_REF] IdentNode: 'customerty0_.ID' {alias=customerT, className=com.softserveinc.edu.oms.domain.entities.CustomerType, tableAlias=customerty0_}
          |  \-[IDENT] IdentNode: 'typeName' {originalText=typeName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=Standard, expectedType=org.hibernate.type.StringType@2142ea45}

[2017-10-02 14:02:57,496]DEBUG  6861[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-02 14:02:57,505]DEBUG  6870[main] - org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:241) - HQL: from com.softserveinc.edu.oms.domain.entities.CustomerType customerT where customerT.typeName = :Standard
[2017-10-02 14:02:57,505]DEBUG  6870[main] - org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:242) - SQL: select customerty0_.ID as ID2_, customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_ from CustomerTypes customerty0_ where customerty0_.TypeName=?
[2017-10-02 14:02:57,505]DEBUG  6870[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-02 14:02:57,514]DEBUG  6879[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:57,515]DEBUG  6880[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:57,516]DEBUG  6881[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:57,517]DEBUG  6882[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:57,517]DEBUG  6882[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:57,518]DEBUG  6883[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=3, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,518]DEBUG  6883[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=4, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,518]DEBUG  6883[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=2, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,518]DEBUG  6883[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=1, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,520]DEBUG  6885[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:57,520]DEBUG  6885[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select customerty0_.ID as ID2_, customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_ from CustomerTypes customerty0_ where customerty0_.TypeName=?
[2017-10-02 14:02:57,521]DEBUG  6886[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-02 14:02:57,524]DEBUG  6889[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.CustomerType#1]
[2017-10-02 14:02:57,524]DEBUG  6889[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-02 14:02:57,524]DEBUG  6889[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:57,525]DEBUG  6890[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-02 14:02:57,528]DEBUG  6893[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: Delete From com.softserveinc.edu.oms.domain.entities.OrderItem
[2017-10-02 14:02:57,530]DEBUG  6895[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[DELETE] Node: 'Delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[DOT] Node: '.'
             |  |  |  |  +-[DOT] Node: '.'
             |  |  |  |  |  +-[IDENT] Node: 'com'
             |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
             |  |  |  |  \-[IDENT] Node: 'edu'
             |  |  |  \-[IDENT] Node: 'oms'
             |  |  \-[IDENT] Node: 'domain'
             |  \-[IDENT] Node: 'entities'
             \-[IDENT] Node: 'OrderItem'

[2017-10-02 14:02:57,531]DEBUG  6896[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-02 14:02:57,532]DEBUG  6897[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - delete << begin [level=1, statement=delete]
[2017-10-02 14:02:57,532]DEBUG  6897[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.OrderItem (no alias) -> orderitem0_
[2017-10-02 14:02:57,533]DEBUG  6898[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - delete : finishing up [level=1, statement=delete]
[2017-10-02 14:02:57,533]DEBUG  6898[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - delete >> end [level=1, statement=delete]
[2017-10-02 14:02:57,533]DEBUG  6898[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'Delete'  querySpaces (OrderItems)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[orderitem0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'OrderItems' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=OrderItems,tableAlias=orderitem0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.OrderItem}}

[2017-10-02 14:02:57,534]DEBUG  6899[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-02 14:02:57,537]DEBUG  6902[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-02 14:02:57,537]DEBUG  6902[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:57,537]DEBUG  6902[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:57,538]DEBUG  6903[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:57,539]DEBUG  6904[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:57,539]DEBUG  6904[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:57,539]DEBUG  6904[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=3, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,539]DEBUG  6904[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=4, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,540]DEBUG  6905[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=2, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,540]DEBUG  6905[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=1, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,541]DEBUG  6906[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:57,542]DEBUG  6907[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-02 14:02:57,543]DEBUG  6908[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:57,544]DEBUG  6909[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: Delete From com.softserveinc.edu.oms.domain.entities.Dimension
[2017-10-02 14:02:57,546]DEBUG  6911[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[DELETE] Node: 'Delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[DOT] Node: '.'
             |  |  |  |  +-[DOT] Node: '.'
             |  |  |  |  |  +-[IDENT] Node: 'com'
             |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
             |  |  |  |  \-[IDENT] Node: 'edu'
             |  |  |  \-[IDENT] Node: 'oms'
             |  |  \-[IDENT] Node: 'domain'
             |  \-[IDENT] Node: 'entities'
             \-[IDENT] Node: 'Dimension'

[2017-10-02 14:02:57,547]DEBUG  6912[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-02 14:02:57,547]DEBUG  6912[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - delete << begin [level=1, statement=delete]
[2017-10-02 14:02:57,548]DEBUG  6913[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.Dimension (no alias) -> dimension0_
[2017-10-02 14:02:57,548]DEBUG  6913[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - delete : finishing up [level=1, statement=delete]
[2017-10-02 14:02:57,548]DEBUG  6913[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - delete >> end [level=1, statement=delete]
[2017-10-02 14:02:57,549]DEBUG  6914[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'Delete'  querySpaces (Dimensions)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[dimension0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Dimensions' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Dimensions,tableAlias=dimension0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.Dimension}}

[2017-10-02 14:02:57,549]DEBUG  6914[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-02 14:02:57,550]DEBUG  6915[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-02 14:02:57,550]DEBUG  6915[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:57,550]DEBUG  6915[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:57,550]DEBUG  6915[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:57,551]DEBUG  6916[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:57,551]DEBUG  6916[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:57,551]DEBUG  6916[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=3, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,551]DEBUG  6916[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=4, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,551]DEBUG  6916[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=2, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,552]DEBUG  6917[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=1, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,552]DEBUG  6917[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:57,552]DEBUG  6917[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-02 14:02:57,553]DEBUG  6918[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:57,554]DEBUG  6919[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: Delete From com.softserveinc.edu.oms.domain.entities.Product
[2017-10-02 14:02:57,556]DEBUG  6921[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[DELETE] Node: 'Delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[DOT] Node: '.'
             |  |  |  |  +-[DOT] Node: '.'
             |  |  |  |  |  +-[IDENT] Node: 'com'
             |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
             |  |  |  |  \-[IDENT] Node: 'edu'
             |  |  |  \-[IDENT] Node: 'oms'
             |  |  \-[IDENT] Node: 'domain'
             |  \-[IDENT] Node: 'entities'
             \-[IDENT] Node: 'Product'

[2017-10-02 14:02:57,556]DEBUG  6921[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-02 14:02:57,557]DEBUG  6922[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - delete << begin [level=1, statement=delete]
[2017-10-02 14:02:57,557]DEBUG  6922[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.Product (no alias) -> product0_
[2017-10-02 14:02:57,557]DEBUG  6922[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - delete : finishing up [level=1, statement=delete]
[2017-10-02 14:02:57,558]DEBUG  6923[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - delete >> end [level=1, statement=delete]
[2017-10-02 14:02:57,558]DEBUG  6923[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'Delete'  querySpaces (Products)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[product0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Products' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Products,tableAlias=product0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.Product}}

[2017-10-02 14:02:57,558]DEBUG  6923[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-02 14:02:57,559]DEBUG  6924[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-02 14:02:57,559]DEBUG  6924[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:57,559]DEBUG  6924[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:57,560]DEBUG  6925[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:57,560]DEBUG  6925[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:57,560]DEBUG  6925[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:57,560]DEBUG  6925[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=3, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,561]DEBUG  6926[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=4, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,561]DEBUG  6926[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=2, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,561]DEBUG  6926[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=1, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,561]DEBUG  6926[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:57,562]DEBUG  6927[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-02 14:02:57,562]DEBUG  6927[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:57,563]DEBUG  6928[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: Delete From com.softserveinc.edu.oms.domain.entities.Order
[2017-10-02 14:02:57,564]DEBUG  6929[main] - org.hibernate.hql.ast.HqlParser.weakKeywords(HqlParser.java:340) - weakKeywords() : new LT(1) token - ["Order",<126> previously: <41>,line=1,col=54,possibleID=true]
[2017-10-02 14:02:57,566]DEBUG  6931[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[DELETE] Node: 'Delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[DOT] Node: '.'
             |  |  |  |  +-[DOT] Node: '.'
             |  |  |  |  |  +-[IDENT] Node: 'com'
             |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
             |  |  |  |  \-[IDENT] Node: 'edu'
             |  |  |  \-[IDENT] Node: 'oms'
             |  |  \-[IDENT] Node: 'domain'
             |  \-[IDENT] Node: 'entities'
             \-[IDENT] Node: 'Order'

[2017-10-02 14:02:57,566]DEBUG  6931[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-02 14:02:57,566]DEBUG  6931[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - delete << begin [level=1, statement=delete]
[2017-10-02 14:02:57,567]DEBUG  6932[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.Order (no alias) -> order0_
[2017-10-02 14:02:57,567]DEBUG  6932[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - delete : finishing up [level=1, statement=delete]
[2017-10-02 14:02:57,567]DEBUG  6932[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - delete >> end [level=1, statement=delete]
[2017-10-02 14:02:57,568]DEBUG  6933[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'Delete'  querySpaces (Orders)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[order0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Orders' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Orders,tableAlias=order0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.Order}}

[2017-10-02 14:02:57,568]DEBUG  6933[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-02 14:02:57,568]DEBUG  6933[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-02 14:02:57,569]DEBUG  6934[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:57,569]DEBUG  6934[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:57,569]DEBUG  6934[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:57,569]DEBUG  6934[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:57,570]DEBUG  6935[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:57,570]DEBUG  6935[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=3, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,570]DEBUG  6935[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=4, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,570]DEBUG  6935[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=2, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,570]DEBUG  6935[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=1, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,570]DEBUG  6935[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:57,571]DEBUG  6936[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-02 14:02:57,571]DEBUG  6936[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:57,572]DEBUG  6937[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: Delete From com.softserveinc.edu.oms.domain.entities.OrderStatus
[2017-10-02 14:02:57,574]DEBUG  6939[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[DELETE] Node: 'Delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[DOT] Node: '.'
             |  |  |  |  +-[DOT] Node: '.'
             |  |  |  |  |  +-[IDENT] Node: 'com'
             |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
             |  |  |  |  \-[IDENT] Node: 'edu'
             |  |  |  \-[IDENT] Node: 'oms'
             |  |  \-[IDENT] Node: 'domain'
             |  \-[IDENT] Node: 'entities'
             \-[IDENT] Node: 'OrderStatus'

[2017-10-02 14:02:57,575]DEBUG  6940[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-02 14:02:57,575]DEBUG  6940[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - delete << begin [level=1, statement=delete]
[2017-10-02 14:02:57,575]DEBUG  6940[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.OrderStatus (no alias) -> orderstatu0_
[2017-10-02 14:02:57,576]DEBUG  6941[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - delete : finishing up [level=1, statement=delete]
[2017-10-02 14:02:57,576]DEBUG  6941[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - delete >> end [level=1, statement=delete]
[2017-10-02 14:02:57,576]DEBUG  6941[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'Delete'  querySpaces (OrderStatuses)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[orderstatu0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'OrderStatuses' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=OrderStatuses,tableAlias=orderstatu0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.OrderStatus}}

[2017-10-02 14:02:57,577]DEBUG  6942[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-02 14:02:57,577]DEBUG  6942[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-02 14:02:57,577]DEBUG  6942[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:57,577]DEBUG  6942[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:57,578]DEBUG  6943[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:57,578]DEBUG  6943[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:57,578]DEBUG  6943[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:57,578]DEBUG  6943[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=3, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,578]DEBUG  6943[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=4, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,579]DEBUG  6944[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=2, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,579]DEBUG  6944[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=1, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,579]DEBUG  6944[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:57,579]DEBUG  6944[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-02 14:02:57,580]DEBUG  6945[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:57,581]DEBUG  6946[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: Delete From com.softserveinc.edu.oms.domain.entities.User
[2017-10-02 14:02:57,583]DEBUG  6948[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[DELETE] Node: 'Delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[DOT] Node: '.'
             |  |  |  |  +-[DOT] Node: '.'
             |  |  |  |  |  +-[IDENT] Node: 'com'
             |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
             |  |  |  |  \-[IDENT] Node: 'edu'
             |  |  |  \-[IDENT] Node: 'oms'
             |  |  \-[IDENT] Node: 'domain'
             |  \-[IDENT] Node: 'entities'
             \-[IDENT] Node: 'User'

[2017-10-02 14:02:57,583]DEBUG  6948[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-02 14:02:57,583]DEBUG  6948[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - delete << begin [level=1, statement=delete]
[2017-10-02 14:02:57,584]DEBUG  6949[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.User (no alias) -> user0_
[2017-10-02 14:02:57,584]DEBUG  6949[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - delete : finishing up [level=1, statement=delete]
[2017-10-02 14:02:57,584]DEBUG  6949[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - delete >> end [level=1, statement=delete]
[2017-10-02 14:02:57,584]DEBUG  6949[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'Delete'  querySpaces (Users)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Users' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Users,tableAlias=user0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.User}}

[2017-10-02 14:02:57,585]DEBUG  6950[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-02 14:02:57,585]DEBUG  6950[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-02 14:02:57,585]DEBUG  6950[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:57,585]DEBUG  6950[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:57,586]DEBUG  6951[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:57,586]DEBUG  6951[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:57,586]DEBUG  6951[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:57,586]DEBUG  6951[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=3, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,586]DEBUG  6951[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=4, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,587]DEBUG  6952[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=2, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,587]DEBUG  6952[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=1, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,587]DEBUG  6952[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:57,587]DEBUG  6952[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-02 14:02:57,588]DEBUG  6953[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:57,589]DEBUG  6954[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: Delete From com.softserveinc.edu.oms.domain.entities.CustomerType
[2017-10-02 14:02:57,591]DEBUG  6956[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[DELETE] Node: 'Delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[DOT] Node: '.'
             |  |  |  |  +-[DOT] Node: '.'
             |  |  |  |  |  +-[IDENT] Node: 'com'
             |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
             |  |  |  |  \-[IDENT] Node: 'edu'
             |  |  |  \-[IDENT] Node: 'oms'
             |  |  \-[IDENT] Node: 'domain'
             |  \-[IDENT] Node: 'entities'
             \-[IDENT] Node: 'CustomerType'

[2017-10-02 14:02:57,591]DEBUG  6956[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-02 14:02:57,592]DEBUG  6957[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - delete << begin [level=1, statement=delete]
[2017-10-02 14:02:57,592]DEBUG  6957[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.CustomerType (no alias) -> customerty0_
[2017-10-02 14:02:57,592]DEBUG  6957[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - delete : finishing up [level=1, statement=delete]
[2017-10-02 14:02:57,592]DEBUG  6957[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - delete >> end [level=1, statement=delete]
[2017-10-02 14:02:57,593]DEBUG  6958[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'Delete'  querySpaces (CustomerTypes)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[customerty0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'CustomerTypes' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=CustomerTypes,tableAlias=customerty0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.CustomerType}}

[2017-10-02 14:02:57,593]DEBUG  6958[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-02 14:02:57,593]DEBUG  6958[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-02 14:02:57,594]DEBUG  6959[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:57,594]DEBUG  6959[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:57,594]DEBUG  6959[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:57,594]DEBUG  6959[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:57,595]DEBUG  6960[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:57,595]DEBUG  6960[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=3, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,595]DEBUG  6960[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=4, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,595]DEBUG  6960[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=2, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,595]DEBUG  6960[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=1, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,595]DEBUG  6960[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:57,596]DEBUG  6961[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-02 14:02:57,596]DEBUG  6961[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:57,597]DEBUG  6962[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: Delete From com.softserveinc.edu.oms.domain.entities.Region
[2017-10-02 14:02:57,599]DEBUG  6964[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[DELETE] Node: 'Delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[DOT] Node: '.'
             |  |  |  |  +-[DOT] Node: '.'
             |  |  |  |  |  +-[IDENT] Node: 'com'
             |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
             |  |  |  |  \-[IDENT] Node: 'edu'
             |  |  |  \-[IDENT] Node: 'oms'
             |  |  \-[IDENT] Node: 'domain'
             |  \-[IDENT] Node: 'entities'
             \-[IDENT] Node: 'Region'

[2017-10-02 14:02:57,599]DEBUG  6964[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-02 14:02:57,600]DEBUG  6965[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - delete << begin [level=1, statement=delete]
[2017-10-02 14:02:57,600]DEBUG  6965[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.Region (no alias) -> region0_
[2017-10-02 14:02:57,600]DEBUG  6965[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - delete : finishing up [level=1, statement=delete]
[2017-10-02 14:02:57,600]DEBUG  6965[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - delete >> end [level=1, statement=delete]
[2017-10-02 14:02:57,601]DEBUG  6966[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'Delete'  querySpaces (Regions)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[region0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Regions' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Regions,tableAlias=region0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.Region}}

[2017-10-02 14:02:57,601]DEBUG  6966[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-02 14:02:57,601]DEBUG  6966[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-02 14:02:57,602]DEBUG  6967[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:57,602]DEBUG  6967[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:57,602]DEBUG  6967[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:57,602]DEBUG  6967[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:57,602]DEBUG  6967[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:57,603]DEBUG  6968[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=3, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,603]DEBUG  6968[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=4, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,603]DEBUG  6968[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=2, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,603]DEBUG  6968[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=1, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,603]DEBUG  6968[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:57,603]DEBUG  6968[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-02 14:02:57,604]DEBUG  6969[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:57,605]DEBUG  6970[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: Delete From com.softserveinc.edu.oms.domain.entities.Role
[2017-10-02 14:02:57,607]DEBUG  6972[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[DELETE] Node: 'Delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[DOT] Node: '.'
             |  |  |  |  +-[DOT] Node: '.'
             |  |  |  |  |  +-[IDENT] Node: 'com'
             |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
             |  |  |  |  \-[IDENT] Node: 'edu'
             |  |  |  \-[IDENT] Node: 'oms'
             |  |  \-[IDENT] Node: 'domain'
             |  \-[IDENT] Node: 'entities'
             \-[IDENT] Node: 'Role'

[2017-10-02 14:02:57,607]DEBUG  6972[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-02 14:02:57,608]DEBUG  6973[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - delete << begin [level=1, statement=delete]
[2017-10-02 14:02:57,608]DEBUG  6973[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.Role (no alias) -> role0_
[2017-10-02 14:02:57,608]DEBUG  6973[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - delete : finishing up [level=1, statement=delete]
[2017-10-02 14:02:57,608]DEBUG  6973[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - delete >> end [level=1, statement=delete]
[2017-10-02 14:02:57,609]DEBUG  6974[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'Delete'  querySpaces (Roles)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[role0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Roles' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Roles,tableAlias=role0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.Role}}

[2017-10-02 14:02:57,609]DEBUG  6974[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-02 14:02:57,609]DEBUG  6974[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-02 14:02:57,610]DEBUG  6975[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:57,610]DEBUG  6975[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:57,610]DEBUG  6975[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:57,610]DEBUG  6975[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:57,610]DEBUG  6975[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:57,611]DEBUG  6976[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=3, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,611]DEBUG  6976[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=4, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,611]DEBUG  6976[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=2, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,611]DEBUG  6976[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=1, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,611]DEBUG  6976[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:57,612]DEBUG  6977[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-02 14:02:57,612]DEBUG  6977[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:57,612]DEBUG  6977[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5a568cad testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@682de030, testMethod = testFindByID@CustomerTypeDaoTest, testException = [null]]]
[2017-10-02 14:02:57,613]DEBUG  6978[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-02 14:02:57,613]DEBUG  6978[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@54c09437]
[2017-10-02 14:02:57,613]DEBUG  6978[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-02 14:02:57,697]DEBUG  7062[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-02 14:02:57,698]DEBUG  7063[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-02 14:02:57,698]DEBUG  7063[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@54c09437] after transaction
[2017-10-02 14:02:57,698]DEBUG  7063[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-02 14:02:57,699]DEBUG  7064[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-02 14:02:57,699]DEBUG  7064[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-02 14:02:57,700] INFO  7065[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@5a568cad testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@682de030, testMethod = testFindByID@CustomerTypeDaoTest, testException = [null]]]
[2017-10-02 14:02:57,701]DEBUG  7066[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@5a568cad testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@682de030, testMethod = testFindByID@CustomerTypeDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-02 14:02:57,702]DEBUG  7067[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2017-10-02 14:02:57,703]DEBUG  7068[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2017-10-02 14:02:57,703]DEBUG  7068[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@5a568cad testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@790a9f69, testMethod = [null], testException = [null]]].
[2017-10-02 14:02:57,704]DEBUG  7069[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-02 14:02:57,704]DEBUG  7069[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-02 14:02:57,705]DEBUG  7070[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-02 14:02:57,705]DEBUG  7070[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-02 14:02:57,706]DEBUG  7071[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-02 14:02:57,706]DEBUG  7071[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-02 14:02:57,707]DEBUG  7072[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-02 14:02:57,707]DEBUG  7072[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-02 14:02:57,716]DEBUG  7081[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-02 14:02:57,717]DEBUG  7082[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-02 14:02:57,717]DEBUG  7082[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-02 14:02:57,718]DEBUG  7083[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-02 14:02:57,718]DEBUG  7083[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-02 14:02:57,718]DEBUG  7083[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-02 14:02:57,719]DEBUG  7084[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-02 14:02:57,719]DEBUG  7084[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-02 14:02:57,719]DEBUG  7084[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-02 14:02:57,720]DEBUG  7085[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-02 14:02:57,720]DEBUG  7085[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-02 14:02:57,720]DEBUG  7085[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-02 14:02:57,721]DEBUG  7086[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-02 14:02:57,721]DEBUG  7086[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-02 14:02:57,722]DEBUG  7087[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@790a9f69]
[2017-10-02 14:02:57,727]DEBUG  7092[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetStandartTypeDiscount' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-02 14:02:57,727]DEBUG  7092[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@5a568cad testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@790a9f69, testMethod = testGetStandartTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2017-10-02 14:02:57,727]DEBUG  7092[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-02 14:02:57,728]DEBUG  7093[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testGetStandartTypeDiscount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-02 14:02:57,728]DEBUG  7093[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15069421777
[2017-10-02 14:02:57,728]DEBUG  7093[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@515b0e63] for Hibernate transaction
[2017-10-02 14:02:57,728]DEBUG  7093[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@515b0e63]
[2017-10-02 14:02:57,729]DEBUG  7094[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-02 14:02:57,729]DEBUG  7094[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-02 14:02:57,729]DEBUG  7094[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-02 14:02:57,729]DEBUG  7094[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5a568cad testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@790a9f69, testMethod = testGetStandartTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2017-10-02 14:02:57,729] INFO  7094[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (2): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@24af5c74]; rollback [true]
[2017-10-02 14:02:57,729]DEBUG  7094[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:57,730]DEBUG  7095[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:57,730]DEBUG  7095[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-02 14:02:57,732]DEBUG  7097[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 5
[2017-10-02 14:02:57,732]DEBUG  7097[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:57,732]DEBUG  7097[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:57,733]DEBUG  7098[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:57,733]DEBUG  7098[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-02 14:02:57,734]DEBUG  7099[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 6
[2017-10-02 14:02:57,734]DEBUG  7099[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:57,735]DEBUG  7100[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:57,735]DEBUG  7100[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:57,735]DEBUG  7100[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-02 14:02:57,736]DEBUG  7101[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 7
[2017-10-02 14:02:57,736]DEBUG  7101[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:57,736]DEBUG  7101[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:57,737]DEBUG  7102[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:57,737]DEBUG  7102[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-02 14:02:57,738]DEBUG  7103[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 8
[2017-10-02 14:02:57,738]DEBUG  7103[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:57,738]DEBUG  7103[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:57,738]DEBUG  7103[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:57,739]DEBUG  7104[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:57,739]DEBUG  7104[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:57,739]DEBUG  7104[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:57,739]DEBUG  7104[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=5, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,739]DEBUG  7104[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=6, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,740]DEBUG  7105[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=7, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,740]DEBUG  7105[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=8, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,740]DEBUG  7105[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:57,740]DEBUG  7105[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select customerty0_.ID as ID2_, customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_ from CustomerTypes customerty0_ where customerty0_.TypeName=?
[2017-10-02 14:02:57,741]DEBUG  7106[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-02 14:02:57,742]DEBUG  7107[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.CustomerType#5]
[2017-10-02 14:02:57,742]DEBUG  7107[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-02 14:02:57,742]DEBUG  7107[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:57,742]DEBUG  7107[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-02 14:02:57,742]DEBUG  7107[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:57,743]DEBUG  7108[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:57,743]DEBUG  7108[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:57,743]DEBUG  7108[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:57,743]DEBUG  7108[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:57,743]DEBUG  7108[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=5, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,743]DEBUG  7108[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=6, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,744]DEBUG  7109[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=7, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,744]DEBUG  7109[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=8, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,744]DEBUG  7109[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:57,744]DEBUG  7109[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-02 14:02:57,745]DEBUG  7110[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:57,745]DEBUG  7110[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:57,745]DEBUG  7110[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:57,745]DEBUG  7110[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:57,746]DEBUG  7111[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:57,746]DEBUG  7111[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:57,746]DEBUG  7111[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=5, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,746]DEBUG  7111[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=6, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,746]DEBUG  7111[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=7, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,747]DEBUG  7112[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=8, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,747]DEBUG  7112[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:57,747]DEBUG  7112[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-02 14:02:57,747]DEBUG  7112[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:57,748]DEBUG  7113[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:57,748]DEBUG  7113[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:57,748]DEBUG  7113[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:57,748]DEBUG  7113[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:57,749]DEBUG  7114[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:57,749]DEBUG  7114[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=5, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,749]DEBUG  7114[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=6, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,749]DEBUG  7114[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=7, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,749]DEBUG  7114[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=8, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,749]DEBUG  7114[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:57,750]DEBUG  7115[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-02 14:02:57,750]DEBUG  7115[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:57,750]DEBUG  7115[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:57,751]DEBUG  7116[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:57,751]DEBUG  7116[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:57,751]DEBUG  7116[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:57,751]DEBUG  7116[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:57,751]DEBUG  7116[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=5, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,751]DEBUG  7116[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=6, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,752]DEBUG  7117[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=7, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,752]DEBUG  7117[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=8, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,752]DEBUG  7117[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:57,752]DEBUG  7117[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-02 14:02:57,753]DEBUG  7118[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:57,753]DEBUG  7118[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:57,753]DEBUG  7118[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:57,754]DEBUG  7119[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:57,754]DEBUG  7119[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:57,754]DEBUG  7119[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:57,754]DEBUG  7119[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=5, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,754]DEBUG  7119[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=6, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,755]DEBUG  7120[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=7, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,755]DEBUG  7120[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=8, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,755]DEBUG  7120[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:57,755]DEBUG  7120[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-02 14:02:57,756]DEBUG  7121[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:57,756]DEBUG  7121[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:57,756]DEBUG  7121[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:57,756]DEBUG  7121[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:57,757]DEBUG  7122[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:57,758]DEBUG  7123[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:57,758]DEBUG  7123[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=5, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,758]DEBUG  7123[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=6, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,758]DEBUG  7123[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=7, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,758]DEBUG  7123[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=8, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,759]DEBUG  7124[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:57,759]DEBUG  7124[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-02 14:02:57,759]DEBUG  7124[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:57,760]DEBUG  7125[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:57,760]DEBUG  7125[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:57,760]DEBUG  7125[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:57,760]DEBUG  7125[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:57,760]DEBUG  7125[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:57,761]DEBUG  7126[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=5, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,761]DEBUG  7126[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=6, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,761]DEBUG  7126[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=7, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,761]DEBUG  7126[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=8, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,761]DEBUG  7126[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:57,762]DEBUG  7127[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-02 14:02:57,762]DEBUG  7127[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:57,762]DEBUG  7127[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:57,763]DEBUG  7128[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:57,763]DEBUG  7128[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:57,763]DEBUG  7128[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:57,763]DEBUG  7128[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:57,763]DEBUG  7128[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=5, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,763]DEBUG  7128[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=6, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,764]DEBUG  7129[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=7, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,764]DEBUG  7129[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=8, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,764]DEBUG  7129[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:57,764]DEBUG  7129[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-02 14:02:57,765]DEBUG  7130[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:57,765]DEBUG  7130[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:57,765]DEBUG  7130[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:57,773]DEBUG  7138[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:57,773]DEBUG  7138[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:57,773]DEBUG  7138[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:57,773]DEBUG  7138[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=5, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,774]DEBUG  7139[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=6, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,775]DEBUG  7140[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=7, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,775]DEBUG  7140[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=8, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,775]DEBUG  7140[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:57,775]DEBUG  7140[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-02 14:02:57,776]DEBUG  7141[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:57,776]DEBUG  7141[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5a568cad testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@790a9f69, testMethod = testGetStandartTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2017-10-02 14:02:57,776]DEBUG  7141[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-02 14:02:57,776]DEBUG  7141[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@515b0e63]
[2017-10-02 14:02:57,776]DEBUG  7141[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-02 14:02:57,822]DEBUG  7187[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-02 14:02:57,822]DEBUG  7187[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-02 14:02:57,822]DEBUG  7187[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@515b0e63] after transaction
[2017-10-02 14:02:57,822]DEBUG  7187[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-02 14:02:57,823]DEBUG  7188[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-02 14:02:57,823]DEBUG  7188[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-02 14:02:57,823] INFO  7188[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@5a568cad testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@790a9f69, testMethod = testGetStandartTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2017-10-02 14:02:57,824]DEBUG  7189[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@5a568cad testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@790a9f69, testMethod = testGetStandartTypeDiscount@CustomerTypeDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-02 14:02:57,824]DEBUG  7189[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2017-10-02 14:02:57,824]DEBUG  7189[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2017-10-02 14:02:57,825]DEBUG  7190[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@5a568cad testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@18e0a18e, testMethod = [null], testException = [null]]].
[2017-10-02 14:02:57,825]DEBUG  7190[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-02 14:02:57,825]DEBUG  7190[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-02 14:02:57,825]DEBUG  7190[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-02 14:02:57,825]DEBUG  7190[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-02 14:02:57,825]DEBUG  7190[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-02 14:02:57,825]DEBUG  7190[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-02 14:02:57,826]DEBUG  7191[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-02 14:02:57,826]DEBUG  7191[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-02 14:02:57,826]DEBUG  7191[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-02 14:02:57,826]DEBUG  7191[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-02 14:02:57,826]DEBUG  7191[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-02 14:02:57,826]DEBUG  7191[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-02 14:02:57,826]DEBUG  7191[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-02 14:02:57,826]DEBUG  7191[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-02 14:02:57,827]DEBUG  7192[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-02 14:02:57,827]DEBUG  7192[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-02 14:02:57,827]DEBUG  7192[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-02 14:02:57,827]DEBUG  7192[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-02 14:02:57,827]DEBUG  7192[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-02 14:02:57,827]DEBUG  7192[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-02 14:02:57,827]DEBUG  7192[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-02 14:02:57,828]DEBUG  7193[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-02 14:02:57,828]DEBUG  7193[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@18e0a18e]
[2017-10-02 14:02:57,828]DEBUG  7193[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetSilverTypeDiscount' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-02 14:02:57,828]DEBUG  7193[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@5a568cad testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@18e0a18e, testMethod = testGetSilverTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2017-10-02 14:02:57,828]DEBUG  7193[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-02 14:02:57,829]DEBUG  7194[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testGetSilverTypeDiscount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-02 14:02:57,829]DEBUG  7194[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15069421778
[2017-10-02 14:02:57,829]DEBUG  7194[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@7ac7853b] for Hibernate transaction
[2017-10-02 14:02:57,830]DEBUG  7195[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7ac7853b]
[2017-10-02 14:02:57,830]DEBUG  7195[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-02 14:02:57,830]DEBUG  7195[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-02 14:02:57,830]DEBUG  7195[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-02 14:02:57,830]DEBUG  7195[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5a568cad testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@18e0a18e, testMethod = testGetSilverTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2017-10-02 14:02:57,830] INFO  7195[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (3): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@24af5c74]; rollback [true]
[2017-10-02 14:02:57,830]DEBUG  7195[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:57,831]DEBUG  7196[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:57,831]DEBUG  7196[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-02 14:02:57,832]DEBUG  7197[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 9
[2017-10-02 14:02:57,832]DEBUG  7197[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:57,832]DEBUG  7197[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:57,832]DEBUG  7197[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:57,833]DEBUG  7198[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-02 14:02:57,833]DEBUG  7198[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 10
[2017-10-02 14:02:57,833]DEBUG  7198[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:57,833]DEBUG  7198[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:57,834]DEBUG  7199[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:57,834]DEBUG  7199[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-02 14:02:57,834]DEBUG  7199[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 11
[2017-10-02 14:02:57,834]DEBUG  7199[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:57,835]DEBUG  7200[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:57,835]DEBUG  7200[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:57,835]DEBUG  7200[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-02 14:02:57,836]DEBUG  7201[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 12
[2017-10-02 14:02:57,836]DEBUG  7201[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:57,836]DEBUG  7201[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: from com.softserveinc.edu.oms.domain.entities.CustomerType customerT where customerT.typeName = :Silver
[2017-10-02 14:02:57,839]DEBUG  7204[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  |  |  +-[IDENT] Node: 'com'
    |        |  |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
    |        |  |  |  |  |  \-[IDENT] Node: 'edu'
    |        |  |  |  |  \-[IDENT] Node: 'oms'
    |        |  |  |  \-[IDENT] Node: 'domain'
    |        |  |  \-[IDENT] Node: 'entities'
    |        |  \-[IDENT] Node: 'CustomerType'
    |        \-[ALIAS] Node: 'customerT'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'customerT'
          |  \-[IDENT] Node: 'typeName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'Silver'

[2017-10-02 14:02:57,839]DEBUG  7204[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-02 14:02:57,839]DEBUG  7204[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - select << begin [level=1, statement=select]
[2017-10-02 14:02:57,840]DEBUG  7205[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.CustomerType (customerT) -> customerty0_
[2017-10-02 14:02:57,840]DEBUG  7205[main] - org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  customerT -> customerty0_.ID
[2017-10-02 14:02:57,840]DEBUG  7205[main] - org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : typeName -> org.hibernate.type.StringType@2142ea45
[2017-10-02 14:02:57,840]DEBUG  7205[main] - org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  customerT.typeName -> customerty0_.TypeName
[2017-10-02 14:02:57,840]DEBUG  7205[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - select : finishing up [level=1, statement=select]
[2017-10-02 14:02:57,841]DEBUG  7206[main] - org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) - processQuery() :  ( SELECT ( FromClause{level=1} CustomerTypes customerty0_ ) ( where ( = ( customerty0_.TypeName customerty0_.ID typeName ) ? ) ) )
[2017-10-02 14:02:57,841]DEBUG  7206[main] - org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) - Derived SELECT clause created.
[2017-10-02 14:02:57,841]DEBUG  7206[main] - org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) - Using FROM fragment [CustomerTypes customerty0_]
[2017-10-02 14:02:57,841]DEBUG  7206[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - select >> end [level=1, statement=select]
[2017-10-02 14:02:57,842]DEBUG  7207[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerTypes)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'customerty0_.ID as ID2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=customerT,role=null,tableName=CustomerTypes,tableAlias=customerty0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.CustomerType}}}
    |  \-[SQL_TOKEN] SqlFragment: 'customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[customerT], fromElementByTableAlias=[customerty0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CustomerTypes customerty0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=customerT,role=null,tableName=CustomerTypes,tableAlias=customerty0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.CustomerType}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customerty0_.TypeName' {propertyName=typeName,dereferenceType=ALL,propertyPath=typeName,path=customerT.typeName,tableAlias=customerty0_,className=com.softserveinc.edu.oms.domain.entities.CustomerType,classAlias=customerT}
          |  +-[ALIAS_REF] IdentNode: 'customerty0_.ID' {alias=customerT, className=com.softserveinc.edu.oms.domain.entities.CustomerType, tableAlias=customerty0_}
          |  \-[IDENT] IdentNode: 'typeName' {originalText=typeName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=Silver, expectedType=org.hibernate.type.StringType@2142ea45}

[2017-10-02 14:02:57,842]DEBUG  7207[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-02 14:02:57,842]DEBUG  7207[main] - org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:241) - HQL: from com.softserveinc.edu.oms.domain.entities.CustomerType customerT where customerT.typeName = :Silver
[2017-10-02 14:02:57,842]DEBUG  7207[main] - org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:242) - SQL: select customerty0_.ID as ID2_, customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_ from CustomerTypes customerty0_ where customerty0_.TypeName=?
[2017-10-02 14:02:57,842]DEBUG  7207[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-02 14:02:57,843]DEBUG  7208[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:57,843]DEBUG  7208[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:57,843]DEBUG  7208[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:57,843]DEBUG  7208[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:57,844]DEBUG  7209[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:57,844]DEBUG  7209[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=11, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,844]DEBUG  7209[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=12, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,844]DEBUG  7209[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=9, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,844]DEBUG  7209[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=10, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,844]DEBUG  7209[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:57,844]DEBUG  7209[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select customerty0_.ID as ID2_, customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_ from CustomerTypes customerty0_ where customerty0_.TypeName=?
[2017-10-02 14:02:57,845]DEBUG  7210[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-02 14:02:57,846]DEBUG  7211[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.CustomerType#10]
[2017-10-02 14:02:57,846]DEBUG  7211[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-02 14:02:57,846]DEBUG  7211[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:57,846]DEBUG  7211[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-02 14:02:57,846]DEBUG  7211[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:57,847]DEBUG  7212[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:57,847]DEBUG  7212[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:57,847]DEBUG  7212[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:57,847]DEBUG  7212[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:57,847]DEBUG  7212[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=11, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,847]DEBUG  7212[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=12, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,848]DEBUG  7213[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=9, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,848]DEBUG  7213[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=10, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,848]DEBUG  7213[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:57,848]DEBUG  7213[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-02 14:02:57,848]DEBUG  7213[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:57,849]DEBUG  7214[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:57,849]DEBUG  7214[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:57,849]DEBUG  7214[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:57,849]DEBUG  7214[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:57,849]DEBUG  7214[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:57,849]DEBUG  7214[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=11, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,849]DEBUG  7214[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=12, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,850]DEBUG  7215[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=9, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,850]DEBUG  7215[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=10, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,850]DEBUG  7215[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:57,850]DEBUG  7215[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-02 14:02:57,850]DEBUG  7215[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:57,851]DEBUG  7216[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:57,851]DEBUG  7216[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:57,851]DEBUG  7216[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:57,851]DEBUG  7216[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:57,851]DEBUG  7216[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:57,851]DEBUG  7216[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=11, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,851]DEBUG  7216[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=12, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,852]DEBUG  7217[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=9, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,852]DEBUG  7217[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=10, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,852]DEBUG  7217[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:57,852]DEBUG  7217[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-02 14:02:57,852]DEBUG  7217[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:57,853]DEBUG  7218[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:57,853]DEBUG  7218[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:57,853]DEBUG  7218[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:57,853]DEBUG  7218[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:57,853]DEBUG  7218[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:57,853]DEBUG  7218[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=11, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,853]DEBUG  7218[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=12, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,854]DEBUG  7219[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=9, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,854]DEBUG  7219[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=10, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,854]DEBUG  7219[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:57,854]DEBUG  7219[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-02 14:02:57,854]DEBUG  7219[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:57,854]DEBUG  7219[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:57,855]DEBUG  7220[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:57,855]DEBUG  7220[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:57,855]DEBUG  7220[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:57,855]DEBUG  7220[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:57,855]DEBUG  7220[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=11, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,855]DEBUG  7220[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=12, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,855]DEBUG  7220[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=9, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,856]DEBUG  7221[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=10, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,856]DEBUG  7221[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:57,856]DEBUG  7221[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-02 14:02:57,856]DEBUG  7221[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:57,856]DEBUG  7221[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:57,856]DEBUG  7221[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:57,857]DEBUG  7222[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:57,857]DEBUG  7222[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:57,857]DEBUG  7222[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:57,857]DEBUG  7222[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=11, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,857]DEBUG  7222[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=12, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,857]DEBUG  7222[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=9, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,858]DEBUG  7223[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=10, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,858]DEBUG  7223[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:57,858]DEBUG  7223[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-02 14:02:57,858]DEBUG  7223[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:57,858]DEBUG  7223[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:57,859]DEBUG  7224[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:57,859]DEBUG  7224[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:57,859]DEBUG  7224[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:57,859]DEBUG  7224[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:57,859]DEBUG  7224[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=11, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,860]DEBUG  7225[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=12, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,860]DEBUG  7225[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=9, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,860]DEBUG  7225[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=10, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,860]DEBUG  7225[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:57,860]DEBUG  7225[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-02 14:02:57,861]DEBUG  7226[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:57,861]DEBUG  7226[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:57,861]DEBUG  7226[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:57,861]DEBUG  7226[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:57,861]DEBUG  7226[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:57,862]DEBUG  7227[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:57,862]DEBUG  7227[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=11, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,862]DEBUG  7227[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=12, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,862]DEBUG  7227[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=9, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,862]DEBUG  7227[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=10, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,862]DEBUG  7227[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:57,862]DEBUG  7227[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-02 14:02:57,863]DEBUG  7228[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:57,863]DEBUG  7228[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:57,863]DEBUG  7228[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:57,864]DEBUG  7229[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:57,864]DEBUG  7229[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:57,864]DEBUG  7229[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:57,864]DEBUG  7229[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=11, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,864]DEBUG  7229[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=12, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,864]DEBUG  7229[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=9, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,864]DEBUG  7229[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=10, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:57,865]DEBUG  7230[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:57,865]DEBUG  7230[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-02 14:02:57,865]DEBUG  7230[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:57,865]DEBUG  7230[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5a568cad testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@18e0a18e, testMethod = testGetSilverTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2017-10-02 14:02:57,865]DEBUG  7230[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-02 14:02:57,866]DEBUG  7231[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7ac7853b]
[2017-10-02 14:02:57,866]DEBUG  7231[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-02 14:02:58,006]DEBUG  7371[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-02 14:02:58,006]DEBUG  7371[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-02 14:02:58,007]DEBUG  7372[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@7ac7853b] after transaction
[2017-10-02 14:02:58,007]DEBUG  7372[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-02 14:02:58,007]DEBUG  7372[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-02 14:02:58,007]DEBUG  7372[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-02 14:02:58,008] INFO  7373[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@5a568cad testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@18e0a18e, testMethod = testGetSilverTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2017-10-02 14:02:58,009]DEBUG  7374[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@5a568cad testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@18e0a18e, testMethod = testGetSilverTypeDiscount@CustomerTypeDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-02 14:02:58,010]DEBUG  7375[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2017-10-02 14:02:58,010]DEBUG  7375[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2017-10-02 14:02:58,011]DEBUG  7376[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@5a568cad testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@2596807a, testMethod = [null], testException = [null]]].
[2017-10-02 14:02:58,012]DEBUG  7377[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-02 14:02:58,012]DEBUG  7377[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-02 14:02:58,012]DEBUG  7377[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-02 14:02:58,012]DEBUG  7377[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-02 14:02:58,013]DEBUG  7378[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-02 14:02:58,013]DEBUG  7378[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-02 14:02:58,013]DEBUG  7378[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-02 14:02:58,013]DEBUG  7378[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-02 14:02:58,014]DEBUG  7379[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-02 14:02:58,014]DEBUG  7379[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-02 14:02:58,014]DEBUG  7379[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-02 14:02:58,014]DEBUG  7379[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-02 14:02:58,015]DEBUG  7380[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-02 14:02:58,015]DEBUG  7380[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-02 14:02:58,015]DEBUG  7380[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-02 14:02:58,015]DEBUG  7380[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-02 14:02:58,016]DEBUG  7381[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-02 14:02:58,016]DEBUG  7381[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-02 14:02:58,016]DEBUG  7381[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-02 14:02:58,016]DEBUG  7381[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-02 14:02:58,017]DEBUG  7382[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-02 14:02:58,017]DEBUG  7382[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-02 14:02:58,018]DEBUG  7383[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@2596807a]
[2017-10-02 14:02:58,018]DEBUG  7383[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetGoldTypeDiscount' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-02 14:02:58,019]DEBUG  7384[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@5a568cad testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@2596807a, testMethod = testGetGoldTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2017-10-02 14:02:58,019]DEBUG  7384[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-02 14:02:58,020]DEBUG  7385[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testGetGoldTypeDiscount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-02 14:02:58,021]DEBUG  7386[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15069421780
[2017-10-02 14:02:58,021]DEBUG  7386[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@6abc0144] for Hibernate transaction
[2017-10-02 14:02:58,021]DEBUG  7386[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@6abc0144]
[2017-10-02 14:02:58,022]DEBUG  7387[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-02 14:02:58,022]DEBUG  7387[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-02 14:02:58,022]DEBUG  7387[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-02 14:02:58,022]DEBUG  7387[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5a568cad testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@2596807a, testMethod = testGetGoldTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2017-10-02 14:02:58,023] INFO  7388[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (4): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@24af5c74]; rollback [true]
[2017-10-02 14:02:58,023]DEBUG  7388[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:58,023]DEBUG  7388[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,023]DEBUG  7388[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-02 14:02:58,024]DEBUG  7389[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 13
[2017-10-02 14:02:58,024]DEBUG  7389[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,024]DEBUG  7389[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:58,024]DEBUG  7389[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,025]DEBUG  7390[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-02 14:02:58,025]DEBUG  7390[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 14
[2017-10-02 14:02:58,025]DEBUG  7390[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,026]DEBUG  7391[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:58,026]DEBUG  7391[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,026]DEBUG  7391[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-02 14:02:58,027]DEBUG  7392[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 15
[2017-10-02 14:02:58,027]DEBUG  7392[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,027]DEBUG  7392[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:58,027]DEBUG  7392[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,027]DEBUG  7392[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-02 14:02:58,028]DEBUG  7393[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 16
[2017-10-02 14:02:58,028]DEBUG  7393[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,029]DEBUG  7394[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: from com.softserveinc.edu.oms.domain.entities.CustomerType customerT where customerT.typeName = :Gold
[2017-10-02 14:02:58,031]DEBUG  7396[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  |  |  +-[IDENT] Node: 'com'
    |        |  |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
    |        |  |  |  |  |  \-[IDENT] Node: 'edu'
    |        |  |  |  |  \-[IDENT] Node: 'oms'
    |        |  |  |  \-[IDENT] Node: 'domain'
    |        |  |  \-[IDENT] Node: 'entities'
    |        |  \-[IDENT] Node: 'CustomerType'
    |        \-[ALIAS] Node: 'customerT'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'customerT'
          |  \-[IDENT] Node: 'typeName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'Gold'

[2017-10-02 14:02:58,031]DEBUG  7396[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-02 14:02:58,031]DEBUG  7396[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - select << begin [level=1, statement=select]
[2017-10-02 14:02:58,032]DEBUG  7397[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.CustomerType (customerT) -> customerty0_
[2017-10-02 14:02:58,032]DEBUG  7397[main] - org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  customerT -> customerty0_.ID
[2017-10-02 14:02:58,032]DEBUG  7397[main] - org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : typeName -> org.hibernate.type.StringType@2142ea45
[2017-10-02 14:02:58,032]DEBUG  7397[main] - org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  customerT.typeName -> customerty0_.TypeName
[2017-10-02 14:02:58,032]DEBUG  7397[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - select : finishing up [level=1, statement=select]
[2017-10-02 14:02:58,033]DEBUG  7398[main] - org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) - processQuery() :  ( SELECT ( FromClause{level=1} CustomerTypes customerty0_ ) ( where ( = ( customerty0_.TypeName customerty0_.ID typeName ) ? ) ) )
[2017-10-02 14:02:58,033]DEBUG  7398[main] - org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) - Derived SELECT clause created.
[2017-10-02 14:02:58,033]DEBUG  7398[main] - org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) - Using FROM fragment [CustomerTypes customerty0_]
[2017-10-02 14:02:58,033]DEBUG  7398[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - select >> end [level=1, statement=select]
[2017-10-02 14:02:58,034]DEBUG  7399[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerTypes)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'customerty0_.ID as ID2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=customerT,role=null,tableName=CustomerTypes,tableAlias=customerty0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.CustomerType}}}
    |  \-[SQL_TOKEN] SqlFragment: 'customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[customerT], fromElementByTableAlias=[customerty0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CustomerTypes customerty0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=customerT,role=null,tableName=CustomerTypes,tableAlias=customerty0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.CustomerType}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customerty0_.TypeName' {propertyName=typeName,dereferenceType=ALL,propertyPath=typeName,path=customerT.typeName,tableAlias=customerty0_,className=com.softserveinc.edu.oms.domain.entities.CustomerType,classAlias=customerT}
          |  +-[ALIAS_REF] IdentNode: 'customerty0_.ID' {alias=customerT, className=com.softserveinc.edu.oms.domain.entities.CustomerType, tableAlias=customerty0_}
          |  \-[IDENT] IdentNode: 'typeName' {originalText=typeName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=Gold, expectedType=org.hibernate.type.StringType@2142ea45}

[2017-10-02 14:02:58,034]DEBUG  7399[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-02 14:02:58,034]DEBUG  7399[main] - org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:241) - HQL: from com.softserveinc.edu.oms.domain.entities.CustomerType customerT where customerT.typeName = :Gold
[2017-10-02 14:02:58,034]DEBUG  7399[main] - org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:242) - SQL: select customerty0_.ID as ID2_, customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_ from CustomerTypes customerty0_ where customerty0_.TypeName=?
[2017-10-02 14:02:58,034]DEBUG  7399[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-02 14:02:58,035]DEBUG  7400[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:58,035]DEBUG  7400[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:58,035]DEBUG  7400[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:58,035]DEBUG  7400[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:58,035]DEBUG  7400[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:58,035]DEBUG  7400[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=13, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,035]DEBUG  7400[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=14, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,036]DEBUG  7401[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=15, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,036]DEBUG  7401[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=16, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,036]DEBUG  7401[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,036]DEBUG  7401[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select customerty0_.ID as ID2_, customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_ from CustomerTypes customerty0_ where customerty0_.TypeName=?
[2017-10-02 14:02:58,037]DEBUG  7402[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-02 14:02:58,037]DEBUG  7402[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.CustomerType#15]
[2017-10-02 14:02:58,037]DEBUG  7402[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-02 14:02:58,038]DEBUG  7403[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,038]DEBUG  7403[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-02 14:02:58,038]DEBUG  7403[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:58,038]DEBUG  7403[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:58,038]DEBUG  7403[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:58,038]DEBUG  7403[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:58,039]DEBUG  7404[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:58,039]DEBUG  7404[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=13, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,039]DEBUG  7404[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=14, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,039]DEBUG  7404[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=15, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,039]DEBUG  7404[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=16, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,039]DEBUG  7404[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,039]DEBUG  7404[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-02 14:02:58,040]DEBUG  7405[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,040]DEBUG  7405[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:58,040]DEBUG  7405[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:58,040]DEBUG  7405[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:58,040]DEBUG  7405[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:58,041]DEBUG  7406[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:58,041]DEBUG  7406[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=13, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,041]DEBUG  7406[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=14, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,041]DEBUG  7406[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=15, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,041]DEBUG  7406[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=16, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,041]DEBUG  7406[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,041]DEBUG  7406[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-02 14:02:58,042]DEBUG  7407[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,042]DEBUG  7407[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:58,042]DEBUG  7407[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:58,042]DEBUG  7407[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:58,042]DEBUG  7407[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:58,042]DEBUG  7407[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:58,043]DEBUG  7408[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=13, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,043]DEBUG  7408[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=14, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,043]DEBUG  7408[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=15, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,043]DEBUG  7408[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=16, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,043]DEBUG  7408[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,043]DEBUG  7408[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-02 14:02:58,043]DEBUG  7408[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,044]DEBUG  7409[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:58,044]DEBUG  7409[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:58,044]DEBUG  7409[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:58,044]DEBUG  7409[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:58,044]DEBUG  7409[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:58,044]DEBUG  7409[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=13, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,044]DEBUG  7409[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=14, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,045]DEBUG  7410[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=15, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,045]DEBUG  7410[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=16, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,045]DEBUG  7410[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,045]DEBUG  7410[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-02 14:02:58,045]DEBUG  7410[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,045]DEBUG  7410[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:58,046]DEBUG  7411[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:58,046]DEBUG  7411[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:58,046]DEBUG  7411[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:58,046]DEBUG  7411[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:58,046]DEBUG  7411[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=13, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,046]DEBUG  7411[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=14, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,046]DEBUG  7411[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=15, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,047]DEBUG  7412[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=16, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,047]DEBUG  7412[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,047]DEBUG  7412[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-02 14:02:58,047]DEBUG  7412[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,047]DEBUG  7412[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:58,047]DEBUG  7412[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:58,048]DEBUG  7413[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:58,048]DEBUG  7413[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:58,048]DEBUG  7413[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:58,048]DEBUG  7413[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=13, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,048]DEBUG  7413[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=14, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,048]DEBUG  7413[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=15, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,048]DEBUG  7413[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=16, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,049]DEBUG  7414[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,049]DEBUG  7414[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-02 14:02:58,049]DEBUG  7414[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,049]DEBUG  7414[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:58,049]DEBUG  7414[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:58,049]DEBUG  7414[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:58,050]DEBUG  7415[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:58,050]DEBUG  7415[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:58,050]DEBUG  7415[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=13, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,050]DEBUG  7415[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=14, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,050]DEBUG  7415[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=15, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,050]DEBUG  7415[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=16, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,050]DEBUG  7415[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,050]DEBUG  7415[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-02 14:02:58,051]DEBUG  7416[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,051]DEBUG  7416[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:58,051]DEBUG  7416[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:58,051]DEBUG  7416[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:58,051]DEBUG  7416[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:58,052]DEBUG  7417[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:58,052]DEBUG  7417[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=13, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,052]DEBUG  7417[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=14, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,052]DEBUG  7417[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=15, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,052]DEBUG  7417[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=16, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,052]DEBUG  7417[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,052]DEBUG  7417[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-02 14:02:58,053]DEBUG  7418[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,053]DEBUG  7418[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:58,053]DEBUG  7418[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:58,053]DEBUG  7418[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:58,053]DEBUG  7418[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:58,054]DEBUG  7419[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:58,054]DEBUG  7419[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=13, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,054]DEBUG  7419[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=14, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,054]DEBUG  7419[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=15, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,054]DEBUG  7419[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=16, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,054]DEBUG  7419[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,054]DEBUG  7419[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-02 14:02:58,055]DEBUG  7420[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,055]DEBUG  7420[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5a568cad testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@2596807a, testMethod = testGetGoldTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2017-10-02 14:02:58,055]DEBUG  7420[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-02 14:02:58,055]DEBUG  7420[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@6abc0144]
[2017-10-02 14:02:58,055]DEBUG  7420[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-02 14:02:58,081]DEBUG  7446[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-02 14:02:58,081]DEBUG  7446[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-02 14:02:58,081]DEBUG  7446[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@6abc0144] after transaction
[2017-10-02 14:02:58,082]DEBUG  7447[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-02 14:02:58,082]DEBUG  7447[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-02 14:02:58,082]DEBUG  7447[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-02 14:02:58,083] INFO  7448[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@5a568cad testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@2596807a, testMethod = testGetGoldTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2017-10-02 14:02:58,084]DEBUG  7449[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@5a568cad testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@2596807a, testMethod = testGetGoldTypeDiscount@CustomerTypeDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-02 14:02:58,085]DEBUG  7450[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2017-10-02 14:02:58,085]DEBUG  7450[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2017-10-02 14:02:58,086]DEBUG  7451[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@5a568cad testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@2aa1e1d8, testMethod = [null], testException = [null]]].
[2017-10-02 14:02:58,086]DEBUG  7451[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-02 14:02:58,087]DEBUG  7452[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-02 14:02:58,087]DEBUG  7452[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-02 14:02:58,087]DEBUG  7452[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-02 14:02:58,087]DEBUG  7452[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-02 14:02:58,088]DEBUG  7453[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-02 14:02:58,088]DEBUG  7453[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-02 14:02:58,088]DEBUG  7453[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-02 14:02:58,089]DEBUG  7454[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-02 14:02:58,089]DEBUG  7454[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-02 14:02:58,089]DEBUG  7454[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-02 14:02:58,089]DEBUG  7454[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-02 14:02:58,090]DEBUG  7455[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-02 14:02:58,090]DEBUG  7455[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-02 14:02:58,090]DEBUG  7455[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-02 14:02:58,090]DEBUG  7455[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-02 14:02:58,091]DEBUG  7456[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-02 14:02:58,091]DEBUG  7456[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-02 14:02:58,091]DEBUG  7456[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-02 14:02:58,091]DEBUG  7456[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-02 14:02:58,092]DEBUG  7457[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-02 14:02:58,092]DEBUG  7457[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-02 14:02:58,092]DEBUG  7457[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@2aa1e1d8]
[2017-10-02 14:02:58,093]DEBUG  7458[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetPlatinumTypeDiscount' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-02 14:02:58,093]DEBUG  7458[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@5a568cad testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@2aa1e1d8, testMethod = testGetPlatinumTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2017-10-02 14:02:58,094]DEBUG  7459[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-02 14:02:58,095]DEBUG  7460[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testGetPlatinumTypeDiscount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-02 14:02:58,095]DEBUG  7460[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15069421780
[2017-10-02 14:02:58,096]DEBUG  7461[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@12ff7c7a] for Hibernate transaction
[2017-10-02 14:02:58,096]DEBUG  7461[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@12ff7c7a]
[2017-10-02 14:02:58,096]DEBUG  7461[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-02 14:02:58,096]DEBUG  7461[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-02 14:02:58,097]DEBUG  7462[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-02 14:02:58,097]DEBUG  7462[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5a568cad testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@2aa1e1d8, testMethod = testGetPlatinumTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2017-10-02 14:02:58,097] INFO  7462[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (5): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@24af5c74]; rollback [true]
[2017-10-02 14:02:58,098]DEBUG  7463[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:58,098]DEBUG  7463[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,098]DEBUG  7463[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-02 14:02:58,100]DEBUG  7465[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 17
[2017-10-02 14:02:58,100]DEBUG  7465[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,101]DEBUG  7466[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:58,101]DEBUG  7466[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,102]DEBUG  7467[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-02 14:02:58,103]DEBUG  7468[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 18
[2017-10-02 14:02:58,103]DEBUG  7468[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,103]DEBUG  7468[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:58,103]DEBUG  7468[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,103]DEBUG  7468[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-02 14:02:58,104]DEBUG  7469[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 19
[2017-10-02 14:02:58,104]DEBUG  7469[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,104]DEBUG  7469[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:58,104]DEBUG  7469[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,104]DEBUG  7469[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-02 14:02:58,105]DEBUG  7470[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 20
[2017-10-02 14:02:58,105]DEBUG  7470[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,106]DEBUG  7471[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: from com.softserveinc.edu.oms.domain.entities.CustomerType customerT where customerT.typeName = :Platinum
[2017-10-02 14:02:58,108]DEBUG  7473[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  |  |  +-[IDENT] Node: 'com'
    |        |  |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
    |        |  |  |  |  |  \-[IDENT] Node: 'edu'
    |        |  |  |  |  \-[IDENT] Node: 'oms'
    |        |  |  |  \-[IDENT] Node: 'domain'
    |        |  |  \-[IDENT] Node: 'entities'
    |        |  \-[IDENT] Node: 'CustomerType'
    |        \-[ALIAS] Node: 'customerT'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'customerT'
          |  \-[IDENT] Node: 'typeName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'Platinum'

[2017-10-02 14:02:58,108]DEBUG  7473[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-02 14:02:58,108]DEBUG  7473[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - select << begin [level=1, statement=select]
[2017-10-02 14:02:58,108]DEBUG  7473[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.CustomerType (customerT) -> customerty0_
[2017-10-02 14:02:58,108]DEBUG  7473[main] - org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  customerT -> customerty0_.ID
[2017-10-02 14:02:58,109]DEBUG  7474[main] - org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : typeName -> org.hibernate.type.StringType@2142ea45
[2017-10-02 14:02:58,109]DEBUG  7474[main] - org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  customerT.typeName -> customerty0_.TypeName
[2017-10-02 14:02:58,109]DEBUG  7474[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - select : finishing up [level=1, statement=select]
[2017-10-02 14:02:58,109]DEBUG  7474[main] - org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) - processQuery() :  ( SELECT ( FromClause{level=1} CustomerTypes customerty0_ ) ( where ( = ( customerty0_.TypeName customerty0_.ID typeName ) ? ) ) )
[2017-10-02 14:02:58,109]DEBUG  7474[main] - org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) - Derived SELECT clause created.
[2017-10-02 14:02:58,109]DEBUG  7474[main] - org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) - Using FROM fragment [CustomerTypes customerty0_]
[2017-10-02 14:02:58,110]DEBUG  7475[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - select >> end [level=1, statement=select]
[2017-10-02 14:02:58,110]DEBUG  7475[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerTypes)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'customerty0_.ID as ID2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=customerT,role=null,tableName=CustomerTypes,tableAlias=customerty0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.CustomerType}}}
    |  \-[SQL_TOKEN] SqlFragment: 'customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[customerT], fromElementByTableAlias=[customerty0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CustomerTypes customerty0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=customerT,role=null,tableName=CustomerTypes,tableAlias=customerty0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.CustomerType}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customerty0_.TypeName' {propertyName=typeName,dereferenceType=ALL,propertyPath=typeName,path=customerT.typeName,tableAlias=customerty0_,className=com.softserveinc.edu.oms.domain.entities.CustomerType,classAlias=customerT}
          |  +-[ALIAS_REF] IdentNode: 'customerty0_.ID' {alias=customerT, className=com.softserveinc.edu.oms.domain.entities.CustomerType, tableAlias=customerty0_}
          |  \-[IDENT] IdentNode: 'typeName' {originalText=typeName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=Platinum, expectedType=org.hibernate.type.StringType@2142ea45}

[2017-10-02 14:02:58,110]DEBUG  7475[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-02 14:02:58,110]DEBUG  7475[main] - org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:241) - HQL: from com.softserveinc.edu.oms.domain.entities.CustomerType customerT where customerT.typeName = :Platinum
[2017-10-02 14:02:58,110]DEBUG  7475[main] - org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:242) - SQL: select customerty0_.ID as ID2_, customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_ from CustomerTypes customerty0_ where customerty0_.TypeName=?
[2017-10-02 14:02:58,111]DEBUG  7476[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-02 14:02:58,111]DEBUG  7476[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:58,111]DEBUG  7476[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:58,111]DEBUG  7476[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:58,111]DEBUG  7476[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:58,111]DEBUG  7476[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:58,112]DEBUG  7477[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=20, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,112]DEBUG  7477[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=17, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,112]DEBUG  7477[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=19, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,112]DEBUG  7477[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=18, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,112]DEBUG  7477[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,112]DEBUG  7477[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select customerty0_.ID as ID2_, customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_ from CustomerTypes customerty0_ where customerty0_.TypeName=?
[2017-10-02 14:02:58,113]DEBUG  7478[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-02 14:02:58,113]DEBUG  7478[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.CustomerType#20]
[2017-10-02 14:02:58,114]DEBUG  7479[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-02 14:02:58,114]DEBUG  7479[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,114]DEBUG  7479[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-02 14:02:58,114]DEBUG  7479[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:58,114]DEBUG  7479[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:58,114]DEBUG  7479[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:58,114]DEBUG  7479[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:58,115]DEBUG  7480[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:58,115]DEBUG  7480[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=20, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,115]DEBUG  7480[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=17, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,115]DEBUG  7480[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=19, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,115]DEBUG  7480[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=18, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,115]DEBUG  7480[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,115]DEBUG  7480[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-02 14:02:58,116]DEBUG  7481[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,116]DEBUG  7481[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:58,116]DEBUG  7481[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:58,116]DEBUG  7481[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:58,116]DEBUG  7481[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:58,116]DEBUG  7481[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:58,117]DEBUG  7482[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=20, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,117]DEBUG  7482[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=17, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,117]DEBUG  7482[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=19, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,117]DEBUG  7482[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=18, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,117]DEBUG  7482[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,117]DEBUG  7482[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-02 14:02:58,118]DEBUG  7483[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,118]DEBUG  7483[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:58,118]DEBUG  7483[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:58,118]DEBUG  7483[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:58,118]DEBUG  7483[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:58,118]DEBUG  7483[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:58,118]DEBUG  7483[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=20, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,119]DEBUG  7484[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=17, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,119]DEBUG  7484[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=19, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,119]DEBUG  7484[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=18, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,119]DEBUG  7484[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,119]DEBUG  7484[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-02 14:02:58,119]DEBUG  7484[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,120]DEBUG  7485[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:58,120]DEBUG  7485[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:58,120]DEBUG  7485[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:58,120]DEBUG  7485[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:58,120]DEBUG  7485[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:58,120]DEBUG  7485[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=20, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,120]DEBUG  7485[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=17, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,121]DEBUG  7486[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=19, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,121]DEBUG  7486[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=18, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,121]DEBUG  7486[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,121]DEBUG  7486[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-02 14:02:58,121]DEBUG  7486[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,121]DEBUG  7486[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:58,121]DEBUG  7486[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:58,122]DEBUG  7487[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:58,122]DEBUG  7487[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:58,122]DEBUG  7487[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:58,122]DEBUG  7487[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=20, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,122]DEBUG  7487[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=17, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,122]DEBUG  7487[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=19, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,122]DEBUG  7487[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=18, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,123]DEBUG  7488[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,123]DEBUG  7488[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-02 14:02:58,123]DEBUG  7488[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,123]DEBUG  7488[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:58,123]DEBUG  7488[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:58,123]DEBUG  7488[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:58,123]DEBUG  7488[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:58,124]DEBUG  7489[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:58,124]DEBUG  7489[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=20, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,124]DEBUG  7489[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=17, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,124]DEBUG  7489[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=19, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,124]DEBUG  7489[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=18, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,124]DEBUG  7489[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,124]DEBUG  7489[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-02 14:02:58,125]DEBUG  7490[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,125]DEBUG  7490[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:58,125]DEBUG  7490[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:58,125]DEBUG  7490[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:58,125]DEBUG  7490[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:58,125]DEBUG  7490[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:58,125]DEBUG  7490[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=20, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,126]DEBUG  7491[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=17, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,126]DEBUG  7491[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=19, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,126]DEBUG  7491[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=18, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,126]DEBUG  7491[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,126]DEBUG  7491[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-02 14:02:58,126]DEBUG  7491[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,127]DEBUG  7492[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:58,127]DEBUG  7492[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:58,127]DEBUG  7492[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:58,127]DEBUG  7492[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:58,127]DEBUG  7492[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:58,127]DEBUG  7492[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=20, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,127]DEBUG  7492[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=17, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,128]DEBUG  7493[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=19, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,128]DEBUG  7493[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=18, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,128]DEBUG  7493[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,128]DEBUG  7493[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-02 14:02:58,128]DEBUG  7493[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,128]DEBUG  7493[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:58,128]DEBUG  7493[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:58,129]DEBUG  7494[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:58,129]DEBUG  7494[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:58,129]DEBUG  7494[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:58,129]DEBUG  7494[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=20, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,129]DEBUG  7494[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=17, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,129]DEBUG  7494[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=19, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,129]DEBUG  7494[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=18, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,130]DEBUG  7495[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,130]DEBUG  7495[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-02 14:02:58,130]DEBUG  7495[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,130]DEBUG  7495[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5a568cad testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@2aa1e1d8, testMethod = testGetPlatinumTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2017-10-02 14:02:58,130]DEBUG  7495[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-02 14:02:58,130]DEBUG  7495[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@12ff7c7a]
[2017-10-02 14:02:58,130]DEBUG  7495[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-02 14:02:58,156]DEBUG  7521[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-02 14:02:58,156]DEBUG  7521[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-02 14:02:58,157]DEBUG  7522[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@12ff7c7a] after transaction
[2017-10-02 14:02:58,157]DEBUG  7522[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-02 14:02:58,157]DEBUG  7522[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-02 14:02:58,157]DEBUG  7522[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-02 14:02:58,158] INFO  7523[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@5a568cad testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@2aa1e1d8, testMethod = testGetPlatinumTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2017-10-02 14:02:58,160]DEBUG  7525[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@5a568cad testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@2aa1e1d8, testMethod = testGetPlatinumTypeDiscount@CustomerTypeDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-02 14:02:58,160]DEBUG  7525[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2017-10-02 14:02:58,161]DEBUG  7526[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2017-10-02 14:02:58,161]DEBUG  7526[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@5a568cad testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@5dc8229f, testMethod = [null], testException = [null]]].
[2017-10-02 14:02:58,161]DEBUG  7526[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-02 14:02:58,161]DEBUG  7526[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-02 14:02:58,161]DEBUG  7526[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-02 14:02:58,162]DEBUG  7527[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-02 14:02:58,162]DEBUG  7527[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-02 14:02:58,162]DEBUG  7527[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-02 14:02:58,162]DEBUG  7527[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-02 14:02:58,162]DEBUG  7527[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-02 14:02:58,162]DEBUG  7527[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-02 14:02:58,163]DEBUG  7528[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-02 14:02:58,163]DEBUG  7528[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-02 14:02:58,163]DEBUG  7528[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-02 14:02:58,163]DEBUG  7528[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-02 14:02:58,164]DEBUG  7529[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-02 14:02:58,164]DEBUG  7529[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-02 14:02:58,164]DEBUG  7529[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-02 14:02:58,164]DEBUG  7529[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-02 14:02:58,165]DEBUG  7530[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-02 14:02:58,165]DEBUG  7530[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-02 14:02:58,165]DEBUG  7530[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-02 14:02:58,165]DEBUG  7530[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-02 14:02:58,166]DEBUG  7531[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-02 14:02:58,166]DEBUG  7531[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@5dc8229f]
[2017-10-02 14:02:58,167]DEBUG  7532[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindAll' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-02 14:02:58,167]DEBUG  7532[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@5a568cad testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@5dc8229f, testMethod = testFindAll@CustomerTypeDaoTest, testException = [null]]]
[2017-10-02 14:02:58,168]DEBUG  7533[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-02 14:02:58,169]DEBUG  7534[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-02 14:02:58,169]DEBUG  7534[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15069421781
[2017-10-02 14:02:58,170]DEBUG  7535[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@181ce810] for Hibernate transaction
[2017-10-02 14:02:58,170]DEBUG  7535[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@181ce810]
[2017-10-02 14:02:58,170]DEBUG  7535[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-02 14:02:58,170]DEBUG  7535[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-02 14:02:58,171]DEBUG  7536[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-02 14:02:58,171]DEBUG  7536[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5a568cad testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@5dc8229f, testMethod = testFindAll@CustomerTypeDaoTest, testException = [null]]]
[2017-10-02 14:02:58,171] INFO  7536[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (6): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@24af5c74]; rollback [true]
[2017-10-02 14:02:58,172]DEBUG  7537[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:58,172]DEBUG  7537[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,172]DEBUG  7537[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-02 14:02:58,174]DEBUG  7539[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 21
[2017-10-02 14:02:58,174]DEBUG  7539[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,175]DEBUG  7540[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:58,175]DEBUG  7540[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,175]DEBUG  7540[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-02 14:02:58,176]DEBUG  7541[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 22
[2017-10-02 14:02:58,177]DEBUG  7542[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,177]DEBUG  7542[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:58,177]DEBUG  7542[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,178]DEBUG  7543[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-02 14:02:58,179]DEBUG  7544[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 23
[2017-10-02 14:02:58,179]DEBUG  7544[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,180]DEBUG  7545[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:58,180]DEBUG  7545[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,180]DEBUG  7545[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-02 14:02:58,181]DEBUG  7546[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 24
[2017-10-02 14:02:58,182]DEBUG  7547[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,188]DEBUG  7553[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:58,188]DEBUG  7553[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:58,188]DEBUG  7553[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:58,188]DEBUG  7553[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:58,188]DEBUG  7553[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:58,188]DEBUG  7553[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=24, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,189]DEBUG  7554[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=23, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,189]DEBUG  7554[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=22, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,189]DEBUG  7554[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=21, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,189]DEBUG  7554[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,189]DEBUG  7554[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID2_0_, this_.Discount as Discount2_0_, this_.MaxRange as MaxRange2_0_, this_.MinRange as MinRange2_0_, this_.TypeName as TypeName2_0_ from CustomerTypes this_
[2017-10-02 14:02:58,190]DEBUG  7555[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-02 14:02:58,190]DEBUG  7555[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.CustomerType#21]
[2017-10-02 14:02:58,190]DEBUG  7555[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.CustomerType#22]
[2017-10-02 14:02:58,190]DEBUG  7555[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.CustomerType#23]
[2017-10-02 14:02:58,191]DEBUG  7556[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.CustomerType#24]
[2017-10-02 14:02:58,191]DEBUG  7556[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-02 14:02:58,191]DEBUG  7556[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,191]DEBUG  7556[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-02 14:02:58,191]DEBUG  7556[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:58,191]DEBUG  7556[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:58,192]DEBUG  7557[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:58,192]DEBUG  7557[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:58,192]DEBUG  7557[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:58,192]DEBUG  7557[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=24, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,192]DEBUG  7557[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=23, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,192]DEBUG  7557[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=22, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,192]DEBUG  7557[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=21, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,193]DEBUG  7558[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,193]DEBUG  7558[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-02 14:02:58,193]DEBUG  7558[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,193]DEBUG  7558[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:58,193]DEBUG  7558[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:58,194]DEBUG  7559[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:58,194]DEBUG  7559[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:58,194]DEBUG  7559[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:58,194]DEBUG  7559[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=24, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,194]DEBUG  7559[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=23, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,194]DEBUG  7559[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=22, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,195]DEBUG  7560[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=21, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,195]DEBUG  7560[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,195]DEBUG  7560[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-02 14:02:58,195]DEBUG  7560[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,195]DEBUG  7560[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:58,195]DEBUG  7560[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:58,196]DEBUG  7561[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:58,196]DEBUG  7561[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:58,196]DEBUG  7561[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:58,196]DEBUG  7561[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=24, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,196]DEBUG  7561[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=23, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,196]DEBUG  7561[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=22, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,196]DEBUG  7561[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=21, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,197]DEBUG  7562[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,197]DEBUG  7562[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-02 14:02:58,197]DEBUG  7562[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,197]DEBUG  7562[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:58,197]DEBUG  7562[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:58,197]DEBUG  7562[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:58,198]DEBUG  7563[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:58,198]DEBUG  7563[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:58,198]DEBUG  7563[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=24, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,198]DEBUG  7563[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=23, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,198]DEBUG  7563[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=22, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,198]DEBUG  7563[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=21, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,198]DEBUG  7563[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,199]DEBUG  7564[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-02 14:02:58,199]DEBUG  7564[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,199]DEBUG  7564[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:58,199]DEBUG  7564[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:58,199]DEBUG  7564[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:58,199]DEBUG  7564[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:58,200]DEBUG  7565[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:58,200]DEBUG  7565[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=24, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,200]DEBUG  7565[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=23, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,200]DEBUG  7565[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=22, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,200]DEBUG  7565[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=21, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,200]DEBUG  7565[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,200]DEBUG  7565[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-02 14:02:58,201]DEBUG  7566[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,201]DEBUG  7566[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:58,201]DEBUG  7566[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:58,201]DEBUG  7566[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:58,201]DEBUG  7566[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:58,202]DEBUG  7567[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:58,202]DEBUG  7567[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=24, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,202]DEBUG  7567[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=23, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,202]DEBUG  7567[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=22, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,202]DEBUG  7567[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=21, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,202]DEBUG  7567[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,202]DEBUG  7567[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-02 14:02:58,203]DEBUG  7568[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,203]DEBUG  7568[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:58,203]DEBUG  7568[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:58,203]DEBUG  7568[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:58,203]DEBUG  7568[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:58,204]DEBUG  7569[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:58,204]DEBUG  7569[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=24, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,204]DEBUG  7569[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=23, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,204]DEBUG  7569[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=22, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,204]DEBUG  7569[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=21, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,204]DEBUG  7569[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,204]DEBUG  7569[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-02 14:02:58,205]DEBUG  7570[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,205]DEBUG  7570[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:58,205]DEBUG  7570[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:58,205]DEBUG  7570[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:58,206]DEBUG  7571[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:58,206]DEBUG  7571[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:58,206]DEBUG  7571[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=24, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,206]DEBUG  7571[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=23, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,206]DEBUG  7571[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=22, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,206]DEBUG  7571[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=21, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,206]DEBUG  7571[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,207]DEBUG  7572[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-02 14:02:58,207]DEBUG  7572[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,207]DEBUG  7572[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:58,207]DEBUG  7572[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:58,207]DEBUG  7572[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:58,208]DEBUG  7573[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:58,208]DEBUG  7573[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:58,208]DEBUG  7573[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=24, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,208]DEBUG  7573[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=23, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,208]DEBUG  7573[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=22, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,208]DEBUG  7573[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=21, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,208]DEBUG  7573[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,209]DEBUG  7574[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-02 14:02:58,209]DEBUG  7574[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,209]DEBUG  7574[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5a568cad testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@5dc8229f, testMethod = testFindAll@CustomerTypeDaoTest, testException = [null]]]
[2017-10-02 14:02:58,209]DEBUG  7574[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-02 14:02:58,209]DEBUG  7574[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@181ce810]
[2017-10-02 14:02:58,210]DEBUG  7575[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-02 14:02:58,231]DEBUG  7596[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-02 14:02:58,231]DEBUG  7596[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-02 14:02:58,231]DEBUG  7596[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@181ce810] after transaction
[2017-10-02 14:02:58,231]DEBUG  7596[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-02 14:02:58,232]DEBUG  7597[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-02 14:02:58,232]DEBUG  7597[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-02 14:02:58,232] INFO  7597[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@5a568cad testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@5dc8229f, testMethod = testFindAll@CustomerTypeDaoTest, testException = [null]]]
[2017-10-02 14:02:58,233]DEBUG  7598[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@5a568cad testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@5dc8229f, testMethod = testFindAll@CustomerTypeDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-02 14:02:58,234]DEBUG  7599[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2017-10-02 14:02:58,234]DEBUG  7599[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2017-10-02 14:02:58,235]DEBUG  7600[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@5a568cad testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@6b0e166b, testMethod = [null], testException = [null]]].
[2017-10-02 14:02:58,235]DEBUG  7600[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-02 14:02:58,235]DEBUG  7600[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-02 14:02:58,235]DEBUG  7600[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-02 14:02:58,235]DEBUG  7600[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-02 14:02:58,236]DEBUG  7601[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-02 14:02:58,236]DEBUG  7601[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-02 14:02:58,236]DEBUG  7601[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-02 14:02:58,236]DEBUG  7601[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-02 14:02:58,236]DEBUG  7601[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-02 14:02:58,236]DEBUG  7601[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-02 14:02:58,236]DEBUG  7601[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-02 14:02:58,237]DEBUG  7602[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-02 14:02:58,237]DEBUG  7602[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-02 14:02:58,237]DEBUG  7602[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-02 14:02:58,237]DEBUG  7602[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-02 14:02:58,237]DEBUG  7602[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-02 14:02:58,238]DEBUG  7603[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-02 14:02:58,238]DEBUG  7603[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-02 14:02:58,238]DEBUG  7603[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-02 14:02:58,238]DEBUG  7603[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-02 14:02:58,238]DEBUG  7603[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-02 14:02:58,238]DEBUG  7603[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-02 14:02:58,239]DEBUG  7604[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@6b0e166b]
[2017-10-02 14:02:58,239]DEBUG  7604[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByCriterions' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-02 14:02:58,239]DEBUG  7604[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@5a568cad testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@6b0e166b, testMethod = testFindByCriterions@CustomerTypeDaoTest, testException = [null]]]
[2017-10-02 14:02:58,239]DEBUG  7604[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-02 14:02:58,240]DEBUG  7605[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByCriterions]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-02 14:02:58,240]DEBUG  7605[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15069421782
[2017-10-02 14:02:58,240]DEBUG  7605[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@7f38870a] for Hibernate transaction
[2017-10-02 14:02:58,240]DEBUG  7605[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7f38870a]
[2017-10-02 14:02:58,241]DEBUG  7606[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-02 14:02:58,241]DEBUG  7606[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-02 14:02:58,241]DEBUG  7606[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-02 14:02:58,241]DEBUG  7606[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5a568cad testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@6b0e166b, testMethod = testFindByCriterions@CustomerTypeDaoTest, testException = [null]]]
[2017-10-02 14:02:58,241] INFO  7606[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (7): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@24af5c74]; rollback [true]
[2017-10-02 14:02:58,241]DEBUG  7606[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:58,242]DEBUG  7607[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,242]DEBUG  7607[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-02 14:02:58,242]DEBUG  7607[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 25
[2017-10-02 14:02:58,243]DEBUG  7608[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,243]DEBUG  7608[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:58,243]DEBUG  7608[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,243]DEBUG  7608[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-02 14:02:58,244]DEBUG  7609[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 26
[2017-10-02 14:02:58,244]DEBUG  7609[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,244]DEBUG  7609[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:58,245]DEBUG  7610[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,245]DEBUG  7610[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-02 14:02:58,245]DEBUG  7610[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 27
[2017-10-02 14:02:58,245]DEBUG  7610[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,246]DEBUG  7611[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:58,246]DEBUG  7611[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,246]DEBUG  7611[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-02 14:02:58,246]DEBUG  7611[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 28
[2017-10-02 14:02:58,247]DEBUG  7612[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,248]DEBUG  7613[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:58,248]DEBUG  7613[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:58,248]DEBUG  7613[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:58,248]DEBUG  7613[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:58,248]DEBUG  7613[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:58,248]DEBUG  7613[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=26, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,249]DEBUG  7614[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=25, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,249]DEBUG  7614[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=28, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,249]DEBUG  7614[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=27, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,249]DEBUG  7614[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,249]DEBUG  7614[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID2_0_, this_.Discount as Discount2_0_, this_.MaxRange as MaxRange2_0_, this_.MinRange as MinRange2_0_, this_.TypeName as TypeName2_0_ from CustomerTypes this_ where this_.TypeName=? and this_.ID<=?
[2017-10-02 14:02:58,250]DEBUG  7615[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-02 14:02:58,251]DEBUG  7616[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.CustomerType#25]
[2017-10-02 14:02:58,251]DEBUG  7616[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-02 14:02:58,251]DEBUG  7616[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,251]DEBUG  7616[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-02 14:02:58,251]DEBUG  7616[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:58,251]DEBUG  7616[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:58,252]DEBUG  7617[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:58,252]DEBUG  7617[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:58,252]DEBUG  7617[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:58,252]DEBUG  7617[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=26, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,252]DEBUG  7617[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=25, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,252]DEBUG  7617[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=28, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,253]DEBUG  7618[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=27, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,253]DEBUG  7618[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,253]DEBUG  7618[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-02 14:02:58,253]DEBUG  7618[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,253]DEBUG  7618[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:58,253]DEBUG  7618[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:58,254]DEBUG  7619[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:58,254]DEBUG  7619[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:58,254]DEBUG  7619[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:58,254]DEBUG  7619[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=26, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,254]DEBUG  7619[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=25, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,254]DEBUG  7619[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=28, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,254]DEBUG  7619[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=27, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,255]DEBUG  7620[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,255]DEBUG  7620[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-02 14:02:58,255]DEBUG  7620[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,255]DEBUG  7620[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:58,255]DEBUG  7620[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:58,256]DEBUG  7621[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:58,256]DEBUG  7621[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:58,256]DEBUG  7621[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:58,256]DEBUG  7621[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=26, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,256]DEBUG  7621[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=25, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,256]DEBUG  7621[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=28, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,256]DEBUG  7621[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=27, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,257]DEBUG  7622[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,257]DEBUG  7622[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-02 14:02:58,257]DEBUG  7622[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,257]DEBUG  7622[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:58,257]DEBUG  7622[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:58,258]DEBUG  7623[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:58,258]DEBUG  7623[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:58,258]DEBUG  7623[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:58,258]DEBUG  7623[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=26, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,258]DEBUG  7623[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=25, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,258]DEBUG  7623[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=28, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,258]DEBUG  7623[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=27, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,259]DEBUG  7624[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,259]DEBUG  7624[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-02 14:02:58,259]DEBUG  7624[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,259]DEBUG  7624[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:58,259]DEBUG  7624[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:58,260]DEBUG  7625[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:58,260]DEBUG  7625[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:58,260]DEBUG  7625[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:58,260]DEBUG  7625[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=26, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,260]DEBUG  7625[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=25, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,260]DEBUG  7625[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=28, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,260]DEBUG  7625[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=27, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,261]DEBUG  7626[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,261]DEBUG  7626[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-02 14:02:58,261]DEBUG  7626[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,261]DEBUG  7626[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:58,262]DEBUG  7627[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:58,262]DEBUG  7627[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:58,262]DEBUG  7627[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:58,262]DEBUG  7627[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:58,262]DEBUG  7627[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=26, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,262]DEBUG  7627[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=25, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,263]DEBUG  7628[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=28, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,263]DEBUG  7628[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=27, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,263]DEBUG  7628[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,263]DEBUG  7628[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-02 14:02:58,264]DEBUG  7629[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,264]DEBUG  7629[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:58,265]DEBUG  7630[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:58,265]DEBUG  7630[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:58,265]DEBUG  7630[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:58,266]DEBUG  7631[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:58,266]DEBUG  7631[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=26, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,266]DEBUG  7631[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=25, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,267]DEBUG  7632[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=28, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,267]DEBUG  7632[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=27, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,267]DEBUG  7632[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,267]DEBUG  7632[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-02 14:02:58,268]DEBUG  7633[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,268]DEBUG  7633[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:58,268]DEBUG  7633[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:58,269]DEBUG  7634[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:58,269]DEBUG  7634[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:58,269]DEBUG  7634[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:58,269]DEBUG  7634[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=26, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,269]DEBUG  7634[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=25, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,269]DEBUG  7634[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=28, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,270]DEBUG  7635[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=27, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,270]DEBUG  7635[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,270]DEBUG  7635[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-02 14:02:58,270]DEBUG  7635[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,270]DEBUG  7635[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:58,271]DEBUG  7636[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:58,271]DEBUG  7636[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:58,271]DEBUG  7636[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:58,271]DEBUG  7636[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:58,271]DEBUG  7636[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=26, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,271]DEBUG  7636[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=25, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,271]DEBUG  7636[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=28, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,272]DEBUG  7637[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=27, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,272]DEBUG  7637[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,272]DEBUG  7637[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-02 14:02:58,272]DEBUG  7637[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,272]DEBUG  7637[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5a568cad testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@6b0e166b, testMethod = testFindByCriterions@CustomerTypeDaoTest, testException = [null]]]
[2017-10-02 14:02:58,272]DEBUG  7637[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-02 14:02:58,273]DEBUG  7638[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7f38870a]
[2017-10-02 14:02:58,273]DEBUG  7638[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-02 14:02:58,306]DEBUG  7671[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-02 14:02:58,306]DEBUG  7671[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-02 14:02:58,307]DEBUG  7672[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@7f38870a] after transaction
[2017-10-02 14:02:58,307]DEBUG  7672[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-02 14:02:58,307]DEBUG  7672[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-02 14:02:58,308]DEBUG  7673[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-02 14:02:58,308] INFO  7673[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@5a568cad testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@6b0e166b, testMethod = testFindByCriterions@CustomerTypeDaoTest, testException = [null]]]
[2017-10-02 14:02:58,310]DEBUG  7675[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@5a568cad testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@6b0e166b, testMethod = testFindByCriterions@CustomerTypeDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-02 14:02:58,310]DEBUG  7675[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2017-10-02 14:02:58,311]DEBUG  7676[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2017-10-02 14:02:58,311]DEBUG  7676[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@5a568cad testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@23a1ef14, testMethod = [null], testException = [null]]].
[2017-10-02 14:02:58,312]DEBUG  7677[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-02 14:02:58,312]DEBUG  7677[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-02 14:02:58,312]DEBUG  7677[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-02 14:02:58,312]DEBUG  7677[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-02 14:02:58,313]DEBUG  7678[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-02 14:02:58,313]DEBUG  7678[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-02 14:02:58,313]DEBUG  7678[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-02 14:02:58,314]DEBUG  7679[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-02 14:02:58,314]DEBUG  7679[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-02 14:02:58,314]DEBUG  7679[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-02 14:02:58,314]DEBUG  7679[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-02 14:02:58,314]DEBUG  7679[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-02 14:02:58,315]DEBUG  7680[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-02 14:02:58,315]DEBUG  7680[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-02 14:02:58,315]DEBUG  7680[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-02 14:02:58,315]DEBUG  7680[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-02 14:02:58,316]DEBUG  7681[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-02 14:02:58,316]DEBUG  7681[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-02 14:02:58,316]DEBUG  7681[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-02 14:02:58,316]DEBUG  7681[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-02 14:02:58,317]DEBUG  7682[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-02 14:02:58,317]DEBUG  7682[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-02 14:02:58,317]DEBUG  7682[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@23a1ef14]
[2017-10-02 14:02:58,319]DEBUG  7684[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByOneOfCriterions' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-02 14:02:58,319]DEBUG  7684[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@5a568cad testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@23a1ef14, testMethod = testFindByOneOfCriterions@CustomerTypeDaoTest, testException = [null]]]
[2017-10-02 14:02:58,319]DEBUG  7684[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-02 14:02:58,321]DEBUG  7686[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByOneOfCriterions]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-02 14:02:58,321]DEBUG  7686[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15069421783
[2017-10-02 14:02:58,321]DEBUG  7686[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@13c77dd0] for Hibernate transaction
[2017-10-02 14:02:58,322]DEBUG  7687[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@13c77dd0]
[2017-10-02 14:02:58,322]DEBUG  7687[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-02 14:02:58,322]DEBUG  7687[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-02 14:02:58,322]DEBUG  7687[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-02 14:02:58,323]DEBUG  7688[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5a568cad testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@23a1ef14, testMethod = testFindByOneOfCriterions@CustomerTypeDaoTest, testException = [null]]]
[2017-10-02 14:02:58,323] INFO  7688[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (8): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@24af5c74]; rollback [true]
[2017-10-02 14:02:58,323]DEBUG  7688[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:58,323]DEBUG  7688[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,323]DEBUG  7688[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-02 14:02:58,324]DEBUG  7689[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 29
[2017-10-02 14:02:58,324]DEBUG  7689[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,324]DEBUG  7689[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:58,324]DEBUG  7689[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,325]DEBUG  7690[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-02 14:02:58,325]DEBUG  7690[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 30
[2017-10-02 14:02:58,325]DEBUG  7690[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,325]DEBUG  7690[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:58,326]DEBUG  7691[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,326]DEBUG  7691[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-02 14:02:58,326]DEBUG  7691[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 31
[2017-10-02 14:02:58,326]DEBUG  7691[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,327]DEBUG  7692[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:58,327]DEBUG  7692[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,327]DEBUG  7692[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-02 14:02:58,327]DEBUG  7692[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 32
[2017-10-02 14:02:58,327]DEBUG  7692[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,328]DEBUG  7693[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:58,328]DEBUG  7693[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:58,328]DEBUG  7693[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:58,328]DEBUG  7693[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:58,328]DEBUG  7693[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:58,329]DEBUG  7694[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=32, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,329]DEBUG  7694[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=31, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,329]DEBUG  7694[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=30, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,329]DEBUG  7694[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=29, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,329]DEBUG  7694[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,329]DEBUG  7694[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID2_0_, this_.Discount as Discount2_0_, this_.MaxRange as MaxRange2_0_, this_.MinRange as MinRange2_0_, this_.TypeName as TypeName2_0_ from CustomerTypes this_ where this_.TypeName=? and this_.ID<=?
[2017-10-02 14:02:58,330]DEBUG  7695[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-02 14:02:58,330]DEBUG  7695[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.CustomerType#29]
[2017-10-02 14:02:58,330]DEBUG  7695[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-02 14:02:58,331]DEBUG  7696[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,331]DEBUG  7696[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-02 14:02:58,331]DEBUG  7696[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:58,331]DEBUG  7696[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:58,331]DEBUG  7696[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:58,331]DEBUG  7696[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:58,331]DEBUG  7696[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:58,332]DEBUG  7697[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=32, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,332]DEBUG  7697[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=31, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,332]DEBUG  7697[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=30, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,332]DEBUG  7697[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=29, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,332]DEBUG  7697[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,332]DEBUG  7697[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-02 14:02:58,332]DEBUG  7697[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,333]DEBUG  7698[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:58,333]DEBUG  7698[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:58,333]DEBUG  7698[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:58,333]DEBUG  7698[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:58,333]DEBUG  7698[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:58,333]DEBUG  7698[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=32, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,333]DEBUG  7698[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=31, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,334]DEBUG  7699[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=30, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,334]DEBUG  7699[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=29, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,334]DEBUG  7699[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,334]DEBUG  7699[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-02 14:02:58,334]DEBUG  7699[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,334]DEBUG  7699[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:58,335]DEBUG  7700[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:58,335]DEBUG  7700[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:58,335]DEBUG  7700[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:58,335]DEBUG  7700[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:58,335]DEBUG  7700[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=32, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,335]DEBUG  7700[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=31, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,335]DEBUG  7700[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=30, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,335]DEBUG  7700[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=29, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,336]DEBUG  7701[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,336]DEBUG  7701[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-02 14:02:58,336]DEBUG  7701[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,336]DEBUG  7701[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:58,336]DEBUG  7701[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:58,336]DEBUG  7701[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:58,337]DEBUG  7702[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:58,337]DEBUG  7702[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:58,337]DEBUG  7702[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=32, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,337]DEBUG  7702[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=31, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,337]DEBUG  7702[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=30, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,337]DEBUG  7702[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=29, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,337]DEBUG  7702[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,337]DEBUG  7702[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-02 14:02:58,338]DEBUG  7703[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,338]DEBUG  7703[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:58,338]DEBUG  7703[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:58,338]DEBUG  7703[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:58,338]DEBUG  7703[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:58,338]DEBUG  7703[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:58,339]DEBUG  7704[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=32, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,339]DEBUG  7704[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=31, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,339]DEBUG  7704[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=30, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,339]DEBUG  7704[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=29, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,339]DEBUG  7704[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,339]DEBUG  7704[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-02 14:02:58,339]DEBUG  7704[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,340]DEBUG  7705[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:58,340]DEBUG  7705[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:58,340]DEBUG  7705[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:58,340]DEBUG  7705[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:58,340]DEBUG  7705[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:58,340]DEBUG  7705[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=32, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,340]DEBUG  7705[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=31, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,341]DEBUG  7706[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=30, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,341]DEBUG  7706[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=29, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,341]DEBUG  7706[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,341]DEBUG  7706[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-02 14:02:58,341]DEBUG  7706[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,341]DEBUG  7706[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:58,342]DEBUG  7707[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:58,342]DEBUG  7707[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:58,342]DEBUG  7707[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:58,342]DEBUG  7707[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:58,342]DEBUG  7707[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=32, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,342]DEBUG  7707[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=31, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,342]DEBUG  7707[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=30, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,343]DEBUG  7708[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=29, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,343]DEBUG  7708[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,343]DEBUG  7708[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-02 14:02:58,343]DEBUG  7708[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,343]DEBUG  7708[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:58,343]DEBUG  7708[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:58,344]DEBUG  7709[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:58,344]DEBUG  7709[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:58,344]DEBUG  7709[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:58,344]DEBUG  7709[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=32, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,344]DEBUG  7709[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=31, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,344]DEBUG  7709[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=30, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,344]DEBUG  7709[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=29, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,345]DEBUG  7710[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,345]DEBUG  7710[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-02 14:02:58,345]DEBUG  7710[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,345]DEBUG  7710[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:58,345]DEBUG  7710[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:58,349]DEBUG  7714[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:58,349]DEBUG  7714[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:58,349]DEBUG  7714[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:58,350]DEBUG  7715[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=32, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,350]DEBUG  7715[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=31, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,350]DEBUG  7715[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=30, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,350]DEBUG  7715[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=29, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,350]DEBUG  7715[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,351]DEBUG  7716[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-02 14:02:58,351]DEBUG  7716[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,351]DEBUG  7716[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5a568cad testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@23a1ef14, testMethod = testFindByOneOfCriterions@CustomerTypeDaoTest, testException = [null]]]
[2017-10-02 14:02:58,351]DEBUG  7716[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-02 14:02:58,352]DEBUG  7717[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@13c77dd0]
[2017-10-02 14:02:58,352]DEBUG  7717[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-02 14:02:58,373]DEBUG  7738[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-02 14:02:58,373]DEBUG  7738[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-02 14:02:58,373]DEBUG  7738[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@13c77dd0] after transaction
[2017-10-02 14:02:58,374]DEBUG  7739[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-02 14:02:58,374]DEBUG  7739[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-02 14:02:58,374]DEBUG  7739[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-02 14:02:58,375] INFO  7740[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@5a568cad testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@23a1ef14, testMethod = testFindByOneOfCriterions@CustomerTypeDaoTest, testException = [null]]]
[2017-10-02 14:02:58,376]DEBUG  7741[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@5a568cad testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@23a1ef14, testMethod = testFindByOneOfCriterions@CustomerTypeDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-02 14:02:58,377]DEBUG  7742[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2017-10-02 14:02:58,377]DEBUG  7742[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2017-10-02 14:02:58,378]DEBUG  7743[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@5a568cad testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@11c3765c, testMethod = [null], testException = [null]]].
[2017-10-02 14:02:58,378]DEBUG  7743[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-02 14:02:58,379]DEBUG  7744[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-02 14:02:58,379]DEBUG  7744[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-02 14:02:58,379]DEBUG  7744[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-02 14:02:58,379]DEBUG  7744[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-02 14:02:58,380]DEBUG  7745[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-02 14:02:58,380]DEBUG  7745[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-02 14:02:58,380]DEBUG  7745[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-02 14:02:58,381]DEBUG  7746[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-02 14:02:58,381]DEBUG  7746[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-02 14:02:58,381]DEBUG  7746[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-02 14:02:58,381]DEBUG  7746[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-02 14:02:58,382]DEBUG  7747[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-02 14:02:58,382]DEBUG  7747[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-02 14:02:58,382]DEBUG  7747[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-02 14:02:58,382]DEBUG  7747[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-02 14:02:58,382]DEBUG  7747[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-02 14:02:58,383]DEBUG  7748[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-02 14:02:58,383]DEBUG  7748[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-02 14:02:58,383]DEBUG  7748[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-02 14:02:58,384]DEBUG  7749[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-02 14:02:58,384]DEBUG  7749[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-02 14:02:58,384]DEBUG  7749[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@11c3765c]
[2017-10-02 14:02:58,385]DEBUG  7750[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testInsertOrUpdate' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-02 14:02:58,385]DEBUG  7750[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@5a568cad testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@11c3765c, testMethod = testInsertOrUpdate@CustomerTypeDaoTest, testException = [null]]]
[2017-10-02 14:02:58,386]DEBUG  7751[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-02 14:02:58,387]DEBUG  7752[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testInsertOrUpdate]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-02 14:02:58,387]DEBUG  7752[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15069421783
[2017-10-02 14:02:58,388]DEBUG  7753[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@3605534e] for Hibernate transaction
[2017-10-02 14:02:58,388]DEBUG  7753[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@3605534e]
[2017-10-02 14:02:58,388]DEBUG  7753[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-02 14:02:58,388]DEBUG  7753[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-02 14:02:58,389]DEBUG  7754[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-02 14:02:58,389]DEBUG  7754[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5a568cad testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@11c3765c, testMethod = testInsertOrUpdate@CustomerTypeDaoTest, testException = [null]]]
[2017-10-02 14:02:58,389] INFO  7754[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (9): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@24af5c74]; rollback [true]
[2017-10-02 14:02:58,390]DEBUG  7755[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:58,390]DEBUG  7755[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,390]DEBUG  7755[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-02 14:02:58,392]DEBUG  7757[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 33
[2017-10-02 14:02:58,392]DEBUG  7757[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,393]DEBUG  7758[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:58,393]DEBUG  7758[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,393]DEBUG  7758[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-02 14:02:58,394]DEBUG  7759[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 34
[2017-10-02 14:02:58,395]DEBUG  7760[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,395]DEBUG  7760[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:58,395]DEBUG  7760[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,396]DEBUG  7761[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-02 14:02:58,397]DEBUG  7762[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 35
[2017-10-02 14:02:58,397]DEBUG  7762[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,398]DEBUG  7763[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:58,398]DEBUG  7763[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,398]DEBUG  7763[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-02 14:02:58,399]DEBUG  7764[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 36
[2017-10-02 14:02:58,400]DEBUG  7765[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,400]DEBUG  7765[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:58,401]DEBUG  7766[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:58,401]DEBUG  7766[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:58,401]DEBUG  7766[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:58,402]DEBUG  7767[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:58,402]DEBUG  7767[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=34, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,402]DEBUG  7767[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=33, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,403]DEBUG  7768[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=35, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,403]DEBUG  7768[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=36, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,403]DEBUG  7768[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,403]DEBUG  7768[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-02 14:02:58,403]DEBUG  7768[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,404]DEBUG  7769[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:58,404]DEBUG  7769[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,404]DEBUG  7769[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-02 14:02:58,404]DEBUG  7769[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 37
[2017-10-02 14:02:58,405]DEBUG  7770[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,405]DEBUG  7770[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:58,405]DEBUG  7770[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:58,405]DEBUG  7770[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2017-10-02 14:02:58,405]DEBUG  7770[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:58,405]DEBUG  7770[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:58,406]DEBUG  7771[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=34, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,406]DEBUG  7771[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=33, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,406]DEBUG  7771[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=37, maxRange=9.99999999E7, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,406]DEBUG  7771[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=35, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,406]DEBUG  7771[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=36, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,406]DEBUG  7771[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,406]DEBUG  7771[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select customerty0_.ID as ID2_, customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_ from CustomerTypes customerty0_ where customerty0_.TypeName=?
[2017-10-02 14:02:58,407]DEBUG  7772[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-02 14:02:58,407]DEBUG  7772[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.CustomerType#37]
[2017-10-02 14:02:58,407]DEBUG  7772[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-02 14:02:58,408]DEBUG  7773[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,408]DEBUG  7773[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-02 14:02:58,408]DEBUG  7773[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:58,408]DEBUG  7773[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:58,408]DEBUG  7773[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2017-10-02 14:02:58,408]DEBUG  7773[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:58,408]DEBUG  7773[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:58,409]DEBUG  7774[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=34, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,409]DEBUG  7774[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=33, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,409]DEBUG  7774[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=37, maxRange=9.99999999E7, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,409]DEBUG  7774[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=35, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,409]DEBUG  7774[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=36, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,409]DEBUG  7774[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,409]DEBUG  7774[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-02 14:02:58,410]DEBUG  7775[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,410]DEBUG  7775[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:58,410]DEBUG  7775[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:58,410]DEBUG  7775[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2017-10-02 14:02:58,410]DEBUG  7775[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:58,410]DEBUG  7775[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:58,411]DEBUG  7776[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=34, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,411]DEBUG  7776[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=33, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,411]DEBUG  7776[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=37, maxRange=9.99999999E7, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,411]DEBUG  7776[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=35, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,411]DEBUG  7776[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=36, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,411]DEBUG  7776[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,411]DEBUG  7776[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-02 14:02:58,412]DEBUG  7777[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,412]DEBUG  7777[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:58,412]DEBUG  7777[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:58,412]DEBUG  7777[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2017-10-02 14:02:58,412]DEBUG  7777[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:58,412]DEBUG  7777[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:58,413]DEBUG  7778[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=34, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,413]DEBUG  7778[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=33, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,413]DEBUG  7778[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=37, maxRange=9.99999999E7, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,413]DEBUG  7778[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=35, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,413]DEBUG  7778[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=36, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,413]DEBUG  7778[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,413]DEBUG  7778[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-02 14:02:58,414]DEBUG  7779[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,414]DEBUG  7779[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:58,414]DEBUG  7779[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:58,414]DEBUG  7779[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2017-10-02 14:02:58,414]DEBUG  7779[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:58,414]DEBUG  7779[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:58,415]DEBUG  7780[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=34, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,415]DEBUG  7780[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=33, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,415]DEBUG  7780[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=37, maxRange=9.99999999E7, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,415]DEBUG  7780[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=35, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,415]DEBUG  7780[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=36, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,415]DEBUG  7780[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,415]DEBUG  7780[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-02 14:02:58,416]DEBUG  7781[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,416]DEBUG  7781[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:58,416]DEBUG  7781[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:58,416]DEBUG  7781[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2017-10-02 14:02:58,416]DEBUG  7781[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:58,416]DEBUG  7781[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:58,417]DEBUG  7782[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=34, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,417]DEBUG  7782[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=33, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,417]DEBUG  7782[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=37, maxRange=9.99999999E7, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,417]DEBUG  7782[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=35, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,417]DEBUG  7782[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=36, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,417]DEBUG  7782[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,417]DEBUG  7782[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-02 14:02:58,418]DEBUG  7783[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,418]DEBUG  7783[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:58,418]DEBUG  7783[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:58,418]DEBUG  7783[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2017-10-02 14:02:58,418]DEBUG  7783[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:58,419]DEBUG  7784[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:58,419]DEBUG  7784[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=34, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,419]DEBUG  7784[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=33, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,419]DEBUG  7784[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=37, maxRange=9.99999999E7, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,419]DEBUG  7784[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=35, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,419]DEBUG  7784[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=36, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,419]DEBUG  7784[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,420]DEBUG  7785[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-02 14:02:58,420]DEBUG  7785[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,420]DEBUG  7785[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:58,420]DEBUG  7785[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:58,420]DEBUG  7785[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2017-10-02 14:02:58,420]DEBUG  7785[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:58,421]DEBUG  7786[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:58,421]DEBUG  7786[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=34, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,421]DEBUG  7786[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=33, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,421]DEBUG  7786[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=37, maxRange=9.99999999E7, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,421]DEBUG  7786[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=35, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,421]DEBUG  7786[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=36, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,421]DEBUG  7786[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,422]DEBUG  7787[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-02 14:02:58,422]DEBUG  7787[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,422]DEBUG  7787[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:58,422]DEBUG  7787[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:58,422]DEBUG  7787[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2017-10-02 14:02:58,422]DEBUG  7787[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:58,423]DEBUG  7788[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:58,423]DEBUG  7788[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=34, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,423]DEBUG  7788[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=33, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,423]DEBUG  7788[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=37, maxRange=9.99999999E7, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,423]DEBUG  7788[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=35, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,423]DEBUG  7788[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=36, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,423]DEBUG  7788[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,424]DEBUG  7789[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-02 14:02:58,424]DEBUG  7789[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,424]DEBUG  7789[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:58,424]DEBUG  7789[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:58,424]DEBUG  7789[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2017-10-02 14:02:58,424]DEBUG  7789[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:58,425]DEBUG  7790[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:58,425]DEBUG  7790[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=34, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,425]DEBUG  7790[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=33, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,425]DEBUG  7790[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=37, maxRange=9.99999999E7, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,425]DEBUG  7790[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=35, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,425]DEBUG  7790[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=36, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,425]DEBUG  7790[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,425]DEBUG  7790[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-02 14:02:58,426]DEBUG  7791[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,426]DEBUG  7791[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5a568cad testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@11c3765c, testMethod = testInsertOrUpdate@CustomerTypeDaoTest, testException = [null]]]
[2017-10-02 14:02:58,426]DEBUG  7791[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-02 14:02:58,426]DEBUG  7791[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@3605534e]
[2017-10-02 14:02:58,426]DEBUG  7791[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-02 14:02:58,448]DEBUG  7813[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-02 14:02:58,448]DEBUG  7813[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-02 14:02:58,448]DEBUG  7813[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@3605534e] after transaction
[2017-10-02 14:02:58,448]DEBUG  7813[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-02 14:02:58,448]DEBUG  7813[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-02 14:02:58,449]DEBUG  7814[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-02 14:02:58,449] INFO  7814[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@5a568cad testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@11c3765c, testMethod = testInsertOrUpdate@CustomerTypeDaoTest, testException = [null]]]
[2017-10-02 14:02:58,449]DEBUG  7814[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@5a568cad testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@11c3765c, testMethod = testInsertOrUpdate@CustomerTypeDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-02 14:02:58,450]DEBUG  7815[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2017-10-02 14:02:58,450]DEBUG  7815[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2017-10-02 14:02:58,450]DEBUG  7815[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@5a568cad testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@66575992, testMethod = [null], testException = [null]]].
[2017-10-02 14:02:58,450]DEBUG  7815[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-02 14:02:58,450]DEBUG  7815[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-02 14:02:58,451]DEBUG  7816[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-02 14:02:58,451]DEBUG  7816[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-02 14:02:58,451]DEBUG  7816[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-02 14:02:58,451]DEBUG  7816[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-02 14:02:58,451]DEBUG  7816[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-02 14:02:58,451]DEBUG  7816[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-02 14:02:58,451]DEBUG  7816[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-02 14:02:58,451]DEBUG  7816[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-02 14:02:58,451]DEBUG  7816[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-02 14:02:58,451]DEBUG  7816[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-02 14:02:58,452]DEBUG  7817[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-02 14:02:58,452]DEBUG  7817[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-02 14:02:58,452]DEBUG  7817[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-02 14:02:58,452]DEBUG  7817[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-02 14:02:58,452]DEBUG  7817[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-02 14:02:58,452]DEBUG  7817[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-02 14:02:58,452]DEBUG  7817[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-02 14:02:58,452]DEBUG  7817[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-02 14:02:58,452]DEBUG  7817[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-02 14:02:58,453]DEBUG  7818[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-02 14:02:58,453]DEBUG  7818[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@66575992]
[2017-10-02 14:02:58,453]DEBUG  7818[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testDelete' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-02 14:02:58,453]DEBUG  7818[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@5a568cad testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@66575992, testMethod = testDelete@CustomerTypeDaoTest, testException = [null]]]
[2017-10-02 14:02:58,453]DEBUG  7818[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-02 14:02:58,454]DEBUG  7819[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testDelete]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-02 14:02:58,454]DEBUG  7819[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15069421784
[2017-10-02 14:02:58,454]DEBUG  7819[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@573560a0] for Hibernate transaction
[2017-10-02 14:02:58,454]DEBUG  7819[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@573560a0]
[2017-10-02 14:02:58,454]DEBUG  7819[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-02 14:02:58,454]DEBUG  7819[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-02 14:02:58,455]DEBUG  7820[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-02 14:02:58,456]DEBUG  7821[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5a568cad testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@66575992, testMethod = testDelete@CustomerTypeDaoTest, testException = [null]]]
[2017-10-02 14:02:58,456] INFO  7821[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (10): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@24af5c74]; rollback [true]
[2017-10-02 14:02:58,456]DEBUG  7821[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:58,456]DEBUG  7821[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,456]DEBUG  7821[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-02 14:02:58,457]DEBUG  7822[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 38
[2017-10-02 14:02:58,457]DEBUG  7822[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,457]DEBUG  7822[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:58,457]DEBUG  7822[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,457]DEBUG  7822[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-02 14:02:58,458]DEBUG  7823[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 39
[2017-10-02 14:02:58,458]DEBUG  7823[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,458]DEBUG  7823[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:58,458]DEBUG  7823[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,459]DEBUG  7824[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-02 14:02:58,459]DEBUG  7824[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 40
[2017-10-02 14:02:58,459]DEBUG  7824[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,459]DEBUG  7824[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:58,459]DEBUG  7824[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,460]DEBUG  7825[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-02 14:02:58,460]DEBUG  7825[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 41
[2017-10-02 14:02:58,460]DEBUG  7825[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,461] INFO  7826[main] - org.hibernate.event.def.DefaultDeleteEventListener.deleteTransientEntity(DefaultDeleteEventListener.java:203) - handling transient entity in delete processing
[2017-10-02 14:02:58,461]DEBUG  7826[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:58,462]DEBUG  7827[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:58,462]DEBUG  7827[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:58,462]DEBUG  7827[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:58,462]DEBUG  7827[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:58,462]DEBUG  7827[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=41, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,462]DEBUG  7827[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=39, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,463]DEBUG  7828[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=40, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,463]DEBUG  7828[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=38, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,463]DEBUG  7828[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,463]DEBUG  7828[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select customerty0_.ID as ID2_, customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_ from CustomerTypes customerty0_ where customerty0_.TypeName=?
[2017-10-02 14:02:58,464]DEBUG  7829[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-02 14:02:58,464]DEBUG  7829[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.CustomerType#38]
[2017-10-02 14:02:58,464]DEBUG  7829[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-02 14:02:58,464]DEBUG  7829[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,464]DEBUG  7829[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-02 14:02:58,465]DEBUG  7830[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:58,465]DEBUG  7830[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:58,465]DEBUG  7830[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:58,465]DEBUG  7830[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:58,465]DEBUG  7830[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:58,465]DEBUG  7830[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=41, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,465]DEBUG  7830[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=39, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,465]DEBUG  7830[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=40, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,466]DEBUG  7831[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=38, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,466]DEBUG  7831[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,466]DEBUG  7831[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-02 14:02:58,466]DEBUG  7831[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,466]DEBUG  7831[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:58,466]DEBUG  7831[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:58,467]DEBUG  7832[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:58,467]DEBUG  7832[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:58,467]DEBUG  7832[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:58,467]DEBUG  7832[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=41, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,467]DEBUG  7832[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=39, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,467]DEBUG  7832[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=40, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,467]DEBUG  7832[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=38, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,468]DEBUG  7833[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,468]DEBUG  7833[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-02 14:02:58,468]DEBUG  7833[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,468]DEBUG  7833[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:58,468]DEBUG  7833[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:58,468]DEBUG  7833[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:58,468]DEBUG  7833[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:58,469]DEBUG  7834[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:58,469]DEBUG  7834[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=41, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,469]DEBUG  7834[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=39, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,469]DEBUG  7834[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=40, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,469]DEBUG  7834[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=38, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,469]DEBUG  7834[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,469]DEBUG  7834[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-02 14:02:58,470]DEBUG  7835[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,470]DEBUG  7835[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:58,470]DEBUG  7835[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:58,470]DEBUG  7835[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:58,470]DEBUG  7835[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:58,470]DEBUG  7835[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:58,470]DEBUG  7835[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=41, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,471]DEBUG  7836[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=39, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,471]DEBUG  7836[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=40, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,471]DEBUG  7836[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=38, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,471]DEBUG  7836[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,471]DEBUG  7836[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-02 14:02:58,471]DEBUG  7836[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,472]DEBUG  7837[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:58,472]DEBUG  7837[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:58,472]DEBUG  7837[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:58,472]DEBUG  7837[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:58,472]DEBUG  7837[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:58,472]DEBUG  7837[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=41, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,472]DEBUG  7837[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=39, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,472]DEBUG  7837[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=40, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,473]DEBUG  7838[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=38, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,473]DEBUG  7838[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,473]DEBUG  7838[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-02 14:02:58,473]DEBUG  7838[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,473]DEBUG  7838[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:58,473]DEBUG  7838[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:58,474]DEBUG  7839[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:58,474]DEBUG  7839[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:58,474]DEBUG  7839[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:58,474]DEBUG  7839[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=41, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,474]DEBUG  7839[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=39, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,474]DEBUG  7839[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=40, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,474]DEBUG  7839[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=38, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,474]DEBUG  7839[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,475]DEBUG  7840[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-02 14:02:58,475]DEBUG  7840[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,475]DEBUG  7840[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:58,475]DEBUG  7840[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:58,475]DEBUG  7840[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:58,475]DEBUG  7840[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:58,476]DEBUG  7841[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:58,476]DEBUG  7841[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=41, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,476]DEBUG  7841[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=39, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,476]DEBUG  7841[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=40, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,476]DEBUG  7841[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=38, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,476]DEBUG  7841[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,476]DEBUG  7841[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-02 14:02:58,477]DEBUG  7842[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,477]DEBUG  7842[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:58,477]DEBUG  7842[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:58,477]DEBUG  7842[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:58,477]DEBUG  7842[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:58,477]DEBUG  7842[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:58,478]DEBUG  7843[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=41, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,478]DEBUG  7843[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=39, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,478]DEBUG  7843[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=40, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,478]DEBUG  7843[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=38, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,478]DEBUG  7843[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,478]DEBUG  7843[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-02 14:02:58,478]DEBUG  7843[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,479]DEBUG  7844[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:58,479]DEBUG  7844[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:58,479]DEBUG  7844[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:58,479]DEBUG  7844[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:58,479]DEBUG  7844[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:58,479]DEBUG  7844[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=41, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,479]DEBUG  7844[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=39, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,480]DEBUG  7845[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=40, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,480]DEBUG  7845[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=38, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,480]DEBUG  7845[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,480]DEBUG  7845[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-02 14:02:58,480]DEBUG  7845[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,480]DEBUG  7845[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5a568cad testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@66575992, testMethod = testDelete@CustomerTypeDaoTest, testException = [null]]]
[2017-10-02 14:02:58,480]DEBUG  7845[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-02 14:02:58,481]DEBUG  7846[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@573560a0]
[2017-10-02 14:02:58,481]DEBUG  7846[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-02 14:02:58,506]DEBUG  7871[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-02 14:02:58,507]DEBUG  7872[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-02 14:02:58,507]DEBUG  7872[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@573560a0] after transaction
[2017-10-02 14:02:58,507]DEBUG  7872[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-02 14:02:58,507]DEBUG  7872[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-02 14:02:58,507]DEBUG  7872[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-02 14:02:58,508] INFO  7873[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@5a568cad testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@66575992, testMethod = testDelete@CustomerTypeDaoTest, testException = [null]]]
[2017-10-02 14:02:58,508]DEBUG  7873[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@5a568cad testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@66575992, testMethod = testDelete@CustomerTypeDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-02 14:02:58,509]DEBUG  7874[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2017-10-02 14:02:58,509]DEBUG  7874[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2017-10-02 14:02:58,509]DEBUG  7874[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@5a568cad testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@13fffd79, testMethod = [null], testException = [null]]].
[2017-10-02 14:02:58,510]DEBUG  7875[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-02 14:02:58,510]DEBUG  7875[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-02 14:02:58,510]DEBUG  7875[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-02 14:02:58,510]DEBUG  7875[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-02 14:02:58,511]DEBUG  7876[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-02 14:02:58,511]DEBUG  7876[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-02 14:02:58,511]DEBUG  7876[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-02 14:02:58,511]DEBUG  7876[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-02 14:02:58,512]DEBUG  7877[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-02 14:02:58,512]DEBUG  7877[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-02 14:02:58,512]DEBUG  7877[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-02 14:02:58,512]DEBUG  7877[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-02 14:02:58,512]DEBUG  7877[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-02 14:02:58,513]DEBUG  7878[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-02 14:02:58,513]DEBUG  7878[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-02 14:02:58,513]DEBUG  7878[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-02 14:02:58,514]DEBUG  7879[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-02 14:02:58,514]DEBUG  7879[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-02 14:02:58,514]DEBUG  7879[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-02 14:02:58,514]DEBUG  7879[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-02 14:02:58,515]DEBUG  7880[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-02 14:02:58,515]DEBUG  7880[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-02 14:02:58,515]DEBUG  7880[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@13fffd79]
[2017-10-02 14:02:58,516]DEBUG  7881[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testContextFile' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-02 14:02:58,517]DEBUG  7882[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@5a568cad testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@13fffd79, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2017-10-02 14:02:58,517]DEBUG  7882[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-02 14:02:58,518]DEBUG  7883[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testContextFile]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-02 14:02:58,518]DEBUG  7883[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15069421785
[2017-10-02 14:02:58,519]DEBUG  7884[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@91396bc] for Hibernate transaction
[2017-10-02 14:02:58,519]DEBUG  7884[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@91396bc]
[2017-10-02 14:02:58,519]DEBUG  7884[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-02 14:02:58,519]DEBUG  7884[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-02 14:02:58,520]DEBUG  7885[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-02 14:02:58,520]DEBUG  7885[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5a568cad testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@13fffd79, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2017-10-02 14:02:58,520] INFO  7885[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (11): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@24af5c74]; rollback [true]
[2017-10-02 14:02:58,520]DEBUG  7885[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:58,521]DEBUG  7886[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,521]DEBUG  7886[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-02 14:02:58,522]DEBUG  7887[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 42
[2017-10-02 14:02:58,523]DEBUG  7888[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,523]DEBUG  7888[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:58,523]DEBUG  7888[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,523]DEBUG  7888[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-02 14:02:58,524]DEBUG  7889[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 43
[2017-10-02 14:02:58,524]DEBUG  7889[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,524]DEBUG  7889[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:58,524]DEBUG  7889[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,524]DEBUG  7889[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-02 14:02:58,525]DEBUG  7890[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 44
[2017-10-02 14:02:58,525]DEBUG  7890[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,525]DEBUG  7890[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:58,525]DEBUG  7890[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,525]DEBUG  7890[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-02 14:02:58,526]DEBUG  7891[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 45
[2017-10-02 14:02:58,526]DEBUG  7891[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,526]DEBUG  7891[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:58,526]DEBUG  7891[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:58,526]DEBUG  7891[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:58,527]DEBUG  7892[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:58,527]DEBUG  7892[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:58,527]DEBUG  7892[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=42, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,527]DEBUG  7892[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=45, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,527]DEBUG  7892[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=43, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,527]DEBUG  7892[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=44, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,527]DEBUG  7892[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,527]DEBUG  7892[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-02 14:02:58,528]DEBUG  7893[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,528]DEBUG  7893[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:58,528]DEBUG  7893[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:58,528]DEBUG  7893[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:58,528]DEBUG  7893[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:58,528]DEBUG  7893[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:58,529]DEBUG  7894[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=42, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,529]DEBUG  7894[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=45, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,529]DEBUG  7894[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=43, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,529]DEBUG  7894[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=44, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,529]DEBUG  7894[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,529]DEBUG  7894[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-02 14:02:58,529]DEBUG  7894[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,530]DEBUG  7895[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:58,530]DEBUG  7895[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:58,530]DEBUG  7895[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:58,530]DEBUG  7895[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:58,530]DEBUG  7895[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:58,530]DEBUG  7895[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=42, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,530]DEBUG  7895[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=45, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,531]DEBUG  7896[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=43, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,531]DEBUG  7896[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=44, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,531]DEBUG  7896[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,531]DEBUG  7896[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-02 14:02:58,531]DEBUG  7896[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,531]DEBUG  7896[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:58,531]DEBUG  7896[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:58,532]DEBUG  7897[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:58,532]DEBUG  7897[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:58,532]DEBUG  7897[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:58,532]DEBUG  7897[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=42, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,532]DEBUG  7897[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=45, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,532]DEBUG  7897[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=43, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,532]DEBUG  7897[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=44, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,533]DEBUG  7898[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,533]DEBUG  7898[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-02 14:02:58,533]DEBUG  7898[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,533]DEBUG  7898[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:58,533]DEBUG  7898[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:58,533]DEBUG  7898[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:58,533]DEBUG  7898[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:58,534]DEBUG  7899[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:58,534]DEBUG  7899[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=42, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,534]DEBUG  7899[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=45, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,534]DEBUG  7899[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=43, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,534]DEBUG  7899[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=44, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,534]DEBUG  7899[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,534]DEBUG  7899[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-02 14:02:58,535]DEBUG  7900[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,535]DEBUG  7900[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:58,535]DEBUG  7900[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:58,535]DEBUG  7900[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:58,535]DEBUG  7900[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:58,535]DEBUG  7900[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:58,535]DEBUG  7900[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=42, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,535]DEBUG  7900[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=45, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,536]DEBUG  7901[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=43, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,536]DEBUG  7901[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=44, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,536]DEBUG  7901[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,536]DEBUG  7901[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-02 14:02:58,536]DEBUG  7901[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,536]DEBUG  7901[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:58,537]DEBUG  7902[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:58,537]DEBUG  7902[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:58,537]DEBUG  7902[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:58,537]DEBUG  7902[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:58,537]DEBUG  7902[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=42, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,537]DEBUG  7902[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=45, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,537]DEBUG  7902[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=43, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,537]DEBUG  7902[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=44, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,538]DEBUG  7903[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,538]DEBUG  7903[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-02 14:02:58,538]DEBUG  7903[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,538]DEBUG  7903[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:58,538]DEBUG  7903[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:58,539]DEBUG  7904[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:58,539]DEBUG  7904[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:58,539]DEBUG  7904[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:58,539]DEBUG  7904[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=42, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,539]DEBUG  7904[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=45, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,539]DEBUG  7904[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=43, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,539]DEBUG  7904[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=44, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,539]DEBUG  7904[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,539]DEBUG  7904[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-02 14:02:58,540]DEBUG  7905[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,540]DEBUG  7905[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:58,540]DEBUG  7905[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:58,540]DEBUG  7905[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-02 14:02:58,540]DEBUG  7905[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:58,540]DEBUG  7905[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:58,541]DEBUG  7906[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=42, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,541]DEBUG  7906[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=45, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,541]DEBUG  7906[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=43, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,541]DEBUG  7906[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=44, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-02 14:02:58,541]DEBUG  7906[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,541]DEBUG  7906[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-02 14:02:58,541]DEBUG  7906[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,542]DEBUG  7907[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5a568cad testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@13fffd79, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2017-10-02 14:02:58,542]DEBUG  7907[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-02 14:02:58,542]DEBUG  7907[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@91396bc]
[2017-10-02 14:02:58,542]DEBUG  7907[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-02 14:02:58,581]DEBUG  7946[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-02 14:02:58,582]DEBUG  7947[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-02 14:02:58,582]DEBUG  7947[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@91396bc] after transaction
[2017-10-02 14:02:58,582]DEBUG  7947[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-02 14:02:58,582]DEBUG  7947[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-02 14:02:58,583]DEBUG  7948[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-02 14:02:58,583] INFO  7948[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@5a568cad testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@13fffd79, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2017-10-02 14:02:58,584]DEBUG  7949[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@5a568cad testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@13fffd79, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-02 14:02:58,585]DEBUG  7950[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestClass(DirtiesContextTestExecutionListener.java:113) - After test class: context [[TestContext@5a568cad testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = [null], testMethod = [null], testException = [null]]], dirtiesContext [false].
[2017-10-02 14:02:58,588]DEBUG  7953[main] - org.springframework.test.context.junit4.SpringJUnit4ClassRunner.<init>(SpringJUnit4ClassRunner.java:106) - SpringJUnit4ClassRunner constructor called with [class com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest].
[2017-10-02 14:02:58,588] INFO  7953[main] - org.springframework.test.context.TestContextManager.retrieveTestExecutionListeners(TestContextManager.java:185) - @TestExecutionListeners is not present for class [class com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest]: using defaults.
[2017-10-02 14:02:58,589]DEBUG  7954[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest]
[2017-10-02 14:02:58,589]DEBUG  7954[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest]
[2017-10-02 14:02:58,591]DEBUG  7956[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest]
[2017-10-02 14:02:58,591]DEBUG  7956[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest]
[2017-10-02 14:02:58,592]DEBUG  7957[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest]
[2017-10-02 14:02:58,592]DEBUG  7957[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest]
[2017-10-02 14:02:58,595]DEBUG  7960[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest]
[2017-10-02 14:02:58,595]DEBUG  7960[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest]
[2017-10-02 14:02:58,596]DEBUG  7961[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@7bdd5f1b testClass = DimensionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@28f2525, testMethod = [null], testException = [null]]].
[2017-10-02 14:02:58,604]DEBUG  7969[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-02 14:02:58,605]DEBUG  7970[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-02 14:02:58,605]DEBUG  7970[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-02 14:02:58,605]DEBUG  7970[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-02 14:02:58,605]DEBUG  7970[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-02 14:02:58,605]DEBUG  7970[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-02 14:02:58,605]DEBUG  7970[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-02 14:02:58,605]DEBUG  7970[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-02 14:02:58,605]DEBUG  7970[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-02 14:02:58,605]DEBUG  7970[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest]: AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-02 14:02:58,606]DEBUG  7971[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-02 14:02:58,606]DEBUG  7971[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-02 14:02:58,606]DEBUG  7971[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest' to bean named 'customerTypeDao'
[2017-10-02 14:02:58,606]DEBUG  7971[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-02 14:02:58,606]DEBUG  7971[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-02 14:02:58,607]DEBUG  7972[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest' to bean named 'dimensionDao'
[2017-10-02 14:02:58,607]DEBUG  7972[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-02 14:02:58,607]DEBUG  7972[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-02 14:02:58,607]DEBUG  7972[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest' to bean named 'orderDao'
[2017-10-02 14:02:58,607]DEBUG  7972[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-02 14:02:58,608]DEBUG  7973[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-02 14:02:58,608]DEBUG  7973[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest' to bean named 'orderItemDao'
[2017-10-02 14:02:58,608]DEBUG  7973[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-02 14:02:58,608]DEBUG  7973[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-02 14:02:58,608]DEBUG  7973[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest' to bean named 'orderStatusDao'
[2017-10-02 14:02:58,608]DEBUG  7973[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-02 14:02:58,609]DEBUG  7974[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-02 14:02:58,609]DEBUG  7974[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest' to bean named 'productDao'
[2017-10-02 14:02:58,609]DEBUG  7974[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-02 14:02:58,609]DEBUG  7974[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-02 14:02:58,609]DEBUG  7974[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest' to bean named 'regionDao'
[2017-10-02 14:02:58,609]DEBUG  7974[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-02 14:02:58,610]DEBUG  7975[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-02 14:02:58,610]DEBUG  7975[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest' to bean named 'roleDao'
[2017-10-02 14:02:58,610]DEBUG  7975[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-02 14:02:58,610]DEBUG  7975[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-02 14:02:58,610]DEBUG  7975[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest' to bean named 'userDao'
[2017-10-02 14:02:58,611]DEBUG  7976[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-02 14:02:58,611]DEBUG  7976[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-02 14:02:58,611]DEBUG  7976[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest' to bean named 'sessionFactory'
[2017-10-02 14:02:58,612]DEBUG  7977[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-02 14:02:58,612]DEBUG  7977[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'tearDown' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-02 14:02:58,612]DEBUG  7977[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-02 14:02:58,612]DEBUG  7977[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@28f2525]
[2017-10-02 14:02:58,613]DEBUG  7978[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest.tearDown() throws java.lang.Exception
[2017-10-02 14:02:58,613]DEBUG  7978[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'setUp' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-02 14:02:58,613]DEBUG  7978[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest.setUp()
[2017-10-02 14:02:58,613]DEBUG  7978[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindDimensionByName_DimensionTypesEnum' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-02 14:02:58,614]DEBUG  7979[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest.testFindDimensionByName_DimensionTypesEnum()
[2017-10-02 14:02:58,614]DEBUG  7979[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindDimensionByNumberOfProducts_Int' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-02 14:02:58,614]DEBUG  7979[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest.testFindDimensionByNumberOfProducts_Int()
[2017-10-02 14:02:58,614]DEBUG  7979[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindDimensionByNumberOfProducts_DimensionTypesEnum' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-02 14:02:58,614]DEBUG  7979[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest.testFindDimensionByNumberOfProducts_DimensionTypesEnum()
[2017-10-02 14:02:58,615]DEBUG  7980[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetItemDimension' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-02 14:02:58,615]DEBUG  7980[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest.testGetItemDimension()
[2017-10-02 14:02:58,615]DEBUG  7980[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetBoxDimension' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-02 14:02:58,615]DEBUG  7980[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest.testGetBoxDimension()
[2017-10-02 14:02:58,615]DEBUG  7980[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetPackageDimension' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-02 14:02:58,615]DEBUG  7980[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest.testGetPackageDimension()
[2017-10-02 14:02:58,616]DEBUG  7981[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindDimensionByName_String' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-02 14:02:58,616]DEBUG  7981[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest.testFindDimensionByName_String()
[2017-10-02 14:02:58,616]DEBUG  7981[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testContextFile' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-02 14:02:58,616]DEBUG  7981[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.testContextFile()
[2017-10-02 14:02:58,616]DEBUG  7981[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanUser()
[2017-10-02 14:02:58,616]DEBUG  7981[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanRole()
[2017-10-02 14:02:58,616]DEBUG  7981[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanRegion()
[2017-10-02 14:02:58,617]DEBUG  7982[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanProduct()
[2017-10-02 14:02:58,617]DEBUG  7982[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrderStatus()
[2017-10-02 14:02:58,617]DEBUG  7982[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrderItem()
[2017-10-02 14:02:58,617]DEBUG  7982[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrder()
[2017-10-02 14:02:58,617]DEBUG  7982[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanDimension()
[2017-10-02 14:02:58,617]DEBUG  7982[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanCustomerType()
[2017-10-02 14:02:58,617]DEBUG  7982[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanDB()
[2017-10-02 14:02:58,618]DEBUG  7983[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:749) - Found finalize() method - using NO_OVERRIDE
[2017-10-02 14:02:58,618]DEBUG  7983[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:761) - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
[2017-10-02 14:02:58,618]DEBUG  7983[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
[2017-10-02 14:02:58,618]DEBUG  7983[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:766) - Found 'hashCode' method: public native int java.lang.Object.hashCode()
[2017-10-02 14:02:58,618]DEBUG  7983[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
[2017-10-02 14:02:58,618]DEBUG  7983[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
[2017-10-02 14:02:58,618]DEBUG  7983[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
[2017-10-02 14:02:58,618]DEBUG  7983[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2017-10-02 14:02:58,619]DEBUG  7984[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2017-10-02 14:02:58,619]DEBUG  7984[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
[2017-10-02 14:02:58,619]DEBUG  7984[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
[2017-10-02 14:02:58,619]DEBUG  7984[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
[2017-10-02 14:02:58,619]DEBUG  7984[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
[2017-10-02 14:02:58,619]DEBUG  7984[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2017-10-02 14:02:58,619]DEBUG  7984[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
[2017-10-02 14:02:58,619]DEBUG  7984[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
[2017-10-02 14:02:58,620]DEBUG  7985[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
[2017-10-02 14:02:58,620]DEBUG  7985[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
[2017-10-02 14:02:58,620]DEBUG  7985[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
[2017-10-02 14:02:58,620]DEBUG  7985[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
[2017-10-02 14:02:58,620]DEBUG  7985[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
[2017-10-02 14:02:58,621]DEBUG  7986[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
[2017-10-02 14:02:58,621]DEBUG  7986[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
[2017-10-02 14:02:58,621]DEBUG  7986[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
[2017-10-02 14:02:58,621]DEBUG  7986[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
[2017-10-02 14:02:58,621]DEBUG  7986[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
[2017-10-02 14:02:58,621]DEBUG  7986[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
[2017-10-02 14:02:58,621]DEBUG  7986[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
[2017-10-02 14:02:58,633]DEBUG  7998[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindDimensionByName_DimensionTypesEnum' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-02 14:02:58,633]DEBUG  7998[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@7bdd5f1b testClass = DimensionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@28f2525, testMethod = testFindDimensionByName_DimensionTypesEnum@DimensionDaoTest, testException = [null]]]
[2017-10-02 14:02:58,633]DEBUG  7998[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.retrieveConfigurationAttributes(TransactionalTestExecutionListener.java:466) - Retrieved @TransactionConfiguration [@org.springframework.test.context.transaction.TransactionConfiguration(transactionManager=transactionManager, defaultRollback=true)] for test class [class com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest]
[2017-10-02 14:02:58,633]DEBUG  7998[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.retrieveConfigurationAttributes(TransactionalTestExecutionListener.java:483) - Retrieved TransactionConfigurationAttributes [[TransactionConfigurationAttributes@53276b75 transactionManagerName = 'transactionManager', defaultRollback = true]] for class [class com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest]
[2017-10-02 14:02:58,633]DEBUG  7998[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-02 14:02:58,634]DEBUG  7999[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindDimensionByName_DimensionTypesEnum]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-02 14:02:58,634]DEBUG  7999[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15069421786
[2017-10-02 14:02:58,634]DEBUG  7999[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@398771ce] for Hibernate transaction
[2017-10-02 14:02:58,634]DEBUG  7999[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@398771ce]
[2017-10-02 14:02:58,634]DEBUG  7999[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-02 14:02:58,635]DEBUG  8000[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-02 14:02:58,635]DEBUG  8000[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-02 14:02:58,635]DEBUG  8000[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7bdd5f1b testClass = DimensionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@28f2525, testMethod = testFindDimensionByName_DimensionTypesEnum@DimensionDaoTest, testException = [null]]]
[2017-10-02 14:02:58,635] INFO  8000[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (1): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@24af5c74]; rollback [true]
[2017-10-02 14:02:58,635]DEBUG  8000[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,635]DEBUG  8000[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-02 14:02:58,636]DEBUG  8001[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,636]DEBUG  8001[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,636]DEBUG  8001[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-02 14:02:58,636]DEBUG  8001[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,637]DEBUG  8002[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,637]DEBUG  8002[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-02 14:02:58,637]DEBUG  8002[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,637]DEBUG  8002[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,637]DEBUG  8002[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-02 14:02:58,637]DEBUG  8002[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,638]DEBUG  8003[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,638]DEBUG  8003[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-02 14:02:58,639]DEBUG  8004[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,639]DEBUG  8004[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,639]DEBUG  8004[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-02 14:02:58,639]DEBUG  8004[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,640]DEBUG  8005[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,640]DEBUG  8005[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-02 14:02:58,640]DEBUG  8005[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,641]DEBUG  8006[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,641]DEBUG  8006[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-02 14:02:58,641]DEBUG  8006[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,642]DEBUG  8007[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,642]DEBUG  8007[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-02 14:02:58,642]DEBUG  8007[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,643]DEBUG  8008[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:58,644]DEBUG  8009[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,644]DEBUG  8009[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Dimensions (DimensionName, NumberOfProducts) values (?, ?)
[2017-10-02 14:02:58,644]DEBUG  8009[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 1
[2017-10-02 14:02:58,645]DEBUG  8010[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,645]DEBUG  8010[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:58,645]DEBUG  8010[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,645]DEBUG  8010[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Dimensions (DimensionName, NumberOfProducts) values (?, ?)
[2017-10-02 14:02:58,646]DEBUG  8011[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 2
[2017-10-02 14:02:58,646]DEBUG  8011[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,647]DEBUG  8012[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:58,647]DEBUG  8012[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,647]DEBUG  8012[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Dimensions (DimensionName, NumberOfProducts) values (?, ?)
[2017-10-02 14:02:58,648]DEBUG  8013[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 3
[2017-10-02 14:02:58,648]DEBUG  8013[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,648]DEBUG  8013[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:58,648]DEBUG  8013[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:58,649]DEBUG  8014[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-02 14:02:58,649]DEBUG  8014[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:58,649]DEBUG  8014[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:58,649]DEBUG  8014[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=1, dimensionName=Item, numberOfProduct=1}
[2017-10-02 14:02:58,649]DEBUG  8014[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=2, dimensionName=Box, numberOfProduct=5}
[2017-10-02 14:02:58,649]DEBUG  8014[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=3, dimensionName=Package, numberOfProduct=10}
[2017-10-02 14:02:58,650]DEBUG  8015[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,650]DEBUG  8015[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID7_0_, this_.DimensionName as Dimensio2_7_0_, this_.NumberOfProducts as NumberOf3_7_0_ from Dimensions this_ where this_.DimensionName=?
[2017-10-02 14:02:58,651]DEBUG  8016[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-02 14:02:58,651]DEBUG  8016[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Dimension#1]
[2017-10-02 14:02:58,651]DEBUG  8016[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-02 14:02:58,651]DEBUG  8016[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,651]DEBUG  8016[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-02 14:02:58,652]DEBUG  8017[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:58,652]DEBUG  8017[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:58,652]DEBUG  8017[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-02 14:02:58,652]DEBUG  8017[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:58,652]DEBUG  8017[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:58,652]DEBUG  8017[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=1, dimensionName=Item, numberOfProduct=1}
[2017-10-02 14:02:58,653]DEBUG  8018[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=2, dimensionName=Box, numberOfProduct=5}
[2017-10-02 14:02:58,653]DEBUG  8018[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=3, dimensionName=Package, numberOfProduct=10}
[2017-10-02 14:02:58,653]DEBUG  8018[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,653]DEBUG  8018[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID7_0_, this_.DimensionName as Dimensio2_7_0_, this_.NumberOfProducts as NumberOf3_7_0_ from Dimensions this_ where this_.DimensionName=?
[2017-10-02 14:02:58,654]DEBUG  8019[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-02 14:02:58,654]DEBUG  8019[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Dimension#2]
[2017-10-02 14:02:58,654]DEBUG  8019[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-02 14:02:58,654]DEBUG  8019[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,654]DEBUG  8019[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-02 14:02:58,655]DEBUG  8020[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:58,655]DEBUG  8020[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:58,656]DEBUG  8021[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-02 14:02:58,656]DEBUG  8021[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:58,656]DEBUG  8021[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:58,656]DEBUG  8021[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=1, dimensionName=Item, numberOfProduct=1}
[2017-10-02 14:02:58,656]DEBUG  8021[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=2, dimensionName=Box, numberOfProduct=5}
[2017-10-02 14:02:58,657]DEBUG  8022[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=3, dimensionName=Package, numberOfProduct=10}
[2017-10-02 14:02:58,657]DEBUG  8022[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,657]DEBUG  8022[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID7_0_, this_.DimensionName as Dimensio2_7_0_, this_.NumberOfProducts as NumberOf3_7_0_ from Dimensions this_ where this_.DimensionName=?
[2017-10-02 14:02:58,658]DEBUG  8023[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-02 14:02:58,658]DEBUG  8023[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Dimension#3]
[2017-10-02 14:02:58,658]DEBUG  8023[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-02 14:02:58,658]DEBUG  8023[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,658]DEBUG  8023[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-02 14:02:58,659]DEBUG  8024[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:58,659]DEBUG  8024[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:58,659]DEBUG  8024[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-02 14:02:58,659]DEBUG  8024[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:58,659]DEBUG  8024[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:58,660]DEBUG  8025[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=1, dimensionName=Item, numberOfProduct=1}
[2017-10-02 14:02:58,660]DEBUG  8025[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=2, dimensionName=Box, numberOfProduct=5}
[2017-10-02 14:02:58,660]DEBUG  8025[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=3, dimensionName=Package, numberOfProduct=10}
[2017-10-02 14:02:58,660]DEBUG  8025[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,660]DEBUG  8025[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-02 14:02:58,661]DEBUG  8026[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,661]DEBUG  8026[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7bdd5f1b testClass = DimensionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@28f2525, testMethod = testFindDimensionByName_DimensionTypesEnum@DimensionDaoTest, testException = [null]]]
[2017-10-02 14:02:58,661]DEBUG  8026[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-02 14:02:58,661]DEBUG  8026[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@398771ce]
[2017-10-02 14:02:58,661]DEBUG  8026[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-02 14:02:58,706]DEBUG  8071[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-02 14:02:58,707]DEBUG  8072[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-02 14:02:58,707]DEBUG  8072[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@398771ce] after transaction
[2017-10-02 14:02:58,707]DEBUG  8072[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-02 14:02:58,708]DEBUG  8073[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-02 14:02:58,708]DEBUG  8073[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-02 14:02:58,708] INFO  8073[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@7bdd5f1b testClass = DimensionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@28f2525, testMethod = testFindDimensionByName_DimensionTypesEnum@DimensionDaoTest, testException = [null]]]
[2017-10-02 14:02:58,709]DEBUG  8074[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@7bdd5f1b testClass = DimensionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@28f2525, testMethod = testFindDimensionByName_DimensionTypesEnum@DimensionDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-02 14:02:58,710]DEBUG  8075[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest]
[2017-10-02 14:02:58,710]DEBUG  8075[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest]
[2017-10-02 14:02:58,711]DEBUG  8076[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@7bdd5f1b testClass = DimensionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@174b1f9b, testMethod = [null], testException = [null]]].
[2017-10-02 14:02:58,712]DEBUG  8077[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-02 14:02:58,712]DEBUG  8077[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-02 14:02:58,712]DEBUG  8077[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-02 14:02:58,712]DEBUG  8077[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-02 14:02:58,713]DEBUG  8078[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-02 14:02:58,713]DEBUG  8078[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-02 14:02:58,713]DEBUG  8078[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-02 14:02:58,713]DEBUG  8078[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-02 14:02:58,713]DEBUG  8078[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-02 14:02:58,714]DEBUG  8079[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-02 14:02:58,714]DEBUG  8079[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-02 14:02:58,714]DEBUG  8079[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-02 14:02:58,714]DEBUG  8079[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-02 14:02:58,715]DEBUG  8080[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-02 14:02:58,715]DEBUG  8080[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-02 14:02:58,715]DEBUG  8080[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-02 14:02:58,715]DEBUG  8080[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-02 14:02:58,716]DEBUG  8081[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-02 14:02:58,716]DEBUG  8081[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-02 14:02:58,716]DEBUG  8081[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-02 14:02:58,716]DEBUG  8081[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-02 14:02:58,717]DEBUG  8082[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-02 14:02:58,717]DEBUG  8082[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@174b1f9b]
[2017-10-02 14:02:58,718]DEBUG  8083[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindDimensionByNumberOfProducts_Int' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-02 14:02:58,718]DEBUG  8083[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@7bdd5f1b testClass = DimensionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@174b1f9b, testMethod = testFindDimensionByNumberOfProducts_Int@DimensionDaoTest, testException = [null]]]
[2017-10-02 14:02:58,718]DEBUG  8083[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-02 14:02:58,719]DEBUG  8084[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindDimensionByNumberOfProducts_Int]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-02 14:02:58,720]DEBUG  8085[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15069421787
[2017-10-02 14:02:58,720]DEBUG  8085[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@f9caa5] for Hibernate transaction
[2017-10-02 14:02:58,720]DEBUG  8085[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@f9caa5]
[2017-10-02 14:02:58,720]DEBUG  8085[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-02 14:02:58,721]DEBUG  8086[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-02 14:02:58,721]DEBUG  8086[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-02 14:02:58,721]DEBUG  8086[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7bdd5f1b testClass = DimensionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@174b1f9b, testMethod = testFindDimensionByNumberOfProducts_Int@DimensionDaoTest, testException = [null]]]
[2017-10-02 14:02:58,721] INFO  8086[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (2): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@24af5c74]; rollback [true]
[2017-10-02 14:02:58,722]DEBUG  8087[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,722]DEBUG  8087[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-02 14:02:58,723]DEBUG  8088[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,723]DEBUG  8088[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,723]DEBUG  8088[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-02 14:02:58,723]DEBUG  8088[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,724]DEBUG  8089[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,724]DEBUG  8089[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-02 14:02:58,724]DEBUG  8089[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,724]DEBUG  8089[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,724]DEBUG  8089[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-02 14:02:58,725]DEBUG  8090[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,725]DEBUG  8090[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,725]DEBUG  8090[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-02 14:02:58,725]DEBUG  8090[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,725]DEBUG  8090[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,725]DEBUG  8090[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-02 14:02:58,726]DEBUG  8091[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,726]DEBUG  8091[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,726]DEBUG  8091[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-02 14:02:58,726]DEBUG  8091[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,727]DEBUG  8092[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,727]DEBUG  8092[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-02 14:02:58,727]DEBUG  8092[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,727]DEBUG  8092[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,727]DEBUG  8092[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-02 14:02:58,728]DEBUG  8093[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,728]DEBUG  8093[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:58,728]DEBUG  8093[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,728]DEBUG  8093[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Dimensions (DimensionName, NumberOfProducts) values (?, ?)
[2017-10-02 14:02:58,729]DEBUG  8094[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 4
[2017-10-02 14:02:58,729]DEBUG  8094[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,729]DEBUG  8094[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:58,729]DEBUG  8094[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,729]DEBUG  8094[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Dimensions (DimensionName, NumberOfProducts) values (?, ?)
[2017-10-02 14:02:58,730]DEBUG  8095[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 5
[2017-10-02 14:02:58,730]DEBUG  8095[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,730]DEBUG  8095[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:58,730]DEBUG  8095[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,730]DEBUG  8095[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Dimensions (DimensionName, NumberOfProducts) values (?, ?)
[2017-10-02 14:02:58,731]DEBUG  8096[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 6
[2017-10-02 14:02:58,731]DEBUG  8096[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,731]DEBUG  8096[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:58,731]DEBUG  8096[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:58,732]DEBUG  8097[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-02 14:02:58,732]DEBUG  8097[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:58,732]DEBUG  8097[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:58,732]DEBUG  8097[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=5, dimensionName=Box, numberOfProduct=5}
[2017-10-02 14:02:58,732]DEBUG  8097[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=6, dimensionName=Package, numberOfProduct=10}
[2017-10-02 14:02:58,732]DEBUG  8097[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=4, dimensionName=Item, numberOfProduct=1}
[2017-10-02 14:02:58,732]DEBUG  8097[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,733]DEBUG  8098[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID7_0_, this_.DimensionName as Dimensio2_7_0_, this_.NumberOfProducts as NumberOf3_7_0_ from Dimensions this_ where this_.NumberOfProducts=?
[2017-10-02 14:02:58,733]DEBUG  8098[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-02 14:02:58,733]DEBUG  8098[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Dimension#4]
[2017-10-02 14:02:58,734]DEBUG  8099[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-02 14:02:58,734]DEBUG  8099[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,734]DEBUG  8099[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-02 14:02:58,734]DEBUG  8099[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:58,734]DEBUG  8099[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:58,734]DEBUG  8099[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-02 14:02:58,735]DEBUG  8100[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:58,735]DEBUG  8100[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:58,735]DEBUG  8100[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=5, dimensionName=Box, numberOfProduct=5}
[2017-10-02 14:02:58,735]DEBUG  8100[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=6, dimensionName=Package, numberOfProduct=10}
[2017-10-02 14:02:58,735]DEBUG  8100[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=4, dimensionName=Item, numberOfProduct=1}
[2017-10-02 14:02:58,735]DEBUG  8100[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,735]DEBUG  8100[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID7_0_, this_.DimensionName as Dimensio2_7_0_, this_.NumberOfProducts as NumberOf3_7_0_ from Dimensions this_ where this_.NumberOfProducts=?
[2017-10-02 14:02:58,736]DEBUG  8101[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-02 14:02:58,736]DEBUG  8101[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Dimension#5]
[2017-10-02 14:02:58,736]DEBUG  8101[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-02 14:02:58,736]DEBUG  8101[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,737]DEBUG  8102[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-02 14:02:58,737]DEBUG  8102[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:58,737]DEBUG  8102[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:58,737]DEBUG  8102[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-02 14:02:58,737]DEBUG  8102[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:58,738]DEBUG  8103[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:58,738]DEBUG  8103[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=5, dimensionName=Box, numberOfProduct=5}
[2017-10-02 14:02:58,738]DEBUG  8103[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=6, dimensionName=Package, numberOfProduct=10}
[2017-10-02 14:02:58,738]DEBUG  8103[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=4, dimensionName=Item, numberOfProduct=1}
[2017-10-02 14:02:58,738]DEBUG  8103[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,738]DEBUG  8103[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID7_0_, this_.DimensionName as Dimensio2_7_0_, this_.NumberOfProducts as NumberOf3_7_0_ from Dimensions this_ where this_.NumberOfProducts=?
[2017-10-02 14:02:58,739]DEBUG  8104[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-02 14:02:58,739]DEBUG  8104[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Dimension#6]
[2017-10-02 14:02:58,739]DEBUG  8104[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-02 14:02:58,739]DEBUG  8104[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,739]DEBUG  8104[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-02 14:02:58,740]DEBUG  8105[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:58,740]DEBUG  8105[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:58,740]DEBUG  8105[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-02 14:02:58,740]DEBUG  8105[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:58,740]DEBUG  8105[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:58,740]DEBUG  8105[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=5, dimensionName=Box, numberOfProduct=5}
[2017-10-02 14:02:58,740]DEBUG  8105[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=6, dimensionName=Package, numberOfProduct=10}
[2017-10-02 14:02:58,740]DEBUG  8105[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=4, dimensionName=Item, numberOfProduct=1}
[2017-10-02 14:02:58,741]DEBUG  8106[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,741]DEBUG  8106[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-02 14:02:58,741]DEBUG  8106[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,741]DEBUG  8106[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7bdd5f1b testClass = DimensionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@174b1f9b, testMethod = testFindDimensionByNumberOfProducts_Int@DimensionDaoTest, testException = [null]]]
[2017-10-02 14:02:58,741]DEBUG  8106[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-02 14:02:58,741]DEBUG  8106[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@f9caa5]
[2017-10-02 14:02:58,742]DEBUG  8107[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-02 14:02:58,765]DEBUG  8130[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-02 14:02:58,765]DEBUG  8130[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-02 14:02:58,765]DEBUG  8130[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@f9caa5] after transaction
[2017-10-02 14:02:58,765]DEBUG  8130[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-02 14:02:58,765]DEBUG  8130[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-02 14:02:58,765]DEBUG  8130[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-02 14:02:58,766] INFO  8131[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@7bdd5f1b testClass = DimensionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@174b1f9b, testMethod = testFindDimensionByNumberOfProducts_Int@DimensionDaoTest, testException = [null]]]
[2017-10-02 14:02:58,766]DEBUG  8131[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@7bdd5f1b testClass = DimensionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@174b1f9b, testMethod = testFindDimensionByNumberOfProducts_Int@DimensionDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-02 14:02:58,767]DEBUG  8132[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest]
[2017-10-02 14:02:58,767]DEBUG  8132[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest]
[2017-10-02 14:02:58,767]DEBUG  8132[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@7bdd5f1b testClass = DimensionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@4463fb3, testMethod = [null], testException = [null]]].
[2017-10-02 14:02:58,767]DEBUG  8132[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-02 14:02:58,767]DEBUG  8132[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-02 14:02:58,767]DEBUG  8132[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-02 14:02:58,768]DEBUG  8133[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-02 14:02:58,768]DEBUG  8133[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-02 14:02:58,768]DEBUG  8133[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-02 14:02:58,768]DEBUG  8133[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-02 14:02:58,768]DEBUG  8133[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-02 14:02:58,768]DEBUG  8133[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-02 14:02:58,768]DEBUG  8133[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-02 14:02:58,768]DEBUG  8133[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-02 14:02:58,768]DEBUG  8133[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-02 14:02:58,769]DEBUG  8134[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-02 14:02:58,769]DEBUG  8134[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-02 14:02:58,769]DEBUG  8134[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-02 14:02:58,769]DEBUG  8134[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-02 14:02:58,769]DEBUG  8134[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-02 14:02:58,769]DEBUG  8134[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-02 14:02:58,769]DEBUG  8134[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-02 14:02:58,769]DEBUG  8134[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-02 14:02:58,769]DEBUG  8134[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-02 14:02:58,770]DEBUG  8135[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-02 14:02:58,770]DEBUG  8135[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@4463fb3]
[2017-10-02 14:02:58,770]DEBUG  8135[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindDimensionByNumberOfProducts_DimensionTypesEnum' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-02 14:02:58,770]DEBUG  8135[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@7bdd5f1b testClass = DimensionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@4463fb3, testMethod = testFindDimensionByNumberOfProducts_DimensionTypesEnum@DimensionDaoTest, testException = [null]]]
[2017-10-02 14:02:58,770]DEBUG  8135[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-02 14:02:58,771]DEBUG  8136[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindDimensionByNumberOfProducts_DimensionTypesEnum]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-02 14:02:58,771]DEBUG  8136[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15069421787
[2017-10-02 14:02:58,771]DEBUG  8136[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@36c11c0f] for Hibernate transaction
[2017-10-02 14:02:58,771]DEBUG  8136[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@36c11c0f]
[2017-10-02 14:02:58,771]DEBUG  8136[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-02 14:02:58,771]DEBUG  8136[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-02 14:02:58,772]DEBUG  8137[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-02 14:02:58,772]DEBUG  8137[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7bdd5f1b testClass = DimensionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@4463fb3, testMethod = testFindDimensionByNumberOfProducts_DimensionTypesEnum@DimensionDaoTest, testException = [null]]]
[2017-10-02 14:02:58,772] INFO  8137[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (3): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@24af5c74]; rollback [true]
[2017-10-02 14:02:58,772]DEBUG  8137[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,773]DEBUG  8138[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-02 14:02:58,773]DEBUG  8138[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,774]DEBUG  8139[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,774]DEBUG  8139[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-02 14:02:58,775]DEBUG  8140[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,775]DEBUG  8140[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,775]DEBUG  8140[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-02 14:02:58,776]DEBUG  8141[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,776]DEBUG  8141[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,777]DEBUG  8142[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-02 14:02:58,777]DEBUG  8142[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,778]DEBUG  8143[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,778]DEBUG  8143[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-02 14:02:58,778]DEBUG  8143[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,779]DEBUG  8144[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,779]DEBUG  8144[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-02 14:02:58,780]DEBUG  8145[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,780]DEBUG  8145[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,780]DEBUG  8145[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-02 14:02:58,780]DEBUG  8145[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,781]DEBUG  8146[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,781]DEBUG  8146[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-02 14:02:58,781]DEBUG  8146[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,781]DEBUG  8146[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,782]DEBUG  8147[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-02 14:02:58,782]DEBUG  8147[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,783]DEBUG  8148[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:58,783]DEBUG  8148[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,783]DEBUG  8148[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Dimensions (DimensionName, NumberOfProducts) values (?, ?)
[2017-10-02 14:02:58,783]DEBUG  8148[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 7
[2017-10-02 14:02:58,784]DEBUG  8149[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,784]DEBUG  8149[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:58,784]DEBUG  8149[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,784]DEBUG  8149[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Dimensions (DimensionName, NumberOfProducts) values (?, ?)
[2017-10-02 14:02:58,784]DEBUG  8149[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 8
[2017-10-02 14:02:58,785]DEBUG  8150[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,785]DEBUG  8150[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:58,785]DEBUG  8150[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,785]DEBUG  8150[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Dimensions (DimensionName, NumberOfProducts) values (?, ?)
[2017-10-02 14:02:58,785]DEBUG  8150[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 9
[2017-10-02 14:02:58,785]DEBUG  8150[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,786]DEBUG  8151[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:58,786]DEBUG  8151[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:58,786]DEBUG  8151[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-02 14:02:58,786]DEBUG  8151[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:58,786]DEBUG  8151[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:58,787]DEBUG  8152[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=9, dimensionName=Package, numberOfProduct=10}
[2017-10-02 14:02:58,787]DEBUG  8152[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=7, dimensionName=Item, numberOfProduct=1}
[2017-10-02 14:02:58,787]DEBUG  8152[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=8, dimensionName=Box, numberOfProduct=5}
[2017-10-02 14:02:58,787]DEBUG  8152[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,787]DEBUG  8152[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID7_0_, this_.DimensionName as Dimensio2_7_0_, this_.NumberOfProducts as NumberOf3_7_0_ from Dimensions this_ where this_.NumberOfProducts=?
[2017-10-02 14:02:58,787]DEBUG  8152[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-02 14:02:58,788]DEBUG  8153[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Dimension#7]
[2017-10-02 14:02:58,788]DEBUG  8153[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-02 14:02:58,788]DEBUG  8153[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,788]DEBUG  8153[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-02 14:02:58,788]DEBUG  8153[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:58,788]DEBUG  8153[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:58,789]DEBUG  8154[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-02 14:02:58,789]DEBUG  8154[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:58,789]DEBUG  8154[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:58,789]DEBUG  8154[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=9, dimensionName=Package, numberOfProduct=10}
[2017-10-02 14:02:58,789]DEBUG  8154[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=7, dimensionName=Item, numberOfProduct=1}
[2017-10-02 14:02:58,789]DEBUG  8154[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=8, dimensionName=Box, numberOfProduct=5}
[2017-10-02 14:02:58,789]DEBUG  8154[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,789]DEBUG  8154[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID7_0_, this_.DimensionName as Dimensio2_7_0_, this_.NumberOfProducts as NumberOf3_7_0_ from Dimensions this_ where this_.NumberOfProducts=?
[2017-10-02 14:02:58,790]DEBUG  8155[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-02 14:02:58,790]DEBUG  8155[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Dimension#8]
[2017-10-02 14:02:58,790]DEBUG  8155[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-02 14:02:58,790]DEBUG  8155[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,790]DEBUG  8155[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-02 14:02:58,791]DEBUG  8156[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:58,791]DEBUG  8156[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:58,791]DEBUG  8156[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-02 14:02:58,791]DEBUG  8156[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:58,791]DEBUG  8156[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:58,791]DEBUG  8156[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=9, dimensionName=Package, numberOfProduct=10}
[2017-10-02 14:02:58,791]DEBUG  8156[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=7, dimensionName=Item, numberOfProduct=1}
[2017-10-02 14:02:58,792]DEBUG  8157[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=8, dimensionName=Box, numberOfProduct=5}
[2017-10-02 14:02:58,792]DEBUG  8157[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,792]DEBUG  8157[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID7_0_, this_.DimensionName as Dimensio2_7_0_, this_.NumberOfProducts as NumberOf3_7_0_ from Dimensions this_ where this_.NumberOfProducts=?
[2017-10-02 14:02:58,792]DEBUG  8157[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-02 14:02:58,792]DEBUG  8157[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Dimension#9]
[2017-10-02 14:02:58,793]DEBUG  8158[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-02 14:02:58,793]DEBUG  8158[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,793]DEBUG  8158[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-02 14:02:58,793]DEBUG  8158[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:58,793]DEBUG  8158[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:58,793]DEBUG  8158[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-02 14:02:58,793]DEBUG  8158[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:58,793]DEBUG  8158[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:58,794]DEBUG  8159[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=9, dimensionName=Package, numberOfProduct=10}
[2017-10-02 14:02:58,794]DEBUG  8159[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=7, dimensionName=Item, numberOfProduct=1}
[2017-10-02 14:02:58,794]DEBUG  8159[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=8, dimensionName=Box, numberOfProduct=5}
[2017-10-02 14:02:58,794]DEBUG  8159[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,794]DEBUG  8159[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-02 14:02:58,794]DEBUG  8159[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,795]DEBUG  8160[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7bdd5f1b testClass = DimensionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@4463fb3, testMethod = testFindDimensionByNumberOfProducts_DimensionTypesEnum@DimensionDaoTest, testException = [null]]]
[2017-10-02 14:02:58,795]DEBUG  8160[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-02 14:02:58,795]DEBUG  8160[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@36c11c0f]
[2017-10-02 14:02:58,795]DEBUG  8160[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-02 14:02:58,848]DEBUG  8213[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-02 14:02:58,848]DEBUG  8213[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-02 14:02:58,849]DEBUG  8214[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@36c11c0f] after transaction
[2017-10-02 14:02:58,849]DEBUG  8214[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-02 14:02:58,849]DEBUG  8214[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-02 14:02:58,849]DEBUG  8214[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-02 14:02:58,849] INFO  8214[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@7bdd5f1b testClass = DimensionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@4463fb3, testMethod = testFindDimensionByNumberOfProducts_DimensionTypesEnum@DimensionDaoTest, testException = [null]]]
[2017-10-02 14:02:58,850]DEBUG  8215[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@7bdd5f1b testClass = DimensionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@4463fb3, testMethod = testFindDimensionByNumberOfProducts_DimensionTypesEnum@DimensionDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-02 14:02:58,851]DEBUG  8216[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest]
[2017-10-02 14:02:58,851]DEBUG  8216[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest]
[2017-10-02 14:02:58,852]DEBUG  8217[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@7bdd5f1b testClass = DimensionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@192cc302, testMethod = [null], testException = [null]]].
[2017-10-02 14:02:58,852]DEBUG  8217[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-02 14:02:58,852]DEBUG  8217[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-02 14:02:58,852]DEBUG  8217[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-02 14:02:58,853]DEBUG  8218[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-02 14:02:58,853]DEBUG  8218[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-02 14:02:58,853]DEBUG  8218[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-02 14:02:58,853]DEBUG  8218[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-02 14:02:58,854]DEBUG  8219[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-02 14:02:58,854]DEBUG  8219[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-02 14:02:58,854]DEBUG  8219[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-02 14:02:58,854]DEBUG  8219[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-02 14:02:58,855]DEBUG  8220[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-02 14:02:58,855]DEBUG  8220[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-02 14:02:58,855]DEBUG  8220[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-02 14:02:58,855]DEBUG  8220[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-02 14:02:58,856]DEBUG  8221[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-02 14:02:58,856]DEBUG  8221[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-02 14:02:58,856]DEBUG  8221[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-02 14:02:58,856]DEBUG  8221[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-02 14:02:58,857]DEBUG  8222[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-02 14:02:58,857]DEBUG  8222[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-02 14:02:58,857]DEBUG  8222[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-02 14:02:58,857]DEBUG  8222[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@192cc302]
[2017-10-02 14:02:58,859]DEBUG  8224[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetItemDimension' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-02 14:02:58,859]DEBUG  8224[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@7bdd5f1b testClass = DimensionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@192cc302, testMethod = testGetItemDimension@DimensionDaoTest, testException = [null]]]
[2017-10-02 14:02:58,859]DEBUG  8224[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-02 14:02:58,861]DEBUG  8226[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testGetItemDimension]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-02 14:02:58,861]DEBUG  8226[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15069421788
[2017-10-02 14:02:58,861]DEBUG  8226[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@45cf68ff] for Hibernate transaction
[2017-10-02 14:02:58,861]DEBUG  8226[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@45cf68ff]
[2017-10-02 14:02:58,862]DEBUG  8227[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-02 14:02:58,862]DEBUG  8227[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-02 14:02:58,863]DEBUG  8228[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-02 14:02:58,863]DEBUG  8228[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7bdd5f1b testClass = DimensionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@192cc302, testMethod = testGetItemDimension@DimensionDaoTest, testException = [null]]]
[2017-10-02 14:02:58,863] INFO  8228[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (4): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@24af5c74]; rollback [true]
[2017-10-02 14:02:58,863]DEBUG  8228[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,863]DEBUG  8228[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-02 14:02:58,864]DEBUG  8229[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,864]DEBUG  8229[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,864]DEBUG  8229[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-02 14:02:58,864]DEBUG  8229[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,865]DEBUG  8230[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,865]DEBUG  8230[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-02 14:02:58,865]DEBUG  8230[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,865]DEBUG  8230[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,865]DEBUG  8230[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-02 14:02:58,866]DEBUG  8231[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,866]DEBUG  8231[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,866]DEBUG  8231[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-02 14:02:58,866]DEBUG  8231[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,866]DEBUG  8231[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,866]DEBUG  8231[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-02 14:02:58,867]DEBUG  8232[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,867]DEBUG  8232[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,867]DEBUG  8232[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-02 14:02:58,867]DEBUG  8232[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,868]DEBUG  8233[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,868]DEBUG  8233[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-02 14:02:58,868]DEBUG  8233[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,868]DEBUG  8233[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,868]DEBUG  8233[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-02 14:02:58,869]DEBUG  8234[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,869]DEBUG  8234[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:58,869]DEBUG  8234[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,869]DEBUG  8234[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Dimensions (DimensionName, NumberOfProducts) values (?, ?)
[2017-10-02 14:02:58,870]DEBUG  8235[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 10
[2017-10-02 14:02:58,870]DEBUG  8235[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,870]DEBUG  8235[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:58,870]DEBUG  8235[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,871]DEBUG  8236[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Dimensions (DimensionName, NumberOfProducts) values (?, ?)
[2017-10-02 14:02:58,871]DEBUG  8236[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 11
[2017-10-02 14:02:58,871]DEBUG  8236[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,872]DEBUG  8237[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:58,872]DEBUG  8237[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,872]DEBUG  8237[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Dimensions (DimensionName, NumberOfProducts) values (?, ?)
[2017-10-02 14:02:58,872]DEBUG  8237[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 12
[2017-10-02 14:02:58,873]DEBUG  8238[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,873]DEBUG  8238[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:58,873]DEBUG  8238[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:58,873]DEBUG  8238[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-02 14:02:58,874]DEBUG  8239[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:58,874]DEBUG  8239[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:58,874]DEBUG  8239[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=10, dimensionName=Item, numberOfProduct=1}
[2017-10-02 14:02:58,874]DEBUG  8239[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=11, dimensionName=Box, numberOfProduct=5}
[2017-10-02 14:02:58,874]DEBUG  8239[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=12, dimensionName=Package, numberOfProduct=10}
[2017-10-02 14:02:58,874]DEBUG  8239[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,875]DEBUG  8240[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID7_0_, this_.DimensionName as Dimensio2_7_0_, this_.NumberOfProducts as NumberOf3_7_0_ from Dimensions this_ where this_.NumberOfProducts=?
[2017-10-02 14:02:58,875]DEBUG  8240[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-02 14:02:58,875]DEBUG  8240[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Dimension#10]
[2017-10-02 14:02:58,876]DEBUG  8241[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-02 14:02:58,876]DEBUG  8241[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,876]DEBUG  8241[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-02 14:02:58,876]DEBUG  8241[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:58,876]DEBUG  8241[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:58,877]DEBUG  8242[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-02 14:02:58,877]DEBUG  8242[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:58,877]DEBUG  8242[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:58,877]DEBUG  8242[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=10, dimensionName=Item, numberOfProduct=1}
[2017-10-02 14:02:58,877]DEBUG  8242[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=11, dimensionName=Box, numberOfProduct=5}
[2017-10-02 14:02:58,877]DEBUG  8242[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=12, dimensionName=Package, numberOfProduct=10}
[2017-10-02 14:02:58,877]DEBUG  8242[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,878]DEBUG  8243[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-02 14:02:58,878]DEBUG  8243[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,878]DEBUG  8243[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7bdd5f1b testClass = DimensionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@192cc302, testMethod = testGetItemDimension@DimensionDaoTest, testException = [null]]]
[2017-10-02 14:02:58,878]DEBUG  8243[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-02 14:02:58,879]DEBUG  8244[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@45cf68ff]
[2017-10-02 14:02:58,879]DEBUG  8244[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-02 14:02:58,923]DEBUG  8288[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-02 14:02:58,924]DEBUG  8289[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-02 14:02:58,925]DEBUG  8290[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@45cf68ff] after transaction
[2017-10-02 14:02:58,925]DEBUG  8290[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-02 14:02:58,925]DEBUG  8290[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-02 14:02:58,926]DEBUG  8291[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-02 14:02:58,926] INFO  8291[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@7bdd5f1b testClass = DimensionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@192cc302, testMethod = testGetItemDimension@DimensionDaoTest, testException = [null]]]
[2017-10-02 14:02:58,927]DEBUG  8292[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@7bdd5f1b testClass = DimensionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@192cc302, testMethod = testGetItemDimension@DimensionDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-02 14:02:58,928]DEBUG  8293[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest]
[2017-10-02 14:02:58,928]DEBUG  8293[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest]
[2017-10-02 14:02:58,929]DEBUG  8294[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@7bdd5f1b testClass = DimensionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@6f124533, testMethod = [null], testException = [null]]].
[2017-10-02 14:02:58,929]DEBUG  8294[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-02 14:02:58,930]DEBUG  8295[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-02 14:02:58,930]DEBUG  8295[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-02 14:02:58,930]DEBUG  8295[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-02 14:02:58,931]DEBUG  8296[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-02 14:02:58,931]DEBUG  8296[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-02 14:02:58,931]DEBUG  8296[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-02 14:02:58,932]DEBUG  8297[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-02 14:02:58,932]DEBUG  8297[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-02 14:02:58,932]DEBUG  8297[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-02 14:02:58,932]DEBUG  8297[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-02 14:02:58,933]DEBUG  8298[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-02 14:02:58,933]DEBUG  8298[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-02 14:02:58,933]DEBUG  8298[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-02 14:02:58,934]DEBUG  8299[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-02 14:02:58,934]DEBUG  8299[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-02 14:02:58,934]DEBUG  8299[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-02 14:02:58,934]DEBUG  8299[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-02 14:02:58,935]DEBUG  8300[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-02 14:02:58,935]DEBUG  8300[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-02 14:02:58,935]DEBUG  8300[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-02 14:02:58,936]DEBUG  8301[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-02 14:02:58,936]DEBUG  8301[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@6f124533]
[2017-10-02 14:02:58,937]DEBUG  8302[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetBoxDimension' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-02 14:02:58,937]DEBUG  8302[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@7bdd5f1b testClass = DimensionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@6f124533, testMethod = testGetBoxDimension@DimensionDaoTest, testException = [null]]]
[2017-10-02 14:02:58,938]DEBUG  8303[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-02 14:02:58,939]DEBUG  8304[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testGetBoxDimension]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-02 14:02:58,940]DEBUG  8305[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15069421789
[2017-10-02 14:02:58,940]DEBUG  8305[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@798e9678] for Hibernate transaction
[2017-10-02 14:02:58,941]DEBUG  8306[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@798e9678]
[2017-10-02 14:02:58,941]DEBUG  8306[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-02 14:02:58,941]DEBUG  8306[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-02 14:02:58,941]DEBUG  8306[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-02 14:02:58,942]DEBUG  8307[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7bdd5f1b testClass = DimensionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@6f124533, testMethod = testGetBoxDimension@DimensionDaoTest, testException = [null]]]
[2017-10-02 14:02:58,942] INFO  8307[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (5): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@24af5c74]; rollback [true]
[2017-10-02 14:02:58,943]DEBUG  8308[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,943]DEBUG  8308[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-02 14:02:58,943]DEBUG  8308[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,944]DEBUG  8309[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,944]DEBUG  8309[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-02 14:02:58,944]DEBUG  8309[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,944]DEBUG  8309[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,945]DEBUG  8310[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-02 14:02:58,945]DEBUG  8310[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,945]DEBUG  8310[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,945]DEBUG  8310[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-02 14:02:58,946]DEBUG  8311[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,946]DEBUG  8311[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,946]DEBUG  8311[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-02 14:02:58,946]DEBUG  8311[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,946]DEBUG  8311[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,947]DEBUG  8312[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-02 14:02:58,947]DEBUG  8312[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,947]DEBUG  8312[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,947]DEBUG  8312[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-02 14:02:58,948]DEBUG  8313[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,948]DEBUG  8313[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,948]DEBUG  8313[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-02 14:02:58,948]DEBUG  8313[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,948]DEBUG  8313[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,949]DEBUG  8314[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-02 14:02:58,949]DEBUG  8314[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,949]DEBUG  8314[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:58,949]DEBUG  8314[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,950]DEBUG  8315[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Dimensions (DimensionName, NumberOfProducts) values (?, ?)
[2017-10-02 14:02:58,950]DEBUG  8315[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 13
[2017-10-02 14:02:58,950]DEBUG  8315[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,951]DEBUG  8316[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:58,951]DEBUG  8316[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,951]DEBUG  8316[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Dimensions (DimensionName, NumberOfProducts) values (?, ?)
[2017-10-02 14:02:58,951]DEBUG  8316[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 14
[2017-10-02 14:02:58,952]DEBUG  8317[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,952]DEBUG  8317[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:58,952]DEBUG  8317[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,952]DEBUG  8317[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Dimensions (DimensionName, NumberOfProducts) values (?, ?)
[2017-10-02 14:02:58,953]DEBUG  8318[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 15
[2017-10-02 14:02:58,953]DEBUG  8318[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,954]DEBUG  8319[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:58,954]DEBUG  8319[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:58,954]DEBUG  8319[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-02 14:02:58,954]DEBUG  8319[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:58,954]DEBUG  8319[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:58,954]DEBUG  8319[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=13, dimensionName=Item, numberOfProduct=1}
[2017-10-02 14:02:58,955]DEBUG  8320[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=14, dimensionName=Box, numberOfProduct=5}
[2017-10-02 14:02:58,955]DEBUG  8320[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=15, dimensionName=Package, numberOfProduct=10}
[2017-10-02 14:02:58,955]DEBUG  8320[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,955]DEBUG  8320[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID7_0_, this_.DimensionName as Dimensio2_7_0_, this_.NumberOfProducts as NumberOf3_7_0_ from Dimensions this_ where this_.NumberOfProducts=?
[2017-10-02 14:02:58,956]DEBUG  8321[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-02 14:02:58,956]DEBUG  8321[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Dimension#14]
[2017-10-02 14:02:58,956]DEBUG  8321[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-02 14:02:58,956]DEBUG  8321[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,956]DEBUG  8321[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-02 14:02:58,957]DEBUG  8322[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:58,957]DEBUG  8322[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:58,957]DEBUG  8322[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-02 14:02:58,957]DEBUG  8322[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:58,957]DEBUG  8322[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:58,958]DEBUG  8323[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=13, dimensionName=Item, numberOfProduct=1}
[2017-10-02 14:02:58,958]DEBUG  8323[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=14, dimensionName=Box, numberOfProduct=5}
[2017-10-02 14:02:58,958]DEBUG  8323[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=15, dimensionName=Package, numberOfProduct=10}
[2017-10-02 14:02:58,958]DEBUG  8323[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:58,958]DEBUG  8323[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-02 14:02:58,959]DEBUG  8324[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:58,959]DEBUG  8324[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7bdd5f1b testClass = DimensionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@6f124533, testMethod = testGetBoxDimension@DimensionDaoTest, testException = [null]]]
[2017-10-02 14:02:58,959]DEBUG  8324[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-02 14:02:58,959]DEBUG  8324[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@798e9678]
[2017-10-02 14:02:58,959]DEBUG  8324[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-02 14:02:59,098]DEBUG  8463[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-02 14:02:59,099]DEBUG  8464[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-02 14:02:59,099]DEBUG  8464[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@798e9678] after transaction
[2017-10-02 14:02:59,100]DEBUG  8465[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-02 14:02:59,100]DEBUG  8465[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-02 14:02:59,100]DEBUG  8465[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-02 14:02:59,101] INFO  8466[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@7bdd5f1b testClass = DimensionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@6f124533, testMethod = testGetBoxDimension@DimensionDaoTest, testException = [null]]]
[2017-10-02 14:02:59,102]DEBUG  8467[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@7bdd5f1b testClass = DimensionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@6f124533, testMethod = testGetBoxDimension@DimensionDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-02 14:02:59,103]DEBUG  8468[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest]
[2017-10-02 14:02:59,103]DEBUG  8468[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest]
[2017-10-02 14:02:59,104]DEBUG  8469[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@7bdd5f1b testClass = DimensionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@13477747, testMethod = [null], testException = [null]]].
[2017-10-02 14:02:59,104]DEBUG  8469[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-02 14:02:59,105]DEBUG  8470[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-02 14:02:59,105]DEBUG  8470[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-02 14:02:59,105]DEBUG  8470[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-02 14:02:59,106]DEBUG  8471[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-02 14:02:59,106]DEBUG  8471[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-02 14:02:59,106]DEBUG  8471[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-02 14:02:59,106]DEBUG  8471[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-02 14:02:59,107]DEBUG  8472[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-02 14:02:59,107]DEBUG  8472[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-02 14:02:59,107]DEBUG  8472[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-02 14:02:59,108]DEBUG  8473[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-02 14:02:59,108]DEBUG  8473[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-02 14:02:59,108]DEBUG  8473[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-02 14:02:59,109]DEBUG  8474[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-02 14:02:59,109]DEBUG  8474[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-02 14:02:59,109]DEBUG  8474[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-02 14:02:59,109]DEBUG  8474[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-02 14:02:59,110]DEBUG  8475[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-02 14:02:59,110]DEBUG  8475[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-02 14:02:59,110]DEBUG  8475[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-02 14:02:59,111]DEBUG  8476[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-02 14:02:59,111]DEBUG  8476[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@13477747]
[2017-10-02 14:02:59,112]DEBUG  8477[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetPackageDimension' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-02 14:02:59,112]DEBUG  8477[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@7bdd5f1b testClass = DimensionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@13477747, testMethod = testGetPackageDimension@DimensionDaoTest, testException = [null]]]
[2017-10-02 14:02:59,113]DEBUG  8478[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-02 14:02:59,114]DEBUG  8479[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testGetPackageDimension]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-02 14:02:59,114]DEBUG  8479[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15069421791
[2017-10-02 14:02:59,114]DEBUG  8479[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@25bde0f0] for Hibernate transaction
[2017-10-02 14:02:59,115]DEBUG  8480[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@25bde0f0]
[2017-10-02 14:02:59,115]DEBUG  8480[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-02 14:02:59,115]DEBUG  8480[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-02 14:02:59,116]DEBUG  8481[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-02 14:02:59,116]DEBUG  8481[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7bdd5f1b testClass = DimensionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@13477747, testMethod = testGetPackageDimension@DimensionDaoTest, testException = [null]]]
[2017-10-02 14:02:59,116] INFO  8481[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (6): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@24af5c74]; rollback [true]
[2017-10-02 14:02:59,117]DEBUG  8482[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,117]DEBUG  8482[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-02 14:02:59,118]DEBUG  8483[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,118]DEBUG  8483[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,119]DEBUG  8484[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-02 14:02:59,119]DEBUG  8484[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,120]DEBUG  8485[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,120]DEBUG  8485[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-02 14:02:59,121]DEBUG  8486[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,121]DEBUG  8486[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,121]DEBUG  8486[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-02 14:02:59,122]DEBUG  8487[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,122]DEBUG  8487[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,123]DEBUG  8488[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-02 14:02:59,123]DEBUG  8488[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,123]DEBUG  8488[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,123]DEBUG  8488[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-02 14:02:59,124]DEBUG  8489[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,124]DEBUG  8489[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,124]DEBUG  8489[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-02 14:02:59,124]DEBUG  8489[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,125]DEBUG  8490[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,125]DEBUG  8490[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-02 14:02:59,125]DEBUG  8490[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,125]DEBUG  8490[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,125]DEBUG  8490[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-02 14:02:59,126]DEBUG  8491[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,126]DEBUG  8491[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:59,126]DEBUG  8491[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,126]DEBUG  8491[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Dimensions (DimensionName, NumberOfProducts) values (?, ?)
[2017-10-02 14:02:59,127]DEBUG  8492[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 16
[2017-10-02 14:02:59,127]DEBUG  8492[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,127]DEBUG  8492[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:59,127]DEBUG  8492[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,128]DEBUG  8493[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Dimensions (DimensionName, NumberOfProducts) values (?, ?)
[2017-10-02 14:02:59,128]DEBUG  8493[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 17
[2017-10-02 14:02:59,128]DEBUG  8493[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,128]DEBUG  8493[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:59,129]DEBUG  8494[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,129]DEBUG  8494[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Dimensions (DimensionName, NumberOfProducts) values (?, ?)
[2017-10-02 14:02:59,129]DEBUG  8494[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 18
[2017-10-02 14:02:59,129]DEBUG  8494[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,130]DEBUG  8495[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:59,130]DEBUG  8495[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:59,130]DEBUG  8495[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-02 14:02:59,130]DEBUG  8495[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:59,130]DEBUG  8495[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:59,131]DEBUG  8496[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=17, dimensionName=Box, numberOfProduct=5}
[2017-10-02 14:02:59,131]DEBUG  8496[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=18, dimensionName=Package, numberOfProduct=10}
[2017-10-02 14:02:59,131]DEBUG  8496[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=16, dimensionName=Item, numberOfProduct=1}
[2017-10-02 14:02:59,131]DEBUG  8496[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,131]DEBUG  8496[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID7_0_, this_.DimensionName as Dimensio2_7_0_, this_.NumberOfProducts as NumberOf3_7_0_ from Dimensions this_ where this_.NumberOfProducts=?
[2017-10-02 14:02:59,132]DEBUG  8497[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-02 14:02:59,132]DEBUG  8497[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Dimension#18]
[2017-10-02 14:02:59,132]DEBUG  8497[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-02 14:02:59,132]DEBUG  8497[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,132]DEBUG  8497[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-02 14:02:59,133]DEBUG  8498[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:59,133]DEBUG  8498[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:59,133]DEBUG  8498[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-02 14:02:59,133]DEBUG  8498[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:59,133]DEBUG  8498[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:59,133]DEBUG  8498[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=17, dimensionName=Box, numberOfProduct=5}
[2017-10-02 14:02:59,134]DEBUG  8499[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=18, dimensionName=Package, numberOfProduct=10}
[2017-10-02 14:02:59,134]DEBUG  8499[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=16, dimensionName=Item, numberOfProduct=1}
[2017-10-02 14:02:59,134]DEBUG  8499[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,134]DEBUG  8499[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-02 14:02:59,134]DEBUG  8499[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,134]DEBUG  8499[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7bdd5f1b testClass = DimensionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@13477747, testMethod = testGetPackageDimension@DimensionDaoTest, testException = [null]]]
[2017-10-02 14:02:59,135]DEBUG  8500[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-02 14:02:59,135]DEBUG  8500[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@25bde0f0]
[2017-10-02 14:02:59,135]DEBUG  8500[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-02 14:02:59,183]DEBUG  8548[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-02 14:02:59,183]DEBUG  8548[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-02 14:02:59,184]DEBUG  8549[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@25bde0f0] after transaction
[2017-10-02 14:02:59,184]DEBUG  8549[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-02 14:02:59,184]DEBUG  8549[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-02 14:02:59,185]DEBUG  8550[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-02 14:02:59,185] INFO  8550[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@7bdd5f1b testClass = DimensionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@13477747, testMethod = testGetPackageDimension@DimensionDaoTest, testException = [null]]]
[2017-10-02 14:02:59,186]DEBUG  8551[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@7bdd5f1b testClass = DimensionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@13477747, testMethod = testGetPackageDimension@DimensionDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-02 14:02:59,187]DEBUG  8552[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest]
[2017-10-02 14:02:59,187]DEBUG  8552[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest]
[2017-10-02 14:02:59,188]DEBUG  8553[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@7bdd5f1b testClass = DimensionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@642e89d, testMethod = [null], testException = [null]]].
[2017-10-02 14:02:59,188]DEBUG  8553[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-02 14:02:59,189]DEBUG  8554[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-02 14:02:59,189]DEBUG  8554[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-02 14:02:59,189]DEBUG  8554[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-02 14:02:59,190]DEBUG  8555[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-02 14:02:59,190]DEBUG  8555[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-02 14:02:59,190]DEBUG  8555[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-02 14:02:59,191]DEBUG  8556[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-02 14:02:59,191]DEBUG  8556[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-02 14:02:59,191]DEBUG  8556[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-02 14:02:59,191]DEBUG  8556[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-02 14:02:59,192]DEBUG  8557[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-02 14:02:59,192]DEBUG  8557[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-02 14:02:59,192]DEBUG  8557[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-02 14:02:59,193]DEBUG  8558[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-02 14:02:59,193]DEBUG  8558[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-02 14:02:59,193]DEBUG  8558[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-02 14:02:59,193]DEBUG  8558[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-02 14:02:59,194]DEBUG  8559[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-02 14:02:59,194]DEBUG  8559[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-02 14:02:59,194]DEBUG  8559[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-02 14:02:59,195]DEBUG  8560[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-02 14:02:59,195]DEBUG  8560[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@642e89d]
[2017-10-02 14:02:59,196]DEBUG  8561[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindDimensionByName_String' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-02 14:02:59,196]DEBUG  8561[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@7bdd5f1b testClass = DimensionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@642e89d, testMethod = testFindDimensionByName_String@DimensionDaoTest, testException = [null]]]
[2017-10-02 14:02:59,196]DEBUG  8561[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-02 14:02:59,198]DEBUG  8563[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindDimensionByName_String]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-02 14:02:59,198]DEBUG  8563[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15069421791
[2017-10-02 14:02:59,198]DEBUG  8563[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@641e8314] for Hibernate transaction
[2017-10-02 14:02:59,198]DEBUG  8563[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@641e8314]
[2017-10-02 14:02:59,199]DEBUG  8564[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-02 14:02:59,199]DEBUG  8564[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-02 14:02:59,199]DEBUG  8564[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-02 14:02:59,200]DEBUG  8565[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7bdd5f1b testClass = DimensionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@642e89d, testMethod = testFindDimensionByName_String@DimensionDaoTest, testException = [null]]]
[2017-10-02 14:02:59,200] INFO  8565[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (7): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@24af5c74]; rollback [true]
[2017-10-02 14:02:59,200]DEBUG  8565[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,201]DEBUG  8566[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-02 14:02:59,201]DEBUG  8566[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,202]DEBUG  8567[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,202]DEBUG  8567[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-02 14:02:59,203]DEBUG  8568[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,203]DEBUG  8568[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,203]DEBUG  8568[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-02 14:02:59,204]DEBUG  8569[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,204]DEBUG  8569[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,204]DEBUG  8569[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-02 14:02:59,204]DEBUG  8569[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,204]DEBUG  8569[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,205]DEBUG  8570[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-02 14:02:59,205]DEBUG  8570[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,205]DEBUG  8570[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,205]DEBUG  8570[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-02 14:02:59,206]DEBUG  8571[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,206]DEBUG  8571[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,206]DEBUG  8571[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-02 14:02:59,206]DEBUG  8571[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,207]DEBUG  8572[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,207]DEBUG  8572[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-02 14:02:59,207]DEBUG  8572[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,207]DEBUG  8572[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,207]DEBUG  8572[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-02 14:02:59,208]DEBUG  8573[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,208]DEBUG  8573[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:59,208]DEBUG  8573[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,208]DEBUG  8573[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Dimensions (DimensionName, NumberOfProducts) values (?, ?)
[2017-10-02 14:02:59,209]DEBUG  8574[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 19
[2017-10-02 14:02:59,209]DEBUG  8574[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,209]DEBUG  8574[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:59,209]DEBUG  8574[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,210]DEBUG  8575[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Dimensions (DimensionName, NumberOfProducts) values (?, ?)
[2017-10-02 14:02:59,210]DEBUG  8575[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 20
[2017-10-02 14:02:59,210]DEBUG  8575[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,210]DEBUG  8575[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:59,211]DEBUG  8576[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,211]DEBUG  8576[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Dimensions (DimensionName, NumberOfProducts) values (?, ?)
[2017-10-02 14:02:59,211]DEBUG  8576[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 21
[2017-10-02 14:02:59,212]DEBUG  8577[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,212]DEBUG  8577[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:59,212]DEBUG  8577[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:59,212]DEBUG  8577[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-02 14:02:59,213]DEBUG  8578[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:59,213]DEBUG  8578[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:59,213]DEBUG  8578[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=19, dimensionName=Item, numberOfProduct=1}
[2017-10-02 14:02:59,213]DEBUG  8578[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=20, dimensionName=Box, numberOfProduct=5}
[2017-10-02 14:02:59,213]DEBUG  8578[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=21, dimensionName=Package, numberOfProduct=10}
[2017-10-02 14:02:59,213]DEBUG  8578[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,214]DEBUG  8579[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID7_0_, this_.DimensionName as Dimensio2_7_0_, this_.NumberOfProducts as NumberOf3_7_0_ from Dimensions this_ where this_.DimensionName=?
[2017-10-02 14:02:59,214]DEBUG  8579[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-02 14:02:59,214]DEBUG  8579[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Dimension#19]
[2017-10-02 14:02:59,215]DEBUG  8580[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-02 14:02:59,215]DEBUG  8580[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,215]DEBUG  8580[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-02 14:02:59,215]DEBUG  8580[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:59,215]DEBUG  8580[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:59,216]DEBUG  8581[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-02 14:02:59,216]DEBUG  8581[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:59,216]DEBUG  8581[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:59,216]DEBUG  8581[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=19, dimensionName=Item, numberOfProduct=1}
[2017-10-02 14:02:59,216]DEBUG  8581[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=20, dimensionName=Box, numberOfProduct=5}
[2017-10-02 14:02:59,216]DEBUG  8581[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=21, dimensionName=Package, numberOfProduct=10}
[2017-10-02 14:02:59,217]DEBUG  8582[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,217]DEBUG  8582[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID7_0_, this_.DimensionName as Dimensio2_7_0_, this_.NumberOfProducts as NumberOf3_7_0_ from Dimensions this_ where this_.DimensionName=?
[2017-10-02 14:02:59,217]DEBUG  8582[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-02 14:02:59,218]DEBUG  8583[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Dimension#20]
[2017-10-02 14:02:59,218]DEBUG  8583[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-02 14:02:59,218]DEBUG  8583[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,218]DEBUG  8583[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-02 14:02:59,218]DEBUG  8583[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:59,219]DEBUG  8584[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:59,219]DEBUG  8584[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-02 14:02:59,219]DEBUG  8584[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:59,219]DEBUG  8584[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:59,219]DEBUG  8584[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=19, dimensionName=Item, numberOfProduct=1}
[2017-10-02 14:02:59,219]DEBUG  8584[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=20, dimensionName=Box, numberOfProduct=5}
[2017-10-02 14:02:59,220]DEBUG  8585[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=21, dimensionName=Package, numberOfProduct=10}
[2017-10-02 14:02:59,220]DEBUG  8585[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,220]DEBUG  8585[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID7_0_, this_.DimensionName as Dimensio2_7_0_, this_.NumberOfProducts as NumberOf3_7_0_ from Dimensions this_ where this_.DimensionName=?
[2017-10-02 14:02:59,221]DEBUG  8586[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-02 14:02:59,221]DEBUG  8586[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Dimension#21]
[2017-10-02 14:02:59,221]DEBUG  8586[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-02 14:02:59,221]DEBUG  8586[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,221]DEBUG  8586[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-02 14:02:59,222]DEBUG  8587[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:59,222]DEBUG  8587[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:59,222]DEBUG  8587[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-02 14:02:59,222]DEBUG  8587[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:59,222]DEBUG  8587[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:59,222]DEBUG  8587[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=19, dimensionName=Item, numberOfProduct=1}
[2017-10-02 14:02:59,223]DEBUG  8588[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=20, dimensionName=Box, numberOfProduct=5}
[2017-10-02 14:02:59,223]DEBUG  8588[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=21, dimensionName=Package, numberOfProduct=10}
[2017-10-02 14:02:59,223]DEBUG  8588[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,223]DEBUG  8588[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-02 14:02:59,224]DEBUG  8589[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,224]DEBUG  8589[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7bdd5f1b testClass = DimensionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@642e89d, testMethod = testFindDimensionByName_String@DimensionDaoTest, testException = [null]]]
[2017-10-02 14:02:59,224]DEBUG  8589[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-02 14:02:59,224]DEBUG  8589[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@641e8314]
[2017-10-02 14:02:59,224]DEBUG  8589[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-02 14:02:59,258]DEBUG  8623[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-02 14:02:59,258]DEBUG  8623[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-02 14:02:59,258]DEBUG  8623[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@641e8314] after transaction
[2017-10-02 14:02:59,259]DEBUG  8624[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-02 14:02:59,259]DEBUG  8624[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-02 14:02:59,259]DEBUG  8624[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-02 14:02:59,259] INFO  8624[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@7bdd5f1b testClass = DimensionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@642e89d, testMethod = testFindDimensionByName_String@DimensionDaoTest, testException = [null]]]
[2017-10-02 14:02:59,260]DEBUG  8625[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@7bdd5f1b testClass = DimensionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@642e89d, testMethod = testFindDimensionByName_String@DimensionDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-02 14:02:59,260]DEBUG  8625[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest]
[2017-10-02 14:02:59,260]DEBUG  8625[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest]
[2017-10-02 14:02:59,260]DEBUG  8625[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@7bdd5f1b testClass = DimensionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@12fce942, testMethod = [null], testException = [null]]].
[2017-10-02 14:02:59,261]DEBUG  8626[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-02 14:02:59,261]DEBUG  8626[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-02 14:02:59,261]DEBUG  8626[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-02 14:02:59,261]DEBUG  8626[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-02 14:02:59,261]DEBUG  8626[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-02 14:02:59,261]DEBUG  8626[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-02 14:02:59,262]DEBUG  8627[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-02 14:02:59,262]DEBUG  8627[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-02 14:02:59,262]DEBUG  8627[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-02 14:02:59,262]DEBUG  8627[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-02 14:02:59,262]DEBUG  8627[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-02 14:02:59,262]DEBUG  8627[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-02 14:02:59,262]DEBUG  8627[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-02 14:02:59,262]DEBUG  8627[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-02 14:02:59,263]DEBUG  8628[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-02 14:02:59,263]DEBUG  8628[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-02 14:02:59,263]DEBUG  8628[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-02 14:02:59,263]DEBUG  8628[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-02 14:02:59,263]DEBUG  8628[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-02 14:02:59,264]DEBUG  8629[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-02 14:02:59,264]DEBUG  8629[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-02 14:02:59,264]DEBUG  8629[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-02 14:02:59,264]DEBUG  8629[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@12fce942]
[2017-10-02 14:02:59,266]DEBUG  8631[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testContextFile' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-02 14:02:59,266]DEBUG  8631[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@7bdd5f1b testClass = DimensionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@12fce942, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2017-10-02 14:02:59,266]DEBUG  8631[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-02 14:02:59,267]DEBUG  8632[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testContextFile]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-02 14:02:59,267]DEBUG  8632[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15069421792
[2017-10-02 14:02:59,267]DEBUG  8632[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@2ef83b4c] for Hibernate transaction
[2017-10-02 14:02:59,267]DEBUG  8632[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@2ef83b4c]
[2017-10-02 14:02:59,267]DEBUG  8632[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-02 14:02:59,268]DEBUG  8633[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-02 14:02:59,268]DEBUG  8633[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-02 14:02:59,268]DEBUG  8633[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7bdd5f1b testClass = DimensionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@12fce942, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2017-10-02 14:02:59,268] INFO  8633[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (8): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@24af5c74]; rollback [true]
[2017-10-02 14:02:59,268]DEBUG  8633[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,268]DEBUG  8633[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-02 14:02:59,269]DEBUG  8634[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,269]DEBUG  8634[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,270]DEBUG  8635[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-02 14:02:59,270]DEBUG  8635[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,270]DEBUG  8635[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,271]DEBUG  8636[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-02 14:02:59,271]DEBUG  8636[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,272]DEBUG  8637[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,272]DEBUG  8637[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-02 14:02:59,272]DEBUG  8637[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,273]DEBUG  8638[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,273]DEBUG  8638[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-02 14:02:59,273]DEBUG  8638[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,274]DEBUG  8639[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,274]DEBUG  8639[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-02 14:02:59,275]DEBUG  8640[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,275]DEBUG  8640[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,275]DEBUG  8640[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-02 14:02:59,276]DEBUG  8641[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,276]DEBUG  8641[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,277]DEBUG  8642[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-02 14:02:59,277]DEBUG  8642[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,277]DEBUG  8642[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,278]DEBUG  8643[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-02 14:02:59,278]DEBUG  8643[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,278]DEBUG  8643[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:59,279]DEBUG  8644[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,279]DEBUG  8644[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Dimensions (DimensionName, NumberOfProducts) values (?, ?)
[2017-10-02 14:02:59,280]DEBUG  8645[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 22
[2017-10-02 14:02:59,280]DEBUG  8645[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,280]DEBUG  8645[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:59,281]DEBUG  8646[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,281]DEBUG  8646[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Dimensions (DimensionName, NumberOfProducts) values (?, ?)
[2017-10-02 14:02:59,282]DEBUG  8647[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 23
[2017-10-02 14:02:59,282]DEBUG  8647[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,282]DEBUG  8647[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:59,283]DEBUG  8648[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,283]DEBUG  8648[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Dimensions (DimensionName, NumberOfProducts) values (?, ?)
[2017-10-02 14:02:59,283]DEBUG  8648[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 24
[2017-10-02 14:02:59,283]DEBUG  8648[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,284]DEBUG  8649[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:59,284]DEBUG  8649[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:59,284]DEBUG  8649[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-02 14:02:59,284]DEBUG  8649[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:59,284]DEBUG  8649[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:59,284]DEBUG  8649[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=22, dimensionName=Item, numberOfProduct=1}
[2017-10-02 14:02:59,285]DEBUG  8650[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=24, dimensionName=Package, numberOfProduct=10}
[2017-10-02 14:02:59,285]DEBUG  8650[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=23, dimensionName=Box, numberOfProduct=5}
[2017-10-02 14:02:59,285]DEBUG  8650[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,285]DEBUG  8650[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-02 14:02:59,285]DEBUG  8650[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,286]DEBUG  8651[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@7bdd5f1b testClass = DimensionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@12fce942, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2017-10-02 14:02:59,286]DEBUG  8651[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-02 14:02:59,286]DEBUG  8651[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@2ef83b4c]
[2017-10-02 14:02:59,286]DEBUG  8651[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-02 14:02:59,317]DEBUG  8682[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-02 14:02:59,317]DEBUG  8682[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-02 14:02:59,317]DEBUG  8682[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@2ef83b4c] after transaction
[2017-10-02 14:02:59,318]DEBUG  8683[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-02 14:02:59,318]DEBUG  8683[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-02 14:02:59,318]DEBUG  8683[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-02 14:02:59,319] INFO  8684[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@7bdd5f1b testClass = DimensionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@12fce942, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2017-10-02 14:02:59,320]DEBUG  8685[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@7bdd5f1b testClass = DimensionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest@12fce942, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-02 14:02:59,320]DEBUG  8685[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestClass(DirtiesContextTestExecutionListener.java:113) - After test class: context [[TestContext@7bdd5f1b testClass = DimensionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = [null], testMethod = [null], testException = [null]]], dirtiesContext [false].
[2017-10-02 14:02:59,324]DEBUG  8689[main] - org.springframework.test.context.junit4.SpringJUnit4ClassRunner.<init>(SpringJUnit4ClassRunner.java:106) - SpringJUnit4ClassRunner constructor called with [class com.softserveinc.edu.oms.persistence.dao.OrderDaoTest].
[2017-10-02 14:02:59,325] INFO  8690[main] - org.springframework.test.context.TestContextManager.retrieveTestExecutionListeners(TestContextManager.java:185) - @TestExecutionListeners is not present for class [class com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]: using defaults.
[2017-10-02 14:02:59,325]DEBUG  8690[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2017-10-02 14:02:59,325]DEBUG  8690[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2017-10-02 14:02:59,329]DEBUG  8694[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2017-10-02 14:02:59,329]DEBUG  8694[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2017-10-02 14:02:59,330]DEBUG  8695[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2017-10-02 14:02:59,330]DEBUG  8695[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2017-10-02 14:02:59,336]DEBUG  8701[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2017-10-02 14:02:59,336]DEBUG  8701[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2017-10-02 14:02:59,337]DEBUG  8702[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@c9cd85d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@d40c823, testMethod = [null], testException = [null]]].
[2017-10-02 14:02:59,346]DEBUG  8711[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-02 14:02:59,346]DEBUG  8711[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-02 14:02:59,346]DEBUG  8711[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-02 14:02:59,346]DEBUG  8711[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-02 14:02:59,346]DEBUG  8711[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-02 14:02:59,346]DEBUG  8711[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-02 14:02:59,347]DEBUG  8712[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-02 14:02:59,347]DEBUG  8712[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-02 14:02:59,347]DEBUG  8712[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-02 14:02:59,347]DEBUG  8712[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]: AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-02 14:02:59,347]DEBUG  8712[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-02 14:02:59,348]DEBUG  8713[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-02 14:02:59,348]DEBUG  8713[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest' to bean named 'customerTypeDao'
[2017-10-02 14:02:59,348]DEBUG  8713[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-02 14:02:59,348]DEBUG  8713[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-02 14:02:59,348]DEBUG  8713[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest' to bean named 'dimensionDao'
[2017-10-02 14:02:59,348]DEBUG  8713[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-02 14:02:59,349]DEBUG  8714[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-02 14:02:59,349]DEBUG  8714[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest' to bean named 'orderDao'
[2017-10-02 14:02:59,349]DEBUG  8714[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-02 14:02:59,349]DEBUG  8714[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-02 14:02:59,350]DEBUG  8715[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest' to bean named 'orderItemDao'
[2017-10-02 14:02:59,350]DEBUG  8715[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-02 14:02:59,350]DEBUG  8715[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-02 14:02:59,350]DEBUG  8715[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest' to bean named 'orderStatusDao'
[2017-10-02 14:02:59,350]DEBUG  8715[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-02 14:02:59,351]DEBUG  8716[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-02 14:02:59,351]DEBUG  8716[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest' to bean named 'productDao'
[2017-10-02 14:02:59,351]DEBUG  8716[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-02 14:02:59,351]DEBUG  8716[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-02 14:02:59,351]DEBUG  8716[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest' to bean named 'regionDao'
[2017-10-02 14:02:59,352]DEBUG  8717[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-02 14:02:59,352]DEBUG  8717[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-02 14:02:59,352]DEBUG  8717[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest' to bean named 'roleDao'
[2017-10-02 14:02:59,352]DEBUG  8717[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-02 14:02:59,352]DEBUG  8717[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-02 14:02:59,353]DEBUG  8718[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest' to bean named 'userDao'
[2017-10-02 14:02:59,353]DEBUG  8718[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-02 14:02:59,353]DEBUG  8718[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-02 14:02:59,353]DEBUG  8718[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest' to bean named 'sessionFactory'
[2017-10-02 14:02:59,354]DEBUG  8719[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-02 14:02:59,354]DEBUG  8719[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'tearDown' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-02 14:02:59,354]DEBUG  8719[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-02 14:02:59,355]DEBUG  8720[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@d40c823]
[2017-10-02 14:02:59,355]DEBUG  8720[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderDaoTest.tearDown()
[2017-10-02 14:02:59,356]DEBUG  8721[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindAll' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-02 14:02:59,356]DEBUG  8721[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderDaoTest.testFindAll()
[2017-10-02 14:02:59,356]DEBUG  8721[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testInsertOrUpdate' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-02 14:02:59,356]DEBUG  8721[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderDaoTest.testInsertOrUpdate()
[2017-10-02 14:02:59,357]DEBUG  8722[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testDelete' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-02 14:02:59,357]DEBUG  8722[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderDaoTest.testDelete()
[2017-10-02 14:02:59,357]DEBUG  8722[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'setUp' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-02 14:02:59,357]DEBUG  8722[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderDaoTest.setUp() throws java.lang.Exception
[2017-10-02 14:02:59,357]DEBUG  8722[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindFindById' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-02 14:02:59,358]DEBUG  8723[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderDaoTest.testFindFindById()
[2017-10-02 14:02:59,358]DEBUG  8723[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByTotalPriceEquals' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-02 14:02:59,358]DEBUG  8723[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderDaoTest.testFindByTotalPriceEquals()
[2017-10-02 14:02:59,358]DEBUG  8723[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByTotalPriceLess' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-02 14:02:59,358]DEBUG  8723[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderDaoTest.testFindByTotalPriceLess()
[2017-10-02 14:02:59,359]DEBUG  8724[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByTotalPriceMore' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-02 14:02:59,359]DEBUG  8724[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderDaoTest.testFindByTotalPriceMore()
[2017-10-02 14:02:59,359]DEBUG  8724[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByDeliveryDateEquals' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-02 14:02:59,359]DEBUG  8724[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderDaoTest.testFindByDeliveryDateEquals()
[2017-10-02 14:02:59,359]DEBUG  8724[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByDeliveryDateMore' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-02 14:02:59,360]DEBUG  8725[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderDaoTest.testFindByDeliveryDateMore()
[2017-10-02 14:02:59,360]DEBUG  8725[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByDeliveryDateLess' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-02 14:02:59,360]DEBUG  8725[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderDaoTest.testFindByDeliveryDateLess()
[2017-10-02 14:02:59,360]DEBUG  8725[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByOrderDateEquals' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-02 14:02:59,360]DEBUG  8725[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderDaoTest.testFindByOrderDateEquals()
[2017-10-02 14:02:59,361]DEBUG  8726[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByOrderDateMore' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-02 14:02:59,361]DEBUG  8726[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderDaoTest.testFindByOrderDateMore()
[2017-10-02 14:02:59,361]DEBUG  8726[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByOrderDateLess' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-02 14:02:59,361]DEBUG  8726[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderDaoTest.testFindByOrderDateLess()
[2017-10-02 14:02:59,366]DEBUG  8731[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByOrderStatus' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-02 14:02:59,366]DEBUG  8731[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderDaoTest.testFindByOrderStatus()
[2017-10-02 14:02:59,366]DEBUG  8731[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testContextFile' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-02 14:02:59,366]DEBUG  8731[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.testContextFile()
[2017-10-02 14:02:59,366]DEBUG  8731[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanUser()
[2017-10-02 14:02:59,367]DEBUG  8732[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanRole()
[2017-10-02 14:02:59,367]DEBUG  8732[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanRegion()
[2017-10-02 14:02:59,367]DEBUG  8732[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanProduct()
[2017-10-02 14:02:59,367]DEBUG  8732[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrderStatus()
[2017-10-02 14:02:59,367]DEBUG  8732[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrderItem()
[2017-10-02 14:02:59,367]DEBUG  8732[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrder()
[2017-10-02 14:02:59,367]DEBUG  8732[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanDimension()
[2017-10-02 14:02:59,368]DEBUG  8733[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanCustomerType()
[2017-10-02 14:02:59,368]DEBUG  8733[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanDB()
[2017-10-02 14:02:59,368]DEBUG  8733[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:749) - Found finalize() method - using NO_OVERRIDE
[2017-10-02 14:02:59,368]DEBUG  8733[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:761) - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
[2017-10-02 14:02:59,368]DEBUG  8733[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
[2017-10-02 14:02:59,368]DEBUG  8733[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:766) - Found 'hashCode' method: public native int java.lang.Object.hashCode()
[2017-10-02 14:02:59,368]DEBUG  8733[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
[2017-10-02 14:02:59,368]DEBUG  8733[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
[2017-10-02 14:02:59,369]DEBUG  8734[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
[2017-10-02 14:02:59,369]DEBUG  8734[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2017-10-02 14:02:59,369]DEBUG  8734[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2017-10-02 14:02:59,369]DEBUG  8734[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
[2017-10-02 14:02:59,369]DEBUG  8734[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
[2017-10-02 14:02:59,369]DEBUG  8734[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
[2017-10-02 14:02:59,369]DEBUG  8734[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
[2017-10-02 14:02:59,369]DEBUG  8734[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2017-10-02 14:02:59,369]DEBUG  8734[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
[2017-10-02 14:02:59,370]DEBUG  8735[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
[2017-10-02 14:02:59,370]DEBUG  8735[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
[2017-10-02 14:02:59,370]DEBUG  8735[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
[2017-10-02 14:02:59,370]DEBUG  8735[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
[2017-10-02 14:02:59,370]DEBUG  8735[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
[2017-10-02 14:02:59,370]DEBUG  8735[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
[2017-10-02 14:02:59,370]DEBUG  8735[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
[2017-10-02 14:02:59,370]DEBUG  8735[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
[2017-10-02 14:02:59,370]DEBUG  8735[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
[2017-10-02 14:02:59,371]DEBUG  8736[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
[2017-10-02 14:02:59,371]DEBUG  8736[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
[2017-10-02 14:02:59,371]DEBUG  8736[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
[2017-10-02 14:02:59,371]DEBUG  8736[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
[2017-10-02 14:02:59,407]DEBUG  8772[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindAll' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-02 14:02:59,407]DEBUG  8772[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@c9cd85d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@d40c823, testMethod = testFindAll@OrderDaoTest, testException = [null]]]
[2017-10-02 14:02:59,407]DEBUG  8772[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.retrieveConfigurationAttributes(TransactionalTestExecutionListener.java:466) - Retrieved @TransactionConfiguration [@org.springframework.test.context.transaction.TransactionConfiguration(transactionManager=transactionManager, defaultRollback=true)] for test class [class com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2017-10-02 14:02:59,407]DEBUG  8772[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.retrieveConfigurationAttributes(TransactionalTestExecutionListener.java:483) - Retrieved TransactionConfigurationAttributes [[TransactionConfigurationAttributes@323b7deb transactionManagerName = 'transactionManager', defaultRollback = true]] for class [class com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2017-10-02 14:02:59,407]DEBUG  8772[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-02 14:02:59,408]DEBUG  8773[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-02 14:02:59,408]DEBUG  8773[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15069421794
[2017-10-02 14:02:59,408]DEBUG  8773[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@29f70c05] for Hibernate transaction
[2017-10-02 14:02:59,408]DEBUG  8773[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@29f70c05]
[2017-10-02 14:02:59,409]DEBUG  8774[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-02 14:02:59,409]DEBUG  8774[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-02 14:02:59,409]DEBUG  8774[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-02 14:02:59,409]DEBUG  8774[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@c9cd85d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@d40c823, testMethod = testFindAll@OrderDaoTest, testException = [null]]]
[2017-10-02 14:02:59,409] INFO  8774[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (1): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@24af5c74]; rollback [true]
[2017-10-02 14:02:59,409]DEBUG  8774[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,409]DEBUG  8774[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-02 14:02:59,410]DEBUG  8775[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,410]DEBUG  8775[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,410]DEBUG  8775[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-02 14:02:59,410]DEBUG  8775[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,411]DEBUG  8776[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,411]DEBUG  8776[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-02 14:02:59,411]DEBUG  8776[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,411]DEBUG  8776[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,411]DEBUG  8776[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-02 14:02:59,412]DEBUG  8777[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,412]DEBUG  8777[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,412]DEBUG  8777[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-02 14:02:59,412]DEBUG  8777[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,412]DEBUG  8777[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,412]DEBUG  8777[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-02 14:02:59,413]DEBUG  8778[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,413]DEBUG  8778[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,413]DEBUG  8778[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-02 14:02:59,413]DEBUG  8778[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,413]DEBUG  8778[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,413]DEBUG  8778[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-02 14:02:59,414]DEBUG  8779[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,414]DEBUG  8779[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,414]DEBUG  8779[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-02 14:02:59,414]DEBUG  8779[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,414]DEBUG  8779[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:59,415]DEBUG  8780[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,415]DEBUG  8780[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName) values (?)
[2017-10-02 14:02:59,416]DEBUG  8781[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 1
[2017-10-02 14:02:59,416]DEBUG  8781[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,416]DEBUG  8781[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:59,418]DEBUG  8783[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,418]DEBUG  8783[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-02 14:02:59,419]DEBUG  8784[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 1
[2017-10-02 14:02:59,419]DEBUG  8784[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,419]DEBUG  8784[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:59,422]DEBUG  8787[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,422]DEBUG  8787[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Users (IsUserActive, Balance, CustomerTypeRef, Email, FirstName, LastName, Login, Password, RegionRef, RoleRef) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-02 14:02:59,423]DEBUG  8788[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 1
[2017-10-02 14:02:59,423]DEBUG  8788[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,424]DEBUG  8789[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:59,426]DEBUG  8791[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,426]DEBUG  8791[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-02 14:02:59,431]DEBUG  8796[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 1
[2017-10-02 14:02:59,431]DEBUG  8796[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,431]DEBUG  8796[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:59,432]DEBUG  8797[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,432]DEBUG  8797[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-02 14:02:59,433]DEBUG  8798[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 2
[2017-10-02 14:02:59,433]DEBUG  8798[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,433]DEBUG  8798[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:59,433]DEBUG  8798[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,433]DEBUG  8798[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-02 14:02:59,434]DEBUG  8799[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 3
[2017-10-02 14:02:59,434]DEBUG  8799[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,435]DEBUG  8800[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:59,435]DEBUG  8800[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:59,436]DEBUG  8801[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-02 14:02:59,436]DEBUG  8801[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:59,436]DEBUG  8801[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:59,436]DEBUG  8801[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#1, id=3, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#1, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#1, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,436]DEBUG  8801[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#1, id=2, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#1, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#1, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,436]DEBUG  8801[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=1, orderStatusName=Pending}
[2017-10-02 14:02:59,437]DEBUG  8802[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#1, id=1, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#1, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#1, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,437]DEBUG  8802[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=1, roleName=Administrator}
[2017-10-02 14:02:59,437]DEBUG  8802[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=1, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#1, active=true, login=test, firstName=test, password=test}
[2017-10-02 14:02:59,437]DEBUG  8802[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,437]DEBUG  8802[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID5_6_, this_.Assigne as Assigne5_6_, this_.Customer as Customer5_6_, this_.DeliveryDate as Delivery2_5_6_, this_.IsGift as IsGift5_6_, this_.MaxDiscount as MaxDisco4_5_6_, this_.OrderDate as OrderDate5_6_, this_.OrderName as OrderName5_6_, this_.OrderNumber as OrderNum7_5_6_, this_.OrderStatusRef as OrderSt12_5_6_, this_.PreferableDeliveryDate as Preferab8_5_6_, this_.TotalPrice as TotalPrice5_6_, user2_.ID as ID3_0_, user2_.IsUserActive as IsUserAc2_3_0_, user2_.Balance as Balance3_0_, user2_.CustomerTypeRef as Customer9_3_0_, user2_.Email as Email3_0_, user2_.FirstName as FirstName3_0_, user2_.LastName as LastName3_0_, user2_.Login as Login3_0_, user2_.Password as Password3_0_, user2_.RegionRef as RegionRef3_0_, user2_.RoleRef as RoleRef3_0_, customerty3_.ID as ID2_1_, customerty3_.Discount as Discount2_1_, customerty3_.MaxRange as MaxRange2_1_, customerty3_.MinRange as MinRange2_1_, customerty3_.TypeName as TypeName2_1_, region4_.ID as ID1_2_, region4_.RegionName as RegionName1_2_, role5_.ID as ID0_3_, role5_.RoleName as RoleName0_3_, user6_.ID as ID3_4_, user6_.IsUserActive as IsUserAc2_3_4_, user6_.Balance as Balance3_4_, user6_.CustomerTypeRef as Customer9_3_4_, user6_.Email as Email3_4_, user6_.FirstName as FirstName3_4_, user6_.LastName as LastName3_4_, user6_.Login as Login3_4_, user6_.Password as Password3_4_, user6_.RegionRef as RegionRef3_4_, user6_.RoleRef as RoleRef3_4_, orderstatu7_.ID as ID4_5_, orderstatu7_.OrederStatusName as OrederSt2_4_5_ from Orders this_ left outer join Users user2_ on this_.Assigne=user2_.ID left outer join CustomerTypes customerty3_ on user2_.CustomerTypeRef=customerty3_.ID left outer join Regions region4_ on user2_.RegionRef=region4_.ID left outer join Roles role5_ on user2_.RoleRef=role5_.ID left outer join Users user6_ on this_.Customer=user6_.ID left outer join OrderStatuses orderstatu7_ on this_.OrderStatusRef=orderstatu7_.ID
[2017-10-02 14:02:59,439]DEBUG  8804[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-02 14:02:59,440]DEBUG  8805[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#1], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#1], EntityKey[com.softserveinc.edu.oms.domain.entities.User#1], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#1], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#1]
[2017-10-02 14:02:59,441]DEBUG  8806[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#1], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#1], EntityKey[com.softserveinc.edu.oms.domain.entities.User#1], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#1], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#2]
[2017-10-02 14:02:59,441]DEBUG  8806[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#1], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#1], EntityKey[com.softserveinc.edu.oms.domain.entities.User#1], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#1], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#3]
[2017-10-02 14:02:59,441]DEBUG  8806[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-02 14:02:59,441]DEBUG  8806[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,441]DEBUG  8806[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-02 14:02:59,441]DEBUG  8806[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:59,442]DEBUG  8807[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:59,442]DEBUG  8807[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-02 14:02:59,442]DEBUG  8807[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:59,442]DEBUG  8807[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:59,442]DEBUG  8807[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#1, id=3, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#1, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#1, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,443]DEBUG  8808[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#1, id=2, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#1, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#1, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,443]DEBUG  8808[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=1, orderStatusName=Pending}
[2017-10-02 14:02:59,443]DEBUG  8808[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#1, id=1, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#1, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#1, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,443]DEBUG  8808[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=1, roleName=Administrator}
[2017-10-02 14:02:59,443]DEBUG  8808[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=1, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#1, active=true, login=test, firstName=test, password=test}
[2017-10-02 14:02:59,444]DEBUG  8809[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,444]DEBUG  8809[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-02 14:02:59,451]DEBUG  8816[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,451]DEBUG  8816[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:59,451]DEBUG  8816[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:59,454]DEBUG  8819[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-02 14:02:59,454]DEBUG  8819[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:59,454]DEBUG  8819[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:59,454]DEBUG  8819[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#1, id=3, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#1, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#1, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,454]DEBUG  8819[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#1, id=2, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#1, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#1, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,454]DEBUG  8819[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=1, orderStatusName=Pending}
[2017-10-02 14:02:59,455]DEBUG  8820[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#1, id=1, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#1, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#1, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,455]DEBUG  8820[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=1, roleName=Administrator}
[2017-10-02 14:02:59,455]DEBUG  8820[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=1, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#1, active=true, login=test, firstName=test, password=test}
[2017-10-02 14:02:59,455]DEBUG  8820[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,455]DEBUG  8820[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-02 14:02:59,456]DEBUG  8821[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,456]DEBUG  8821[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:59,456]DEBUG  8821[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:59,456]DEBUG  8821[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-02 14:02:59,456]DEBUG  8821[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:59,456]DEBUG  8821[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:59,457]DEBUG  8822[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#1, id=3, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#1, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#1, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,457]DEBUG  8822[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#1, id=2, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#1, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#1, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,457]DEBUG  8822[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=1, orderStatusName=Pending}
[2017-10-02 14:02:59,457]DEBUG  8822[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#1, id=1, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#1, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#1, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,457]DEBUG  8822[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=1, roleName=Administrator}
[2017-10-02 14:02:59,457]DEBUG  8822[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=1, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#1, active=true, login=test, firstName=test, password=test}
[2017-10-02 14:02:59,458]DEBUG  8823[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,458]DEBUG  8823[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-02 14:02:59,458]DEBUG  8823[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,458]DEBUG  8823[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:59,458]DEBUG  8823[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:59,459]DEBUG  8824[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-02 14:02:59,459]DEBUG  8824[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:59,459]DEBUG  8824[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:59,459]DEBUG  8824[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#1, id=3, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#1, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#1, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,459]DEBUG  8824[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#1, id=2, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#1, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#1, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,459]DEBUG  8824[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=1, orderStatusName=Pending}
[2017-10-02 14:02:59,459]DEBUG  8824[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#1, id=1, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#1, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#1, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,460]DEBUG  8825[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=1, roleName=Administrator}
[2017-10-02 14:02:59,460]DEBUG  8825[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=1, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#1, active=true, login=test, firstName=test, password=test}
[2017-10-02 14:02:59,460]DEBUG  8825[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,460]DEBUG  8825[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-02 14:02:59,463]DEBUG  8828[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,463]DEBUG  8828[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:59,463]DEBUG  8828[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:59,464]DEBUG  8829[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-02 14:02:59,464]DEBUG  8829[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:59,464]DEBUG  8829[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:59,464]DEBUG  8829[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#1, id=3, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#1, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#1, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,464]DEBUG  8829[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#1, id=2, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#1, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#1, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,465]DEBUG  8830[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=1, orderStatusName=Pending}
[2017-10-02 14:02:59,465]DEBUG  8830[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#1, id=1, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#1, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#1, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,465]DEBUG  8830[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=1, roleName=Administrator}
[2017-10-02 14:02:59,465]DEBUG  8830[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=1, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#1, active=true, login=test, firstName=test, password=test}
[2017-10-02 14:02:59,465]DEBUG  8830[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,465]DEBUG  8830[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-02 14:02:59,466]DEBUG  8831[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,466]DEBUG  8831[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:59,466]DEBUG  8831[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:59,466]DEBUG  8831[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-02 14:02:59,466]DEBUG  8831[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:59,466]DEBUG  8831[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:59,467]DEBUG  8832[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#1, id=3, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#1, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#1, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,467]DEBUG  8832[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#1, id=2, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#1, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#1, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,467]DEBUG  8832[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=1, orderStatusName=Pending}
[2017-10-02 14:02:59,467]DEBUG  8832[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#1, id=1, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#1, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#1, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,467]DEBUG  8832[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=1, roleName=Administrator}
[2017-10-02 14:02:59,467]DEBUG  8832[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=1, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#1, active=true, login=test, firstName=test, password=test}
[2017-10-02 14:02:59,468]DEBUG  8833[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,468]DEBUG  8833[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-02 14:02:59,468]DEBUG  8833[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,468]DEBUG  8833[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:59,468]DEBUG  8833[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:59,471]DEBUG  8836[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-02 14:02:59,471]DEBUG  8836[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:59,471]DEBUG  8836[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:59,471]DEBUG  8836[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#1, id=3, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#1, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#1, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,472]DEBUG  8837[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#1, id=2, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#1, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#1, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,472]DEBUG  8837[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=1, orderStatusName=Pending}
[2017-10-02 14:02:59,472]DEBUG  8837[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#1, id=1, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#1, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#1, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,472]DEBUG  8837[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=1, roleName=Administrator}
[2017-10-02 14:02:59,472]DEBUG  8837[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=1, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#1, active=true, login=test, firstName=test, password=test}
[2017-10-02 14:02:59,472]DEBUG  8837[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,472]DEBUG  8837[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-02 14:02:59,473]DEBUG  8838[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,473]DEBUG  8838[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:59,473]DEBUG  8838[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:59,474]DEBUG  8839[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-02 14:02:59,474]DEBUG  8839[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:59,474]DEBUG  8839[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:59,474]DEBUG  8839[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#1, id=3, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#1, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#1, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,474]DEBUG  8839[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#1, id=2, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#1, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#1, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,474]DEBUG  8839[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=1, orderStatusName=Pending}
[2017-10-02 14:02:59,475]DEBUG  8840[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#1, id=1, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#1, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#1, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,475]DEBUG  8840[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=1, roleName=Administrator}
[2017-10-02 14:02:59,475]DEBUG  8840[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=1, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#1, active=true, login=test, firstName=test, password=test}
[2017-10-02 14:02:59,475]DEBUG  8840[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,475]DEBUG  8840[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-02 14:02:59,476]DEBUG  8841[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,476]DEBUG  8841[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:59,476]DEBUG  8841[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:59,476]DEBUG  8841[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-02 14:02:59,476]DEBUG  8841[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:59,476]DEBUG  8841[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:59,477]DEBUG  8842[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#1, id=3, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#1, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#1, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,477]DEBUG  8842[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#1, id=2, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#1, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#1, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,477]DEBUG  8842[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=1, orderStatusName=Pending}
[2017-10-02 14:02:59,477]DEBUG  8842[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#1, id=1, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#1, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#1, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,477]DEBUG  8842[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=1, roleName=Administrator}
[2017-10-02 14:02:59,477]DEBUG  8842[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=1, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#1, active=true, login=test, firstName=test, password=test}
[2017-10-02 14:02:59,477]DEBUG  8842[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,478]DEBUG  8843[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-02 14:02:59,478]DEBUG  8843[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,478]DEBUG  8843[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@c9cd85d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@d40c823, testMethod = testFindAll@OrderDaoTest, testException = [null]]]
[2017-10-02 14:02:59,478]DEBUG  8843[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-02 14:02:59,478]DEBUG  8843[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@29f70c05]
[2017-10-02 14:02:59,478]DEBUG  8843[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-02 14:02:59,516]DEBUG  8881[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-02 14:02:59,517]DEBUG  8882[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-02 14:02:59,517]DEBUG  8882[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@29f70c05] after transaction
[2017-10-02 14:02:59,517]DEBUG  8882[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-02 14:02:59,517]DEBUG  8882[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-02 14:02:59,517]DEBUG  8882[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-02 14:02:59,517] INFO  8882[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@c9cd85d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@d40c823, testMethod = testFindAll@OrderDaoTest, testException = [null]]]
[2017-10-02 14:02:59,518]DEBUG  8883[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@c9cd85d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@d40c823, testMethod = testFindAll@OrderDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-02 14:02:59,519]DEBUG  8884[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2017-10-02 14:02:59,519]DEBUG  8884[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2017-10-02 14:02:59,519]DEBUG  8884[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@c9cd85d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@567172fc, testMethod = [null], testException = [null]]].
[2017-10-02 14:02:59,520]DEBUG  8885[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-02 14:02:59,520]DEBUG  8885[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-02 14:02:59,520]DEBUG  8885[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-02 14:02:59,520]DEBUG  8885[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-02 14:02:59,521]DEBUG  8886[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-02 14:02:59,521]DEBUG  8886[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-02 14:02:59,521]DEBUG  8886[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-02 14:02:59,521]DEBUG  8886[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-02 14:02:59,521]DEBUG  8886[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-02 14:02:59,522]DEBUG  8887[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-02 14:02:59,522]DEBUG  8887[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-02 14:02:59,522]DEBUG  8887[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-02 14:02:59,522]DEBUG  8887[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-02 14:02:59,522]DEBUG  8887[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-02 14:02:59,523]DEBUG  8888[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-02 14:02:59,523]DEBUG  8888[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-02 14:02:59,523]DEBUG  8888[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-02 14:02:59,523]DEBUG  8888[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-02 14:02:59,523]DEBUG  8888[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-02 14:02:59,524]DEBUG  8889[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-02 14:02:59,524]DEBUG  8889[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-02 14:02:59,524]DEBUG  8889[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-02 14:02:59,524]DEBUG  8889[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@567172fc]
[2017-10-02 14:02:59,525]DEBUG  8890[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testInsertOrUpdate' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-02 14:02:59,525]DEBUG  8890[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@c9cd85d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@567172fc, testMethod = testInsertOrUpdate@OrderDaoTest, testException = [null]]]
[2017-10-02 14:02:59,525]DEBUG  8890[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-02 14:02:59,527]DEBUG  8892[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testInsertOrUpdate]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-02 14:02:59,527]DEBUG  8892[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15069421795
[2017-10-02 14:02:59,527]DEBUG  8892[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@36550ea2] for Hibernate transaction
[2017-10-02 14:02:59,528]DEBUG  8893[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@36550ea2]
[2017-10-02 14:02:59,528]DEBUG  8893[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-02 14:02:59,528]DEBUG  8893[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-02 14:02:59,528]DEBUG  8893[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-02 14:02:59,528]DEBUG  8893[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@c9cd85d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@567172fc, testMethod = testInsertOrUpdate@OrderDaoTest, testException = [null]]]
[2017-10-02 14:02:59,529] INFO  8894[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (2): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@24af5c74]; rollback [true]
[2017-10-02 14:02:59,529]DEBUG  8894[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,529]DEBUG  8894[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-02 14:02:59,530]DEBUG  8895[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,530]DEBUG  8895[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,530]DEBUG  8895[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-02 14:02:59,531]DEBUG  8896[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,531]DEBUG  8896[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,532]DEBUG  8897[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-02 14:02:59,532]DEBUG  8897[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,532]DEBUG  8897[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,533]DEBUG  8898[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-02 14:02:59,533]DEBUG  8898[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,534]DEBUG  8899[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,534]DEBUG  8899[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-02 14:02:59,535]DEBUG  8900[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,535]DEBUG  8900[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,535]DEBUG  8900[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-02 14:02:59,536]DEBUG  8901[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,536]DEBUG  8901[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,536]DEBUG  8901[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-02 14:02:59,537]DEBUG  8902[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,537]DEBUG  8902[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,538]DEBUG  8903[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-02 14:02:59,538]DEBUG  8903[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,538]DEBUG  8903[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,539]DEBUG  8904[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-02 14:02:59,539]DEBUG  8904[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,540]DEBUG  8905[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:59,540]DEBUG  8905[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,540]DEBUG  8905[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName) values (?)
[2017-10-02 14:02:59,541]DEBUG  8906[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 2
[2017-10-02 14:02:59,541]DEBUG  8906[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,542]DEBUG  8907[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:59,542]DEBUG  8907[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,542]DEBUG  8907[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-02 14:02:59,543]DEBUG  8908[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 2
[2017-10-02 14:02:59,543]DEBUG  8908[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,543]DEBUG  8908[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:59,543]DEBUG  8908[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,544]DEBUG  8909[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Users (IsUserActive, Balance, CustomerTypeRef, Email, FirstName, LastName, Login, Password, RegionRef, RoleRef) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-02 14:02:59,544]DEBUG  8909[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 2
[2017-10-02 14:02:59,544]DEBUG  8909[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,544]DEBUG  8909[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:59,545]DEBUG  8910[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,545]DEBUG  8910[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-02 14:02:59,546]DEBUG  8911[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 4
[2017-10-02 14:02:59,546]DEBUG  8911[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,547]DEBUG  8912[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:59,547]DEBUG  8912[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,547]DEBUG  8912[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-02 14:02:59,548]DEBUG  8913[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 5
[2017-10-02 14:02:59,549]DEBUG  8914[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,549]DEBUG  8914[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:59,550]DEBUG  8915[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,550]DEBUG  8915[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-02 14:02:59,551]DEBUG  8916[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 6
[2017-10-02 14:02:59,551]DEBUG  8916[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,552]DEBUG  8917[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:59,552]DEBUG  8917[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,552]DEBUG  8917[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-02 14:02:59,554]DEBUG  8919[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 7
[2017-10-02 14:02:59,554]DEBUG  8919[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,556]DEBUG  8921[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:59,556]DEBUG  8921[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:59,557]DEBUG  8922[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 7 objects
[2017-10-02 14:02:59,557]DEBUG  8922[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:59,557]DEBUG  8922[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:59,558]DEBUG  8923[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=2, orderStatusName=Pending}
[2017-10-02 14:02:59,558]DEBUG  8923[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=7, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,558]DEBUG  8923[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=2, roleName=Administrator}
[2017-10-02 14:02:59,559]DEBUG  8924[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=6, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,559]DEBUG  8924[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=5, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,560]DEBUG  8925[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=4, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,560]DEBUG  8925[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=2, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#2, active=true, login=test, firstName=test, password=test}
[2017-10-02 14:02:59,560]DEBUG  8925[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,560]DEBUG  8925[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID5_6_, this_.Assigne as Assigne5_6_, this_.Customer as Customer5_6_, this_.DeliveryDate as Delivery2_5_6_, this_.IsGift as IsGift5_6_, this_.MaxDiscount as MaxDisco4_5_6_, this_.OrderDate as OrderDate5_6_, this_.OrderName as OrderName5_6_, this_.OrderNumber as OrderNum7_5_6_, this_.OrderStatusRef as OrderSt12_5_6_, this_.PreferableDeliveryDate as Preferab8_5_6_, this_.TotalPrice as TotalPrice5_6_, user2_.ID as ID3_0_, user2_.IsUserActive as IsUserAc2_3_0_, user2_.Balance as Balance3_0_, user2_.CustomerTypeRef as Customer9_3_0_, user2_.Email as Email3_0_, user2_.FirstName as FirstName3_0_, user2_.LastName as LastName3_0_, user2_.Login as Login3_0_, user2_.Password as Password3_0_, user2_.RegionRef as RegionRef3_0_, user2_.RoleRef as RoleRef3_0_, customerty3_.ID as ID2_1_, customerty3_.Discount as Discount2_1_, customerty3_.MaxRange as MaxRange2_1_, customerty3_.MinRange as MinRange2_1_, customerty3_.TypeName as TypeName2_1_, region4_.ID as ID1_2_, region4_.RegionName as RegionName1_2_, role5_.ID as ID0_3_, role5_.RoleName as RoleName0_3_, user6_.ID as ID3_4_, user6_.IsUserActive as IsUserAc2_3_4_, user6_.Balance as Balance3_4_, user6_.CustomerTypeRef as Customer9_3_4_, user6_.Email as Email3_4_, user6_.FirstName as FirstName3_4_, user6_.LastName as LastName3_4_, user6_.Login as Login3_4_, user6_.Password as Password3_4_, user6_.RegionRef as RegionRef3_4_, user6_.RoleRef as RoleRef3_4_, orderstatu7_.ID as ID4_5_, orderstatu7_.OrederStatusName as OrederSt2_4_5_ from Orders this_ left outer join Users user2_ on this_.Assigne=user2_.ID left outer join CustomerTypes customerty3_ on user2_.CustomerTypeRef=customerty3_.ID left outer join Regions region4_ on user2_.RegionRef=region4_.ID left outer join Roles role5_ on user2_.RoleRef=role5_.ID left outer join Users user6_ on this_.Customer=user6_.ID left outer join OrderStatuses orderstatu7_ on this_.OrderStatusRef=orderstatu7_.ID
[2017-10-02 14:02:59,562]DEBUG  8927[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-02 14:02:59,564]DEBUG  8929[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#2], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#2], EntityKey[com.softserveinc.edu.oms.domain.entities.User#2], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#2], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#4]
[2017-10-02 14:02:59,564]DEBUG  8929[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#2], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#2], EntityKey[com.softserveinc.edu.oms.domain.entities.User#2], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#2], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#5]
[2017-10-02 14:02:59,564]DEBUG  8929[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#2], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#2], EntityKey[com.softserveinc.edu.oms.domain.entities.User#2], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#2], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#6]
[2017-10-02 14:02:59,565]DEBUG  8930[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#2], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#2], EntityKey[com.softserveinc.edu.oms.domain.entities.User#2], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#2], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#7]
[2017-10-02 14:02:59,565]DEBUG  8930[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-02 14:02:59,565]DEBUG  8930[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,565]DEBUG  8930[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-02 14:02:59,565]DEBUG  8930[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:59,565]DEBUG  8930[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:59,566]DEBUG  8931[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 7 objects
[2017-10-02 14:02:59,566]DEBUG  8931[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:59,566]DEBUG  8931[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:59,566]DEBUG  8931[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=2, orderStatusName=Pending}
[2017-10-02 14:02:59,566]DEBUG  8931[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=7, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,566]DEBUG  8931[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=2, roleName=Administrator}
[2017-10-02 14:02:59,566]DEBUG  8931[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=6, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,566]DEBUG  8931[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=5, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,567]DEBUG  8932[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=4, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,567]DEBUG  8932[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=2, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#2, active=true, login=test, firstName=test, password=test}
[2017-10-02 14:02:59,567]DEBUG  8932[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,567]DEBUG  8932[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-02 14:02:59,568]DEBUG  8933[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,568]DEBUG  8933[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:59,568]DEBUG  8933[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:59,568]DEBUG  8933[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 7 objects
[2017-10-02 14:02:59,568]DEBUG  8933[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:59,568]DEBUG  8933[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:59,569]DEBUG  8934[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=2, orderStatusName=Pending}
[2017-10-02 14:02:59,569]DEBUG  8934[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=7, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,569]DEBUG  8934[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=2, roleName=Administrator}
[2017-10-02 14:02:59,569]DEBUG  8934[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=6, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,569]DEBUG  8934[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=5, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,569]DEBUG  8934[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=4, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,570]DEBUG  8935[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=2, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#2, active=true, login=test, firstName=test, password=test}
[2017-10-02 14:02:59,570]DEBUG  8935[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,570]DEBUG  8935[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-02 14:02:59,570]DEBUG  8935[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,570]DEBUG  8935[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:59,570]DEBUG  8935[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:59,571]DEBUG  8936[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 7 objects
[2017-10-02 14:02:59,571]DEBUG  8936[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:59,571]DEBUG  8936[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:59,571]DEBUG  8936[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=2, orderStatusName=Pending}
[2017-10-02 14:02:59,571]DEBUG  8936[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=7, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,571]DEBUG  8936[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=2, roleName=Administrator}
[2017-10-02 14:02:59,571]DEBUG  8936[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=6, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,572]DEBUG  8937[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=5, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,572]DEBUG  8937[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=4, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,572]DEBUG  8937[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=2, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#2, active=true, login=test, firstName=test, password=test}
[2017-10-02 14:02:59,572]DEBUG  8937[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,572]DEBUG  8937[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-02 14:02:59,572]DEBUG  8937[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,573]DEBUG  8938[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:59,573]DEBUG  8938[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:59,573]DEBUG  8938[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 7 objects
[2017-10-02 14:02:59,573]DEBUG  8938[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:59,573]DEBUG  8938[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:59,574]DEBUG  8939[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=2, orderStatusName=Pending}
[2017-10-02 14:02:59,574]DEBUG  8939[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=7, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,574]DEBUG  8939[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=2, roleName=Administrator}
[2017-10-02 14:02:59,574]DEBUG  8939[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=6, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,574]DEBUG  8939[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=5, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,575]DEBUG  8940[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=4, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,575]DEBUG  8940[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=2, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#2, active=true, login=test, firstName=test, password=test}
[2017-10-02 14:02:59,575]DEBUG  8940[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,575]DEBUG  8940[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-02 14:02:59,575]DEBUG  8940[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,576]DEBUG  8941[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:59,576]DEBUG  8941[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:59,576]DEBUG  8941[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 7 objects
[2017-10-02 14:02:59,576]DEBUG  8941[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:59,576]DEBUG  8941[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:59,576]DEBUG  8941[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=2, orderStatusName=Pending}
[2017-10-02 14:02:59,576]DEBUG  8941[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=7, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,577]DEBUG  8942[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=2, roleName=Administrator}
[2017-10-02 14:02:59,577]DEBUG  8942[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=6, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,577]DEBUG  8942[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=5, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,577]DEBUG  8942[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=4, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,577]DEBUG  8942[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=2, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#2, active=true, login=test, firstName=test, password=test}
[2017-10-02 14:02:59,577]DEBUG  8942[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,577]DEBUG  8942[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-02 14:02:59,578]DEBUG  8943[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,578]DEBUG  8943[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:59,578]DEBUG  8943[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:59,578]DEBUG  8943[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 7 objects
[2017-10-02 14:02:59,578]DEBUG  8943[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:59,579]DEBUG  8944[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:59,579]DEBUG  8944[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=2, orderStatusName=Pending}
[2017-10-02 14:02:59,579]DEBUG  8944[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=7, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,579]DEBUG  8944[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=2, roleName=Administrator}
[2017-10-02 14:02:59,579]DEBUG  8944[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=6, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,579]DEBUG  8944[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=5, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,580]DEBUG  8945[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=4, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,580]DEBUG  8945[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=2, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#2, active=true, login=test, firstName=test, password=test}
[2017-10-02 14:02:59,580]DEBUG  8945[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,580]DEBUG  8945[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-02 14:02:59,580]DEBUG  8945[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,580]DEBUG  8945[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:59,581]DEBUG  8946[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:59,581]DEBUG  8946[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 7 objects
[2017-10-02 14:02:59,581]DEBUG  8946[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:59,581]DEBUG  8946[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:59,581]DEBUG  8946[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=2, orderStatusName=Pending}
[2017-10-02 14:02:59,581]DEBUG  8946[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=7, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,581]DEBUG  8946[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=2, roleName=Administrator}
[2017-10-02 14:02:59,582]DEBUG  8947[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=6, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,582]DEBUG  8947[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=5, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,582]DEBUG  8947[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=4, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,582]DEBUG  8947[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=2, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#2, active=true, login=test, firstName=test, password=test}
[2017-10-02 14:02:59,582]DEBUG  8947[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,582]DEBUG  8947[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-02 14:02:59,583]DEBUG  8948[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,583]DEBUG  8948[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:59,583]DEBUG  8948[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:59,583]DEBUG  8948[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 7 objects
[2017-10-02 14:02:59,583]DEBUG  8948[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:59,583]DEBUG  8948[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:59,584]DEBUG  8949[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=2, orderStatusName=Pending}
[2017-10-02 14:02:59,584]DEBUG  8949[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=7, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,584]DEBUG  8949[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=2, roleName=Administrator}
[2017-10-02 14:02:59,584]DEBUG  8949[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=6, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,584]DEBUG  8949[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=5, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,584]DEBUG  8949[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=4, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,584]DEBUG  8949[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=2, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#2, active=true, login=test, firstName=test, password=test}
[2017-10-02 14:02:59,585]DEBUG  8950[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,585]DEBUG  8950[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-02 14:02:59,585]DEBUG  8950[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,585]DEBUG  8950[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:59,585]DEBUG  8950[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:59,586]DEBUG  8951[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 7 objects
[2017-10-02 14:02:59,586]DEBUG  8951[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:59,586]DEBUG  8951[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:59,586]DEBUG  8951[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=2, orderStatusName=Pending}
[2017-10-02 14:02:59,586]DEBUG  8951[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=7, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,586]DEBUG  8951[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=2, roleName=Administrator}
[2017-10-02 14:02:59,586]DEBUG  8951[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=6, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,587]DEBUG  8952[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=5, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,587]DEBUG  8952[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=4, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,587]DEBUG  8952[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=2, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#2, active=true, login=test, firstName=test, password=test}
[2017-10-02 14:02:59,587]DEBUG  8952[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,587]DEBUG  8952[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-02 14:02:59,587]DEBUG  8952[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,588]DEBUG  8953[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@c9cd85d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@567172fc, testMethod = testInsertOrUpdate@OrderDaoTest, testException = [null]]]
[2017-10-02 14:02:59,588]DEBUG  8953[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-02 14:02:59,588]DEBUG  8953[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@36550ea2]
[2017-10-02 14:02:59,588]DEBUG  8953[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-02 14:02:59,608]DEBUG  8973[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-02 14:02:59,609]DEBUG  8974[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-02 14:02:59,609]DEBUG  8974[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@36550ea2] after transaction
[2017-10-02 14:02:59,609]DEBUG  8974[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-02 14:02:59,609]DEBUG  8974[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-02 14:02:59,609]DEBUG  8974[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-02 14:02:59,609] INFO  8974[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@c9cd85d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@567172fc, testMethod = testInsertOrUpdate@OrderDaoTest, testException = [null]]]
[2017-10-02 14:02:59,610]DEBUG  8975[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@c9cd85d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@567172fc, testMethod = testInsertOrUpdate@OrderDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-02 14:02:59,611]DEBUG  8976[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2017-10-02 14:02:59,611]DEBUG  8976[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2017-10-02 14:02:59,611]DEBUG  8976[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@c9cd85d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@28a87cea, testMethod = [null], testException = [null]]].
[2017-10-02 14:02:59,612]DEBUG  8977[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-02 14:02:59,612]DEBUG  8977[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-02 14:02:59,612]DEBUG  8977[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-02 14:02:59,612]DEBUG  8977[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-02 14:02:59,612]DEBUG  8977[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-02 14:02:59,612]DEBUG  8977[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-02 14:02:59,613]DEBUG  8978[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-02 14:02:59,613]DEBUG  8978[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-02 14:02:59,613]DEBUG  8978[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-02 14:02:59,613]DEBUG  8978[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-02 14:02:59,613]DEBUG  8978[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-02 14:02:59,613]DEBUG  8978[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-02 14:02:59,613]DEBUG  8978[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-02 14:02:59,613]DEBUG  8978[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-02 14:02:59,614]DEBUG  8979[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-02 14:02:59,614]DEBUG  8979[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-02 14:02:59,614]DEBUG  8979[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-02 14:02:59,614]DEBUG  8979[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-02 14:02:59,614]DEBUG  8979[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-02 14:02:59,614]DEBUG  8979[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-02 14:02:59,614]DEBUG  8979[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-02 14:02:59,619]DEBUG  8984[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-02 14:02:59,619]DEBUG  8984[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@28a87cea]
[2017-10-02 14:02:59,619]DEBUG  8984[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testDelete' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-02 14:02:59,620]DEBUG  8985[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@c9cd85d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@28a87cea, testMethod = testDelete@OrderDaoTest, testException = [null]]]
[2017-10-02 14:02:59,620]DEBUG  8985[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-02 14:02:59,621]DEBUG  8986[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testDelete]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-02 14:02:59,621]DEBUG  8986[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15069421796
[2017-10-02 14:02:59,621]DEBUG  8986[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@30132014] for Hibernate transaction
[2017-10-02 14:02:59,621]DEBUG  8986[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@30132014]
[2017-10-02 14:02:59,621]DEBUG  8986[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-02 14:02:59,621]DEBUG  8986[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-02 14:02:59,622]DEBUG  8987[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-02 14:02:59,622]DEBUG  8987[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@c9cd85d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@28a87cea, testMethod = testDelete@OrderDaoTest, testException = [null]]]
[2017-10-02 14:02:59,622] INFO  8987[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (3): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@24af5c74]; rollback [true]
[2017-10-02 14:02:59,622]DEBUG  8987[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,622]DEBUG  8987[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-02 14:02:59,623]DEBUG  8988[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,623]DEBUG  8988[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,623]DEBUG  8988[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-02 14:02:59,623]DEBUG  8988[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,624]DEBUG  8989[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,624]DEBUG  8989[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-02 14:02:59,624]DEBUG  8989[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,624]DEBUG  8989[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,624]DEBUG  8989[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-02 14:02:59,625]DEBUG  8990[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,625]DEBUG  8990[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,625]DEBUG  8990[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-02 14:02:59,625]DEBUG  8990[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,625]DEBUG  8990[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,625]DEBUG  8990[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-02 14:02:59,626]DEBUG  8991[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,626]DEBUG  8991[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,626]DEBUG  8991[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-02 14:02:59,626]DEBUG  8991[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,626]DEBUG  8991[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,626]DEBUG  8991[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-02 14:02:59,627]DEBUG  8992[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,627]DEBUG  8992[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,627]DEBUG  8992[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-02 14:02:59,627]DEBUG  8992[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,627]DEBUG  8992[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:59,628]DEBUG  8993[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,628]DEBUG  8993[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName) values (?)
[2017-10-02 14:02:59,628]DEBUG  8993[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 3
[2017-10-02 14:02:59,628]DEBUG  8993[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,628]DEBUG  8993[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:59,629]DEBUG  8994[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,629]DEBUG  8994[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-02 14:02:59,629]DEBUG  8994[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 3
[2017-10-02 14:02:59,629]DEBUG  8994[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,629]DEBUG  8994[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:59,630]DEBUG  8995[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,630]DEBUG  8995[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Users (IsUserActive, Balance, CustomerTypeRef, Email, FirstName, LastName, Login, Password, RegionRef, RoleRef) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-02 14:02:59,630]DEBUG  8995[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 3
[2017-10-02 14:02:59,630]DEBUG  8995[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,631]DEBUG  8996[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:59,631]DEBUG  8996[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,631]DEBUG  8996[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-02 14:02:59,632]DEBUG  8997[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 8
[2017-10-02 14:02:59,632]DEBUG  8997[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,632]DEBUG  8997[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:59,632]DEBUG  8997[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,632]DEBUG  8997[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-02 14:02:59,633]DEBUG  8998[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 9
[2017-10-02 14:02:59,633]DEBUG  8998[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,633]DEBUG  8998[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:59,633]DEBUG  8998[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,634]DEBUG  8999[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-02 14:02:59,634]DEBUG  8999[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 10
[2017-10-02 14:02:59,634]DEBUG  8999[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,635]DEBUG  9000[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:59,635]DEBUG  9000[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:59,636]DEBUG  9001[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-02 14:02:59,636]DEBUG  9001[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:59,636]DEBUG  9001[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:59,636]DEBUG  9001[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#3, id=10, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#3, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#3, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,636]DEBUG  9001[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#3, id=9, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#3, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#3, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,636]DEBUG  9001[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#3, id=8, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#3, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#3, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,637]DEBUG  9002[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=3, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#3, active=true, login=test, firstName=test, password=test}
[2017-10-02 14:02:59,637]DEBUG  9002[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=3, roleName=Administrator}
[2017-10-02 14:02:59,637]DEBUG  9002[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=3, orderStatusName=Pending}
[2017-10-02 14:02:59,637]DEBUG  9002[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,637]DEBUG  9002[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID5_6_, this_.Assigne as Assigne5_6_, this_.Customer as Customer5_6_, this_.DeliveryDate as Delivery2_5_6_, this_.IsGift as IsGift5_6_, this_.MaxDiscount as MaxDisco4_5_6_, this_.OrderDate as OrderDate5_6_, this_.OrderName as OrderName5_6_, this_.OrderNumber as OrderNum7_5_6_, this_.OrderStatusRef as OrderSt12_5_6_, this_.PreferableDeliveryDate as Preferab8_5_6_, this_.TotalPrice as TotalPrice5_6_, user2_.ID as ID3_0_, user2_.IsUserActive as IsUserAc2_3_0_, user2_.Balance as Balance3_0_, user2_.CustomerTypeRef as Customer9_3_0_, user2_.Email as Email3_0_, user2_.FirstName as FirstName3_0_, user2_.LastName as LastName3_0_, user2_.Login as Login3_0_, user2_.Password as Password3_0_, user2_.RegionRef as RegionRef3_0_, user2_.RoleRef as RoleRef3_0_, customerty3_.ID as ID2_1_, customerty3_.Discount as Discount2_1_, customerty3_.MaxRange as MaxRange2_1_, customerty3_.MinRange as MinRange2_1_, customerty3_.TypeName as TypeName2_1_, region4_.ID as ID1_2_, region4_.RegionName as RegionName1_2_, role5_.ID as ID0_3_, role5_.RoleName as RoleName0_3_, user6_.ID as ID3_4_, user6_.IsUserActive as IsUserAc2_3_4_, user6_.Balance as Balance3_4_, user6_.CustomerTypeRef as Customer9_3_4_, user6_.Email as Email3_4_, user6_.FirstName as FirstName3_4_, user6_.LastName as LastName3_4_, user6_.Login as Login3_4_, user6_.Password as Password3_4_, user6_.RegionRef as RegionRef3_4_, user6_.RoleRef as RoleRef3_4_, orderstatu7_.ID as ID4_5_, orderstatu7_.OrederStatusName as OrederSt2_4_5_ from Orders this_ left outer join Users user2_ on this_.Assigne=user2_.ID left outer join CustomerTypes customerty3_ on user2_.CustomerTypeRef=customerty3_.ID left outer join Regions region4_ on user2_.RegionRef=region4_.ID left outer join Roles role5_ on user2_.RoleRef=role5_.ID left outer join Users user6_ on this_.Customer=user6_.ID left outer join OrderStatuses orderstatu7_ on this_.OrderStatusRef=orderstatu7_.ID
[2017-10-02 14:02:59,638]DEBUG  9003[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-02 14:02:59,640]DEBUG  9005[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#3], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#3], EntityKey[com.softserveinc.edu.oms.domain.entities.User#3], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#3], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#8]
[2017-10-02 14:02:59,640]DEBUG  9005[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#3], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#3], EntityKey[com.softserveinc.edu.oms.domain.entities.User#3], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#3], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#9]
[2017-10-02 14:02:59,640]DEBUG  9005[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#3], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#3], EntityKey[com.softserveinc.edu.oms.domain.entities.User#3], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#3], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#10]
[2017-10-02 14:02:59,640]DEBUG  9005[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-02 14:02:59,641]DEBUG  9006[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,641]DEBUG  9006[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-02 14:02:59,643]DEBUG  9008[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:59,643]DEBUG  9008[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:59,643]DEBUG  9008[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 6 objects
[2017-10-02 14:02:59,643]DEBUG  9008[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:59,643]DEBUG  9008[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:59,644]DEBUG  9009[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#3, id=10, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#3, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#3, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,644]DEBUG  9009[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#3, id=9, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#3, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#3, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,644]DEBUG  9009[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#3, id=8, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#3, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#3, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,644]DEBUG  9009[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=3, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#3, active=true, login=test, firstName=test, password=test}
[2017-10-02 14:02:59,644]DEBUG  9009[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=3, roleName=Administrator}
[2017-10-02 14:02:59,644]DEBUG  9009[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=3, orderStatusName=Pending}
[2017-10-02 14:02:59,644]DEBUG  9009[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Orders
[2017-10-02 14:02:59,647]DEBUG  9012[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,647]DEBUG  9012[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders where ID=?
[2017-10-02 14:02:59,648]DEBUG  9013[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
[2017-10-02 14:02:59,649]DEBUG  9014[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,649]DEBUG  9014[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,649]DEBUG  9014[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID5_6_, this_.Assigne as Assigne5_6_, this_.Customer as Customer5_6_, this_.DeliveryDate as Delivery2_5_6_, this_.IsGift as IsGift5_6_, this_.MaxDiscount as MaxDisco4_5_6_, this_.OrderDate as OrderDate5_6_, this_.OrderName as OrderName5_6_, this_.OrderNumber as OrderNum7_5_6_, this_.OrderStatusRef as OrderSt12_5_6_, this_.PreferableDeliveryDate as Preferab8_5_6_, this_.TotalPrice as TotalPrice5_6_, user2_.ID as ID3_0_, user2_.IsUserActive as IsUserAc2_3_0_, user2_.Balance as Balance3_0_, user2_.CustomerTypeRef as Customer9_3_0_, user2_.Email as Email3_0_, user2_.FirstName as FirstName3_0_, user2_.LastName as LastName3_0_, user2_.Login as Login3_0_, user2_.Password as Password3_0_, user2_.RegionRef as RegionRef3_0_, user2_.RoleRef as RoleRef3_0_, customerty3_.ID as ID2_1_, customerty3_.Discount as Discount2_1_, customerty3_.MaxRange as MaxRange2_1_, customerty3_.MinRange as MinRange2_1_, customerty3_.TypeName as TypeName2_1_, region4_.ID as ID1_2_, region4_.RegionName as RegionName1_2_, role5_.ID as ID0_3_, role5_.RoleName as RoleName0_3_, user6_.ID as ID3_4_, user6_.IsUserActive as IsUserAc2_3_4_, user6_.Balance as Balance3_4_, user6_.CustomerTypeRef as Customer9_3_4_, user6_.Email as Email3_4_, user6_.FirstName as FirstName3_4_, user6_.LastName as LastName3_4_, user6_.Login as Login3_4_, user6_.Password as Password3_4_, user6_.RegionRef as RegionRef3_4_, user6_.RoleRef as RoleRef3_4_, orderstatu7_.ID as ID4_5_, orderstatu7_.OrederStatusName as OrederSt2_4_5_ from Orders this_ left outer join Users user2_ on this_.Assigne=user2_.ID left outer join CustomerTypes customerty3_ on user2_.CustomerTypeRef=customerty3_.ID left outer join Regions region4_ on user2_.RegionRef=region4_.ID left outer join Roles role5_ on user2_.RoleRef=role5_.ID left outer join Users user6_ on this_.Customer=user6_.ID left outer join OrderStatuses orderstatu7_ on this_.OrderStatusRef=orderstatu7_.ID
[2017-10-02 14:02:59,650]DEBUG  9015[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-02 14:02:59,652]DEBUG  9017[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#3], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#3], EntityKey[com.softserveinc.edu.oms.domain.entities.User#3], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#3], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#9]
[2017-10-02 14:02:59,652]DEBUG  9017[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#3], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#3], EntityKey[com.softserveinc.edu.oms.domain.entities.User#3], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#3], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#10]
[2017-10-02 14:02:59,652]DEBUG  9017[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-02 14:02:59,652]DEBUG  9017[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,653]DEBUG  9018[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-02 14:02:59,653]DEBUG  9018[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:59,653]DEBUG  9018[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:59,653]DEBUG  9018[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2017-10-02 14:02:59,653]DEBUG  9018[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:59,653]DEBUG  9018[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:59,654]DEBUG  9019[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#3, id=10, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#3, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#3, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,654]DEBUG  9019[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#3, id=9, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#3, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#3, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,654]DEBUG  9019[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=3, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#3, active=true, login=test, firstName=test, password=test}
[2017-10-02 14:02:59,654]DEBUG  9019[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=3, roleName=Administrator}
[2017-10-02 14:02:59,654]DEBUG  9019[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=3, orderStatusName=Pending}
[2017-10-02 14:02:59,654]DEBUG  9019[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,654]DEBUG  9019[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-02 14:02:59,655]DEBUG  9020[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,656]DEBUG  9021[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:59,656]DEBUG  9021[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:59,656]DEBUG  9021[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2017-10-02 14:02:59,656]DEBUG  9021[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:59,656]DEBUG  9021[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:59,656]DEBUG  9021[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#3, id=10, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#3, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#3, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,657]DEBUG  9022[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#3, id=9, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#3, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#3, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,657]DEBUG  9022[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=3, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#3, active=true, login=test, firstName=test, password=test}
[2017-10-02 14:02:59,657]DEBUG  9022[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=3, roleName=Administrator}
[2017-10-02 14:02:59,657]DEBUG  9022[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=3, orderStatusName=Pending}
[2017-10-02 14:02:59,657]DEBUG  9022[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,657]DEBUG  9022[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-02 14:02:59,658]DEBUG  9023[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,658]DEBUG  9023[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:59,658]DEBUG  9023[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:59,658]DEBUG  9023[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2017-10-02 14:02:59,658]DEBUG  9023[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:59,658]DEBUG  9023[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:59,659]DEBUG  9024[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#3, id=10, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#3, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#3, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,659]DEBUG  9024[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#3, id=9, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#3, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#3, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,659]DEBUG  9024[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=3, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#3, active=true, login=test, firstName=test, password=test}
[2017-10-02 14:02:59,659]DEBUG  9024[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=3, roleName=Administrator}
[2017-10-02 14:02:59,659]DEBUG  9024[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=3, orderStatusName=Pending}
[2017-10-02 14:02:59,659]DEBUG  9024[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,659]DEBUG  9024[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-02 14:02:59,660]DEBUG  9025[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,660]DEBUG  9025[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:59,660]DEBUG  9025[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:59,660]DEBUG  9025[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2017-10-02 14:02:59,660]DEBUG  9025[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:59,661]DEBUG  9026[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:59,661]DEBUG  9026[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#3, id=10, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#3, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#3, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,661]DEBUG  9026[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#3, id=9, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#3, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#3, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,661]DEBUG  9026[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=3, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#3, active=true, login=test, firstName=test, password=test}
[2017-10-02 14:02:59,661]DEBUG  9026[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=3, roleName=Administrator}
[2017-10-02 14:02:59,661]DEBUG  9026[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=3, orderStatusName=Pending}
[2017-10-02 14:02:59,661]DEBUG  9026[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,662]DEBUG  9027[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-02 14:02:59,662]DEBUG  9027[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,662]DEBUG  9027[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:59,662]DEBUG  9027[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:59,663]DEBUG  9028[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2017-10-02 14:02:59,663]DEBUG  9028[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:59,663]DEBUG  9028[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:59,663]DEBUG  9028[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#3, id=10, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#3, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#3, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,663]DEBUG  9028[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#3, id=9, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#3, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#3, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,663]DEBUG  9028[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=3, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#3, active=true, login=test, firstName=test, password=test}
[2017-10-02 14:02:59,663]DEBUG  9028[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=3, roleName=Administrator}
[2017-10-02 14:02:59,664]DEBUG  9029[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=3, orderStatusName=Pending}
[2017-10-02 14:02:59,664]DEBUG  9029[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,664]DEBUG  9029[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-02 14:02:59,664]DEBUG  9029[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,664]DEBUG  9029[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:59,664]DEBUG  9029[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:59,665]DEBUG  9030[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2017-10-02 14:02:59,665]DEBUG  9030[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:59,665]DEBUG  9030[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:59,665]DEBUG  9030[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#3, id=10, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#3, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#3, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,665]DEBUG  9030[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#3, id=9, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#3, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#3, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,665]DEBUG  9030[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=3, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#3, active=true, login=test, firstName=test, password=test}
[2017-10-02 14:02:59,666]DEBUG  9031[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=3, roleName=Administrator}
[2017-10-02 14:02:59,666]DEBUG  9031[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=3, orderStatusName=Pending}
[2017-10-02 14:02:59,666]DEBUG  9031[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,666]DEBUG  9031[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-02 14:02:59,666]DEBUG  9031[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,667]DEBUG  9032[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:59,667]DEBUG  9032[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:59,667]DEBUG  9032[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2017-10-02 14:02:59,667]DEBUG  9032[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:59,667]DEBUG  9032[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:59,667]DEBUG  9032[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#3, id=10, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#3, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#3, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,668]DEBUG  9033[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#3, id=9, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#3, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#3, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,668]DEBUG  9033[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=3, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#3, active=true, login=test, firstName=test, password=test}
[2017-10-02 14:02:59,668]DEBUG  9033[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=3, roleName=Administrator}
[2017-10-02 14:02:59,668]DEBUG  9033[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=3, orderStatusName=Pending}
[2017-10-02 14:02:59,668]DEBUG  9033[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,668]DEBUG  9033[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-02 14:02:59,669]DEBUG  9034[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,669]DEBUG  9034[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:59,669]DEBUG  9034[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:59,669]DEBUG  9034[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2017-10-02 14:02:59,669]DEBUG  9034[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:59,669]DEBUG  9034[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:59,669]DEBUG  9034[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#3, id=10, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#3, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#3, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,670]DEBUG  9035[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#3, id=9, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#3, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#3, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,670]DEBUG  9035[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=3, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#3, active=true, login=test, firstName=test, password=test}
[2017-10-02 14:02:59,670]DEBUG  9035[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=3, roleName=Administrator}
[2017-10-02 14:02:59,670]DEBUG  9035[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=3, orderStatusName=Pending}
[2017-10-02 14:02:59,670]DEBUG  9035[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,670]DEBUG  9035[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-02 14:02:59,670]DEBUG  9035[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,671]DEBUG  9036[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:59,671]DEBUG  9036[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:59,671]DEBUG  9036[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2017-10-02 14:02:59,671]DEBUG  9036[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:59,671]DEBUG  9036[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:59,671]DEBUG  9036[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#3, id=10, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#3, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#3, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,672]DEBUG  9037[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#3, id=9, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#3, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#3, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,672]DEBUG  9037[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=3, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#3, active=true, login=test, firstName=test, password=test}
[2017-10-02 14:02:59,672]DEBUG  9037[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=3, roleName=Administrator}
[2017-10-02 14:02:59,672]DEBUG  9037[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=3, orderStatusName=Pending}
[2017-10-02 14:02:59,672]DEBUG  9037[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,672]DEBUG  9037[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-02 14:02:59,672]DEBUG  9037[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,673]DEBUG  9038[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@c9cd85d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@28a87cea, testMethod = testDelete@OrderDaoTest, testException = [null]]]
[2017-10-02 14:02:59,673]DEBUG  9038[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-02 14:02:59,673]DEBUG  9038[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@30132014]
[2017-10-02 14:02:59,673]DEBUG  9038[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-02 14:02:59,700]DEBUG  9065[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-02 14:02:59,700]DEBUG  9065[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-02 14:02:59,701]DEBUG  9066[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@30132014] after transaction
[2017-10-02 14:02:59,701]DEBUG  9066[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-02 14:02:59,701]DEBUG  9066[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-02 14:02:59,701]DEBUG  9066[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-02 14:02:59,702] INFO  9067[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@c9cd85d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@28a87cea, testMethod = testDelete@OrderDaoTest, testException = [null]]]
[2017-10-02 14:02:59,703]DEBUG  9068[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@c9cd85d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@28a87cea, testMethod = testDelete@OrderDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-02 14:02:59,704]DEBUG  9069[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2017-10-02 14:02:59,704]DEBUG  9069[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2017-10-02 14:02:59,705]DEBUG  9070[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@c9cd85d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@302979d2, testMethod = [null], testException = [null]]].
[2017-10-02 14:02:59,705]DEBUG  9070[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-02 14:02:59,705]DEBUG  9070[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-02 14:02:59,705]DEBUG  9070[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-02 14:02:59,705]DEBUG  9070[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-02 14:02:59,706]DEBUG  9071[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-02 14:02:59,706]DEBUG  9071[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-02 14:02:59,706]DEBUG  9071[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-02 14:02:59,706]DEBUG  9071[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-02 14:02:59,706]DEBUG  9071[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-02 14:02:59,707]DEBUG  9072[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-02 14:02:59,707]DEBUG  9072[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-02 14:02:59,707]DEBUG  9072[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-02 14:02:59,707]DEBUG  9072[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-02 14:02:59,707]DEBUG  9072[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-02 14:02:59,708]DEBUG  9073[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-02 14:02:59,708]DEBUG  9073[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-02 14:02:59,708]DEBUG  9073[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-02 14:02:59,708]DEBUG  9073[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-02 14:02:59,708]DEBUG  9073[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-02 14:02:59,709]DEBUG  9074[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-02 14:02:59,709]DEBUG  9074[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-02 14:02:59,709]DEBUG  9074[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-02 14:02:59,709]DEBUG  9074[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@302979d2]
[2017-10-02 14:02:59,710]DEBUG  9075[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindFindById' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-02 14:02:59,710]DEBUG  9075[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@c9cd85d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@302979d2, testMethod = testFindFindById@OrderDaoTest, testException = [null]]]
[2017-10-02 14:02:59,710]DEBUG  9075[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-02 14:02:59,712]DEBUG  9077[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindFindById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-02 14:02:59,712]DEBUG  9077[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15069421797
[2017-10-02 14:02:59,712]DEBUG  9077[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@1a519ddb] for Hibernate transaction
[2017-10-02 14:02:59,713]DEBUG  9078[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@1a519ddb]
[2017-10-02 14:02:59,713]DEBUG  9078[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-02 14:02:59,713]DEBUG  9078[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-02 14:02:59,713]DEBUG  9078[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-02 14:02:59,713]DEBUG  9078[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@c9cd85d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@302979d2, testMethod = testFindFindById@OrderDaoTest, testException = [null]]]
[2017-10-02 14:02:59,714] INFO  9079[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (4): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@24af5c74]; rollback [true]
[2017-10-02 14:02:59,714]DEBUG  9079[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,714]DEBUG  9079[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-02 14:02:59,715]DEBUG  9080[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,715]DEBUG  9080[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,715]DEBUG  9080[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-02 14:02:59,716]DEBUG  9081[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,716]DEBUG  9081[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,717]DEBUG  9082[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-02 14:02:59,717]DEBUG  9082[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,717]DEBUG  9082[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,718]DEBUG  9083[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-02 14:02:59,718]DEBUG  9083[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,718]DEBUG  9083[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,719]DEBUG  9084[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-02 14:02:59,719]DEBUG  9084[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,720]DEBUG  9085[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,720]DEBUG  9085[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-02 14:02:59,720]DEBUG  9085[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,721]DEBUG  9086[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,721]DEBUG  9086[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-02 14:02:59,721]DEBUG  9086[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,722]DEBUG  9087[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,722]DEBUG  9087[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-02 14:02:59,722]DEBUG  9087[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,723]DEBUG  9088[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,723]DEBUG  9088[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-02 14:02:59,723]DEBUG  9088[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,723]DEBUG  9088[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:59,723]DEBUG  9088[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,724]DEBUG  9089[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName) values (?)
[2017-10-02 14:02:59,724]DEBUG  9089[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 4
[2017-10-02 14:02:59,724]DEBUG  9089[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,724]DEBUG  9089[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:59,724]DEBUG  9089[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,725]DEBUG  9090[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-02 14:02:59,725]DEBUG  9090[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 4
[2017-10-02 14:02:59,725]DEBUG  9090[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,725]DEBUG  9090[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:59,725]DEBUG  9090[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,726]DEBUG  9091[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Users (IsUserActive, Balance, CustomerTypeRef, Email, FirstName, LastName, Login, Password, RegionRef, RoleRef) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-02 14:02:59,726]DEBUG  9091[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 4
[2017-10-02 14:02:59,726]DEBUG  9091[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,727]DEBUG  9092[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:59,727]DEBUG  9092[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,727]DEBUG  9092[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-02 14:02:59,727]DEBUG  9092[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 11
[2017-10-02 14:02:59,728]DEBUG  9093[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,728]DEBUG  9093[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:59,728]DEBUG  9093[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,728]DEBUG  9093[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-02 14:02:59,729]DEBUG  9094[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 12
[2017-10-02 14:02:59,729]DEBUG  9094[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,729]DEBUG  9094[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:59,729]DEBUG  9094[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,729]DEBUG  9094[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-02 14:02:59,730]DEBUG  9095[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 13
[2017-10-02 14:02:59,730]DEBUG  9095[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,731]DEBUG  9096[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:59,731]DEBUG  9096[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:59,731]DEBUG  9096[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-02 14:02:59,731]DEBUG  9096[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:59,731]DEBUG  9096[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:59,732]DEBUG  9097[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#4, id=12, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#4, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#4, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,732]DEBUG  9097[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#4, id=11, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#4, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#4, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,732]DEBUG  9097[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=4, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#4, active=true, login=test, firstName=test, password=test}
[2017-10-02 14:02:59,732]DEBUG  9097[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#4, id=13, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#4, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#4, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,732]DEBUG  9097[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=4, orderStatusName=Pending}
[2017-10-02 14:02:59,732]DEBUG  9097[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=4, roleName=Administrator}
[2017-10-02 14:02:59,732]DEBUG  9097[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,732]DEBUG  9097[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID5_6_, this_.Assigne as Assigne5_6_, this_.Customer as Customer5_6_, this_.DeliveryDate as Delivery2_5_6_, this_.IsGift as IsGift5_6_, this_.MaxDiscount as MaxDisco4_5_6_, this_.OrderDate as OrderDate5_6_, this_.OrderName as OrderName5_6_, this_.OrderNumber as OrderNum7_5_6_, this_.OrderStatusRef as OrderSt12_5_6_, this_.PreferableDeliveryDate as Preferab8_5_6_, this_.TotalPrice as TotalPrice5_6_, user2_.ID as ID3_0_, user2_.IsUserActive as IsUserAc2_3_0_, user2_.Balance as Balance3_0_, user2_.CustomerTypeRef as Customer9_3_0_, user2_.Email as Email3_0_, user2_.FirstName as FirstName3_0_, user2_.LastName as LastName3_0_, user2_.Login as Login3_0_, user2_.Password as Password3_0_, user2_.RegionRef as RegionRef3_0_, user2_.RoleRef as RoleRef3_0_, customerty3_.ID as ID2_1_, customerty3_.Discount as Discount2_1_, customerty3_.MaxRange as MaxRange2_1_, customerty3_.MinRange as MinRange2_1_, customerty3_.TypeName as TypeName2_1_, region4_.ID as ID1_2_, region4_.RegionName as RegionName1_2_, role5_.ID as ID0_3_, role5_.RoleName as RoleName0_3_, user6_.ID as ID3_4_, user6_.IsUserActive as IsUserAc2_3_4_, user6_.Balance as Balance3_4_, user6_.CustomerTypeRef as Customer9_3_4_, user6_.Email as Email3_4_, user6_.FirstName as FirstName3_4_, user6_.LastName as LastName3_4_, user6_.Login as Login3_4_, user6_.Password as Password3_4_, user6_.RegionRef as RegionRef3_4_, user6_.RoleRef as RoleRef3_4_, orderstatu7_.ID as ID4_5_, orderstatu7_.OrederStatusName as OrederSt2_4_5_ from Orders this_ left outer join Users user2_ on this_.Assigne=user2_.ID left outer join CustomerTypes customerty3_ on user2_.CustomerTypeRef=customerty3_.ID left outer join Regions region4_ on user2_.RegionRef=region4_.ID left outer join Roles role5_ on user2_.RoleRef=role5_.ID left outer join Users user6_ on this_.Customer=user6_.ID left outer join OrderStatuses orderstatu7_ on this_.OrderStatusRef=orderstatu7_.ID
[2017-10-02 14:02:59,733]DEBUG  9098[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-02 14:02:59,735]DEBUG  9100[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#4], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#4], EntityKey[com.softserveinc.edu.oms.domain.entities.User#4], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#4], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#11]
[2017-10-02 14:02:59,735]DEBUG  9100[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#4], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#4], EntityKey[com.softserveinc.edu.oms.domain.entities.User#4], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#4], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#12]
[2017-10-02 14:02:59,735]DEBUG  9100[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#4], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#4], EntityKey[com.softserveinc.edu.oms.domain.entities.User#4], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#4], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#13]
[2017-10-02 14:02:59,735]DEBUG  9100[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-02 14:02:59,735]DEBUG  9100[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,735]DEBUG  9100[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-02 14:02:59,736]DEBUG  9101[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:59,736]DEBUG  9101[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:59,736]DEBUG  9101[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-02 14:02:59,736]DEBUG  9101[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:59,736]DEBUG  9101[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:59,736]DEBUG  9101[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#4, id=12, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#4, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#4, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,737]DEBUG  9102[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#4, id=11, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#4, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#4, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,737]DEBUG  9102[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=4, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#4, active=true, login=test, firstName=test, password=test}
[2017-10-02 14:02:59,737]DEBUG  9102[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#4, id=13, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#4, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#4, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,737]DEBUG  9102[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=4, orderStatusName=Pending}
[2017-10-02 14:02:59,737]DEBUG  9102[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=4, roleName=Administrator}
[2017-10-02 14:02:59,737]DEBUG  9102[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,737]DEBUG  9102[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-02 14:02:59,738]DEBUG  9103[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,738]DEBUG  9103[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:59,738]DEBUG  9103[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:59,738]DEBUG  9103[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-02 14:02:59,738]DEBUG  9103[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:59,738]DEBUG  9103[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:59,738]DEBUG  9103[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#4, id=12, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#4, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#4, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,739]DEBUG  9104[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#4, id=11, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#4, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#4, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,739]DEBUG  9104[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=4, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#4, active=true, login=test, firstName=test, password=test}
[2017-10-02 14:02:59,739]DEBUG  9104[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#4, id=13, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#4, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#4, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,739]DEBUG  9104[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=4, orderStatusName=Pending}
[2017-10-02 14:02:59,739]DEBUG  9104[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=4, roleName=Administrator}
[2017-10-02 14:02:59,739]DEBUG  9104[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,739]DEBUG  9104[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-02 14:02:59,740]DEBUG  9105[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,740]DEBUG  9105[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:59,740]DEBUG  9105[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:59,740]DEBUG  9105[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-02 14:02:59,740]DEBUG  9105[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:59,740]DEBUG  9105[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:59,740]DEBUG  9105[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#4, id=12, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#4, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#4, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,740]DEBUG  9105[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#4, id=11, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#4, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#4, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,741]DEBUG  9106[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=4, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#4, active=true, login=test, firstName=test, password=test}
[2017-10-02 14:02:59,741]DEBUG  9106[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#4, id=13, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#4, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#4, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,741]DEBUG  9106[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=4, orderStatusName=Pending}
[2017-10-02 14:02:59,741]DEBUG  9106[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=4, roleName=Administrator}
[2017-10-02 14:02:59,741]DEBUG  9106[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,741]DEBUG  9106[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-02 14:02:59,741]DEBUG  9106[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,742]DEBUG  9107[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:59,742]DEBUG  9107[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:59,742]DEBUG  9107[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-02 14:02:59,742]DEBUG  9107[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:59,742]DEBUG  9107[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:59,742]DEBUG  9107[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#4, id=12, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#4, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#4, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,742]DEBUG  9107[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#4, id=11, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#4, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#4, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,743]DEBUG  9108[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=4, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#4, active=true, login=test, firstName=test, password=test}
[2017-10-02 14:02:59,743]DEBUG  9108[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#4, id=13, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#4, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#4, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,743]DEBUG  9108[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=4, orderStatusName=Pending}
[2017-10-02 14:02:59,743]DEBUG  9108[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=4, roleName=Administrator}
[2017-10-02 14:02:59,743]DEBUG  9108[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,743]DEBUG  9108[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-02 14:02:59,743]DEBUG  9108[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,744]DEBUG  9109[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:59,744]DEBUG  9109[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:59,744]DEBUG  9109[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-02 14:02:59,744]DEBUG  9109[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:59,744]DEBUG  9109[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:59,744]DEBUG  9109[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#4, id=12, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#4, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#4, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,744]DEBUG  9109[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#4, id=11, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#4, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#4, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,744]DEBUG  9109[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=4, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#4, active=true, login=test, firstName=test, password=test}
[2017-10-02 14:02:59,745]DEBUG  9110[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#4, id=13, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#4, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#4, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,745]DEBUG  9110[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=4, orderStatusName=Pending}
[2017-10-02 14:02:59,745]DEBUG  9110[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=4, roleName=Administrator}
[2017-10-02 14:02:59,745]DEBUG  9110[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,745]DEBUG  9110[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-02 14:02:59,745]DEBUG  9110[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,745]DEBUG  9110[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:59,746]DEBUG  9111[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:59,746]DEBUG  9111[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-02 14:02:59,746]DEBUG  9111[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:59,746]DEBUG  9111[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:59,746]DEBUG  9111[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#4, id=12, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#4, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#4, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,746]DEBUG  9111[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#4, id=11, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#4, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#4, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,746]DEBUG  9111[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=4, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#4, active=true, login=test, firstName=test, password=test}
[2017-10-02 14:02:59,747]DEBUG  9112[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#4, id=13, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#4, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#4, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,747]DEBUG  9112[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=4, orderStatusName=Pending}
[2017-10-02 14:02:59,747]DEBUG  9112[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=4, roleName=Administrator}
[2017-10-02 14:02:59,747]DEBUG  9112[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,747]DEBUG  9112[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-02 14:02:59,747]DEBUG  9112[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,747]DEBUG  9112[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:59,747]DEBUG  9112[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:59,748]DEBUG  9113[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-02 14:02:59,748]DEBUG  9113[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:59,748]DEBUG  9113[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:59,748]DEBUG  9113[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#4, id=12, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#4, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#4, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,748]DEBUG  9113[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#4, id=11, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#4, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#4, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,748]DEBUG  9113[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=4, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#4, active=true, login=test, firstName=test, password=test}
[2017-10-02 14:02:59,748]DEBUG  9113[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#4, id=13, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#4, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#4, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,748]DEBUG  9113[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=4, orderStatusName=Pending}
[2017-10-02 14:02:59,749]DEBUG  9114[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=4, roleName=Administrator}
[2017-10-02 14:02:59,749]DEBUG  9114[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,749]DEBUG  9114[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-02 14:02:59,749]DEBUG  9114[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,749]DEBUG  9114[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:59,749]DEBUG  9114[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:59,750]DEBUG  9115[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-02 14:02:59,750]DEBUG  9115[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:59,750]DEBUG  9115[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:59,750]DEBUG  9115[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#4, id=12, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#4, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#4, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,750]DEBUG  9115[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#4, id=11, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#4, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#4, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,750]DEBUG  9115[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=4, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#4, active=true, login=test, firstName=test, password=test}
[2017-10-02 14:02:59,750]DEBUG  9115[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#4, id=13, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#4, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#4, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,750]DEBUG  9115[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=4, orderStatusName=Pending}
[2017-10-02 14:02:59,750]DEBUG  9115[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=4, roleName=Administrator}
[2017-10-02 14:02:59,751]DEBUG  9116[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,751]DEBUG  9116[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-02 14:02:59,751]DEBUG  9116[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,751]DEBUG  9116[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:59,751]DEBUG  9116[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:59,751]DEBUG  9116[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-02 14:02:59,751]DEBUG  9116[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:59,752]DEBUG  9117[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:59,752]DEBUG  9117[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#4, id=12, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#4, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#4, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,752]DEBUG  9117[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#4, id=11, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#4, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#4, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,752]DEBUG  9117[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=4, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#4, active=true, login=test, firstName=test, password=test}
[2017-10-02 14:02:59,752]DEBUG  9117[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#4, id=13, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#4, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#4, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,752]DEBUG  9117[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=4, orderStatusName=Pending}
[2017-10-02 14:02:59,752]DEBUG  9117[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=4, roleName=Administrator}
[2017-10-02 14:02:59,752]DEBUG  9117[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,752]DEBUG  9117[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-02 14:02:59,753]DEBUG  9118[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,753]DEBUG  9118[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@c9cd85d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@302979d2, testMethod = testFindFindById@OrderDaoTest, testException = [null]]]
[2017-10-02 14:02:59,753]DEBUG  9118[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-02 14:02:59,753]DEBUG  9118[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@1a519ddb]
[2017-10-02 14:02:59,753]DEBUG  9118[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-02 14:02:59,775]DEBUG  9140[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-02 14:02:59,775]DEBUG  9140[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-02 14:02:59,776]DEBUG  9141[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@1a519ddb] after transaction
[2017-10-02 14:02:59,776]DEBUG  9141[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-02 14:02:59,776]DEBUG  9141[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-02 14:02:59,776]DEBUG  9141[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-02 14:02:59,776] INFO  9141[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@c9cd85d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@302979d2, testMethod = testFindFindById@OrderDaoTest, testException = [null]]]
[2017-10-02 14:02:59,777]DEBUG  9142[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@c9cd85d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@302979d2, testMethod = testFindFindById@OrderDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-02 14:02:59,777]DEBUG  9142[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2017-10-02 14:02:59,778]DEBUG  9143[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2017-10-02 14:02:59,778]DEBUG  9143[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@c9cd85d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@14c7b324, testMethod = [null], testException = [null]]].
[2017-10-02 14:02:59,778]DEBUG  9143[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-02 14:02:59,778]DEBUG  9143[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-02 14:02:59,778]DEBUG  9143[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-02 14:02:59,779]DEBUG  9144[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-02 14:02:59,779]DEBUG  9144[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-02 14:02:59,779]DEBUG  9144[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-02 14:02:59,779]DEBUG  9144[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-02 14:02:59,779]DEBUG  9144[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-02 14:02:59,779]DEBUG  9144[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-02 14:02:59,779]DEBUG  9144[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-02 14:02:59,779]DEBUG  9144[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-02 14:02:59,780]DEBUG  9145[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-02 14:02:59,780]DEBUG  9145[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-02 14:02:59,780]DEBUG  9145[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-02 14:02:59,780]DEBUG  9145[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-02 14:02:59,780]DEBUG  9145[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-02 14:02:59,780]DEBUG  9145[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-02 14:02:59,780]DEBUG  9145[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-02 14:02:59,780]DEBUG  9145[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-02 14:02:59,781]DEBUG  9146[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-02 14:02:59,781]DEBUG  9146[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-02 14:02:59,781]DEBUG  9146[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-02 14:02:59,781]DEBUG  9146[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@14c7b324]
[2017-10-02 14:02:59,782]DEBUG  9147[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByTotalPriceEquals' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-02 14:02:59,782]DEBUG  9147[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@c9cd85d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@14c7b324, testMethod = testFindByTotalPriceEquals@OrderDaoTest, testException = [null]]]
[2017-10-02 14:02:59,782]DEBUG  9147[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-02 14:02:59,783]DEBUG  9148[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByTotalPriceEquals]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-02 14:02:59,783]DEBUG  9148[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15069421797
[2017-10-02 14:02:59,783]DEBUG  9148[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@61f2c2b1] for Hibernate transaction
[2017-10-02 14:02:59,783]DEBUG  9148[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@61f2c2b1]
[2017-10-02 14:02:59,784]DEBUG  9149[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-02 14:02:59,784]DEBUG  9149[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-02 14:02:59,784]DEBUG  9149[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-02 14:02:59,784]DEBUG  9149[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@c9cd85d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@14c7b324, testMethod = testFindByTotalPriceEquals@OrderDaoTest, testException = [null]]]
[2017-10-02 14:02:59,784] INFO  9149[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (5): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@24af5c74]; rollback [true]
[2017-10-02 14:02:59,784]DEBUG  9149[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,785]DEBUG  9150[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-02 14:02:59,785]DEBUG  9150[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,786]DEBUG  9151[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,786]DEBUG  9151[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-02 14:02:59,786]DEBUG  9151[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,786]DEBUG  9151[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,787]DEBUG  9152[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-02 14:02:59,787]DEBUG  9152[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,787]DEBUG  9152[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,788]DEBUG  9153[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-02 14:02:59,788]DEBUG  9153[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,788]DEBUG  9153[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,788]DEBUG  9153[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-02 14:02:59,789]DEBUG  9154[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,789]DEBUG  9154[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,789]DEBUG  9154[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-02 14:02:59,790]DEBUG  9155[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,790]DEBUG  9155[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,790]DEBUG  9155[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-02 14:02:59,791]DEBUG  9156[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,791]DEBUG  9156[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,791]DEBUG  9156[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-02 14:02:59,792]DEBUG  9157[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,792]DEBUG  9157[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,792]DEBUG  9157[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-02 14:02:59,792]DEBUG  9157[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,793]DEBUG  9158[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:59,793]DEBUG  9158[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,793]DEBUG  9158[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName) values (?)
[2017-10-02 14:02:59,794]DEBUG  9159[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 5
[2017-10-02 14:02:59,794]DEBUG  9159[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,794]DEBUG  9159[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:59,795]DEBUG  9160[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,795]DEBUG  9160[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-02 14:02:59,795]DEBUG  9160[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 5
[2017-10-02 14:02:59,796]DEBUG  9161[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,796]DEBUG  9161[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:59,796]DEBUG  9161[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,797]DEBUG  9162[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Users (IsUserActive, Balance, CustomerTypeRef, Email, FirstName, LastName, Login, Password, RegionRef, RoleRef) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-02 14:02:59,797]DEBUG  9162[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 5
[2017-10-02 14:02:59,797]DEBUG  9162[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,798]DEBUG  9163[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:59,798]DEBUG  9163[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,798]DEBUG  9163[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-02 14:02:59,799]DEBUG  9164[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 14
[2017-10-02 14:02:59,800]DEBUG  9165[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,800]DEBUG  9165[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:59,800]DEBUG  9165[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,801]DEBUG  9166[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-02 14:02:59,802]DEBUG  9167[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 15
[2017-10-02 14:02:59,802]DEBUG  9167[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,802]DEBUG  9167[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:59,802]DEBUG  9167[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,803]DEBUG  9168[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-02 14:02:59,803]DEBUG  9168[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 16
[2017-10-02 14:02:59,803]DEBUG  9168[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,805]DEBUG  9170[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:59,806]DEBUG  9171[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:59,806]DEBUG  9171[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-02 14:02:59,806]DEBUG  9171[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:59,806]DEBUG  9171[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:59,806]DEBUG  9171[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=5, roleName=Administrator}
[2017-10-02 14:02:59,806]DEBUG  9171[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=5, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#5, active=true, login=test, firstName=test, password=test}
[2017-10-02 14:02:59,807]DEBUG  9172[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#5, id=15, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#5, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#5, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,807]DEBUG  9172[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#5, id=16, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#5, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#5, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,807]DEBUG  9172[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=5, orderStatusName=Pending}
[2017-10-02 14:02:59,807]DEBUG  9172[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#5, id=14, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#5, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#5, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,807]DEBUG  9172[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,807]DEBUG  9172[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID5_6_, this_.Assigne as Assigne5_6_, this_.Customer as Customer5_6_, this_.DeliveryDate as Delivery2_5_6_, this_.IsGift as IsGift5_6_, this_.MaxDiscount as MaxDisco4_5_6_, this_.OrderDate as OrderDate5_6_, this_.OrderName as OrderName5_6_, this_.OrderNumber as OrderNum7_5_6_, this_.OrderStatusRef as OrderSt12_5_6_, this_.PreferableDeliveryDate as Preferab8_5_6_, this_.TotalPrice as TotalPrice5_6_, user2_.ID as ID3_0_, user2_.IsUserActive as IsUserAc2_3_0_, user2_.Balance as Balance3_0_, user2_.CustomerTypeRef as Customer9_3_0_, user2_.Email as Email3_0_, user2_.FirstName as FirstName3_0_, user2_.LastName as LastName3_0_, user2_.Login as Login3_0_, user2_.Password as Password3_0_, user2_.RegionRef as RegionRef3_0_, user2_.RoleRef as RoleRef3_0_, customerty3_.ID as ID2_1_, customerty3_.Discount as Discount2_1_, customerty3_.MaxRange as MaxRange2_1_, customerty3_.MinRange as MinRange2_1_, customerty3_.TypeName as TypeName2_1_, region4_.ID as ID1_2_, region4_.RegionName as RegionName1_2_, role5_.ID as ID0_3_, role5_.RoleName as RoleName0_3_, user6_.ID as ID3_4_, user6_.IsUserActive as IsUserAc2_3_4_, user6_.Balance as Balance3_4_, user6_.CustomerTypeRef as Customer9_3_4_, user6_.Email as Email3_4_, user6_.FirstName as FirstName3_4_, user6_.LastName as LastName3_4_, user6_.Login as Login3_4_, user6_.Password as Password3_4_, user6_.RegionRef as RegionRef3_4_, user6_.RoleRef as RoleRef3_4_, orderstatu7_.ID as ID4_5_, orderstatu7_.OrederStatusName as OrederSt2_4_5_ from Orders this_ left outer join Users user2_ on this_.Assigne=user2_.ID left outer join CustomerTypes customerty3_ on user2_.CustomerTypeRef=customerty3_.ID left outer join Regions region4_ on user2_.RegionRef=region4_.ID left outer join Roles role5_ on user2_.RoleRef=role5_.ID left outer join Users user6_ on this_.Customer=user6_.ID left outer join OrderStatuses orderstatu7_ on this_.OrderStatusRef=orderstatu7_.ID where this_.TotalPrice=?
[2017-10-02 14:02:59,808]DEBUG  9173[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-02 14:02:59,810]DEBUG  9175[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#5], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#5], EntityKey[com.softserveinc.edu.oms.domain.entities.User#5], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#5], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#14]
[2017-10-02 14:02:59,810]DEBUG  9175[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#5], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#5], EntityKey[com.softserveinc.edu.oms.domain.entities.User#5], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#5], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#15]
[2017-10-02 14:02:59,810]DEBUG  9175[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#5], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#5], EntityKey[com.softserveinc.edu.oms.domain.entities.User#5], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#5], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#16]
[2017-10-02 14:02:59,810]DEBUG  9175[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-02 14:02:59,810]DEBUG  9175[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,810]DEBUG  9175[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-02 14:02:59,811]DEBUG  9176[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:59,811]DEBUG  9176[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:59,811]DEBUG  9176[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-02 14:02:59,811]DEBUG  9176[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:59,811]DEBUG  9176[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:59,811]DEBUG  9176[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=5, roleName=Administrator}
[2017-10-02 14:02:59,812]DEBUG  9177[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=5, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#5, active=true, login=test, firstName=test, password=test}
[2017-10-02 14:02:59,812]DEBUG  9177[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#5, id=15, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#5, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#5, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,812]DEBUG  9177[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#5, id=16, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#5, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#5, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,812]DEBUG  9177[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=5, orderStatusName=Pending}
[2017-10-02 14:02:59,812]DEBUG  9177[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#5, id=14, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#5, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#5, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,812]DEBUG  9177[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,812]DEBUG  9177[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-02 14:02:59,813]DEBUG  9178[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,813]DEBUG  9178[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:59,813]DEBUG  9178[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:59,813]DEBUG  9178[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-02 14:02:59,813]DEBUG  9178[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:59,813]DEBUG  9178[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:59,813]DEBUG  9178[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=5, roleName=Administrator}
[2017-10-02 14:02:59,814]DEBUG  9179[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=5, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#5, active=true, login=test, firstName=test, password=test}
[2017-10-02 14:02:59,814]DEBUG  9179[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#5, id=15, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#5, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#5, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,814]DEBUG  9179[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#5, id=16, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#5, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#5, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,814]DEBUG  9179[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=5, orderStatusName=Pending}
[2017-10-02 14:02:59,814]DEBUG  9179[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#5, id=14, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#5, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#5, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,814]DEBUG  9179[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,814]DEBUG  9179[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-02 14:02:59,815]DEBUG  9180[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,815]DEBUG  9180[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:59,815]DEBUG  9180[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:59,815]DEBUG  9180[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-02 14:02:59,815]DEBUG  9180[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:59,815]DEBUG  9180[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:59,815]DEBUG  9180[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=5, roleName=Administrator}
[2017-10-02 14:02:59,815]DEBUG  9180[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=5, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#5, active=true, login=test, firstName=test, password=test}
[2017-10-02 14:02:59,816]DEBUG  9181[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#5, id=15, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#5, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#5, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,816]DEBUG  9181[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#5, id=16, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#5, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#5, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,816]DEBUG  9181[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=5, orderStatusName=Pending}
[2017-10-02 14:02:59,816]DEBUG  9181[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#5, id=14, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#5, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#5, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,816]DEBUG  9181[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,816]DEBUG  9181[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-02 14:02:59,816]DEBUG  9181[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,817]DEBUG  9182[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:59,817]DEBUG  9182[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:59,817]DEBUG  9182[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-02 14:02:59,817]DEBUG  9182[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:59,817]DEBUG  9182[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:59,817]DEBUG  9182[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=5, roleName=Administrator}
[2017-10-02 14:02:59,817]DEBUG  9182[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=5, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#5, active=true, login=test, firstName=test, password=test}
[2017-10-02 14:02:59,818]DEBUG  9183[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#5, id=15, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#5, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#5, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,818]DEBUG  9183[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#5, id=16, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#5, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#5, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,818]DEBUG  9183[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=5, orderStatusName=Pending}
[2017-10-02 14:02:59,818]DEBUG  9183[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#5, id=14, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#5, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#5, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,818]DEBUG  9183[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,818]DEBUG  9183[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-02 14:02:59,818]DEBUG  9183[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,819]DEBUG  9184[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:59,819]DEBUG  9184[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:59,819]DEBUG  9184[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-02 14:02:59,819]DEBUG  9184[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:59,819]DEBUG  9184[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:59,819]DEBUG  9184[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=5, roleName=Administrator}
[2017-10-02 14:02:59,819]DEBUG  9184[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=5, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#5, active=true, login=test, firstName=test, password=test}
[2017-10-02 14:02:59,820]DEBUG  9185[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#5, id=15, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#5, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#5, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,820]DEBUG  9185[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#5, id=16, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#5, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#5, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,820]DEBUG  9185[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=5, orderStatusName=Pending}
[2017-10-02 14:02:59,820]DEBUG  9185[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#5, id=14, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#5, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#5, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,820]DEBUG  9185[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,820]DEBUG  9185[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-02 14:02:59,820]DEBUG  9185[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,821]DEBUG  9186[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:59,821]DEBUG  9186[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:59,821]DEBUG  9186[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-02 14:02:59,821]DEBUG  9186[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:59,821]DEBUG  9186[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:59,821]DEBUG  9186[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=5, roleName=Administrator}
[2017-10-02 14:02:59,821]DEBUG  9186[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=5, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#5, active=true, login=test, firstName=test, password=test}
[2017-10-02 14:02:59,821]DEBUG  9186[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#5, id=15, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#5, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#5, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,822]DEBUG  9187[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#5, id=16, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#5, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#5, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,822]DEBUG  9187[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=5, orderStatusName=Pending}
[2017-10-02 14:02:59,822]DEBUG  9187[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#5, id=14, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#5, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#5, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,822]DEBUG  9187[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,822]DEBUG  9187[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-02 14:02:59,822]DEBUG  9187[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,823]DEBUG  9188[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:59,823]DEBUG  9188[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:59,823]DEBUG  9188[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-02 14:02:59,823]DEBUG  9188[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:59,823]DEBUG  9188[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:59,823]DEBUG  9188[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=5, roleName=Administrator}
[2017-10-02 14:02:59,823]DEBUG  9188[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=5, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#5, active=true, login=test, firstName=test, password=test}
[2017-10-02 14:02:59,823]DEBUG  9188[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#5, id=15, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#5, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#5, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,824]DEBUG  9189[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#5, id=16, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#5, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#5, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,824]DEBUG  9189[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=5, orderStatusName=Pending}
[2017-10-02 14:02:59,824]DEBUG  9189[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#5, id=14, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#5, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#5, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,824]DEBUG  9189[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,824]DEBUG  9189[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-02 14:02:59,824]DEBUG  9189[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,824]DEBUG  9189[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:59,825]DEBUG  9190[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:59,825]DEBUG  9190[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-02 14:02:59,825]DEBUG  9190[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:59,825]DEBUG  9190[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:59,825]DEBUG  9190[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=5, roleName=Administrator}
[2017-10-02 14:02:59,825]DEBUG  9190[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=5, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#5, active=true, login=test, firstName=test, password=test}
[2017-10-02 14:02:59,825]DEBUG  9190[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#5, id=15, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#5, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#5, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,826]DEBUG  9191[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#5, id=16, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#5, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#5, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,826]DEBUG  9191[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=5, orderStatusName=Pending}
[2017-10-02 14:02:59,826]DEBUG  9191[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#5, id=14, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#5, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#5, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,826]DEBUG  9191[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,826]DEBUG  9191[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-02 14:02:59,826]DEBUG  9191[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,826]DEBUG  9191[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:59,827]DEBUG  9192[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:59,827]DEBUG  9192[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-02 14:02:59,827]DEBUG  9192[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:59,827]DEBUG  9192[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:59,827]DEBUG  9192[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=5, roleName=Administrator}
[2017-10-02 14:02:59,827]DEBUG  9192[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=5, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#5, active=true, login=test, firstName=test, password=test}
[2017-10-02 14:02:59,827]DEBUG  9192[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#5, id=15, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#5, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#5, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,828]DEBUG  9193[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#5, id=16, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#5, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#5, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,828]DEBUG  9193[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=5, orderStatusName=Pending}
[2017-10-02 14:02:59,828]DEBUG  9193[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#5, id=14, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#5, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#5, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,828]DEBUG  9193[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,828]DEBUG  9193[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-02 14:02:59,828]DEBUG  9193[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,828]DEBUG  9193[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@c9cd85d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@14c7b324, testMethod = testFindByTotalPriceEquals@OrderDaoTest, testException = [null]]]
[2017-10-02 14:02:59,829]DEBUG  9194[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-02 14:02:59,829]DEBUG  9194[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@61f2c2b1]
[2017-10-02 14:02:59,829]DEBUG  9194[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-02 14:02:59,858]DEBUG  9223[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-02 14:02:59,859]DEBUG  9224[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-02 14:02:59,859]DEBUG  9224[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@61f2c2b1] after transaction
[2017-10-02 14:02:59,859]DEBUG  9224[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-02 14:02:59,859]DEBUG  9224[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-02 14:02:59,859]DEBUG  9224[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-02 14:02:59,860] INFO  9225[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@c9cd85d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@14c7b324, testMethod = testFindByTotalPriceEquals@OrderDaoTest, testException = [null]]]
[2017-10-02 14:02:59,861]DEBUG  9226[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@c9cd85d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@14c7b324, testMethod = testFindByTotalPriceEquals@OrderDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-02 14:02:59,861]DEBUG  9226[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2017-10-02 14:02:59,861]DEBUG  9226[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2017-10-02 14:02:59,862]DEBUG  9227[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@c9cd85d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@739ca615, testMethod = [null], testException = [null]]].
[2017-10-02 14:02:59,862]DEBUG  9227[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-02 14:02:59,862]DEBUG  9227[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-02 14:02:59,862]DEBUG  9227[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-02 14:02:59,862]DEBUG  9227[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-02 14:02:59,862]DEBUG  9227[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-02 14:02:59,862]DEBUG  9227[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-02 14:02:59,863]DEBUG  9228[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-02 14:02:59,863]DEBUG  9228[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-02 14:02:59,863]DEBUG  9228[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-02 14:02:59,863]DEBUG  9228[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-02 14:02:59,863]DEBUG  9228[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-02 14:02:59,863]DEBUG  9228[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-02 14:02:59,864]DEBUG  9229[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-02 14:02:59,864]DEBUG  9229[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-02 14:02:59,864]DEBUG  9229[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-02 14:02:59,864]DEBUG  9229[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-02 14:02:59,864]DEBUG  9229[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-02 14:02:59,864]DEBUG  9229[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-02 14:02:59,865]DEBUG  9230[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-02 14:02:59,865]DEBUG  9230[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-02 14:02:59,865]DEBUG  9230[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-02 14:02:59,865]DEBUG  9230[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-02 14:02:59,865]DEBUG  9230[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@739ca615]
[2017-10-02 14:02:59,866]DEBUG  9231[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByTotalPriceLess' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-02 14:02:59,866]DEBUG  9231[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@c9cd85d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@739ca615, testMethod = testFindByTotalPriceLess@OrderDaoTest, testException = [null]]]
[2017-10-02 14:02:59,866]DEBUG  9231[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-02 14:02:59,868]DEBUG  9233[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByTotalPriceLess]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-02 14:02:59,868]DEBUG  9233[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15069421798
[2017-10-02 14:02:59,868]DEBUG  9233[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@7fa6e8b1] for Hibernate transaction
[2017-10-02 14:02:59,868]DEBUG  9233[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7fa6e8b1]
[2017-10-02 14:02:59,868]DEBUG  9233[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-02 14:02:59,868]DEBUG  9233[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-02 14:02:59,869]DEBUG  9234[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-02 14:02:59,869]DEBUG  9234[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@c9cd85d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@739ca615, testMethod = testFindByTotalPriceLess@OrderDaoTest, testException = [null]]]
[2017-10-02 14:02:59,869] INFO  9234[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (6): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@24af5c74]; rollback [true]
[2017-10-02 14:02:59,869]DEBUG  9234[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,869]DEBUG  9234[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-02 14:02:59,870]DEBUG  9235[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,870]DEBUG  9235[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,870]DEBUG  9235[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-02 14:02:59,870]DEBUG  9235[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,870]DEBUG  9235[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,870]DEBUG  9235[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-02 14:02:59,871]DEBUG  9236[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,871]DEBUG  9236[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,871]DEBUG  9236[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-02 14:02:59,872]DEBUG  9237[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,872]DEBUG  9237[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,872]DEBUG  9237[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-02 14:02:59,873]DEBUG  9238[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,873]DEBUG  9238[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,873]DEBUG  9238[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-02 14:02:59,874]DEBUG  9239[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,874]DEBUG  9239[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,874]DEBUG  9239[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-02 14:02:59,875]DEBUG  9240[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,875]DEBUG  9240[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,875]DEBUG  9240[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-02 14:02:59,875]DEBUG  9240[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,876]DEBUG  9241[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,876]DEBUG  9241[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-02 14:02:59,876]DEBUG  9241[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,876]DEBUG  9241[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:59,877]DEBUG  9242[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,877]DEBUG  9242[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName) values (?)
[2017-10-02 14:02:59,877]DEBUG  9242[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 6
[2017-10-02 14:02:59,877]DEBUG  9242[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,878]DEBUG  9243[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:59,878]DEBUG  9243[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,878]DEBUG  9243[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-02 14:02:59,879]DEBUG  9244[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 6
[2017-10-02 14:02:59,879]DEBUG  9244[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,879]DEBUG  9244[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:59,880]DEBUG  9245[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,880]DEBUG  9245[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Users (IsUserActive, Balance, CustomerTypeRef, Email, FirstName, LastName, Login, Password, RegionRef, RoleRef) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-02 14:02:59,881]DEBUG  9246[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 6
[2017-10-02 14:02:59,881]DEBUG  9246[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,881]DEBUG  9246[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:59,881]DEBUG  9246[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,882]DEBUG  9247[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-02 14:02:59,883]DEBUG  9248[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 17
[2017-10-02 14:02:59,883]DEBUG  9248[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,883]DEBUG  9248[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:59,883]DEBUG  9248[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,883]DEBUG  9248[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-02 14:02:59,884]DEBUG  9249[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 18
[2017-10-02 14:02:59,884]DEBUG  9249[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,884]DEBUG  9249[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-02 14:02:59,884]DEBUG  9249[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,885]DEBUG  9250[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-02 14:02:59,885]DEBUG  9250[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 19
[2017-10-02 14:02:59,885]DEBUG  9250[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,886]DEBUG  9251[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:59,886]DEBUG  9251[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:59,887]DEBUG  9252[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-02 14:02:59,887]DEBUG  9252[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:59,887]DEBUG  9252[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:59,887]DEBUG  9252[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#6, id=19, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#6, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#6, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,887]DEBUG  9252[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=6, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#6, active=true, login=test, firstName=test, password=test}
[2017-10-02 14:02:59,887]DEBUG  9252[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=6, roleName=Administrator}
[2017-10-02 14:02:59,888]DEBUG  9253[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#6, id=17, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#6, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#6, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,888]DEBUG  9253[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#6, id=18, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#6, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#6, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,888]DEBUG  9253[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=6, orderStatusName=Pending}
[2017-10-02 14:02:59,888]DEBUG  9253[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,888]DEBUG  9253[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID5_6_, this_.Assigne as Assigne5_6_, this_.Customer as Customer5_6_, this_.DeliveryDate as Delivery2_5_6_, this_.IsGift as IsGift5_6_, this_.MaxDiscount as MaxDisco4_5_6_, this_.OrderDate as OrderDate5_6_, this_.OrderName as OrderName5_6_, this_.OrderNumber as OrderNum7_5_6_, this_.OrderStatusRef as OrderSt12_5_6_, this_.PreferableDeliveryDate as Preferab8_5_6_, this_.TotalPrice as TotalPrice5_6_, user2_.ID as ID3_0_, user2_.IsUserActive as IsUserAc2_3_0_, user2_.Balance as Balance3_0_, user2_.CustomerTypeRef as Customer9_3_0_, user2_.Email as Email3_0_, user2_.FirstName as FirstName3_0_, user2_.LastName as LastName3_0_, user2_.Login as Login3_0_, user2_.Password as Password3_0_, user2_.RegionRef as RegionRef3_0_, user2_.RoleRef as RoleRef3_0_, customerty3_.ID as ID2_1_, customerty3_.Discount as Discount2_1_, customerty3_.MaxRange as MaxRange2_1_, customerty3_.MinRange as MinRange2_1_, customerty3_.TypeName as TypeName2_1_, region4_.ID as ID1_2_, region4_.RegionName as RegionName1_2_, role5_.ID as ID0_3_, role5_.RoleName as RoleName0_3_, user6_.ID as ID3_4_, user6_.IsUserActive as IsUserAc2_3_4_, user6_.Balance as Balance3_4_, user6_.CustomerTypeRef as Customer9_3_4_, user6_.Email as Email3_4_, user6_.FirstName as FirstName3_4_, user6_.LastName as LastName3_4_, user6_.Login as Login3_4_, user6_.Password as Password3_4_, user6_.RegionRef as RegionRef3_4_, user6_.RoleRef as RoleRef3_4_, orderstatu7_.ID as ID4_5_, orderstatu7_.OrederStatusName as OrederSt2_4_5_ from Orders this_ left outer join Users user2_ on this_.Assigne=user2_.ID left outer join CustomerTypes customerty3_ on user2_.CustomerTypeRef=customerty3_.ID left outer join Regions region4_ on user2_.RegionRef=region4_.ID left outer join Roles role5_ on user2_.RoleRef=role5_.ID left outer join Users user6_ on this_.Customer=user6_.ID left outer join OrderStatuses orderstatu7_ on this_.OrderStatusRef=orderstatu7_.ID where this_.TotalPrice<?
[2017-10-02 14:02:59,889]DEBUG  9254[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-02 14:02:59,891]DEBUG  9256[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#6], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#6], EntityKey[com.softserveinc.edu.oms.domain.entities.User#6], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#6], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#17]
[2017-10-02 14:02:59,891]DEBUG  9256[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#6], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#6], EntityKey[com.softserveinc.edu.oms.domain.entities.User#6], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#6], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#18]
[2017-10-02 14:02:59,891]DEBUG  9256[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#6], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#6], EntityKey[com.softserveinc.edu.oms.domain.entities.User#6], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#6], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#19]
[2017-10-02 14:02:59,891]DEBUG  9256[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-02 14:02:59,891]DEBUG  9256[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,891]DEBUG  9256[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-02 14:02:59,892]DEBUG  9257[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:59,892]DEBUG  9257[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:59,892]DEBUG  9257[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-02 14:02:59,892]DEBUG  9257[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:59,892]DEBUG  9257[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:59,892]DEBUG  9257[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#6, id=19, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#6, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#6, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,893]DEBUG  9258[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=6, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#6, active=true, login=test, firstName=test, password=test}
[2017-10-02 14:02:59,893]DEBUG  9258[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=6, roleName=Administrator}
[2017-10-02 14:02:59,893]DEBUG  9258[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#6, id=17, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#6, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#6, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,893]DEBUG  9258[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#6, id=18, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#6, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#6, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,893]DEBUG  9258[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=6, orderStatusName=Pending}
[2017-10-02 14:02:59,893]DEBUG  9258[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,893]DEBUG  9258[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-02 14:02:59,894]DEBUG  9259[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,894]DEBUG  9259[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:59,894]DEBUG  9259[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:59,894]DEBUG  9259[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-02 14:02:59,895]DEBUG  9260[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:59,895]DEBUG  9260[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:59,895]DEBUG  9260[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#6, id=19, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#6, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#6, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,895]DEBUG  9260[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=6, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#6, active=true, login=test, firstName=test, password=test}
[2017-10-02 14:02:59,895]DEBUG  9260[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=6, roleName=Administrator}
[2017-10-02 14:02:59,895]DEBUG  9260[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#6, id=17, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#6, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#6, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,895]DEBUG  9260[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#6, id=18, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#6, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#6, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,895]DEBUG  9260[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=6, orderStatusName=Pending}
[2017-10-02 14:02:59,896]DEBUG  9261[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,896]DEBUG  9261[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-02 14:02:59,896]DEBUG  9261[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,896]DEBUG  9261[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:59,896]DEBUG  9261[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:59,897]DEBUG  9262[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-02 14:02:59,897]DEBUG  9262[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:59,897]DEBUG  9262[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:59,897]DEBUG  9262[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#6, id=19, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#6, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#6, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,897]DEBUG  9262[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=6, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#6, active=true, login=test, firstName=test, password=test}
[2017-10-02 14:02:59,897]DEBUG  9262[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=6, roleName=Administrator}
[2017-10-02 14:02:59,897]DEBUG  9262[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#6, id=17, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#6, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#6, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,898]DEBUG  9263[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#6, id=18, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#6, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#6, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,898]DEBUG  9263[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=6, orderStatusName=Pending}
[2017-10-02 14:02:59,898]DEBUG  9263[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,898]DEBUG  9263[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-02 14:02:59,898]DEBUG  9263[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,898]DEBUG  9263[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:59,899]DEBUG  9264[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:59,899]DEBUG  9264[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-02 14:02:59,899]DEBUG  9264[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:59,899]DEBUG  9264[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:59,899]DEBUG  9264[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#6, id=19, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#6, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#6, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,899]DEBUG  9264[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=6, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#6, active=true, login=test, firstName=test, password=test}
[2017-10-02 14:02:59,899]DEBUG  9264[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=6, roleName=Administrator}
[2017-10-02 14:02:59,900]DEBUG  9265[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#6, id=17, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#6, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#6, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,900]DEBUG  9265[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#6, id=18, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#6, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#6, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,900]DEBUG  9265[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=6, orderStatusName=Pending}
[2017-10-02 14:02:59,900]DEBUG  9265[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,900]DEBUG  9265[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-02 14:02:59,901]DEBUG  9266[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,901]DEBUG  9266[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:59,901]DEBUG  9266[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:59,901]DEBUG  9266[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-02 14:02:59,901]DEBUG  9266[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:59,901]DEBUG  9266[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:59,902]DEBUG  9267[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#6, id=19, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#6, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#6, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,902]DEBUG  9267[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=6, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#6, active=true, login=test, firstName=test, password=test}
[2017-10-02 14:02:59,902]DEBUG  9267[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=6, roleName=Administrator}
[2017-10-02 14:02:59,902]DEBUG  9267[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#6, id=17, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#6, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#6, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,902]DEBUG  9267[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#6, id=18, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#6, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#6, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,902]DEBUG  9267[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=6, orderStatusName=Pending}
[2017-10-02 14:02:59,902]DEBUG  9267[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,902]DEBUG  9267[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-02 14:02:59,903]DEBUG  9268[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,903]DEBUG  9268[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:59,903]DEBUG  9268[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:59,903]DEBUG  9268[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-02 14:02:59,903]DEBUG  9268[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:59,903]DEBUG  9268[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:59,904]DEBUG  9269[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#6, id=19, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#6, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#6, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,904]DEBUG  9269[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=6, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#6, active=true, login=test, firstName=test, password=test}
[2017-10-02 14:02:59,904]DEBUG  9269[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=6, roleName=Administrator}
[2017-10-02 14:02:59,904]DEBUG  9269[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#6, id=17, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#6, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#6, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,904]DEBUG  9269[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#6, id=18, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#6, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#6, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,904]DEBUG  9269[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=6, orderStatusName=Pending}
[2017-10-02 14:02:59,904]DEBUG  9269[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,904]DEBUG  9269[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-02 14:02:59,905]DEBUG  9270[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,905]DEBUG  9270[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:59,905]DEBUG  9270[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:59,905]DEBUG  9270[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-02 14:02:59,905]DEBUG  9270[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:59,905]DEBUG  9270[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:59,906]DEBUG  9271[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#6, id=19, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#6, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#6, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,906]DEBUG  9271[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=6, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#6, active=true, login=test, firstName=test, password=test}
[2017-10-02 14:02:59,906]DEBUG  9271[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=6, roleName=Administrator}
[2017-10-02 14:02:59,906]DEBUG  9271[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#6, id=17, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#6, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#6, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,906]DEBUG  9271[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#6, id=18, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#6, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#6, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,906]DEBUG  9271[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=6, orderStatusName=Pending}
[2017-10-02 14:02:59,906]DEBUG  9271[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,906]DEBUG  9271[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-02 14:02:59,907]DEBUG  9272[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,907]DEBUG  9272[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:59,907]DEBUG  9272[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:59,907]DEBUG  9272[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-02 14:02:59,907]DEBUG  9272[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:59,907]DEBUG  9272[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:59,908]DEBUG  9273[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#6, id=19, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#6, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#6, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,908]DEBUG  9273[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=6, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#6, active=true, login=test, firstName=test, password=test}
[2017-10-02 14:02:59,908]DEBUG  9273[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=6, roleName=Administrator}
[2017-10-02 14:02:59,908]DEBUG  9273[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#6, id=17, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#6, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#6, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,908]DEBUG  9273[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#6, id=18, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#6, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#6, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,908]DEBUG  9273[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=6, orderStatusName=Pending}
[2017-10-02 14:02:59,908]DEBUG  9273[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,908]DEBUG  9273[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-02 14:02:59,909]DEBUG  9274[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,909]DEBUG  9274[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-02 14:02:59,909]DEBUG  9274[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-02 14:02:59,909]DEBUG  9274[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-02 14:02:59,909]DEBUG  9274[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-02 14:02:59,909]DEBUG  9274[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-02 14:02:59,909]DEBUG  9274[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#6, id=19, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#6, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#6, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,910]DEBUG  9275[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=6, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#6, active=true, login=test, firstName=test, password=test}
[2017-10-02 14:02:59,910]DEBUG  9275[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=6, roleName=Administrator}
[2017-10-02 14:02:59,910]DEBUG  9275[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#6, id=17, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#6, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#6, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,910]DEBUG  9275[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#6, id=18, orderDate=Mon Oct 02 14:02:59 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Mon Oct 02 14:02:59 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#6, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#6, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-02 14:02:59,910]DEBUG  9275[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=6, orderStatusName=Pending}
[2017-10-02 14:02:59,910]DEBUG  9275[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-02 14:02:59,910]DEBUG  9275[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-02 14:02:59,911]DEBUG  9276[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-02 14:02:59,911]DEBUG  9276[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@c9cd85d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@739ca615, testMethod = testFindByTotalPriceLess@OrderDaoTest, testException = [null]]]
[2017-10-02 14:02:59,911]DEBUG  9276[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-02 14:02:59,911]DEBUG  9276[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7fa6e8b1]
[2017-10-02 14:02:59,911]DEBUG  9276[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-02 14:02:59,992]DEBUG  9357[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-02 14:02:59,992]DEBUG  9357[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-02 14:02:59,993]DEBUG  9358[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@7fa6e8b1] after transaction
[2017-10-02 14:02:59,993]DEBUG  9358[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-02 14:02:59,993]DEBUG  9358[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-02 14:02:59,993]DEBUG  9358[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-02 14:02:59,994] INFO  9359[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@c9cd85d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@739ca615, testMethod = testFindByTotalPriceLess@OrderDaoTest, testException = [null]]]
[2017-10-02 14:02:59,995]DEBUG  9360[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@c9cd85d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@739ca615, testMethod = testFindByTotalPriceLess@OrderDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-02 14:02:59,996]DEBUG  9361[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2017-10-02 14:02:59,996]DEBUG  9361[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2017-10-02 14:02:59,997]DEBUG  9362[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@c9cd85d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@911a011, testMethod = [null], testException = [null]]].
[2017-10-02 14:02:59,997]DEBUG  9362[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-02 14:02:59,997]DEBUG  9362[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-02 14:02:59,997]DEBUG  9362[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-02 14:02:59,997]DEBUG  9362[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-02 14:02:59,998]DEBUG  9363[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-02 14:02:59,998]DEBUG  9363[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-02 14:02:59,998]DEBUG  9363[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-02 14:02:59,998]DEBUG  9363[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-02 14:02:59,998]DEBUG  9363[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-02 14:02:59,999]DEBUG  9364[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-02 14:02:59,999]DEBUG  9364[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-02 14:02:59,999]DEBUG  9364[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-02 14:02:59,999]DEBUG  9364[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
