[2017-10-14 22:36:48,741]DEBUG     0[main] - org.springframework.test.context.junit4.SpringJUnit4ClassRunner.<init>(SpringJUnit4ClassRunner.java:106) - SpringJUnit4ClassRunner constructor called with [class com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest].
[2017-10-14 22:36:48,781] INFO    40[main] - org.springframework.test.context.TestContextManager.retrieveTestExecutionListeners(TestContextManager.java:185) - @TestExecutionListeners is not present for class [class com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]: using defaults.
[2017-10-14 22:36:48,794]DEBUG    53[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2017-10-14 22:36:48,794]DEBUG    53[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2017-10-14 22:36:48,798]DEBUG    57[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2017-10-14 22:36:48,798]DEBUG    57[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2017-10-14 22:36:48,799]DEBUG    58[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2017-10-14 22:36:48,799]DEBUG    58[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2017-10-14 22:36:48,803]DEBUG    62[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2017-10-14 22:36:48,804]DEBUG    63[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2017-10-14 22:36:48,808]DEBUG    67[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@1833b96c testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@6bd26ddd, testMethod = [null], testException = [null]]].
[2017-10-14 22:36:48,808]DEBUG    67[main] - org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:75) - Loading ApplicationContext for locations [classpath:testApplicationContex.xml].
[2017-10-14 22:36:48,850] INFO   109[main] - org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:315) - Loading XML bean definitions from class path resource [testApplicationContex.xml]
[2017-10-14 22:36:48,910]DEBUG   169[main] - org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:72) - Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
[2017-10-14 22:36:48,962]DEBUG   221[main] - org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:140) - Loading schema mappings from [META-INF/spring.schemas]
[2017-10-14 22:36:48,966]DEBUG   225[main] - org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:146) - Loaded schema mappings: {http://www.springframework.org/schema/security/spring-security-3.0.4.xsd=org/springframework/security/config/spring-security-3.0.4.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/security/spring-security-2.0.2.xsd=org/springframework/security/config/spring-security-2.0.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/security/spring-security-3.0.3.xsd=org/springframework/security/config/spring-security-3.0.3.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/security/spring-security-2.0.1.xsd=org/springframework/security/config/spring-security-2.0.1.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/security/spring-security-2.0.xsd=org/springframework/security/config/spring-security-2.0.xsd, http://www.springframework.org/schema/security/spring-security-3.0.xsd=org/springframework/security/config/spring-security-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/security/spring-security-2.0.4.xsd=org/springframework/security/config/spring-security-2.0.4.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/security/spring-security.xsd=org/springframework/security/config/spring-security-3.0.4.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd}
[2017-10-14 22:36:48,967]DEBUG   226[main] - org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:118) - Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
[2017-10-14 22:36:49,018]DEBUG   277[main] - org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:118) - Found XML schema [http://www.springframework.org/schema/tx/spring-tx-2.5.xsd] in classpath: org/springframework/transaction/config/spring-tx-2.5.xsd
[2017-10-14 22:36:49,026]DEBUG   285[main] - org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:118) - Found XML schema [http://www.springframework.org/schema/tool/spring-tool-2.5.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-2.5.xsd
[2017-10-14 22:36:49,041]DEBUG   300[main] - org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:118) - Found XML schema [http://www.springframework.org/schema/context/spring-context.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd
[2017-10-14 22:36:49,056]DEBUG   315[main] - org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:87) - Loading bean definitions
[2017-10-14 22:36:49,089]DEBUG   348[main] - org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(DefaultNamespaceHandlerResolver.java:156) - Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/security=org.springframework.security.config.SecurityNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
[2017-10-14 22:36:49,141] INFO   400[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.registerDefaultFilters(ClassPathScanningCandidateComponentProvider.java:186) - JSR-330 'javax.inject.Named' annotation found and supported for component scanning
[2017-10-14 22:36:49,146]DEBUG   405[main] - org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:552) - Looking for matching resources in directory tree [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/domain/entities]
[2017-10-14 22:36:49,146]DEBUG   405[main] - org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:614) - Searching directory [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/domain/entities] for files matching pattern [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/domain/entities/**/*.class]
[2017-10-14 22:36:49,153]DEBUG   412[main] - org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:353) - Resolved location pattern [classpath*:com/softserveinc/edu/oms/domain/entities/**/*.class] to resources [file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/domain/entities/Region.class], file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/domain/entities/OrderItem.class], file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/domain/entities/CreditCardType.class], file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/domain/entities/Order.class], file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/domain/entities/CustomerType.class], file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/domain/entities/Role.class], file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/domain/entities/Dimension.class], file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/domain/entities/Product.class], file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/domain/entities/OrderStatus.class], file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/domain/entities/User.class]]
[2017-10-14 22:36:49,190] INFO   449[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.registerDefaultFilters(ClassPathScanningCandidateComponentProvider.java:186) - JSR-330 'javax.inject.Named' annotation found and supported for component scanning
[2017-10-14 22:36:49,191]DEBUG   450[main] - org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:552) - Looking for matching resources in directory tree [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/persistence/dao/concrete]
[2017-10-14 22:36:49,192]DEBUG   451[main] - org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:614) - Searching directory [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/persistence/dao/concrete] for files matching pattern [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/persistence/dao/concrete/**/*.class]
[2017-10-14 22:36:49,198]DEBUG   457[main] - org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:353) - Resolved location pattern [classpath*:com/softserveinc/edu/oms/persistence/dao/concrete/**/*.class] to resources [file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/persistence/dao/concrete/OrderStatusDao.class], file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/persistence/dao/concrete/DimensionDao.class], file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/persistence/dao/concrete/CreditCardTypeDao.class], file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/persistence/dao/concrete/UserDao.class], file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/persistence/dao/concrete/OrderDao.class], file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/persistence/dao/concrete/OrderItemDao.class], file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/persistence/dao/concrete/ProductDao.class], file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/persistence/dao/concrete/RoleDao.class], file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/persistence/dao/concrete/RegionDao.class], file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/persistence/dao/concrete/CustomerTypeDao.class], file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/persistence/dao/concrete/UserDao$1.class]]
[2017-10-14 22:36:49,202]DEBUG   461[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:220) - Identified candidate component class: file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/persistence/dao/concrete/OrderStatusDao.class]
[2017-10-14 22:36:49,203]DEBUG   462[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:220) - Identified candidate component class: file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/persistence/dao/concrete/DimensionDao.class]
[2017-10-14 22:36:49,203]DEBUG   462[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:220) - Identified candidate component class: file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/persistence/dao/concrete/CreditCardTypeDao.class]
[2017-10-14 22:36:49,204]DEBUG   463[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:220) - Identified candidate component class: file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/persistence/dao/concrete/UserDao.class]
[2017-10-14 22:36:49,207]DEBUG   466[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:220) - Identified candidate component class: file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/persistence/dao/concrete/OrderDao.class]
[2017-10-14 22:36:49,208]DEBUG   467[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:220) - Identified candidate component class: file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/persistence/dao/concrete/OrderItemDao.class]
[2017-10-14 22:36:49,209]DEBUG   468[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:220) - Identified candidate component class: file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/persistence/dao/concrete/ProductDao.class]
[2017-10-14 22:36:49,210]DEBUG   469[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:220) - Identified candidate component class: file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/persistence/dao/concrete/RoleDao.class]
[2017-10-14 22:36:49,210]DEBUG   469[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:220) - Identified candidate component class: file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/persistence/dao/concrete/RegionDao.class]
[2017-10-14 22:36:49,211]DEBUG   470[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:220) - Identified candidate component class: file [/home/tomcat/Documents/backup/OMS.Release/target/classes/com/softserveinc/edu/oms/persistence/dao/concrete/CustomerTypeDao.class]
[2017-10-14 22:36:49,214]DEBUG   473[main] - org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:185) - Loaded 21 bean definitions from location pattern [classpath:testApplicationContex.xml]
[2017-10-14 22:36:49,217] INFO   476[main] - org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:456) - Refreshing org.springframework.context.support.GenericApplicationContext@38ae87de: startup date [Sat Oct 14 22:36:49 EEST 2017]; root of context hierarchy
[2017-10-14 22:36:49,218]DEBUG   477[main] - org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:470) - Bean factory for org.springframework.context.support.GenericApplicationContext@38ae87de: org.springframework.beans.factory.support.DefaultListableBeanFactory@5d3e4e54: defining beans [transactionManager,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,orderStatusDao,dimensionDao,creditCardTypeDao,userDao,orderDao,orderItemDao,productDao,roleDao,regionDao,customerTypeDao,sessionFactory]; root of factory hierarchy
[2017-10-14 22:36:49,232]DEBUG   491[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
[2017-10-14 22:36:49,232]DEBUG   491[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
[2017-10-14 22:36:49,247]DEBUG   506[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
[2017-10-14 22:36:49,248]DEBUG   507[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
[2017-10-14 22:36:49,282]DEBUG   541[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
[2017-10-14 22:36:49,282]DEBUG   541[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
[2017-10-14 22:36:49,283] INFO   542[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:137) - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2017-10-14 22:36:49,283]DEBUG   542[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
[2017-10-14 22:36:49,284]DEBUG   543[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
[2017-10-14 22:36:49,284]DEBUG   543[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
[2017-10-14 22:36:49,284]DEBUG   543[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
[2017-10-14 22:36:49,285]DEBUG   544[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
[2017-10-14 22:36:49,285]DEBUG   544[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
[2017-10-14 22:36:49,286]DEBUG   545[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
[2017-10-14 22:36:49,286]DEBUG   545[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
[2017-10-14 22:36:49,289]DEBUG   548[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
[2017-10-14 22:36:49,290]DEBUG   549[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
[2017-10-14 22:36:49,290]DEBUG   549[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
[2017-10-14 22:36:49,291]DEBUG   550[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
[2017-10-14 22:36:49,291]DEBUG   550[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' to allow for resolving potential circular references
[2017-10-14 22:36:49,291]DEBUG   550[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
[2017-10-14 22:36:49,292]DEBUG   551[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
[2017-10-14 22:36:49,292]DEBUG   551[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
[2017-10-14 22:36:49,299]DEBUG   558[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
[2017-10-14 22:36:49,317]DEBUG   576[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
[2017-10-14 22:36:49,320]DEBUG   579[main] - org.springframework.context.support.AbstractApplicationContext.initMessageSource(AbstractApplicationContext.java:776) - Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@aed0faa]
[2017-10-14 22:36:49,322]DEBUG   581[main] - org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(AbstractApplicationContext.java:800) - Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@73778c37]
[2017-10-14 22:36:49,324] INFO   583[main] - org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:555) - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@5d3e4e54: defining beans [transactionManager,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,orderStatusDao,dimensionDao,creditCardTypeDao,userDao,orderDao,orderItemDao,productDao,roleDao,regionDao,customerTypeDao,sessionFactory]; root of factory hierarchy
[2017-10-14 22:36:49,324]DEBUG   583[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'transactionManager'
[2017-10-14 22:36:49,324]DEBUG   583[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'transactionManager'
[2017-10-14 22:36:49,656]DEBUG   915[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
[2017-10-14 22:36:49,673]DEBUG   932[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'sessionFactory'
[2017-10-14 22:36:49,674]DEBUG   933[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'sessionFactory'
[2017-10-14 22:36:49,682]DEBUG   941[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'sessionFactory' to allow for resolving potential circular references
[2017-10-14 22:36:49,691]DEBUG   950[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1461) - Invoking afterPropertiesSet() on bean with name 'sessionFactory'
[2017-10-14 22:36:49,743]DEBUG  1002[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration boolean -> org.hibernate.type.BooleanType@38da84cf
[2017-10-14 22:36:49,743]DEBUG  1002[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration boolean -> org.hibernate.type.BooleanType@38da84cf
[2017-10-14 22:36:49,744]DEBUG  1003[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@38da84cf
[2017-10-14 22:36:49,745]DEBUG  1004[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5c03d673
[2017-10-14 22:36:49,747]DEBUG  1006[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@1f719a8d
[2017-10-14 22:36:49,748]DEBUG  1007[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration yes_no -> org.hibernate.type.YesNoType@5fd04dbd
[2017-10-14 22:36:49,749]DEBUG  1008[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration byte -> org.hibernate.type.ByteType@252ae998
[2017-10-14 22:36:49,750]DEBUG  1009[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration byte -> org.hibernate.type.ByteType@252ae998
[2017-10-14 22:36:49,750]DEBUG  1009[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@252ae998
[2017-10-14 22:36:49,751]DEBUG  1010[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration character -> org.hibernate.type.CharacterType@21162f63
[2017-10-14 22:36:49,752]DEBUG  1011[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration char -> org.hibernate.type.CharacterType@21162f63
[2017-10-14 22:36:49,752]DEBUG  1011[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@21162f63
[2017-10-14 22:36:49,754]DEBUG  1013[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration short -> org.hibernate.type.ShortType@952942b
[2017-10-14 22:36:49,755]DEBUG  1014[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration short -> org.hibernate.type.ShortType@952942b
[2017-10-14 22:36:49,755]DEBUG  1014[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@952942b
[2017-10-14 22:36:49,757]DEBUG  1016[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration integer -> org.hibernate.type.IntegerType@67be195f
[2017-10-14 22:36:49,757]DEBUG  1016[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration int -> org.hibernate.type.IntegerType@67be195f
[2017-10-14 22:36:49,757]DEBUG  1016[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@67be195f
[2017-10-14 22:36:49,759]DEBUG  1018[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration long -> org.hibernate.type.LongType@5b51a9d4
[2017-10-14 22:36:49,760]DEBUG  1019[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration long -> org.hibernate.type.LongType@5b51a9d4
[2017-10-14 22:36:49,760]DEBUG  1019[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5b51a9d4
[2017-10-14 22:36:49,762]DEBUG  1021[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration float -> org.hibernate.type.FloatType@770253a9
[2017-10-14 22:36:49,763]DEBUG  1022[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration float -> org.hibernate.type.FloatType@770253a9
[2017-10-14 22:36:49,763]DEBUG  1022[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@770253a9
[2017-10-14 22:36:49,765]DEBUG  1024[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration double -> org.hibernate.type.DoubleType@191ff5bc
[2017-10-14 22:36:49,765]DEBUG  1024[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration double -> org.hibernate.type.DoubleType@191ff5bc
[2017-10-14 22:36:49,766]DEBUG  1025[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@191ff5bc
[2017-10-14 22:36:49,767]DEBUG  1026[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4443baa7
[2017-10-14 22:36:49,768]DEBUG  1027[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4443baa7
[2017-10-14 22:36:49,769]DEBUG  1028[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7ba4fbb4
[2017-10-14 22:36:49,770]DEBUG  1029[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7ba4fbb4
[2017-10-14 22:36:49,771]DEBUG  1030[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration string -> org.hibernate.type.StringType@36cebdbf
[2017-10-14 22:36:49,771]DEBUG  1030[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.String -> org.hibernate.type.StringType@36cebdbf
[2017-10-14 22:36:49,773]DEBUG  1032[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration url -> org.hibernate.type.UrlType@2b8d9248
[2017-10-14 22:36:49,773]DEBUG  1032[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@2b8d9248
[2017-10-14 22:36:49,776]DEBUG  1035[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration date -> org.hibernate.type.DateType@3930b5bd
[2017-10-14 22:36:49,776]DEBUG  1035[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@3930b5bd
[2017-10-14 22:36:49,778]DEBUG  1037[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration time -> org.hibernate.type.TimeType@71a3a167
[2017-10-14 22:36:49,778]DEBUG  1037[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@71a3a167
[2017-10-14 22:36:49,780]DEBUG  1039[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration timestamp -> org.hibernate.type.TimestampType@1c7883df
[2017-10-14 22:36:49,781]DEBUG  1040[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1c7883df
[2017-10-14 22:36:49,781]DEBUG  1040[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1c7883df
[2017-10-14 22:36:49,782]DEBUG  1041[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@553b7453
[2017-10-14 22:36:49,784]DEBUG  1043[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration calendar -> org.hibernate.type.CalendarType@1ae418e6
[2017-10-14 22:36:49,784]DEBUG  1043[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1ae418e6
[2017-10-14 22:36:49,784]DEBUG  1043[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1ae418e6
[2017-10-14 22:36:49,785]DEBUG  1044[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@18067226
[2017-10-14 22:36:49,787]DEBUG  1046[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration locale -> org.hibernate.type.LocaleType@6a59828c
[2017-10-14 22:36:49,787]DEBUG  1046[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6a59828c
[2017-10-14 22:36:49,788]DEBUG  1047[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration currency -> org.hibernate.type.CurrencyType@78c0d6e5
[2017-10-14 22:36:49,789]DEBUG  1048[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@78c0d6e5
[2017-10-14 22:36:49,790]DEBUG  1049[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@307de4fe
[2017-10-14 22:36:49,790]DEBUG  1049[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@307de4fe
[2017-10-14 22:36:49,792]DEBUG  1051[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration class -> org.hibernate.type.ClassType@19e8435f
[2017-10-14 22:36:49,792]DEBUG  1051[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@19e8435f
[2017-10-14 22:36:49,794]DEBUG  1053[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7b948a59
[2017-10-14 22:36:49,795]DEBUG  1054[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7b948a59
[2017-10-14 22:36:49,795]DEBUG  1054[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@29b422df
[2017-10-14 22:36:49,796]DEBUG  1055[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1e60a696
[2017-10-14 22:36:49,798]DEBUG  1057[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration binary -> org.hibernate.type.BinaryType@15acef44
[2017-10-14 22:36:49,798]DEBUG  1057[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration byte[] -> org.hibernate.type.BinaryType@15acef44
[2017-10-14 22:36:49,799]DEBUG  1058[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration [B -> org.hibernate.type.BinaryType@15acef44
[2017-10-14 22:36:49,800]DEBUG  1059[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@989f8c6
[2017-10-14 22:36:49,801]DEBUG  1060[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@989f8c6
[2017-10-14 22:36:49,801]DEBUG  1060[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@989f8c6
[2017-10-14 22:36:49,802]DEBUG  1061[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration image -> org.hibernate.type.ImageType@7f7b6d5e
[2017-10-14 22:36:49,803]DEBUG  1062[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration characters -> org.hibernate.type.CharArrayType@183000a5
[2017-10-14 22:36:49,804]DEBUG  1063[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration char[] -> org.hibernate.type.CharArrayType@183000a5
[2017-10-14 22:36:49,804]DEBUG  1063[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration [C -> org.hibernate.type.CharArrayType@183000a5
[2017-10-14 22:36:49,805]DEBUG  1064[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2ab5cc4d
[2017-10-14 22:36:49,806]DEBUG  1065[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2ab5cc4d
[2017-10-14 22:36:49,806]DEBUG  1065[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2ab5cc4d
[2017-10-14 22:36:49,807]DEBUG  1066[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration text -> org.hibernate.type.TextType@613fbf92
[2017-10-14 22:36:49,813]DEBUG  1072[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration blob -> org.hibernate.type.BlobType@72a53018
[2017-10-14 22:36:49,813]DEBUG  1072[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@72a53018
[2017-10-14 22:36:49,814]DEBUG  1073[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@72f8516e
[2017-10-14 22:36:49,815]DEBUG  1074[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@2de463d0
[2017-10-14 22:36:49,819]DEBUG  1078[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration clob -> org.hibernate.type.ClobType@d751189
[2017-10-14 22:36:49,819]DEBUG  1078[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@d751189
[2017-10-14 22:36:49,820]DEBUG  1079[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@57d47ef4
[2017-10-14 22:36:49,821]DEBUG  1080[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@3531a8ff
[2017-10-14 22:36:49,822]DEBUG  1081[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@42357933
[2017-10-14 22:36:49,823]DEBUG  1082[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration serializable -> org.hibernate.type.SerializableType@4511d0ea
[2017-10-14 22:36:49,826]DEBUG  1085[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration object -> org.hibernate.type.ObjectType@134d3a53
[2017-10-14 22:36:49,826]DEBUG  1085[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@134d3a53
[2017-10-14 22:36:49,827]DEBUG  1086[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3e04e1e4
[2017-10-14 22:36:49,827]DEBUG  1086[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1a86b899
[2017-10-14 22:36:49,828]DEBUG  1087[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6209ae8f
[2017-10-14 22:36:49,828]DEBUG  1087[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@651905c5
[2017-10-14 22:36:49,828]DEBUG  1087[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7d76591
[2017-10-14 22:36:49,829]DEBUG  1088[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@270783ed
[2017-10-14 22:36:49,829]DEBUG  1088[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@f372724
[2017-10-14 22:36:49,829]DEBUG  1088[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4be25cff
[2017-10-14 22:36:49,851] INFO  1110[main] - org.hibernate.annotations.common.Version.<clinit>(Version.java:37) - Hibernate Commons Annotations 3.2.0.Final
[2017-10-14 22:36:49,855] INFO  1114[main] - org.hibernate.cfg.Environment.<clinit>(Environment.java:603) - Hibernate 3.6.5.Final
[2017-10-14 22:36:49,857] INFO  1116[main] - org.hibernate.cfg.Environment.<clinit>(Environment.java:636) - hibernate.properties not found
[2017-10-14 22:36:49,859] INFO  1118[main] - org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:814) - Bytecode provider name : javassist
[2017-10-14 22:36:49,861] INFO  1120[main] - org.hibernate.cfg.Environment.<clinit>(Environment.java:695) - using JDK 1.4 java.sql.Timestamp handling
[2017-10-14 22:36:49,924]DEBUG  1183[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]
[2017-10-14 22:36:49,925]DEBUG  1184[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]
[2017-10-14 22:36:49,925]DEBUG  1184[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]
[2017-10-14 22:36:49,925]DEBUG  1184[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]
[2017-10-14 22:36:49,927]DEBUG  1186[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]
[2017-10-14 22:36:49,927]DEBUG  1186[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]
[2017-10-14 22:36:49,928]DEBUG  1187[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]
[2017-10-14 22:36:49,929]DEBUG  1188[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]
[2017-10-14 22:36:49,929]DEBUG  1188[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]
[2017-10-14 22:36:49,930]DEBUG  1189[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]
[2017-10-14 22:36:49,930]DEBUG  1189[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]
[2017-10-14 22:36:49,931]DEBUG  1190[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]
[2017-10-14 22:36:49,931]DEBUG  1190[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]
[2017-10-14 22:36:49,932]DEBUG  1191[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]
[2017-10-14 22:36:49,932]DEBUG  1191[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]
[2017-10-14 22:36:49,934] INFO  1193[main] - org.hibernate.cfg.Configuration.configure(Configuration.java:2192) - configuring from url: file:/home/tomcat/Documents/backup/OMS.Release/target/test-classes/hibernate_test.cfg.xml
[2017-10-14 22:36:49,984]DEBUG  1243[main] - org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:67) - trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
[2017-10-14 22:36:49,985] WARN  1244[main] - org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:73) - recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!
[2017-10-14 22:36:49,985]DEBUG  1244[main] - org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:77) - attempting to resolve on classpath under org/hibernate/
[2017-10-14 22:36:49,986]DEBUG  1245[main] - org.hibernate.util.DTDEntityResolver.resolveOnClassPath(DTDEntityResolver.java:109) - located [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd] in classpath
[2017-10-14 22:36:50,001]DEBUG  1260[main] - org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) - hibernate.connection.driver_class=com.mysql.jdbc.Driver
[2017-10-14 22:36:50,002]DEBUG  1261[main] - org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) - dialect=org.hibernate.dialect.MySQL5Dialect
[2017-10-14 22:36:50,002]DEBUG  1261[main] - org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) - hibernate.connection.url=jdbc:mysql://localhost:3306/test1
[2017-10-14 22:36:50,002]DEBUG  1261[main] - org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) - hibernate.connection.username=maria
[2017-10-14 22:36:50,002]DEBUG  1261[main] - org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) - hibernate.connection.password=333qwerb
[2017-10-14 22:36:50,003]DEBUG  1262[main] - org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) - hibernate.hbm2ddl.auto=create-drop
[2017-10-14 22:36:50,003]DEBUG  1262[main] - org.hibernate.cfg.Configuration.parseMappingElement(Configuration.java:2363) - session-factory config [null] named class [com.softserveinc.edu.oms.domain.entities.Role] for mapping
[2017-10-14 22:36:50,008]DEBUG  1267[main] - org.hibernate.cfg.Configuration.parseMappingElement(Configuration.java:2363) - session-factory config [null] named class [com.softserveinc.edu.oms.domain.entities.Region] for mapping
[2017-10-14 22:36:50,009]DEBUG  1268[main] - org.hibernate.cfg.Configuration.parseMappingElement(Configuration.java:2363) - session-factory config [null] named class [com.softserveinc.edu.oms.domain.entities.CustomerType] for mapping
[2017-10-14 22:36:50,009]DEBUG  1268[main] - org.hibernate.cfg.Configuration.parseMappingElement(Configuration.java:2363) - session-factory config [null] named class [com.softserveinc.edu.oms.domain.entities.User] for mapping
[2017-10-14 22:36:50,009]DEBUG  1268[main] - org.hibernate.cfg.Configuration.parseMappingElement(Configuration.java:2363) - session-factory config [null] named class [com.softserveinc.edu.oms.domain.entities.OrderStatus] for mapping
[2017-10-14 22:36:50,009]DEBUG  1268[main] - org.hibernate.cfg.Configuration.parseMappingElement(Configuration.java:2363) - session-factory config [null] named class [com.softserveinc.edu.oms.domain.entities.Order] for mapping
[2017-10-14 22:36:50,010]DEBUG  1269[main] - org.hibernate.cfg.Configuration.parseMappingElement(Configuration.java:2363) - session-factory config [null] named class [com.softserveinc.edu.oms.domain.entities.Product] for mapping
[2017-10-14 22:36:50,010]DEBUG  1269[main] - org.hibernate.cfg.Configuration.parseMappingElement(Configuration.java:2363) - session-factory config [null] named class [com.softserveinc.edu.oms.domain.entities.Dimension] for mapping
[2017-10-14 22:36:50,010]DEBUG  1269[main] - org.hibernate.cfg.Configuration.parseMappingElement(Configuration.java:2363) - session-factory config [null] named class [com.softserveinc.edu.oms.domain.entities.OrderItem] for mapping
[2017-10-14 22:36:50,010]DEBUG  1269[main] - org.hibernate.cfg.Configuration.parseMappingElement(Configuration.java:2363) - session-factory config [null] named class [com.softserveinc.edu.oms.domain.entities.CreditCardType] for mapping
[2017-10-14 22:36:50,011] INFO  1270[main] - org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2297) - Configured SessionFactory: null
[2017-10-14 22:36:50,011]DEBUG  1270[main] - org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2298) - properties: {hibernate.connection.password=333qwerb, java.runtime.name=OpenJDK Runtime Environment, sun.boot.library.path=/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre/lib/amd64, java.vm.version=24.151-b00, hibernate.connection.username=maria, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=OpenJDK 64-Bit Server VM, file.encoding.pkg=sun.io, user.country=US, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=unknown, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/tomcat/Documents/backup/OMS.Release, java.runtime.version=1.7.0_151-mockbuild_2017_08_23_16_26-b00, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, basedir=/home/tomcat/Documents/backup/OMS.Release, hibernate.current_session_context_class=org.springframework.orm.hibernate3.SpringSessionContext, java.endorsed.dirs=/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre/lib/endorsed, os.arch=amd64, surefire.real.class.path=/home/tomcat/Documents/backup/OMS.Release/target/surefire/surefirebooter2135140917294523253.jar, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, surefire.test.class.path=/home/tomcat/Documents/backup/OMS.Release/target/test-classes:/home/tomcat/Documents/backup/OMS.Release/target/classes:/home/tomcat/.m2/repository/org/springframework/spring-context/3.0.5.RELEASE/spring-context-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-aop/3.0.5.RELEASE/spring-aop-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/home/tomcat/.m2/repository/org/springframework/spring-beans/3.0.5.RELEASE/spring-beans-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-core/3.0.5.RELEASE/spring-core-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-expression/3.0.5.RELEASE/spring-expression-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-asm/3.0.5.RELEASE/spring-asm-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-webmvc/3.0.5.RELEASE/spring-webmvc-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-context-support/3.0.5.RELEASE/spring-context-support-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-web/3.0.5.RELEASE/spring-web-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/roo/org.springframework.roo.annotations/1.0.2.RELEASE/org.springframework.roo.annotations-1.0.2.RELEASE.jar:/home/tomcat/.m2/repository/org/aspectj/aspectjrt/1.6.9/aspectjrt-1.6.9.jar:/home/tomcat/.m2/repository/org/slf4j/slf4j-api/1.5.10/slf4j-api-1.5.10.jar:/home/tomcat/.m2/repository/org/slf4j/jcl-over-slf4j/1.5.10/jcl-over-slf4j-1.5.10.jar:/home/tomcat/.m2/repository/org/slf4j/slf4j-log4j12/1.5.10/slf4j-log4j12-1.5.10.jar:/home/tomcat/.m2/repository/log4j/log4j/1.2.15/log4j-1.2.15.jar:/home/tomcat/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar:/home/tomcat/.m2/repository/javax/servlet/jstl/1.2/jstl-1.2.jar:/home/tomcat/.m2/repository/junit/junit/4.7/junit-4.7.jar:/home/tomcat/.m2/repository/org/hibernate/hibernate-core/3.6.5.Final/hibernate-core-3.6.5.Final.jar:/home/tomcat/.m2/repository/antlr/antlr/2.7.6/antlr-2.7.6.jar:/home/tomcat/.m2/repository/commons-collections/commons-collections/3.1/commons-collections-3.1.jar:/home/tomcat/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/home/tomcat/.m2/repository/org/hibernate/hibernate-commons-annotations/3.2.0.Final/hibernate-commons-annotations-3.2.0.Final.jar:/home/tomcat/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.0-api/1.0.0.Final/hibernate-jpa-2.0-api-1.0.0.Final.jar:/home/tomcat/.m2/repository/javax/transaction/jta/1.1/jta-1.1.jar:/home/tomcat/.m2/repository/net/sourceforge/jtds/jtds/1.2.4/jtds-1.2.4.jar:/home/tomcat/.m2/repository/javassist/javassist/3.12.1.GA/javassist-3.12.1.GA.jar:/home/tomcat/.m2/repository/org/springframework/spring-orm/3.0.5.RELEASE/spring-orm-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-jdbc/3.0.5.RELEASE/spring-jdbc-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-tx/3.0.5.RELEASE/spring-tx-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar:/home/tomcat/.m2/repository/org/springframework/spring-test/3.0.5.RELEASE/spring-test-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/security/spring-security-core/3.0.5.RELEASE/spring-security-core-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/aspectj/aspectjweaver/1.6.8/aspectjweaver-1.6.8.jar:/home/tomcat/.m2/repository/org/springframework/security/spring-security-config/3.0.5.RELEASE/spring-security-config-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/security/spring-security-web/3.0.5.RELEASE/spring-security-web-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/cglib/cglib/2.2.2/cglib-2.2.2.jar:/home/tomcat/.m2/repository/asm/asm/3.3.1/asm-3.3.1.jar:/home/tomcat/.m2/repository/mysql/mysql-connector-java/5.1.17/mysql-connector-java-5.1.17.jar:/home/tomcat/.m2/repository/org/hibernate/hibernate-validator/4.2.0.Final/hibernate-validator-4.2.0.Final.jar:/home/tomcat/.m2/repository/javax/validation/validation-api/1.0.0.GA/validation-api-1.0.0.GA.jar:/home/tomcat/.m2/repository/org/apache/tiles/tiles-jsp/2.2.2/tiles-jsp-2.2.2.jar:/home/tomcat/.m2/repository/org/apache/tiles/tiles-servlet/2.2.2/tiles-servlet-2.2.2.jar:/home/tomcat/.m2/repository/org/apache/tiles/tiles-core/2.2.2/tiles-core-2.2.2.jar:/home/tomcat/.m2/repository/org/apache/tiles/tiles-template/2.2.2/tiles-template-2.2.2.jar:/home/tomcat/.m2/repository/org/apache/tiles/tiles-api/2.2.2/tiles-api-2.2.2.jar:/home/tomcat/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.8.3/jackson-mapper-asl-1.8.3.jar:/home/tomcat/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.8.3/jackson-core-asl-1.8.3.jar:/home/tomcat/.m2/repository/net/sf/jasperreports/jasperreports/4.0.1/jasperreports-4.0.1.jar:/home/tomcat/.m2/repository/commons-beanutils/commons-beanutils/1.8.0/commons-beanutils-1.8.0.jar:/home/tomcat/.m2/repository/commons-digester/commons-digester/1.7/commons-digester-1.7.jar:/home/tomcat/.m2/repository/commons-logging/commons-logging/1.0.2/commons-logging-1.0.2.jar:/home/tomcat/.m2/repository/com/lowagie/itext/2.1.7/itext-2.1.7.jar:/home/tomcat/.m2/repository/bouncycastle/bcmail-jdk14/138/bcmail-jdk14-138.jar:/home/tomcat/.m2/repository/bouncycastle/bcprov-jdk14/138/bcprov-jdk14-138.jar:/home/tomcat/.m2/repository/org/bouncycastle/bctsp-jdk14/1.38/bctsp-jdk14-1.38.jar:/home/tomcat/.m2/repository/org/bouncycastle/bcprov-jdk14/1.38/bcprov-jdk14-1.38.jar:/home/tomcat/.m2/repository/org/bouncycastle/bcmail-jdk14/1.38/bcmail-jdk14-1.38.jar:/home/tomcat/.m2/repository/jfree/jcommon/1.0.15/jcommon-1.0.15.jar:/home/tomcat/.m2/repository/jfree/jfreechart/1.0.12/jfreechart-1.0.12.jar:/home/tomcat/.m2/repository/xml-apis/xml-apis/1.3.02/xml-apis-1.3.02.jar:/home/tomcat/.m2/repository/eclipse/jdtcore/3.1.0/jdtcore-3.1.0.jar:/home/tomcat/.m2/repository/org/springframework/security/spring-security-taglibs/3.0.5.RELEASE/spring-security-taglibs-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/security/spring-security-acl/3.0.5.RELEASE/spring-security-acl-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/apache/maven/maven-archiver/2.4.1/maven-archiver-2.4.1.jar:/home/tomcat/.m2/repository/org/apache/maven/maven-artifact/2.0.6/maven-artifact-2.0.6.jar:/home/tomcat/.m2/repository/org/apache/maven/maven-model/2.0.6/maven-model-2.0.6.jar:/home/tomcat/.m2/repository/org/codehaus/plexus/plexus-archiver/1.2/plexus-archiver-1.2.jar:/home/tomcat/.m2/repository/org/codehaus/plexus/plexus-container-default/1.0-alpha-9-stable-1/plexus-container-default-1.0-alpha-9-stable-1.jar:/home/tomcat/.m2/repository/classworlds/classworlds/1.1-alpha-2/classworlds-1.1-alpha-2.jar:/home/tomcat/.m2/repository/org/codehaus/plexus/plexus-io/1.0.1/plexus-io-1.0.1.jar:/home/tomcat/.m2/repository/com/thoughtworks/xstream/xstream/1.3.1/xstream-1.3.1.jar:/home/tomcat/.m2/repository/xpp3/xpp3_min/1.1.4c/xpp3_min-1.1.4c.jar:/home/tomcat/.m2/repository/org/apache/maven/shared/maven-filtering/1.0-beta-2/maven-filtering-1.0-beta-2.jar:/home/tomcat/.m2/repository/org/apache/maven/maven-project/2.0.6/maven-project-2.0.6.jar:/home/tomcat/.m2/repository/org/apache/maven/maven-profile/2.0.6/maven-profile-2.0.6.jar:/home/tomcat/.m2/repository/org/apache/maven/maven-artifact-manager/2.0.6/maven-artifact-manager-2.0.6.jar:/home/tomcat/.m2/repository/org/apache/maven/maven-plugin-registry/2.0.6/maven-plugin-registry-2.0.6.jar:/home/tomcat/.m2/repository/org/apache/maven/maven-core/2.0.6/maven-core-2.0.6.jar:/home/tomcat/.m2/repository/org/apache/maven/wagon/wagon-file/1.0-beta-2/wagon-file-1.0-beta-2.jar:/home/tomcat/.m2/repository/org/apache/maven/maven-plugin-parameter-documenter/2.0.6/maven-plugin-parameter-documenter-2.0.6.jar:/home/tomcat/.m2/repository/org/apache/maven/wagon/wagon-http-lightweight/1.0-beta-2/wagon-http-lightweight-1.0-beta-2.jar:/home/tomcat/.m2/repository/org/apache/maven/wagon/wagon-http-shared/1.0-beta-2/wagon-http-shared-1.0-beta-2.jar:/home/tomcat/.m2/repository/jtidy/jtidy/4aug2000r7-dev/jtidy-4aug2000r7-dev.jar:/home/tomcat/.m2/repository/org/apache/maven/reporting/maven-reporting-api/2.0.6/maven-reporting-api-2.0.6.jar:/home/tomcat/.m2/repository/org/apache/maven/doxia/doxia-sink-api/1.0-alpha-7/doxia-sink-api-1.0-alpha-7.jar:/home/tomcat/.m2/repository/org/apache/maven/wagon/wagon-provider-api/1.0-beta-2/wagon-provider-api-1.0-beta-2.jar:/home/tomcat/.m2/repository/org/apache/maven/maven-repository-metadata/2.0.6/maven-repository-metadata-2.0.6.jar:/home/tomcat/.m2/repository/org/apache/maven/maven-error-diagnostics/2.0.6/maven-error-diagnostics-2.0.6.jar:/home/tomcat/.m2/repository/commons-cli/commons-cli/1.0/commons-cli-1.0.jar:/home/tomcat/.m2/repository/org/apache/maven/maven-plugin-api/2.0.6/maven-plugin-api-2.0.6.jar:/home/tomcat/.m2/repository/org/apache/maven/wagon/wagon-ssh-external/1.0-beta-2/wagon-ssh-external-1.0-beta-2.jar:/home/tomcat/.m2/repository/org/apache/maven/wagon/wagon-ssh-common/1.0-beta-2/wagon-ssh-common-1.0-beta-2.jar:/home/tomcat/.m2/repository/org/apache/maven/maven-plugin-descriptor/2.0.6/maven-plugin-descriptor-2.0.6.jar:/home/tomcat/.m2/repository/org/codehaus/plexus/plexus-interactivity-api/1.0-alpha-4/plexus-interactivity-api-1.0-alpha-4.jar:/home/tomcat/.m2/repository/org/apache/maven/wagon/wagon-ssh/1.0-beta-2/wagon-ssh-1.0-beta-2.jar:/home/tomcat/.m2/repository/com/jcraft/jsch/0.1.27/jsch-0.1.27.jar:/home/tomcat/.m2/repository/org/apache/maven/maven-monitor/2.0.6/maven-monitor-2.0.6.jar:/home/tomcat/.m2/repository/org/apache/maven/maven-settings/2.0.6/maven-settings-2.0.6.jar:/home/tomcat/.m2/repository/org/codehaus/plexus/plexus-component-annotations/1.5.4/plexus-component-annotations-1.5.4.jar:/home/tomcat/.m2/repository/org/codehaus/plexus/plexus-interpolation/1.22/plexus-interpolation-1.22.jar:/home/tomcat/.m2/repository/org/codehaus/plexus/plexus-utils/3.0/plexus-utils-3.0.jar:, java.specification.name=Java Platform API Specification, java.class.version=51.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.transaction.factory_class=org.springframework.orm.hibernate3.SpringTransactionFactory, os.version=3.10.0-693.el7.x86_64, user.home=/home/tomcat, user.timezone=Europe/Kiev, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.7, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.class.path=/home/tomcat/Documents/backup/OMS.Release/target/test-classes:/home/tomcat/Documents/backup/OMS.Release/target/classes:/home/tomcat/.m2/repository/org/springframework/spring-context/3.0.5.RELEASE/spring-context-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-aop/3.0.5.RELEASE/spring-aop-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/home/tomcat/.m2/repository/org/springframework/spring-beans/3.0.5.RELEASE/spring-beans-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-core/3.0.5.RELEASE/spring-core-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-expression/3.0.5.RELEASE/spring-expression-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-asm/3.0.5.RELEASE/spring-asm-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-webmvc/3.0.5.RELEASE/spring-webmvc-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-context-support/3.0.5.RELEASE/spring-context-support-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-web/3.0.5.RELEASE/spring-web-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/roo/org.springframework.roo.annotations/1.0.2.RELEASE/org.springframework.roo.annotations-1.0.2.RELEASE.jar:/home/tomcat/.m2/repository/org/aspectj/aspectjrt/1.6.9/aspectjrt-1.6.9.jar:/home/tomcat/.m2/repository/org/slf4j/slf4j-api/1.5.10/slf4j-api-1.5.10.jar:/home/tomcat/.m2/repository/org/slf4j/jcl-over-slf4j/1.5.10/jcl-over-slf4j-1.5.10.jar:/home/tomcat/.m2/repository/org/slf4j/slf4j-log4j12/1.5.10/slf4j-log4j12-1.5.10.jar:/home/tomcat/.m2/repository/log4j/log4j/1.2.15/log4j-1.2.15.jar:/home/tomcat/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar:/home/tomcat/.m2/repository/javax/servlet/jstl/1.2/jstl-1.2.jar:/home/tomcat/.m2/repository/junit/junit/4.7/junit-4.7.jar:/home/tomcat/.m2/repository/org/hibernate/hibernate-core/3.6.5.Final/hibernate-core-3.6.5.Final.jar:/home/tomcat/.m2/repository/antlr/antlr/2.7.6/antlr-2.7.6.jar:/home/tomcat/.m2/repository/commons-collections/commons-collections/3.1/commons-collections-3.1.jar:/home/tomcat/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/home/tomcat/.m2/repository/org/hibernate/hibernate-commons-annotations/3.2.0.Final/hibernate-commons-annotations-3.2.0.Final.jar:/home/tomcat/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.0-api/1.0.0.Final/hibernate-jpa-2.0-api-1.0.0.Final.jar:/home/tomcat/.m2/repository/javax/transaction/jta/1.1/jta-1.1.jar:/home/tomcat/.m2/repository/net/sourceforge/jtds/jtds/1.2.4/jtds-1.2.4.jar:/home/tomcat/.m2/repository/javassist/javassist/3.12.1.GA/javassist-3.12.1.GA.jar:/home/tomcat/.m2/repository/org/springframework/spring-orm/3.0.5.RELEASE/spring-orm-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-jdbc/3.0.5.RELEASE/spring-jdbc-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-tx/3.0.5.RELEASE/spring-tx-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar:/home/tomcat/.m2/repository/org/springframework/spring-test/3.0.5.RELEASE/spring-test-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/security/spring-security-core/3.0.5.RELEASE/spring-security-core-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/aspectj/aspectjweaver/1.6.8/aspectjweaver-1.6.8.jar:/home/tomcat/.m2/repository/org/springframework/security/spring-security-config/3.0.5.RELEASE/spring-security-config-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/security/spring-security-web/3.0.5.RELEASE/spring-security-web-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/cglib/cglib/2.2.2/cglib-2.2.2.jar:/home/tomcat/.m2/repository/asm/asm/3.3.1/asm-3.3.1.jar:/home/tomcat/.m2/repository/mysql/mysql-connector-java/5.1.17/mysql-connector-java-5.1.17.jar:/home/tomcat/.m2/repository/org/hibernate/hibernate-validator/4.2.0.Final/hibernate-validator-4.2.0.Final.jar:/home/tomcat/.m2/repository/javax/validation/validation-api/1.0.0.GA/validation-api-1.0.0.GA.jar:/home/tomcat/.m2/repository/org/apache/tiles/tiles-jsp/2.2.2/tiles-jsp-2.2.2.jar:/home/tomcat/.m2/repository/org/apache/tiles/tiles-servlet/2.2.2/tiles-servlet-2.2.2.jar:/home/tomcat/.m2/repository/org/apache/tiles/tiles-core/2.2.2/tiles-core-2.2.2.jar:/home/tomcat/.m2/repository/org/apache/tiles/tiles-template/2.2.2/tiles-template-2.2.2.jar:/home/tomcat/.m2/repository/org/apache/tiles/tiles-api/2.2.2/tiles-api-2.2.2.jar:/home/tomcat/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.8.3/jackson-mapper-asl-1.8.3.jar:/home/tomcat/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.8.3/jackson-core-asl-1.8.3.jar:/home/tomcat/.m2/repository/net/sf/jasperreports/jasperreports/4.0.1/jasperreports-4.0.1.jar:/home/tomcat/.m2/repository/commons-beanutils/commons-beanutils/1.8.0/commons-beanutils-1.8.0.jar:/home/tomcat/.m2/repository/commons-digester/commons-digester/1.7/commons-digester-1.7.jar:/home/tomcat/.m2/repository/commons-logging/commons-logging/1.0.2/commons-logging-1.0.2.jar:/home/tomcat/.m2/repository/com/lowagie/itext/2.1.7/itext-2.1.7.jar:/home/tomcat/.m2/repository/bouncycastle/bcmail-jdk14/138/bcmail-jdk14-138.jar:/home/tomcat/.m2/repository/bouncycastle/bcprov-jdk14/138/bcprov-jdk14-138.jar:/home/tomcat/.m2/repository/org/bouncycastle/bctsp-jdk14/1.38/bctsp-jdk14-1.38.jar:/home/tomcat/.m2/repository/org/bouncycastle/bcprov-jdk14/1.38/bcprov-jdk14-1.38.jar:/home/tomcat/.m2/repository/org/bouncycastle/bcmail-jdk14/1.38/bcmail-jdk14-1.38.jar:/home/tomcat/.m2/repository/jfree/jcommon/1.0.15/jcommon-1.0.15.jar:/home/tomcat/.m2/repository/jfree/jfreechart/1.0.12/jfreechart-1.0.12.jar:/home/tomcat/.m2/repository/xml-apis/xml-apis/1.3.02/xml-apis-1.3.02.jar:/home/tomcat/.m2/repository/eclipse/jdtcore/3.1.0/jdtcore-3.1.0.jar:/home/tomcat/.m2/repository/org/springframework/security/spring-security-taglibs/3.0.5.RELEASE/spring-security-taglibs-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/security/spring-security-acl/3.0.5.RELEASE/spring-security-acl-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/apache/maven/maven-archiver/2.4.1/maven-archiver-2.4.1.jar:/home/tomcat/.m2/repository/org/apache/maven/maven-artifact/2.0.6/maven-artifact-2.0.6.jar:/home/tomcat/.m2/repository/org/apache/maven/maven-model/2.0.6/maven-model-2.0.6.jar:/home/tomcat/.m2/repository/org/codehaus/plexus/plexus-archiver/1.2/plexus-archiver-1.2.jar:/home/tomcat/.m2/repository/org/codehaus/plexus/plexus-container-default/1.0-alpha-9-stable-1/plexus-container-default-1.0-alpha-9-stable-1.jar:/home/tomcat/.m2/repository/classworlds/classworlds/1.1-alpha-2/classworlds-1.1-alpha-2.jar:/home/tomcat/.m2/repository/org/codehaus/plexus/plexus-io/1.0.1/plexus-io-1.0.1.jar:/home/tomcat/.m2/repository/com/thoughtworks/xstream/xstream/1.3.1/xstream-1.3.1.jar:/home/tomcat/.m2/repository/xpp3/xpp3_min/1.1.4c/xpp3_min-1.1.4c.jar:/home/tomcat/.m2/repository/org/apache/maven/shared/maven-filtering/1.0-beta-2/maven-filtering-1.0-beta-2.jar:/home/tomcat/.m2/repository/org/apache/maven/maven-project/2.0.6/maven-project-2.0.6.jar:/home/tomcat/.m2/repository/org/apache/maven/maven-profile/2.0.6/maven-profile-2.0.6.jar:/home/tomcat/.m2/repository/org/apache/maven/maven-artifact-manager/2.0.6/maven-artifact-manager-2.0.6.jar:/home/tomcat/.m2/repository/org/apache/maven/maven-plugin-registry/2.0.6/maven-plugin-registry-2.0.6.jar:/home/tomcat/.m2/repository/org/apache/maven/maven-core/2.0.6/maven-core-2.0.6.jar:/home/tomcat/.m2/repository/org/apache/maven/wagon/wagon-file/1.0-beta-2/wagon-file-1.0-beta-2.jar:/home/tomcat/.m2/repository/org/apache/maven/maven-plugin-parameter-documenter/2.0.6/maven-plugin-parameter-documenter-2.0.6.jar:/home/tomcat/.m2/repository/org/apache/maven/wagon/wagon-http-lightweight/1.0-beta-2/wagon-http-lightweight-1.0-beta-2.jar:/home/tomcat/.m2/repository/org/apache/maven/wagon/wagon-http-shared/1.0-beta-2/wagon-http-shared-1.0-beta-2.jar:/home/tomcat/.m2/repository/jtidy/jtidy/4aug2000r7-dev/jtidy-4aug2000r7-dev.jar:/home/tomcat/.m2/repository/org/apache/maven/reporting/maven-reporting-api/2.0.6/maven-reporting-api-2.0.6.jar:/home/tomcat/.m2/repository/org/apache/maven/doxia/doxia-sink-api/1.0-alpha-7/doxia-sink-api-1.0-alpha-7.jar:/home/tomcat/.m2/repository/org/apache/maven/wagon/wagon-provider-api/1.0-beta-2/wagon-provider-api-1.0-beta-2.jar:/home/tomcat/.m2/repository/org/apache/maven/maven-repository-metadata/2.0.6/maven-repository-metadata-2.0.6.jar:/home/tomcat/.m2/repository/org/apache/maven/maven-error-diagnostics/2.0.6/maven-error-diagnostics-2.0.6.jar:/home/tomcat/.m2/repository/commons-cli/commons-cli/1.0/commons-cli-1.0.jar:/home/tomcat/.m2/repository/org/apache/maven/maven-plugin-api/2.0.6/maven-plugin-api-2.0.6.jar:/home/tomcat/.m2/repository/org/apache/maven/wagon/wagon-ssh-external/1.0-beta-2/wagon-ssh-external-1.0-beta-2.jar:/home/tomcat/.m2/repository/org/apache/maven/wagon/wagon-ssh-common/1.0-beta-2/wagon-ssh-common-1.0-beta-2.jar:/home/tomcat/.m2/repository/org/apache/maven/maven-plugin-descriptor/2.0.6/maven-plugin-descriptor-2.0.6.jar:/home/tomcat/.m2/repository/org/codehaus/plexus/plexus-interactivity-api/1.0-alpha-4/plexus-interactivity-api-1.0-alpha-4.jar:/home/tomcat/.m2/repository/org/apache/maven/wagon/wagon-ssh/1.0-beta-2/wagon-ssh-1.0-beta-2.jar:/home/tomcat/.m2/repository/com/jcraft/jsch/0.1.27/jsch-0.1.27.jar:/home/tomcat/.m2/repository/org/apache/maven/maven-monitor/2.0.6/maven-monitor-2.0.6.jar:/home/tomcat/.m2/repository/org/apache/maven/maven-settings/2.0.6/maven-settings-2.0.6.jar:/home/tomcat/.m2/repository/org/codehaus/plexus/plexus-component-annotations/1.5.4/plexus-component-annotations-1.5.4.jar:/home/tomcat/.m2/repository/org/codehaus/plexus/plexus-interpolation/1.22/plexus-interpolation-1.22.jar:/home/tomcat/.m2/repository/org/codehaus/plexus/plexus-utils/3.0/plexus-utils-3.0.jar:, user.name=tomcat, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.version=1.7, sun.java.command=/home/tomcat/Documents/backup/OMS.Release/target/surefire/surefirebooter2135140917294523253.jar /home/tomcat/Documents/backup/OMS.Release/target/surefire 2017-10-14T22-36-47_989-jvmRun1 surefire3133751513248136846tmp surefire_01873887164768424162tmp, java.home=/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre, sun.arch.data.model=64, hibernate.connection.url=jdbc:mysql://localhost:3306/test1, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.7.0_151, java.ext.dirs=/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre/lib/resources.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre/lib/rt.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre/lib/jsse.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre/lib/jce.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre/lib/charsets.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre/lib/rhino.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre/lib/jfr.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre/classes, java.vendor=Oracle Corporation, localRepository=/home/tomcat/.m2/repository, file.separator=/, hibernate.hbm2ddl.auto=create-drop, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=gnome, dialect=org.hibernate.dialect.MySQL5Dialect, sun.cpu.isalist=}
[2017-10-14 22:36:50,036]DEBUG  1295[main] - org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) - Processing hbm.xml files
[2017-10-14 22:36:50,036]DEBUG  1295[main] - org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) - Process annotated classes
[2017-10-14 22:36:50,040] INFO  1299[main] - org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:532) - Binding entity from annotated class: com.softserveinc.edu.oms.domain.entities.Role
[2017-10-14 22:36:50,058]DEBUG  1317[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2017-10-14 22:36:50,060]DEBUG  1319[main] - org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1019) - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2017-10-14 22:36:50,065]DEBUG  1324[main] - org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name Role
[2017-10-14 22:36:50,067] INFO  1326[main] - org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:530) - Bind entity com.softserveinc.edu.oms.domain.entities.Role on table Roles
[2017-10-14 22:36:50,087]DEBUG  1346[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Roles), mappingColumn=ID, insertable=true, updatable=true, unique=false}
[2017-10-14 22:36:50,091]DEBUG  1350[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property id with lazy=false
[2017-10-14 22:36:50,092]DEBUG  1351[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for id
[2017-10-14 22:36:50,094]DEBUG  1353[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property id
[2017-10-14 22:36:50,096]DEBUG  1355[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Roles), mappingColumn=RoleName, insertable=true, updatable=true, unique=false}
[2017-10-14 22:36:50,097]DEBUG  1356[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property roleName with lazy=false
[2017-10-14 22:36:50,097]DEBUG  1356[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for roleName
[2017-10-14 22:36:50,097]DEBUG  1356[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property roleName
[2017-10-14 22:36:50,099] INFO  1358[main] - org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:532) - Binding entity from annotated class: com.softserveinc.edu.oms.domain.entities.Region
[2017-10-14 22:36:50,099]DEBUG  1358[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2017-10-14 22:36:50,099]DEBUG  1358[main] - org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1019) - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2017-10-14 22:36:50,099]DEBUG  1358[main] - org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name Region
[2017-10-14 22:36:50,100] INFO  1359[main] - org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:530) - Bind entity com.softserveinc.edu.oms.domain.entities.Region on table Regions
[2017-10-14 22:36:50,101]DEBUG  1360[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Regions), mappingColumn=ID, insertable=true, updatable=true, unique=false}
[2017-10-14 22:36:50,101]DEBUG  1360[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property id with lazy=false
[2017-10-14 22:36:50,101]DEBUG  1360[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for id
[2017-10-14 22:36:50,101]DEBUG  1360[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property id
[2017-10-14 22:36:50,102]DEBUG  1361[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Regions), mappingColumn=RegionName, insertable=true, updatable=true, unique=false}
[2017-10-14 22:36:50,102]DEBUG  1361[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property regionName with lazy=false
[2017-10-14 22:36:50,102]DEBUG  1361[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for regionName
[2017-10-14 22:36:50,103]DEBUG  1362[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property regionName
[2017-10-14 22:36:50,103] INFO  1362[main] - org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:532) - Binding entity from annotated class: com.softserveinc.edu.oms.domain.entities.CustomerType
[2017-10-14 22:36:50,103]DEBUG  1362[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2017-10-14 22:36:50,103]DEBUG  1362[main] - org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1019) - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2017-10-14 22:36:50,103]DEBUG  1362[main] - org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name CustomerType
[2017-10-14 22:36:50,104] INFO  1363[main] - org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:530) - Bind entity com.softserveinc.edu.oms.domain.entities.CustomerType on table CustomerTypes
[2017-10-14 22:36:50,105]DEBUG  1364[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerTypes), mappingColumn=ID, insertable=true, updatable=true, unique=false}
[2017-10-14 22:36:50,106]DEBUG  1365[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property id with lazy=false
[2017-10-14 22:36:50,106]DEBUG  1365[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for id
[2017-10-14 22:36:50,106]DEBUG  1365[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property id
[2017-10-14 22:36:50,106]DEBUG  1365[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerTypes), mappingColumn=Discount, insertable=true, updatable=true, unique=false}
[2017-10-14 22:36:50,107]DEBUG  1366[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property discount with lazy=false
[2017-10-14 22:36:50,107]DEBUG  1366[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for discount
[2017-10-14 22:36:50,107]DEBUG  1366[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property discount
[2017-10-14 22:36:50,107]DEBUG  1366[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerTypes), mappingColumn=MaxRange, insertable=true, updatable=true, unique=false}
[2017-10-14 22:36:50,108]DEBUG  1367[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property maxRange with lazy=false
[2017-10-14 22:36:50,108]DEBUG  1367[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for maxRange
[2017-10-14 22:36:50,108]DEBUG  1367[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property maxRange
[2017-10-14 22:36:50,108]DEBUG  1367[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerTypes), mappingColumn=MinRange, insertable=true, updatable=true, unique=false}
[2017-10-14 22:36:50,109]DEBUG  1368[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property minRange with lazy=false
[2017-10-14 22:36:50,109]DEBUG  1368[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for minRange
[2017-10-14 22:36:50,109]DEBUG  1368[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property minRange
[2017-10-14 22:36:50,109]DEBUG  1368[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerTypes), mappingColumn=TypeName, insertable=true, updatable=true, unique=false}
[2017-10-14 22:36:50,110]DEBUG  1369[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property typeName with lazy=false
[2017-10-14 22:36:50,110]DEBUG  1369[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for typeName
[2017-10-14 22:36:50,110]DEBUG  1369[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property typeName
[2017-10-14 22:36:50,110] INFO  1369[main] - org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:532) - Binding entity from annotated class: com.softserveinc.edu.oms.domain.entities.User
[2017-10-14 22:36:50,110]DEBUG  1369[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2017-10-14 22:36:50,111]DEBUG  1370[main] - org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1019) - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2017-10-14 22:36:50,111]DEBUG  1370[main] - org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name User
[2017-10-14 22:36:50,111] INFO  1370[main] - org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:530) - Bind entity com.softserveinc.edu.oms.domain.entities.User on table Users
[2017-10-14 22:36:50,119]DEBUG  1378[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=ID, insertable=true, updatable=true, unique=false}
[2017-10-14 22:36:50,119]DEBUG  1378[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property id with lazy=false
[2017-10-14 22:36:50,119]DEBUG  1378[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for id
[2017-10-14 22:36:50,120]DEBUG  1379[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property id
[2017-10-14 22:36:50,120]DEBUG  1379[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=IsUserActive, insertable=true, updatable=true, unique=false}
[2017-10-14 22:36:50,120]DEBUG  1379[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property active with lazy=false
[2017-10-14 22:36:50,120]DEBUG  1379[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for active
[2017-10-14 22:36:50,121]DEBUG  1380[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property active
[2017-10-14 22:36:50,121]DEBUG  1380[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=Balance, insertable=true, updatable=true, unique=false}
[2017-10-14 22:36:50,121]DEBUG  1380[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property balance with lazy=false
[2017-10-14 22:36:50,121]DEBUG  1380[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for balance
[2017-10-14 22:36:50,121]DEBUG  1380[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property balance
[2017-10-14 22:36:50,122]DEBUG  1381[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3JoinColumn{logicalColumnName='CustomerTypeRef', referencedColumn='', mappedBy=''}
[2017-10-14 22:36:50,131]DEBUG  1390[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=customerType, insertable=true, updatable=true, unique=false}
[2017-10-14 22:36:50,134]DEBUG  1393[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property customerType
[2017-10-14 22:36:50,134]DEBUG  1393[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=Email, insertable=true, updatable=true, unique=false}
[2017-10-14 22:36:50,134]DEBUG  1393[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property email with lazy=false
[2017-10-14 22:36:50,134]DEBUG  1393[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for email
[2017-10-14 22:36:50,134]DEBUG  1393[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property email
[2017-10-14 22:36:50,135]DEBUG  1394[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=FirstName, insertable=true, updatable=true, unique=false}
[2017-10-14 22:36:50,135]DEBUG  1394[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property firstName with lazy=false
[2017-10-14 22:36:50,135]DEBUG  1394[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for firstName
[2017-10-14 22:36:50,135]DEBUG  1394[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property firstName
[2017-10-14 22:36:50,136]DEBUG  1395[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=LastName, insertable=true, updatable=true, unique=false}
[2017-10-14 22:36:50,136]DEBUG  1395[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property lastName with lazy=false
[2017-10-14 22:36:50,136]DEBUG  1395[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for lastName
[2017-10-14 22:36:50,136]DEBUG  1395[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property lastName
[2017-10-14 22:36:50,137]DEBUG  1396[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=Login, insertable=true, updatable=true, unique=false}
[2017-10-14 22:36:50,137]DEBUG  1396[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property login with lazy=false
[2017-10-14 22:36:50,137]DEBUG  1396[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for login
[2017-10-14 22:36:50,137]DEBUG  1396[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property login
[2017-10-14 22:36:50,137]DEBUG  1396[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=Password, insertable=true, updatable=true, unique=false}
[2017-10-14 22:36:50,138]DEBUG  1397[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property password with lazy=false
[2017-10-14 22:36:50,138]DEBUG  1397[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for password
[2017-10-14 22:36:50,138]DEBUG  1397[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property password
[2017-10-14 22:36:50,138]DEBUG  1397[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3JoinColumn{logicalColumnName='RegionRef', referencedColumn='', mappedBy=''}
[2017-10-14 22:36:50,138]DEBUG  1397[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=region, insertable=true, updatable=true, unique=false}
[2017-10-14 22:36:50,139]DEBUG  1398[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property region
[2017-10-14 22:36:50,139]DEBUG  1398[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3JoinColumn{logicalColumnName='RoleRef', referencedColumn='', mappedBy=''}
[2017-10-14 22:36:50,139]DEBUG  1398[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=role, insertable=true, updatable=true, unique=false}
[2017-10-14 22:36:50,139]DEBUG  1398[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property role
[2017-10-14 22:36:50,140] INFO  1399[main] - org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:532) - Binding entity from annotated class: com.softserveinc.edu.oms.domain.entities.OrderStatus
[2017-10-14 22:36:50,140]DEBUG  1399[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2017-10-14 22:36:50,140]DEBUG  1399[main] - org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1019) - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2017-10-14 22:36:50,140]DEBUG  1399[main] - org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name OrderStatus
[2017-10-14 22:36:50,140] INFO  1399[main] - org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:530) - Bind entity com.softserveinc.edu.oms.domain.entities.OrderStatus on table OrderStatuses
[2017-10-14 22:36:50,141]DEBUG  1400[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderStatuses), mappingColumn=ID, insertable=true, updatable=true, unique=false}
[2017-10-14 22:36:50,141]DEBUG  1400[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property id with lazy=false
[2017-10-14 22:36:50,142]DEBUG  1401[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for id
[2017-10-14 22:36:50,142]DEBUG  1401[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property id
[2017-10-14 22:36:50,142]DEBUG  1401[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderStatuses), mappingColumn=OrederStatusName, insertable=true, updatable=true, unique=false}
[2017-10-14 22:36:50,142]DEBUG  1401[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property orderStatusName with lazy=false
[2017-10-14 22:36:50,143]DEBUG  1402[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for orderStatusName
[2017-10-14 22:36:50,143]DEBUG  1402[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property orderStatusName
[2017-10-14 22:36:50,143] INFO  1402[main] - org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:532) - Binding entity from annotated class: com.softserveinc.edu.oms.domain.entities.Order
[2017-10-14 22:36:50,143]DEBUG  1402[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2017-10-14 22:36:50,143]DEBUG  1402[main] - org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1019) - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2017-10-14 22:36:50,144]DEBUG  1403[main] - org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name Order
[2017-10-14 22:36:50,144] INFO  1403[main] - org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:530) - Bind entity com.softserveinc.edu.oms.domain.entities.Order on table Orders
[2017-10-14 22:36:50,146]DEBUG  1405[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=ID, insertable=true, updatable=true, unique=false}
[2017-10-14 22:36:50,146]DEBUG  1405[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property id with lazy=false
[2017-10-14 22:36:50,147]DEBUG  1406[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for id
[2017-10-14 22:36:50,147]DEBUG  1406[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property id
[2017-10-14 22:36:50,147]DEBUG  1406[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3JoinColumn{logicalColumnName='Assigne', referencedColumn='', mappedBy=''}
[2017-10-14 22:36:50,147]DEBUG  1406[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=assigne, insertable=true, updatable=true, unique=false}
[2017-10-14 22:36:50,147]DEBUG  1406[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property assigne
[2017-10-14 22:36:50,148]DEBUG  1407[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3JoinColumn{logicalColumnName='Customer', referencedColumn='', mappedBy=''}
[2017-10-14 22:36:50,148]DEBUG  1407[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=customer, insertable=true, updatable=true, unique=false}
[2017-10-14 22:36:50,148]DEBUG  1407[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property customer
[2017-10-14 22:36:50,148]DEBUG  1407[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=DeliveryDate, insertable=true, updatable=true, unique=false}
[2017-10-14 22:36:50,149]DEBUG  1408[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property deliveryDate with lazy=false
[2017-10-14 22:36:50,149]DEBUG  1408[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for deliveryDate
[2017-10-14 22:36:50,149]DEBUG  1408[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property deliveryDate
[2017-10-14 22:36:50,149]DEBUG  1408[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=IsGift, insertable=true, updatable=true, unique=false}
[2017-10-14 22:36:50,150]DEBUG  1409[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property isGift with lazy=false
[2017-10-14 22:36:50,150]DEBUG  1409[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for isGift
[2017-10-14 22:36:50,150]DEBUG  1409[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property isGift
[2017-10-14 22:36:50,150]DEBUG  1409[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=MaxDiscount, insertable=true, updatable=true, unique=false}
[2017-10-14 22:36:50,150]DEBUG  1409[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property maxDiscount with lazy=false
[2017-10-14 22:36:50,151]DEBUG  1410[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for maxDiscount
[2017-10-14 22:36:50,151]DEBUG  1410[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property maxDiscount
[2017-10-14 22:36:50,151]DEBUG  1410[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=OrderDate, insertable=true, updatable=true, unique=false}
[2017-10-14 22:36:50,151]DEBUG  1410[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property orderDate with lazy=false
[2017-10-14 22:36:50,151]DEBUG  1410[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for orderDate
[2017-10-14 22:36:50,152]DEBUG  1411[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property orderDate
[2017-10-14 22:36:50,152]DEBUG  1411[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=OrderName, insertable=true, updatable=true, unique=false}
[2017-10-14 22:36:50,152]DEBUG  1411[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property orderName with lazy=false
[2017-10-14 22:36:50,152]DEBUG  1411[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for orderName
[2017-10-14 22:36:50,152]DEBUG  1411[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property orderName
[2017-10-14 22:36:50,153]DEBUG  1412[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=OrderNumber, insertable=true, updatable=true, unique=true}
[2017-10-14 22:36:50,153]DEBUG  1412[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property orderNumber with lazy=false
[2017-10-14 22:36:50,153]DEBUG  1412[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for orderNumber
[2017-10-14 22:36:50,153]DEBUG  1412[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property orderNumber
[2017-10-14 22:36:50,154]DEBUG  1413[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3JoinColumn{logicalColumnName='OrderStatusRef', referencedColumn='', mappedBy=''}
[2017-10-14 22:36:50,154]DEBUG  1413[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=orderStatus, insertable=true, updatable=true, unique=false}
[2017-10-14 22:36:50,154]DEBUG  1413[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property orderStatus
[2017-10-14 22:36:50,154]DEBUG  1413[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=PreferableDeliveryDate, insertable=true, updatable=true, unique=false}
[2017-10-14 22:36:50,154]DEBUG  1413[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property preferableDeliveryDate with lazy=false
[2017-10-14 22:36:50,155]DEBUG  1414[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for preferableDeliveryDate
[2017-10-14 22:36:50,155]DEBUG  1414[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property preferableDeliveryDate
[2017-10-14 22:36:50,155]DEBUG  1414[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=TotalPrice, insertable=true, updatable=true, unique=false}
[2017-10-14 22:36:50,155]DEBUG  1414[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property totalPrice with lazy=false
[2017-10-14 22:36:50,155]DEBUG  1414[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for totalPrice
[2017-10-14 22:36:50,156]DEBUG  1415[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property totalPrice
[2017-10-14 22:36:50,156] INFO  1415[main] - org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:532) - Binding entity from annotated class: com.softserveinc.edu.oms.domain.entities.Product
[2017-10-14 22:36:50,156]DEBUG  1415[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2017-10-14 22:36:50,156]DEBUG  1415[main] - org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1019) - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2017-10-14 22:36:50,157]DEBUG  1416[main] - org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name Product
[2017-10-14 22:36:50,157] INFO  1416[main] - org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:530) - Bind entity com.softserveinc.edu.oms.domain.entities.Product on table Products
[2017-10-14 22:36:50,158]DEBUG  1417[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Products), mappingColumn=ID, insertable=true, updatable=true, unique=false}
[2017-10-14 22:36:50,158]DEBUG  1417[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property id with lazy=false
[2017-10-14 22:36:50,158]DEBUG  1417[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for id
[2017-10-14 22:36:50,159]DEBUG  1418[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property id
[2017-10-14 22:36:50,159]DEBUG  1418[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Products), mappingColumn=IsProductActive, insertable=true, updatable=true, unique=false}
[2017-10-14 22:36:50,159]DEBUG  1418[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property active with lazy=false
[2017-10-14 22:36:50,159]DEBUG  1418[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for active
[2017-10-14 22:36:50,160]DEBUG  1419[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property active
[2017-10-14 22:36:50,160]DEBUG  1419[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Products), mappingColumn=ProductDescription, insertable=true, updatable=true, unique=false}
[2017-10-14 22:36:50,160]DEBUG  1419[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property productDescription with lazy=false
[2017-10-14 22:36:50,160]DEBUG  1419[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for productDescription
[2017-10-14 22:36:50,160]DEBUG  1419[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property productDescription
[2017-10-14 22:36:50,161]DEBUG  1420[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Products), mappingColumn=ProductName, insertable=true, updatable=true, unique=false}
[2017-10-14 22:36:50,161]DEBUG  1420[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property productName with lazy=false
[2017-10-14 22:36:50,161]DEBUG  1420[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for productName
[2017-10-14 22:36:50,161]DEBUG  1420[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property productName
[2017-10-14 22:36:50,161]DEBUG  1420[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Products), mappingColumn=ProductPrice, insertable=true, updatable=true, unique=false}
[2017-10-14 22:36:50,162]DEBUG  1421[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property productPrice with lazy=false
[2017-10-14 22:36:50,162]DEBUG  1421[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for productPrice
[2017-10-14 22:36:50,162]DEBUG  1421[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property productPrice
[2017-10-14 22:36:50,162] INFO  1421[main] - org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:532) - Binding entity from annotated class: com.softserveinc.edu.oms.domain.entities.Dimension
[2017-10-14 22:36:50,162]DEBUG  1421[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2017-10-14 22:36:50,163]DEBUG  1422[main] - org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1019) - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2017-10-14 22:36:50,163]DEBUG  1422[main] - org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name Dimension
[2017-10-14 22:36:50,163] INFO  1422[main] - org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:530) - Bind entity com.softserveinc.edu.oms.domain.entities.Dimension on table Dimensions
[2017-10-14 22:36:50,164]DEBUG  1423[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Dimensions), mappingColumn=ID, insertable=true, updatable=true, unique=false}
[2017-10-14 22:36:50,164]DEBUG  1423[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property id with lazy=false
[2017-10-14 22:36:50,164]DEBUG  1423[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for id
[2017-10-14 22:36:50,165]DEBUG  1424[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property id
[2017-10-14 22:36:50,165]DEBUG  1424[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Dimensions), mappingColumn=DimensionName, insertable=true, updatable=true, unique=false}
[2017-10-14 22:36:50,165]DEBUG  1424[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property dimensionName with lazy=false
[2017-10-14 22:36:50,165]DEBUG  1424[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for dimensionName
[2017-10-14 22:36:50,166]DEBUG  1425[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property dimensionName
[2017-10-14 22:36:50,166]DEBUG  1425[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Dimensions), mappingColumn=NumberOfProducts, insertable=true, updatable=true, unique=false}
[2017-10-14 22:36:50,166]DEBUG  1425[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property numberOfProduct with lazy=false
[2017-10-14 22:36:50,166]DEBUG  1425[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for numberOfProduct
[2017-10-14 22:36:50,166]DEBUG  1425[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property numberOfProduct
[2017-10-14 22:36:50,167] INFO  1426[main] - org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:532) - Binding entity from annotated class: com.softserveinc.edu.oms.domain.entities.OrderItem
[2017-10-14 22:36:50,167]DEBUG  1426[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2017-10-14 22:36:50,167]DEBUG  1426[main] - org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1019) - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2017-10-14 22:36:50,167]DEBUG  1426[main] - org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name OrderItem
[2017-10-14 22:36:50,167] INFO  1426[main] - org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:530) - Bind entity com.softserveinc.edu.oms.domain.entities.OrderItem on table OrderItems
[2017-10-14 22:36:50,169]DEBUG  1428[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderItems), mappingColumn=ID, insertable=true, updatable=true, unique=false}
[2017-10-14 22:36:50,169]DEBUG  1428[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property id with lazy=false
[2017-10-14 22:36:50,169]DEBUG  1428[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for id
[2017-10-14 22:36:50,170]DEBUG  1429[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property id
[2017-10-14 22:36:50,170]DEBUG  1429[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderItems), mappingColumn=Cost, insertable=true, updatable=true, unique=false}
[2017-10-14 22:36:50,170]DEBUG  1429[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property cost with lazy=false
[2017-10-14 22:36:50,170]DEBUG  1429[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for cost
[2017-10-14 22:36:50,171]DEBUG  1430[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property cost
[2017-10-14 22:36:50,171]DEBUG  1430[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3JoinColumn{logicalColumnName='DimensionRef', referencedColumn='', mappedBy=''}
[2017-10-14 22:36:50,171]DEBUG  1430[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderItems), mappingColumn=dimension, insertable=true, updatable=true, unique=false}
[2017-10-14 22:36:50,171]DEBUG  1430[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property dimension
[2017-10-14 22:36:50,172]DEBUG  1431[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderItems), mappingColumn=ItemPrice, insertable=true, updatable=true, unique=false}
[2017-10-14 22:36:50,172]DEBUG  1431[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property itemPrice with lazy=false
[2017-10-14 22:36:50,172]DEBUG  1431[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for itemPrice
[2017-10-14 22:36:50,172]DEBUG  1431[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property itemPrice
[2017-10-14 22:36:50,172]DEBUG  1431[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3JoinColumn{logicalColumnName='OrderRef', referencedColumn='', mappedBy=''}
[2017-10-14 22:36:50,173]DEBUG  1432[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderItems), mappingColumn=order, insertable=true, updatable=true, unique=false}
[2017-10-14 22:36:50,173]DEBUG  1432[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property order
[2017-10-14 22:36:50,173]DEBUG  1432[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3JoinColumn{logicalColumnName='ProductRef', referencedColumn='', mappedBy=''}
[2017-10-14 22:36:50,173]DEBUG  1432[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderItems), mappingColumn=product, insertable=true, updatable=true, unique=false}
[2017-10-14 22:36:50,174]DEBUG  1433[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property product
[2017-10-14 22:36:50,174]DEBUG  1433[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderItems), mappingColumn=Quantity, insertable=true, updatable=true, unique=false}
[2017-10-14 22:36:50,174]DEBUG  1433[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property quantity with lazy=false
[2017-10-14 22:36:50,174]DEBUG  1433[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for quantity
[2017-10-14 22:36:50,174]DEBUG  1433[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property quantity
[2017-10-14 22:36:50,175] INFO  1434[main] - org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:532) - Binding entity from annotated class: com.softserveinc.edu.oms.domain.entities.CreditCardType
[2017-10-14 22:36:50,175]DEBUG  1434[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2017-10-14 22:36:50,175]DEBUG  1434[main] - org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1019) - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2017-10-14 22:36:50,175]DEBUG  1434[main] - org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name CreditCardType
[2017-10-14 22:36:50,175] INFO  1434[main] - org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:530) - Bind entity com.softserveinc.edu.oms.domain.entities.CreditCardType on table CardType
[2017-10-14 22:36:50,177]DEBUG  1436[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CardType), mappingColumn=ID, insertable=true, updatable=true, unique=false}
[2017-10-14 22:36:50,177]DEBUG  1436[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property id with lazy=false
[2017-10-14 22:36:50,177]DEBUG  1436[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for id
[2017-10-14 22:36:50,177]DEBUG  1436[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property id
[2017-10-14 22:36:50,178]DEBUG  1437[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CardType), mappingColumn=CardType, insertable=true, updatable=true, unique=false}
[2017-10-14 22:36:50,178]DEBUG  1437[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property cardType with lazy=false
[2017-10-14 22:36:50,178]DEBUG  1437[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for cardType
[2017-10-14 22:36:50,178]DEBUG  1437[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property cardType
[2017-10-14 22:36:50,178]DEBUG  1437[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CardType), mappingColumn=CardNumber, insertable=true, updatable=true, unique=false}
[2017-10-14 22:36:50,179]DEBUG  1438[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property creditCardNumber with lazy=false
[2017-10-14 22:36:50,179]DEBUG  1438[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for creditCardNumber
[2017-10-14 22:36:50,179]DEBUG  1438[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property creditCardNumber
[2017-10-14 22:36:50,179]DEBUG  1438[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CardType), mappingColumn=CardCvv2, insertable=true, updatable=true, unique=false}
[2017-10-14 22:36:50,180]DEBUG  1439[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property cvv2 with lazy=false
[2017-10-14 22:36:50,180]DEBUG  1439[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for cvv2
[2017-10-14 22:36:50,180]DEBUG  1439[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property cvv2
[2017-10-14 22:36:50,180]DEBUG  1439[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CardType), mappingColumn=Expiration_Date, insertable=true, updatable=true, unique=false}
[2017-10-14 22:36:50,180]DEBUG  1439[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property expDate with lazy=false
[2017-10-14 22:36:50,181]DEBUG  1440[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for expDate
[2017-10-14 22:36:50,181]DEBUG  1440[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property expDate
[2017-10-14 22:36:50,181]DEBUG  1440[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CardType), mappingColumn=IssueDate, insertable=true, updatable=true, unique=false}
[2017-10-14 22:36:50,181]DEBUG  1440[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property issueDate with lazy=false
[2017-10-14 22:36:50,181]DEBUG  1440[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for issueDate
[2017-10-14 22:36:50,182]DEBUG  1441[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property issueDate
[2017-10-14 22:36:50,182]DEBUG  1441[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CardType), mappingColumn=IssueNumber, insertable=true, updatable=true, unique=false}
[2017-10-14 22:36:50,182]DEBUG  1441[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property issueNumber with lazy=false
[2017-10-14 22:36:50,182]DEBUG  1441[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for issueNumber
[2017-10-14 22:36:50,182]DEBUG  1441[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property issueNumber
[2017-10-14 22:36:50,183]DEBUG  1442[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for id
[2017-10-14 22:36:50,183]DEBUG  1442[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for roleName
[2017-10-14 22:36:50,183]DEBUG  1442[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for id
[2017-10-14 22:36:50,184]DEBUG  1443[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for regionName
[2017-10-14 22:36:50,184]DEBUG  1443[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for id
[2017-10-14 22:36:50,184]DEBUG  1443[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for discount
[2017-10-14 22:36:50,184]DEBUG  1443[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for maxRange
[2017-10-14 22:36:50,184]DEBUG  1443[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for minRange
[2017-10-14 22:36:50,184]DEBUG  1443[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for typeName
[2017-10-14 22:36:50,185]DEBUG  1444[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for id
[2017-10-14 22:36:50,185]DEBUG  1444[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for active
[2017-10-14 22:36:50,185]DEBUG  1444[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for balance
[2017-10-14 22:36:50,185]DEBUG  1444[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for email
[2017-10-14 22:36:50,185]DEBUG  1444[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for firstName
[2017-10-14 22:36:50,185]DEBUG  1444[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for lastName
[2017-10-14 22:36:50,186]DEBUG  1445[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for login
[2017-10-14 22:36:50,186]DEBUG  1445[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for password
[2017-10-14 22:36:50,186]DEBUG  1445[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for id
[2017-10-14 22:36:50,186]DEBUG  1445[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for orderStatusName
[2017-10-14 22:36:50,186]DEBUG  1445[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for id
[2017-10-14 22:36:50,186]DEBUG  1445[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for deliveryDate
[2017-10-14 22:36:50,187]DEBUG  1446[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for isGift
[2017-10-14 22:36:50,187]DEBUG  1446[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for maxDiscount
[2017-10-14 22:36:50,187]DEBUG  1446[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for orderDate
[2017-10-14 22:36:50,187]DEBUG  1446[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for orderName
[2017-10-14 22:36:50,187]DEBUG  1446[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for orderNumber
[2017-10-14 22:36:50,187]DEBUG  1446[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for preferableDeliveryDate
[2017-10-14 22:36:50,188]DEBUG  1447[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for totalPrice
[2017-10-14 22:36:50,188]DEBUG  1447[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for id
[2017-10-14 22:36:50,188]DEBUG  1447[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for active
[2017-10-14 22:36:50,188]DEBUG  1447[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for productDescription
[2017-10-14 22:36:50,188]DEBUG  1447[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for productName
[2017-10-14 22:36:50,188]DEBUG  1447[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for productPrice
[2017-10-14 22:36:50,189]DEBUG  1448[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for id
[2017-10-14 22:36:50,189]DEBUG  1448[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for dimensionName
[2017-10-14 22:36:50,189]DEBUG  1448[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for numberOfProduct
[2017-10-14 22:36:50,189]DEBUG  1448[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for id
[2017-10-14 22:36:50,189]DEBUG  1448[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for cost
[2017-10-14 22:36:50,189]DEBUG  1448[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for itemPrice
[2017-10-14 22:36:50,190]DEBUG  1449[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for quantity
[2017-10-14 22:36:50,190]DEBUG  1449[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for id
[2017-10-14 22:36:50,190]DEBUG  1449[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for cardType
[2017-10-14 22:36:50,190]DEBUG  1449[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for creditCardNumber
[2017-10-14 22:36:50,190]DEBUG  1449[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for cvv2
[2017-10-14 22:36:50,190]DEBUG  1449[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for expDate
[2017-10-14 22:36:50,191]DEBUG  1450[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for issueDate
[2017-10-14 22:36:50,191]DEBUG  1450[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for issueNumber
[2017-10-14 22:36:50,191]DEBUG  1450[main] - org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) - processing fk mappings (*ToOne and JoinedSubclass)
[2017-10-14 22:36:50,195]DEBUG  1454[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) - processing extends queue
[2017-10-14 22:36:50,196]DEBUG  1455[main] - org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) - processing extends queue
[2017-10-14 22:36:50,196]DEBUG  1455[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) - processing collection mappings
[2017-10-14 22:36:50,196]DEBUG  1455[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) - processing native query and ResultSetMapping mappings
[2017-10-14 22:36:50,196]DEBUG  1455[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) - processing association property references
[2017-10-14 22:36:50,196]DEBUG  1455[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) - processing foreign key constraints
[2017-10-14 22:36:50,197]DEBUG  1456[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Product
[2017-10-14 22:36:50,197]DEBUG  1456[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Dimension
[2017-10-14 22:36:50,197]DEBUG  1456[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Order
[2017-10-14 22:36:50,197]DEBUG  1456[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.OrderStatus
[2017-10-14 22:36:50,197]DEBUG  1456[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.User
[2017-10-14 22:36:50,197]DEBUG  1456[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.User
[2017-10-14 22:36:50,198]DEBUG  1457[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Role
[2017-10-14 22:36:50,198]DEBUG  1457[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.CustomerType
[2017-10-14 22:36:50,198]DEBUG  1457[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Region
[2017-10-14 22:36:50,199] INFO  1458[main] - org.hibernate.cfg.Configuration.applyHibernateValidatorLegacyConstraintsOnDDL(Configuration.java:1676) - Hibernate Validator not found: ignoring
[2017-10-14 22:36:50,209] INFO  1468[main] - org.hibernate.validator.util.Version.<clinit>(Version.java:24) - Hibernate Validator 4.2.0.Final
[2017-10-14 22:36:50,214]DEBUG  1473[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:107) - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2017-10-14 22:36:50,215]DEBUG  1474[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:118) - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.engine.resolver.JPATraversableResolver.
[2017-10-14 22:36:50,217]DEBUG  1476[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:203) - Trying to load META-INF/validation.xml for XML based Validator configuration.
[2017-10-14 22:36:50,218]DEBUG  1477[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:206) - No META-INF/validation.xml found. Using annotation based configuration only
[2017-10-14 22:36:50,274] INFO  1533[main] - org.springframework.orm.hibernate3.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:777) - Building new Hibernate SessionFactory
[2017-10-14 22:36:50,274]DEBUG  1533[main] - org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1854) - Preparing to build session factory with filters : {}
[2017-10-14 22:36:50,275]DEBUG  1534[main] - org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) - Processing hbm.xml files
[2017-10-14 22:36:50,275]DEBUG  1534[main] - org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) - Process annotated classes
[2017-10-14 22:36:50,275]DEBUG  1534[main] - org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) - processing fk mappings (*ToOne and JoinedSubclass)
[2017-10-14 22:36:50,275]DEBUG  1534[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) - processing extends queue
[2017-10-14 22:36:50,275]DEBUG  1534[main] - org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) - processing extends queue
[2017-10-14 22:36:50,276]DEBUG  1535[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) - processing collection mappings
[2017-10-14 22:36:50,276]DEBUG  1535[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) - processing native query and ResultSetMapping mappings
[2017-10-14 22:36:50,276]DEBUG  1535[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) - processing association property references
[2017-10-14 22:36:50,276]DEBUG  1535[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) - processing foreign key constraints
[2017-10-14 22:36:50,276]DEBUG  1535[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Product
[2017-10-14 22:36:50,277]DEBUG  1536[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Dimension
[2017-10-14 22:36:50,277]DEBUG  1536[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Order
[2017-10-14 22:36:50,277]DEBUG  1536[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.OrderStatus
[2017-10-14 22:36:50,277]DEBUG  1536[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.User
[2017-10-14 22:36:50,277]DEBUG  1536[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.User
[2017-10-14 22:36:50,278]DEBUG  1537[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Role
[2017-10-14 22:36:50,278]DEBUG  1537[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.CustomerType
[2017-10-14 22:36:50,278]DEBUG  1537[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Region
[2017-10-14 22:36:50,279]DEBUG  1538[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:107) - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2017-10-14 22:36:50,279]DEBUG  1538[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:118) - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.engine.resolver.JPATraversableResolver.
[2017-10-14 22:36:50,279]DEBUG  1538[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:203) - Trying to load META-INF/validation.xml for XML based Validator configuration.
[2017-10-14 22:36:50,280]DEBUG  1539[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:206) - No META-INF/validation.xml found. Using annotation based configuration only
[2017-10-14 22:36:50,299]DEBUG  1558[main] - org.hibernate.cfg.Configuration.enableLegacyHibernateValidator(Configuration.java:1896) - Legacy Validator not present in classpath, ignoring event listener registration
[2017-10-14 22:36:50,299]DEBUG  1558[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:107) - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2017-10-14 22:36:50,299]DEBUG  1558[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:118) - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.engine.resolver.JPATraversableResolver.
[2017-10-14 22:36:50,300]DEBUG  1559[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:203) - Trying to load META-INF/validation.xml for XML based Validator configuration.
[2017-10-14 22:36:50,300]DEBUG  1559[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:206) - No META-INF/validation.xml found. Using annotation based configuration only
[2017-10-14 22:36:50,304]DEBUG  1563[main] - org.hibernate.cfg.search.HibernateSearchEventListenerRegister.attemptToLoadSearchEventListener(HibernateSearchEventListenerRegister.java:231) - Search not present in classpath, ignoring event listener registration.
[2017-10-14 22:36:50,304] INFO  1563[main] - org.hibernate.cfg.search.HibernateSearchEventListenerRegister.enableHibernateSearch(HibernateSearchEventListenerRegister.java:75) - Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled.
[2017-10-14 22:36:50,309] INFO  1568[main] - org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:64) - Using Hibernate built-in connection pool (not for production use!)
[2017-10-14 22:36:50,309] INFO  1568[main] - org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:65) - Hibernate connection pool size: 20
[2017-10-14 22:36:50,310] INFO  1569[main] - org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:68) - autocommit mode: false
[2017-10-14 22:36:50,313] INFO  1572[main] - org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:103) - using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost:3306/test1
[2017-10-14 22:36:50,314] INFO  1573[main] - org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:106) - connection properties: {user=maria, password=333qwerb}
[2017-10-14 22:36:50,314]DEBUG  1573[main] - org.hibernate.connection.DriverManagerConnectionProvider.getConnection(DriverManagerConnectionProvider.java:132) - opening new JDBC connection
[2017-10-14 22:36:50,501]DEBUG  1760[main] - org.hibernate.connection.DriverManagerConnectionProvider.getConnection(DriverManagerConnectionProvider.java:138) - created connection to: jdbc:mysql://localhost:3306/test1, Isolation Level: 4
[2017-10-14 22:36:50,517] INFO  1776[main] - org.hibernate.dialect.Dialect.<init>(Dialect.java:135) - Using dialect: org.hibernate.dialect.MySQL5Dialect
[2017-10-14 22:36:50,526] INFO  1785[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:126) - Database ->
       name : MySQL
    version : 5.5.56-MariaDB
      major : 5
      minor : 5
[2017-10-14 22:36:50,527] INFO  1786[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:132) - Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.17 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1
[2017-10-14 22:36:50,528] INFO  1787[main] - org.hibernate.transaction.TransactionFactoryFactory.buildTransactionFactory(TransactionFactoryFactory.java:65) - Transaction strategy: org.springframework.orm.hibernate3.SpringTransactionFactory
[2017-10-14 22:36:50,529] INFO  1788[main] - org.hibernate.transaction.TransactionManagerLookupFactory.getTransactionManagerLookup(TransactionManagerLookupFactory.java:83) - No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)
[2017-10-14 22:36:50,529] INFO  1788[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:179) - Automatic flush during beforeCompletion(): disabled
[2017-10-14 22:36:50,529] INFO  1788[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:183) - Automatic session close at end of transaction: disabled
[2017-10-14 22:36:50,529] INFO  1788[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:190) - JDBC batch size: 15
[2017-10-14 22:36:50,530] INFO  1789[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:193) - JDBC batch updates for versioned data: disabled
[2017-10-14 22:36:50,530] INFO  1789[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:198) - Scrollable result sets: enabled
[2017-10-14 22:36:50,530]DEBUG  1789[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:202) - Wrap result sets: disabled
[2017-10-14 22:36:50,531] INFO  1790[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:206) - JDBC3 getGeneratedKeys(): enabled
[2017-10-14 22:36:50,531] INFO  1790[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:214) - Connection release mode: auto
[2017-10-14 22:36:50,531] INFO  1790[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:238) - Maximum outer join fetch depth: 2
[2017-10-14 22:36:50,532] INFO  1791[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:241) - Default batch fetch size: 1
[2017-10-14 22:36:50,532] INFO  1791[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:245) - Generate SQL with comments: disabled
[2017-10-14 22:36:50,532] INFO  1791[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:249) - Order SQL updates by primary key: disabled
[2017-10-14 22:36:50,532] INFO  1791[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:253) - Order SQL inserts for batching: disabled
[2017-10-14 22:36:50,533] INFO  1792[main] - org.hibernate.cfg.SettingsFactory.createQueryTranslatorFactory(SettingsFactory.java:431) - Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory
[2017-10-14 22:36:50,534] INFO  1793[main] - org.hibernate.hql.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:47) - Using ASTQueryTranslatorFactory
[2017-10-14 22:36:50,534] INFO  1793[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:261) - Query language substitutions: {}
[2017-10-14 22:36:50,535] INFO  1794[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:266) - JPA-QL strict compliance: disabled
[2017-10-14 22:36:50,535] INFO  1794[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:271) - Second-level cache: enabled
[2017-10-14 22:36:50,535] INFO  1794[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:275) - Query cache: disabled
[2017-10-14 22:36:50,535] INFO  1794[main] - org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:406) - Cache region factory : org.hibernate.cache.impl.NoCachingRegionFactory
[2017-10-14 22:36:50,536] INFO  1795[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:285) - Optimize cache for minimal puts: disabled
[2017-10-14 22:36:50,536] INFO  1795[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:294) - Structured second-level cache entries: disabled
[2017-10-14 22:36:50,540] INFO  1799[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:323) - Statistics: disabled
[2017-10-14 22:36:50,540] INFO  1799[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:327) - Deleted entity synthetic identifier rollback: disabled
[2017-10-14 22:36:50,540] INFO  1799[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:343) - Default entity-mode: pojo
[2017-10-14 22:36:50,540] INFO  1799[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:347) - Named query checking : enabled
[2017-10-14 22:36:50,541] INFO  1800[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:351) - Check Nullability in Core (should be disabled when Bean Validation is on): disabled
[2017-10-14 22:36:50,565] INFO  1824[main] - org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:202) - building session factory
[2017-10-14 22:36:50,568]DEBUG  1827[main] - org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:206) - Statistics initialized [enabled=false]}
[2017-10-14 22:36:50,569]DEBUG  1828[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration boolean -> org.hibernate.type.BooleanType@38da84cf
[2017-10-14 22:36:50,569]DEBUG  1828[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration boolean -> org.hibernate.type.BooleanType@38da84cf
[2017-10-14 22:36:50,569]DEBUG  1828[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@38da84cf
[2017-10-14 22:36:50,569]DEBUG  1828[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5c03d673
[2017-10-14 22:36:50,570]DEBUG  1829[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@1f719a8d
[2017-10-14 22:36:50,570]DEBUG  1829[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration yes_no -> org.hibernate.type.YesNoType@5fd04dbd
[2017-10-14 22:36:50,570]DEBUG  1829[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration byte -> org.hibernate.type.ByteType@252ae998
[2017-10-14 22:36:50,570]DEBUG  1829[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration byte -> org.hibernate.type.ByteType@252ae998
[2017-10-14 22:36:50,570]DEBUG  1829[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@252ae998
[2017-10-14 22:36:50,571]DEBUG  1830[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration character -> org.hibernate.type.CharacterType@21162f63
[2017-10-14 22:36:50,571]DEBUG  1830[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration char -> org.hibernate.type.CharacterType@21162f63
[2017-10-14 22:36:50,571]DEBUG  1830[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@21162f63
[2017-10-14 22:36:50,571]DEBUG  1830[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration short -> org.hibernate.type.ShortType@952942b
[2017-10-14 22:36:50,571]DEBUG  1830[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration short -> org.hibernate.type.ShortType@952942b
[2017-10-14 22:36:50,572]DEBUG  1831[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@952942b
[2017-10-14 22:36:50,572]DEBUG  1831[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration integer -> org.hibernate.type.IntegerType@67be195f
[2017-10-14 22:36:50,572]DEBUG  1831[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration int -> org.hibernate.type.IntegerType@67be195f
[2017-10-14 22:36:50,572]DEBUG  1831[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@67be195f
[2017-10-14 22:36:50,572]DEBUG  1831[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration long -> org.hibernate.type.LongType@5b51a9d4
[2017-10-14 22:36:50,572]DEBUG  1831[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration long -> org.hibernate.type.LongType@5b51a9d4
[2017-10-14 22:36:50,573]DEBUG  1832[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5b51a9d4
[2017-10-14 22:36:50,573]DEBUG  1832[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration float -> org.hibernate.type.FloatType@770253a9
[2017-10-14 22:36:50,573]DEBUG  1832[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration float -> org.hibernate.type.FloatType@770253a9
[2017-10-14 22:36:50,573]DEBUG  1832[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@770253a9
[2017-10-14 22:36:50,573]DEBUG  1832[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration double -> org.hibernate.type.DoubleType@191ff5bc
[2017-10-14 22:36:50,573]DEBUG  1832[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration double -> org.hibernate.type.DoubleType@191ff5bc
[2017-10-14 22:36:50,574]DEBUG  1833[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@191ff5bc
[2017-10-14 22:36:50,574]DEBUG  1833[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4443baa7
[2017-10-14 22:36:50,574]DEBUG  1833[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4443baa7
[2017-10-14 22:36:50,574]DEBUG  1833[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7ba4fbb4
[2017-10-14 22:36:50,574]DEBUG  1833[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7ba4fbb4
[2017-10-14 22:36:50,574]DEBUG  1833[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration string -> org.hibernate.type.StringType@36cebdbf
[2017-10-14 22:36:50,575]DEBUG  1834[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.String -> org.hibernate.type.StringType@36cebdbf
[2017-10-14 22:36:50,575]DEBUG  1834[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration url -> org.hibernate.type.UrlType@2b8d9248
[2017-10-14 22:36:50,575]DEBUG  1834[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@2b8d9248
[2017-10-14 22:36:50,575]DEBUG  1834[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration date -> org.hibernate.type.DateType@3930b5bd
[2017-10-14 22:36:50,575]DEBUG  1834[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@3930b5bd
[2017-10-14 22:36:50,575]DEBUG  1834[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration time -> org.hibernate.type.TimeType@71a3a167
[2017-10-14 22:36:50,576]DEBUG  1835[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@71a3a167
[2017-10-14 22:36:50,576]DEBUG  1835[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration timestamp -> org.hibernate.type.TimestampType@1c7883df
[2017-10-14 22:36:50,576]DEBUG  1835[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1c7883df
[2017-10-14 22:36:50,576]DEBUG  1835[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1c7883df
[2017-10-14 22:36:50,576]DEBUG  1835[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@553b7453
[2017-10-14 22:36:50,576]DEBUG  1835[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration calendar -> org.hibernate.type.CalendarType@1ae418e6
[2017-10-14 22:36:50,577]DEBUG  1836[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1ae418e6
[2017-10-14 22:36:50,577]DEBUG  1836[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1ae418e6
[2017-10-14 22:36:50,577]DEBUG  1836[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@18067226
[2017-10-14 22:36:50,577]DEBUG  1836[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration locale -> org.hibernate.type.LocaleType@6a59828c
[2017-10-14 22:36:50,577]DEBUG  1836[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6a59828c
[2017-10-14 22:36:50,577]DEBUG  1836[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration currency -> org.hibernate.type.CurrencyType@78c0d6e5
[2017-10-14 22:36:50,578]DEBUG  1837[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@78c0d6e5
[2017-10-14 22:36:50,578]DEBUG  1837[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@307de4fe
[2017-10-14 22:36:50,578]DEBUG  1837[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@307de4fe
[2017-10-14 22:36:50,578]DEBUG  1837[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration class -> org.hibernate.type.ClassType@19e8435f
[2017-10-14 22:36:50,578]DEBUG  1837[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@19e8435f
[2017-10-14 22:36:50,578]DEBUG  1837[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7b948a59
[2017-10-14 22:36:50,579]DEBUG  1838[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7b948a59
[2017-10-14 22:36:50,579]DEBUG  1838[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@29b422df
[2017-10-14 22:36:50,579]DEBUG  1838[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1e60a696
[2017-10-14 22:36:50,579]DEBUG  1838[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration binary -> org.hibernate.type.BinaryType@15acef44
[2017-10-14 22:36:50,579]DEBUG  1838[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration byte[] -> org.hibernate.type.BinaryType@15acef44
[2017-10-14 22:36:50,579]DEBUG  1838[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration [B -> org.hibernate.type.BinaryType@15acef44
[2017-10-14 22:36:50,580]DEBUG  1839[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@989f8c6
[2017-10-14 22:36:50,580]DEBUG  1839[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@989f8c6
[2017-10-14 22:36:50,580]DEBUG  1839[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@989f8c6
[2017-10-14 22:36:50,580]DEBUG  1839[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration image -> org.hibernate.type.ImageType@7f7b6d5e
[2017-10-14 22:36:50,580]DEBUG  1839[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration characters -> org.hibernate.type.CharArrayType@183000a5
[2017-10-14 22:36:50,580]DEBUG  1839[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration char[] -> org.hibernate.type.CharArrayType@183000a5
[2017-10-14 22:36:50,581]DEBUG  1840[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration [C -> org.hibernate.type.CharArrayType@183000a5
[2017-10-14 22:36:50,581]DEBUG  1840[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2ab5cc4d
[2017-10-14 22:36:50,581]DEBUG  1840[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2ab5cc4d
[2017-10-14 22:36:50,581]DEBUG  1840[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2ab5cc4d
[2017-10-14 22:36:50,581]DEBUG  1840[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration text -> org.hibernate.type.TextType@613fbf92
[2017-10-14 22:36:50,581]DEBUG  1840[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration blob -> org.hibernate.type.BlobType@72a53018
[2017-10-14 22:36:50,582]DEBUG  1841[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@72a53018
[2017-10-14 22:36:50,582]DEBUG  1841[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@72f8516e
[2017-10-14 22:36:50,582]DEBUG  1841[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@2de463d0
[2017-10-14 22:36:50,582]DEBUG  1841[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration clob -> org.hibernate.type.ClobType@d751189
[2017-10-14 22:36:50,582]DEBUG  1841[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@d751189
[2017-10-14 22:36:50,582]DEBUG  1841[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@57d47ef4
[2017-10-14 22:36:50,583]DEBUG  1842[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@3531a8ff
[2017-10-14 22:36:50,583]DEBUG  1842[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@42357933
[2017-10-14 22:36:50,583]DEBUG  1842[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration serializable -> org.hibernate.type.SerializableType@4511d0ea
[2017-10-14 22:36:50,583]DEBUG  1842[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration object -> org.hibernate.type.ObjectType@134d3a53
[2017-10-14 22:36:50,583]DEBUG  1842[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@134d3a53
[2017-10-14 22:36:50,583]DEBUG  1842[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@78e398a7
[2017-10-14 22:36:50,584]DEBUG  1843[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7a595279
[2017-10-14 22:36:50,584]DEBUG  1843[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7c03fde4
[2017-10-14 22:36:50,584]DEBUG  1843[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@342fbb28
[2017-10-14 22:36:50,584]DEBUG  1843[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6ba38fe1
[2017-10-14 22:36:50,584]DEBUG  1843[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@47d205d2
[2017-10-14 22:36:50,584]DEBUG  1843[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@390783a0
[2017-10-14 22:36:50,585]DEBUG  1844[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@73258ce6
[2017-10-14 22:36:50,585]DEBUG  1844[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@7b09148d
[2017-10-14 22:36:50,585] INFO  1844[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) - Type registration [wrapper_characters_clob] overrides previous : org.hibernate.type.CharacterArrayClobType@3531a8ff
[2017-10-14 22:36:50,585]DEBUG  1844[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration blob -> org.hibernate.type.BlobType@3b5d12e4
[2017-10-14 22:36:50,585] INFO  1844[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) - Type registration [blob] overrides previous : org.hibernate.type.BlobType@72a53018
[2017-10-14 22:36:50,586]DEBUG  1845[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3b5d12e4
[2017-10-14 22:36:50,586] INFO  1845[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) - Type registration [java.sql.Blob] overrides previous : org.hibernate.type.BlobType@72a53018
[2017-10-14 22:36:50,586]DEBUG  1845[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5b83552e
[2017-10-14 22:36:50,586] INFO  1845[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) - Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@72f8516e
[2017-10-14 22:36:50,586]DEBUG  1845[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@11247416
[2017-10-14 22:36:50,586] INFO  1845[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) - Type registration [characters_clob] overrides previous : org.hibernate.type.PrimitiveCharacterArrayClobType@42357933
[2017-10-14 22:36:50,587]DEBUG  1846[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@b4d6df2
[2017-10-14 22:36:50,587] INFO  1846[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) - Type registration [wrapper_materialized_blob] overrides previous : org.hibernate.type.WrappedMaterializedBlobType@2de463d0
[2017-10-14 22:36:50,587]DEBUG  1846[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration clob -> org.hibernate.type.ClobType@86d30aa
[2017-10-14 22:36:50,587] INFO  1846[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) - Type registration [clob] overrides previous : org.hibernate.type.ClobType@d751189
[2017-10-14 22:36:50,587]DEBUG  1846[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@86d30aa
[2017-10-14 22:36:50,587] INFO  1846[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) - Type registration [java.sql.Clob] overrides previous : org.hibernate.type.ClobType@d751189
[2017-10-14 22:36:50,588]DEBUG  1847[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3895ed38
[2017-10-14 22:36:50,588] INFO  1847[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) - Type registration [materialized_clob] overrides previous : org.hibernate.type.MaterializedClobType@57d47ef4
[2017-10-14 22:36:50,589]DEBUG  1848[main] - org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:228) - Session factory constructed with filter configurations : {}
[2017-10-14 22:36:50,589]DEBUG  1848[main] - org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:232) - instantiating session factory with properties: {java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.password=333qwerb, sun.boot.library.path=/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre/lib/amd64, java.vm.version=24.151-b00, hibernate.connection.username=maria, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=OpenJDK 64-Bit Server VM, file.encoding.pkg=sun.io, user.country=US, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=unknown, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/tomcat/Documents/backup/OMS.Release, java.runtime.version=1.7.0_151-mockbuild_2017_08_23_16_26-b00, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, basedir=/home/tomcat/Documents/backup/OMS.Release, hibernate.current_session_context_class=org.springframework.orm.hibernate3.SpringSessionContext, java.endorsed.dirs=/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre/lib/endorsed, os.arch=amd64, surefire.real.class.path=/home/tomcat/Documents/backup/OMS.Release/target/surefire/surefirebooter2135140917294523253.jar, hibernate.check_nullability=false, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, surefire.test.class.path=/home/tomcat/Documents/backup/OMS.Release/target/test-classes:/home/tomcat/Documents/backup/OMS.Release/target/classes:/home/tomcat/.m2/repository/org/springframework/spring-context/3.0.5.RELEASE/spring-context-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-aop/3.0.5.RELEASE/spring-aop-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/home/tomcat/.m2/repository/org/springframework/spring-beans/3.0.5.RELEASE/spring-beans-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-core/3.0.5.RELEASE/spring-core-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-expression/3.0.5.RELEASE/spring-expression-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-asm/3.0.5.RELEASE/spring-asm-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-webmvc/3.0.5.RELEASE/spring-webmvc-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-context-support/3.0.5.RELEASE/spring-context-support-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-web/3.0.5.RELEASE/spring-web-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/roo/org.springframework.roo.annotations/1.0.2.RELEASE/org.springframework.roo.annotations-1.0.2.RELEASE.jar:/home/tomcat/.m2/repository/org/aspectj/aspectjrt/1.6.9/aspectjrt-1.6.9.jar:/home/tomcat/.m2/repository/org/slf4j/slf4j-api/1.5.10/slf4j-api-1.5.10.jar:/home/tomcat/.m2/repository/org/slf4j/jcl-over-slf4j/1.5.10/jcl-over-slf4j-1.5.10.jar:/home/tomcat/.m2/repository/org/slf4j/slf4j-log4j12/1.5.10/slf4j-log4j12-1.5.10.jar:/home/tomcat/.m2/repository/log4j/log4j/1.2.15/log4j-1.2.15.jar:/home/tomcat/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar:/home/tomcat/.m2/repository/javax/servlet/jstl/1.2/jstl-1.2.jar:/home/tomcat/.m2/repository/junit/junit/4.7/junit-4.7.jar:/home/tomcat/.m2/repository/org/hibernate/hibernate-core/3.6.5.Final/hibernate-core-3.6.5.Final.jar:/home/tomcat/.m2/repository/antlr/antlr/2.7.6/antlr-2.7.6.jar:/home/tomcat/.m2/repository/commons-collections/commons-collections/3.1/commons-collections-3.1.jar:/home/tomcat/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/home/tomcat/.m2/repository/org/hibernate/hibernate-commons-annotations/3.2.0.Final/hibernate-commons-annotations-3.2.0.Final.jar:/home/tomcat/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.0-api/1.0.0.Final/hibernate-jpa-2.0-api-1.0.0.Final.jar:/home/tomcat/.m2/repository/javax/transaction/jta/1.1/jta-1.1.jar:/home/tomcat/.m2/repository/net/sourceforge/jtds/jtds/1.2.4/jtds-1.2.4.jar:/home/tomcat/.m2/repository/javassist/javassist/3.12.1.GA/javassist-3.12.1.GA.jar:/home/tomcat/.m2/repository/org/springframework/spring-orm/3.0.5.RELEASE/spring-orm-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-jdbc/3.0.5.RELEASE/spring-jdbc-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-tx/3.0.5.RELEASE/spring-tx-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar:/home/tomcat/.m2/repository/org/springframework/spring-test/3.0.5.RELEASE/spring-test-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/security/spring-security-core/3.0.5.RELEASE/spring-security-core-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/aspectj/aspectjweaver/1.6.8/aspectjweaver-1.6.8.jar:/home/tomcat/.m2/repository/org/springframework/security/spring-security-config/3.0.5.RELEASE/spring-security-config-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/security/spring-security-web/3.0.5.RELEASE/spring-security-web-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/cglib/cglib/2.2.2/cglib-2.2.2.jar:/home/tomcat/.m2/repository/asm/asm/3.3.1/asm-3.3.1.jar:/home/tomcat/.m2/repository/mysql/mysql-connector-java/5.1.17/mysql-connector-java-5.1.17.jar:/home/tomcat/.m2/repository/org/hibernate/hibernate-validator/4.2.0.Final/hibernate-validator-4.2.0.Final.jar:/home/tomcat/.m2/repository/javax/validation/validation-api/1.0.0.GA/validation-api-1.0.0.GA.jar:/home/tomcat/.m2/repository/org/apache/tiles/tiles-jsp/2.2.2/tiles-jsp-2.2.2.jar:/home/tomcat/.m2/repository/org/apache/tiles/tiles-servlet/2.2.2/tiles-servlet-2.2.2.jar:/home/tomcat/.m2/repository/org/apache/tiles/tiles-core/2.2.2/tiles-core-2.2.2.jar:/home/tomcat/.m2/repository/org/apache/tiles/tiles-template/2.2.2/tiles-template-2.2.2.jar:/home/tomcat/.m2/repository/org/apache/tiles/tiles-api/2.2.2/tiles-api-2.2.2.jar:/home/tomcat/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.8.3/jackson-mapper-asl-1.8.3.jar:/home/tomcat/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.8.3/jackson-core-asl-1.8.3.jar:/home/tomcat/.m2/repository/net/sf/jasperreports/jasperreports/4.0.1/jasperreports-4.0.1.jar:/home/tomcat/.m2/repository/commons-beanutils/commons-beanutils/1.8.0/commons-beanutils-1.8.0.jar:/home/tomcat/.m2/repository/commons-digester/commons-digester/1.7/commons-digester-1.7.jar:/home/tomcat/.m2/repository/commons-logging/commons-logging/1.0.2/commons-logging-1.0.2.jar:/home/tomcat/.m2/repository/com/lowagie/itext/2.1.7/itext-2.1.7.jar:/home/tomcat/.m2/repository/bouncycastle/bcmail-jdk14/138/bcmail-jdk14-138.jar:/home/tomcat/.m2/repository/bouncycastle/bcprov-jdk14/138/bcprov-jdk14-138.jar:/home/tomcat/.m2/repository/org/bouncycastle/bctsp-jdk14/1.38/bctsp-jdk14-1.38.jar:/home/tomcat/.m2/repository/org/bouncycastle/bcprov-jdk14/1.38/bcprov-jdk14-1.38.jar:/home/tomcat/.m2/repository/org/bouncycastle/bcmail-jdk14/1.38/bcmail-jdk14-1.38.jar:/home/tomcat/.m2/repository/jfree/jcommon/1.0.15/jcommon-1.0.15.jar:/home/tomcat/.m2/repository/jfree/jfreechart/1.0.12/jfreechart-1.0.12.jar:/home/tomcat/.m2/repository/xml-apis/xml-apis/1.3.02/xml-apis-1.3.02.jar:/home/tomcat/.m2/repository/eclipse/jdtcore/3.1.0/jdtcore-3.1.0.jar:/home/tomcat/.m2/repository/org/springframework/security/spring-security-taglibs/3.0.5.RELEASE/spring-security-taglibs-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/security/spring-security-acl/3.0.5.RELEASE/spring-security-acl-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/apache/maven/maven-archiver/2.4.1/maven-archiver-2.4.1.jar:/home/tomcat/.m2/repository/org/apache/maven/maven-artifact/2.0.6/maven-artifact-2.0.6.jar:/home/tomcat/.m2/repository/org/apache/maven/maven-model/2.0.6/maven-model-2.0.6.jar:/home/tomcat/.m2/repository/org/codehaus/plexus/plexus-archiver/1.2/plexus-archiver-1.2.jar:/home/tomcat/.m2/repository/org/codehaus/plexus/plexus-container-default/1.0-alpha-9-stable-1/plexus-container-default-1.0-alpha-9-stable-1.jar:/home/tomcat/.m2/repository/classworlds/classworlds/1.1-alpha-2/classworlds-1.1-alpha-2.jar:/home/tomcat/.m2/repository/org/codehaus/plexus/plexus-io/1.0.1/plexus-io-1.0.1.jar:/home/tomcat/.m2/repository/com/thoughtworks/xstream/xstream/1.3.1/xstream-1.3.1.jar:/home/tomcat/.m2/repository/xpp3/xpp3_min/1.1.4c/xpp3_min-1.1.4c.jar:/home/tomcat/.m2/repository/org/apache/maven/shared/maven-filtering/1.0-beta-2/maven-filtering-1.0-beta-2.jar:/home/tomcat/.m2/repository/org/apache/maven/maven-project/2.0.6/maven-project-2.0.6.jar:/home/tomcat/.m2/repository/org/apache/maven/maven-profile/2.0.6/maven-profile-2.0.6.jar:/home/tomcat/.m2/repository/org/apache/maven/maven-artifact-manager/2.0.6/maven-artifact-manager-2.0.6.jar:/home/tomcat/.m2/repository/org/apache/maven/maven-plugin-registry/2.0.6/maven-plugin-registry-2.0.6.jar:/home/tomcat/.m2/repository/org/apache/maven/maven-core/2.0.6/maven-core-2.0.6.jar:/home/tomcat/.m2/repository/org/apache/maven/wagon/wagon-file/1.0-beta-2/wagon-file-1.0-beta-2.jar:/home/tomcat/.m2/repository/org/apache/maven/maven-plugin-parameter-documenter/2.0.6/maven-plugin-parameter-documenter-2.0.6.jar:/home/tomcat/.m2/repository/org/apache/maven/wagon/wagon-http-lightweight/1.0-beta-2/wagon-http-lightweight-1.0-beta-2.jar:/home/tomcat/.m2/repository/org/apache/maven/wagon/wagon-http-shared/1.0-beta-2/wagon-http-shared-1.0-beta-2.jar:/home/tomcat/.m2/repository/jtidy/jtidy/4aug2000r7-dev/jtidy-4aug2000r7-dev.jar:/home/tomcat/.m2/repository/org/apache/maven/reporting/maven-reporting-api/2.0.6/maven-reporting-api-2.0.6.jar:/home/tomcat/.m2/repository/org/apache/maven/doxia/doxia-sink-api/1.0-alpha-7/doxia-sink-api-1.0-alpha-7.jar:/home/tomcat/.m2/repository/org/apache/maven/wagon/wagon-provider-api/1.0-beta-2/wagon-provider-api-1.0-beta-2.jar:/home/tomcat/.m2/repository/org/apache/maven/maven-repository-metadata/2.0.6/maven-repository-metadata-2.0.6.jar:/home/tomcat/.m2/repository/org/apache/maven/maven-error-diagnostics/2.0.6/maven-error-diagnostics-2.0.6.jar:/home/tomcat/.m2/repository/commons-cli/commons-cli/1.0/commons-cli-1.0.jar:/home/tomcat/.m2/repository/org/apache/maven/maven-plugin-api/2.0.6/maven-plugin-api-2.0.6.jar:/home/tomcat/.m2/repository/org/apache/maven/wagon/wagon-ssh-external/1.0-beta-2/wagon-ssh-external-1.0-beta-2.jar:/home/tomcat/.m2/repository/org/apache/maven/wagon/wagon-ssh-common/1.0-beta-2/wagon-ssh-common-1.0-beta-2.jar:/home/tomcat/.m2/repository/org/apache/maven/maven-plugin-descriptor/2.0.6/maven-plugin-descriptor-2.0.6.jar:/home/tomcat/.m2/repository/org/codehaus/plexus/plexus-interactivity-api/1.0-alpha-4/plexus-interactivity-api-1.0-alpha-4.jar:/home/tomcat/.m2/repository/org/apache/maven/wagon/wagon-ssh/1.0-beta-2/wagon-ssh-1.0-beta-2.jar:/home/tomcat/.m2/repository/com/jcraft/jsch/0.1.27/jsch-0.1.27.jar:/home/tomcat/.m2/repository/org/apache/maven/maven-monitor/2.0.6/maven-monitor-2.0.6.jar:/home/tomcat/.m2/repository/org/apache/maven/maven-settings/2.0.6/maven-settings-2.0.6.jar:/home/tomcat/.m2/repository/org/codehaus/plexus/plexus-component-annotations/1.5.4/plexus-component-annotations-1.5.4.jar:/home/tomcat/.m2/repository/org/codehaus/plexus/plexus-interpolation/1.22/plexus-interpolation-1.22.jar:/home/tomcat/.m2/repository/org/codehaus/plexus/plexus-utils/3.0/plexus-utils-3.0.jar:, java.specification.name=Java Platform API Specification, java.class.version=51.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.transaction.factory_class=org.springframework.orm.hibernate3.SpringTransactionFactory, os.version=3.10.0-693.el7.x86_64, user.home=/home/tomcat, user.timezone=Europe/Kiev, java.awt.printerjob=sun.print.PSPrinterJob, java.specification.version=1.7, file.encoding=UTF-8, hibernate.connection.driver_class=com.mysql.jdbc.Driver, user.name=tomcat, java.class.path=/home/tomcat/Documents/backup/OMS.Release/target/test-classes:/home/tomcat/Documents/backup/OMS.Release/target/classes:/home/tomcat/.m2/repository/org/springframework/spring-context/3.0.5.RELEASE/spring-context-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-aop/3.0.5.RELEASE/spring-aop-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/home/tomcat/.m2/repository/org/springframework/spring-beans/3.0.5.RELEASE/spring-beans-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-core/3.0.5.RELEASE/spring-core-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-expression/3.0.5.RELEASE/spring-expression-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-asm/3.0.5.RELEASE/spring-asm-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-webmvc/3.0.5.RELEASE/spring-webmvc-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-context-support/3.0.5.RELEASE/spring-context-support-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-web/3.0.5.RELEASE/spring-web-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/roo/org.springframework.roo.annotations/1.0.2.RELEASE/org.springframework.roo.annotations-1.0.2.RELEASE.jar:/home/tomcat/.m2/repository/org/aspectj/aspectjrt/1.6.9/aspectjrt-1.6.9.jar:/home/tomcat/.m2/repository/org/slf4j/slf4j-api/1.5.10/slf4j-api-1.5.10.jar:/home/tomcat/.m2/repository/org/slf4j/jcl-over-slf4j/1.5.10/jcl-over-slf4j-1.5.10.jar:/home/tomcat/.m2/repository/org/slf4j/slf4j-log4j12/1.5.10/slf4j-log4j12-1.5.10.jar:/home/tomcat/.m2/repository/log4j/log4j/1.2.15/log4j-1.2.15.jar:/home/tomcat/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar:/home/tomcat/.m2/repository/javax/servlet/jstl/1.2/jstl-1.2.jar:/home/tomcat/.m2/repository/junit/junit/4.7/junit-4.7.jar:/home/tomcat/.m2/repository/org/hibernate/hibernate-core/3.6.5.Final/hibernate-core-3.6.5.Final.jar:/home/tomcat/.m2/repository/antlr/antlr/2.7.6/antlr-2.7.6.jar:/home/tomcat/.m2/repository/commons-collections/commons-collections/3.1/commons-collections-3.1.jar:/home/tomcat/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/home/tomcat/.m2/repository/org/hibernate/hibernate-commons-annotations/3.2.0.Final/hibernate-commons-annotations-3.2.0.Final.jar:/home/tomcat/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.0-api/1.0.0.Final/hibernate-jpa-2.0-api-1.0.0.Final.jar:/home/tomcat/.m2/repository/javax/transaction/jta/1.1/jta-1.1.jar:/home/tomcat/.m2/repository/net/sourceforge/jtds/jtds/1.2.4/jtds-1.2.4.jar:/home/tomcat/.m2/repository/javassist/javassist/3.12.1.GA/javassist-3.12.1.GA.jar:/home/tomcat/.m2/repository/org/springframework/spring-orm/3.0.5.RELEASE/spring-orm-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-jdbc/3.0.5.RELEASE/spring-jdbc-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/spring-tx/3.0.5.RELEASE/spring-tx-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar:/home/tomcat/.m2/repository/org/springframework/spring-test/3.0.5.RELEASE/spring-test-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/security/spring-security-core/3.0.5.RELEASE/spring-security-core-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/aspectj/aspectjweaver/1.6.8/aspectjweaver-1.6.8.jar:/home/tomcat/.m2/repository/org/springframework/security/spring-security-config/3.0.5.RELEASE/spring-security-config-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/security/spring-security-web/3.0.5.RELEASE/spring-security-web-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/cglib/cglib/2.2.2/cglib-2.2.2.jar:/home/tomcat/.m2/repository/asm/asm/3.3.1/asm-3.3.1.jar:/home/tomcat/.m2/repository/mysql/mysql-connector-java/5.1.17/mysql-connector-java-5.1.17.jar:/home/tomcat/.m2/repository/org/hibernate/hibernate-validator/4.2.0.Final/hibernate-validator-4.2.0.Final.jar:/home/tomcat/.m2/repository/javax/validation/validation-api/1.0.0.GA/validation-api-1.0.0.GA.jar:/home/tomcat/.m2/repository/org/apache/tiles/tiles-jsp/2.2.2/tiles-jsp-2.2.2.jar:/home/tomcat/.m2/repository/org/apache/tiles/tiles-servlet/2.2.2/tiles-servlet-2.2.2.jar:/home/tomcat/.m2/repository/org/apache/tiles/tiles-core/2.2.2/tiles-core-2.2.2.jar:/home/tomcat/.m2/repository/org/apache/tiles/tiles-template/2.2.2/tiles-template-2.2.2.jar:/home/tomcat/.m2/repository/org/apache/tiles/tiles-api/2.2.2/tiles-api-2.2.2.jar:/home/tomcat/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.8.3/jackson-mapper-asl-1.8.3.jar:/home/tomcat/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.8.3/jackson-core-asl-1.8.3.jar:/home/tomcat/.m2/repository/net/sf/jasperreports/jasperreports/4.0.1/jasperreports-4.0.1.jar:/home/tomcat/.m2/repository/commons-beanutils/commons-beanutils/1.8.0/commons-beanutils-1.8.0.jar:/home/tomcat/.m2/repository/commons-digester/commons-digester/1.7/commons-digester-1.7.jar:/home/tomcat/.m2/repository/commons-logging/commons-logging/1.0.2/commons-logging-1.0.2.jar:/home/tomcat/.m2/repository/com/lowagie/itext/2.1.7/itext-2.1.7.jar:/home/tomcat/.m2/repository/bouncycastle/bcmail-jdk14/138/bcmail-jdk14-138.jar:/home/tomcat/.m2/repository/bouncycastle/bcprov-jdk14/138/bcprov-jdk14-138.jar:/home/tomcat/.m2/repository/org/bouncycastle/bctsp-jdk14/1.38/bctsp-jdk14-1.38.jar:/home/tomcat/.m2/repository/org/bouncycastle/bcprov-jdk14/1.38/bcprov-jdk14-1.38.jar:/home/tomcat/.m2/repository/org/bouncycastle/bcmail-jdk14/1.38/bcmail-jdk14-1.38.jar:/home/tomcat/.m2/repository/jfree/jcommon/1.0.15/jcommon-1.0.15.jar:/home/tomcat/.m2/repository/jfree/jfreechart/1.0.12/jfreechart-1.0.12.jar:/home/tomcat/.m2/repository/xml-apis/xml-apis/1.3.02/xml-apis-1.3.02.jar:/home/tomcat/.m2/repository/eclipse/jdtcore/3.1.0/jdtcore-3.1.0.jar:/home/tomcat/.m2/repository/org/springframework/security/spring-security-taglibs/3.0.5.RELEASE/spring-security-taglibs-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/springframework/security/spring-security-acl/3.0.5.RELEASE/spring-security-acl-3.0.5.RELEASE.jar:/home/tomcat/.m2/repository/org/apache/maven/maven-archiver/2.4.1/maven-archiver-2.4.1.jar:/home/tomcat/.m2/repository/org/apache/maven/maven-artifact/2.0.6/maven-artifact-2.0.6.jar:/home/tomcat/.m2/repository/org/apache/maven/maven-model/2.0.6/maven-model-2.0.6.jar:/home/tomcat/.m2/repository/org/codehaus/plexus/plexus-archiver/1.2/plexus-archiver-1.2.jar:/home/tomcat/.m2/repository/org/codehaus/plexus/plexus-container-default/1.0-alpha-9-stable-1/plexus-container-default-1.0-alpha-9-stable-1.jar:/home/tomcat/.m2/repository/classworlds/classworlds/1.1-alpha-2/classworlds-1.1-alpha-2.jar:/home/tomcat/.m2/repository/org/codehaus/plexus/plexus-io/1.0.1/plexus-io-1.0.1.jar:/home/tomcat/.m2/repository/com/thoughtworks/xstream/xstream/1.3.1/xstream-1.3.1.jar:/home/tomcat/.m2/repository/xpp3/xpp3_min/1.1.4c/xpp3_min-1.1.4c.jar:/home/tomcat/.m2/repository/org/apache/maven/shared/maven-filtering/1.0-beta-2/maven-filtering-1.0-beta-2.jar:/home/tomcat/.m2/repository/org/apache/maven/maven-project/2.0.6/maven-project-2.0.6.jar:/home/tomcat/.m2/repository/org/apache/maven/maven-profile/2.0.6/maven-profile-2.0.6.jar:/home/tomcat/.m2/repository/org/apache/maven/maven-artifact-manager/2.0.6/maven-artifact-manager-2.0.6.jar:/home/tomcat/.m2/repository/org/apache/maven/maven-plugin-registry/2.0.6/maven-plugin-registry-2.0.6.jar:/home/tomcat/.m2/repository/org/apache/maven/maven-core/2.0.6/maven-core-2.0.6.jar:/home/tomcat/.m2/repository/org/apache/maven/wagon/wagon-file/1.0-beta-2/wagon-file-1.0-beta-2.jar:/home/tomcat/.m2/repository/org/apache/maven/maven-plugin-parameter-documenter/2.0.6/maven-plugin-parameter-documenter-2.0.6.jar:/home/tomcat/.m2/repository/org/apache/maven/wagon/wagon-http-lightweight/1.0-beta-2/wagon-http-lightweight-1.0-beta-2.jar:/home/tomcat/.m2/repository/org/apache/maven/wagon/wagon-http-shared/1.0-beta-2/wagon-http-shared-1.0-beta-2.jar:/home/tomcat/.m2/repository/jtidy/jtidy/4aug2000r7-dev/jtidy-4aug2000r7-dev.jar:/home/tomcat/.m2/repository/org/apache/maven/reporting/maven-reporting-api/2.0.6/maven-reporting-api-2.0.6.jar:/home/tomcat/.m2/repository/org/apache/maven/doxia/doxia-sink-api/1.0-alpha-7/doxia-sink-api-1.0-alpha-7.jar:/home/tomcat/.m2/repository/org/apache/maven/wagon/wagon-provider-api/1.0-beta-2/wagon-provider-api-1.0-beta-2.jar:/home/tomcat/.m2/repository/org/apache/maven/maven-repository-metadata/2.0.6/maven-repository-metadata-2.0.6.jar:/home/tomcat/.m2/repository/org/apache/maven/maven-error-diagnostics/2.0.6/maven-error-diagnostics-2.0.6.jar:/home/tomcat/.m2/repository/commons-cli/commons-cli/1.0/commons-cli-1.0.jar:/home/tomcat/.m2/repository/org/apache/maven/maven-plugin-api/2.0.6/maven-plugin-api-2.0.6.jar:/home/tomcat/.m2/repository/org/apache/maven/wagon/wagon-ssh-external/1.0-beta-2/wagon-ssh-external-1.0-beta-2.jar:/home/tomcat/.m2/repository/org/apache/maven/wagon/wagon-ssh-common/1.0-beta-2/wagon-ssh-common-1.0-beta-2.jar:/home/tomcat/.m2/repository/org/apache/maven/maven-plugin-descriptor/2.0.6/maven-plugin-descriptor-2.0.6.jar:/home/tomcat/.m2/repository/org/codehaus/plexus/plexus-interactivity-api/1.0-alpha-4/plexus-interactivity-api-1.0-alpha-4.jar:/home/tomcat/.m2/repository/org/apache/maven/wagon/wagon-ssh/1.0-beta-2/wagon-ssh-1.0-beta-2.jar:/home/tomcat/.m2/repository/com/jcraft/jsch/0.1.27/jsch-0.1.27.jar:/home/tomcat/.m2/repository/org/apache/maven/maven-monitor/2.0.6/maven-monitor-2.0.6.jar:/home/tomcat/.m2/repository/org/apache/maven/maven-settings/2.0.6/maven-settings-2.0.6.jar:/home/tomcat/.m2/repository/org/codehaus/plexus/plexus-component-annotations/1.5.4/plexus-component-annotations-1.5.4.jar:/home/tomcat/.m2/repository/org/codehaus/plexus/plexus-interpolation/1.22/plexus-interpolation-1.22.jar:/home/tomcat/.m2/repository/org/codehaus/plexus/plexus-utils/3.0/plexus-utils-3.0.jar:, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.version=1.7, sun.arch.data.model=64, java.home=/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre, sun.java.command=/home/tomcat/Documents/backup/OMS.Release/target/surefire/surefirebooter2135140917294523253.jar /home/tomcat/Documents/backup/OMS.Release/target/surefire 2017-10-14T22-36-47_989-jvmRun1 surefire3133751513248136846tmp surefire_01873887164768424162tmp, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, hibernate.connection.url=jdbc:mysql://localhost:3306/test1, java.specification.vendor=Oracle Corporation, user.language=en, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.7.0_151, java.ext.dirs=/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre/lib/resources.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre/lib/rt.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre/lib/jsse.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre/lib/jce.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre/lib/charsets.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre/lib/rhino.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre/lib/jfr.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.151-2.6.11.1.el7_4.x86_64/jre/classes, java.vendor=Oracle Corporation, localRepository=/home/tomcat/.m2/repository, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=create-drop, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=gnome, sun.cpu.isalist=, dialect=org.hibernate.dialect.MySQL5Dialect}
[2017-10-14 22:36:50,597]DEBUG  1856[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 22:36:50,597]DEBUG  1856[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 22:36:50,598]DEBUG  1857[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 22:36:50,598]DEBUG  1857[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 22:36:50,598]DEBUG  1857[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 22:36:50,599]DEBUG  1858[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 22:36:50,599]DEBUG  1858[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 22:36:50,599]DEBUG  1858[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 22:36:50,599]DEBUG  1858[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 22:36:50,599]DEBUG  1858[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 22:36:50,678]DEBUG  1937[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) - Static SQL for entity: com.softserveinc.edu.oms.domain.entities.Role
[2017-10-14 22:36:50,678]DEBUG  1937[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) -  Version select: select ID from Roles where ID =?
[2017-10-14 22:36:50,678]DEBUG  1937[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) -  Snapshot select: select role_.ID, role_.RoleName as RoleName0_ from Roles role_ where role_.ID=?
[2017-10-14 22:36:50,679]DEBUG  1938[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) -  Insert 0: insert into Roles (RoleName, ID) values (?, ?)
[2017-10-14 22:36:50,679]DEBUG  1938[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) -  Update 0: update Roles set RoleName=? where ID=?
[2017-10-14 22:36:50,679]DEBUG  1938[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) -  Delete 0: delete from Roles where ID=?
[2017-10-14 22:36:50,679]DEBUG  1938[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2969) -  Identity insert: insert into Roles (RoleName) values (?)
[2017-10-14 22:36:50,693]DEBUG  1952[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) - Static SQL for entity: com.softserveinc.edu.oms.domain.entities.CreditCardType
[2017-10-14 22:36:50,694]DEBUG  1953[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) -  Version select: select ID from CardType where ID =?
[2017-10-14 22:36:50,694]DEBUG  1953[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) -  Snapshot select: select creditcard_.ID, creditcard_.CardType as CardType9_, creditcard_.CardNumber as CardNumber9_, creditcard_.CardCvv2 as CardCvv4_9_, creditcard_.Expiration_Date as Expiration5_9_, creditcard_.IssueDate as IssueDate9_, creditcard_.IssueNumber as IssueNum7_9_ from CardType creditcard_ where creditcard_.ID=?
[2017-10-14 22:36:50,695]DEBUG  1954[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) -  Insert 0: insert into CardType (CardType, CardNumber, CardCvv2, Expiration_Date, IssueDate, IssueNumber, ID) values (?, ?, ?, ?, ?, ?, ?)
[2017-10-14 22:36:50,695]DEBUG  1954[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) -  Update 0: update CardType set CardType=?, CardNumber=?, CardCvv2=?, Expiration_Date=?, IssueDate=?, IssueNumber=? where ID=?
[2017-10-14 22:36:50,695]DEBUG  1954[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) -  Delete 0: delete from CardType where ID=?
[2017-10-14 22:36:50,696]DEBUG  1955[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2969) -  Identity insert: insert into CardType (CardType, CardNumber, CardCvv2, Expiration_Date, IssueDate, IssueNumber) values (?, ?, ?, ?, ?, ?)
[2017-10-14 22:36:50,709]DEBUG  1968[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) - Static SQL for entity: com.softserveinc.edu.oms.domain.entities.OrderItem
[2017-10-14 22:36:50,709]DEBUG  1968[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) -  Version select: select ID from OrderItems where ID =?
[2017-10-14 22:36:50,709]DEBUG  1968[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) -  Snapshot select: select orderitem_.ID, orderitem_.Cost as Cost8_, orderitem_.DimensionRef as Dimensio5_8_, orderitem_.ItemPrice as ItemPrice8_, orderitem_.OrderRef as OrderRef8_, orderitem_.ProductRef as ProductRef8_, orderitem_.Quantity as Quantity8_ from OrderItems orderitem_ where orderitem_.ID=?
[2017-10-14 22:36:50,709]DEBUG  1968[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) -  Insert 0: insert into OrderItems (Cost, DimensionRef, ItemPrice, OrderRef, ProductRef, Quantity, ID) values (?, ?, ?, ?, ?, ?, ?)
[2017-10-14 22:36:50,710]DEBUG  1969[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) -  Update 0: update OrderItems set Cost=?, DimensionRef=?, ItemPrice=?, OrderRef=?, ProductRef=?, Quantity=? where ID=?
[2017-10-14 22:36:50,710]DEBUG  1969[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) -  Delete 0: delete from OrderItems where ID=?
[2017-10-14 22:36:50,710]DEBUG  1969[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2969) -  Identity insert: insert into OrderItems (Cost, DimensionRef, ItemPrice, OrderRef, ProductRef, Quantity) values (?, ?, ?, ?, ?, ?)
[2017-10-14 22:36:50,718]DEBUG  1977[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) - Static SQL for entity: com.softserveinc.edu.oms.domain.entities.Dimension
[2017-10-14 22:36:50,719]DEBUG  1978[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) -  Version select: select ID from Dimensions where ID =?
[2017-10-14 22:36:50,719]DEBUG  1978[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) -  Snapshot select: select dimension_.ID, dimension_.DimensionName as Dimensio2_7_, dimension_.NumberOfProducts as NumberOf3_7_ from Dimensions dimension_ where dimension_.ID=?
[2017-10-14 22:36:50,719]DEBUG  1978[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) -  Insert 0: insert into Dimensions (DimensionName, NumberOfProducts, ID) values (?, ?, ?)
[2017-10-14 22:36:50,719]DEBUG  1978[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) -  Update 0: update Dimensions set DimensionName=?, NumberOfProducts=? where ID=?
[2017-10-14 22:36:50,720]DEBUG  1979[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) -  Delete 0: delete from Dimensions where ID=?
[2017-10-14 22:36:50,720]DEBUG  1979[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2969) -  Identity insert: insert into Dimensions (DimensionName, NumberOfProducts) values (?, ?)
[2017-10-14 22:36:50,735]DEBUG  1994[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) - Static SQL for entity: com.softserveinc.edu.oms.domain.entities.Order
[2017-10-14 22:36:50,735]DEBUG  1994[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) -  Version select: select ID from Orders where ID =?
[2017-10-14 22:36:50,735]DEBUG  1994[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) -  Snapshot select: select order_.ID, order_.Assigne as Assigne5_, order_.Customer as Customer5_, order_.DeliveryDate as Delivery2_5_, order_.IsGift as IsGift5_, order_.MaxDiscount as MaxDisco4_5_, order_.OrderDate as OrderDate5_, order_.OrderName as OrderName5_, order_.OrderNumber as OrderNum7_5_, order_.OrderStatusRef as OrderSt12_5_, order_.PreferableDeliveryDate as Preferab8_5_, order_.TotalPrice as TotalPrice5_ from Orders order_ where order_.ID=?
[2017-10-14 22:36:50,735]DEBUG  1994[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) -  Insert 0: insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice, ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 22:36:50,735]DEBUG  1994[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) -  Update 0: update Orders set Assigne=?, Customer=?, DeliveryDate=?, IsGift=?, MaxDiscount=?, OrderDate=?, OrderName=?, OrderNumber=?, OrderStatusRef=?, PreferableDeliveryDate=?, TotalPrice=? where ID=?
[2017-10-14 22:36:50,736]DEBUG  1995[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) -  Delete 0: delete from Orders where ID=?
[2017-10-14 22:36:50,736]DEBUG  1995[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2969) -  Identity insert: insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 22:36:50,739]DEBUG  1998[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) - Static SQL for entity: com.softserveinc.edu.oms.domain.entities.OrderStatus
[2017-10-14 22:36:50,739]DEBUG  1998[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) -  Version select: select ID from OrderStatuses where ID =?
[2017-10-14 22:36:50,739]DEBUG  1998[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) -  Snapshot select: select orderstatu_.ID, orderstatu_.OrederStatusName as OrederSt2_4_ from OrderStatuses orderstatu_ where orderstatu_.ID=?
[2017-10-14 22:36:50,739]DEBUG  1998[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) -  Insert 0: insert into OrderStatuses (OrederStatusName, ID) values (?, ?)
[2017-10-14 22:36:50,739]DEBUG  1998[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) -  Update 0: update OrderStatuses set OrederStatusName=? where ID=?
[2017-10-14 22:36:50,739]DEBUG  1998[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) -  Delete 0: delete from OrderStatuses where ID=?
[2017-10-14 22:36:50,740]DEBUG  1999[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2969) -  Identity insert: insert into OrderStatuses (OrederStatusName) values (?)
[2017-10-14 22:36:50,742]DEBUG  2001[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) - Static SQL for entity: com.softserveinc.edu.oms.domain.entities.Region
[2017-10-14 22:36:50,742]DEBUG  2001[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) -  Version select: select ID from Regions where ID =?
[2017-10-14 22:36:50,743]DEBUG  2002[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) -  Snapshot select: select region_.ID, region_.RegionName as RegionName1_ from Regions region_ where region_.ID=?
[2017-10-14 22:36:50,743]DEBUG  2002[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) -  Insert 0: insert into Regions (RegionName, ID) values (?, ?)
[2017-10-14 22:36:50,743]DEBUG  2002[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) -  Update 0: update Regions set RegionName=? where ID=?
[2017-10-14 22:36:50,743]DEBUG  2002[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) -  Delete 0: delete from Regions where ID=?
[2017-10-14 22:36:50,743]DEBUG  2002[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2969) -  Identity insert: insert into Regions (RegionName) values (?)
[2017-10-14 22:36:50,749]DEBUG  2008[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) - Static SQL for entity: com.softserveinc.edu.oms.domain.entities.User
[2017-10-14 22:36:50,750]DEBUG  2009[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) -  Version select: select ID from Users where ID =?
[2017-10-14 22:36:50,750]DEBUG  2009[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) -  Snapshot select: select user_.ID, user_.IsUserActive as IsUserAc2_3_, user_.Balance as Balance3_, user_.CustomerTypeRef as Customer9_3_, user_.Email as Email3_, user_.FirstName as FirstName3_, user_.LastName as LastName3_, user_.Login as Login3_, user_.Password as Password3_, user_.RegionRef as RegionRef3_, user_.RoleRef as RoleRef3_ from Users user_ where user_.ID=?
[2017-10-14 22:36:50,750]DEBUG  2009[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) -  Insert 0: insert into Users (IsUserActive, Balance, CustomerTypeRef, Email, FirstName, LastName, Login, Password, RegionRef, RoleRef, ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 22:36:50,750]DEBUG  2009[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) -  Update 0: update Users set IsUserActive=?, Balance=?, CustomerTypeRef=?, Email=?, FirstName=?, LastName=?, Login=?, Password=?, RegionRef=?, RoleRef=? where ID=?
[2017-10-14 22:36:50,750]DEBUG  2009[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) -  Delete 0: delete from Users where ID=?
[2017-10-14 22:36:50,750]DEBUG  2009[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2969) -  Identity insert: insert into Users (IsUserActive, Balance, CustomerTypeRef, Email, FirstName, LastName, Login, Password, RegionRef, RoleRef) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 22:36:50,755]DEBUG  2014[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) - Static SQL for entity: com.softserveinc.edu.oms.domain.entities.Product
[2017-10-14 22:36:50,755]DEBUG  2014[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) -  Version select: select ID from Products where ID =?
[2017-10-14 22:36:50,755]DEBUG  2014[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) -  Snapshot select: select product_.ID, product_.IsProductActive as IsProduc2_6_, product_.ProductDescription as ProductD3_6_, product_.ProductName as ProductN4_6_, product_.ProductPrice as ProductP5_6_ from Products product_ where product_.ID=?
[2017-10-14 22:36:50,755]DEBUG  2014[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) -  Insert 0: insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2017-10-14 22:36:50,755]DEBUG  2014[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) -  Update 0: update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 22:36:50,756]DEBUG  2015[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) -  Delete 0: delete from Products where ID=?
[2017-10-14 22:36:50,756]DEBUG  2015[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2969) -  Identity insert: insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 22:36:50,759]DEBUG  2018[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) - Static SQL for entity: com.softserveinc.edu.oms.domain.entities.CustomerType
[2017-10-14 22:36:50,760]DEBUG  2019[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) -  Version select: select ID from CustomerTypes where ID =?
[2017-10-14 22:36:50,760]DEBUG  2019[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) -  Snapshot select: select customerty_.ID, customerty_.Discount as Discount2_, customerty_.MaxRange as MaxRange2_, customerty_.MinRange as MinRange2_, customerty_.TypeName as TypeName2_ from CustomerTypes customerty_ where customerty_.ID=?
[2017-10-14 22:36:50,760]DEBUG  2019[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) -  Insert 0: insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2017-10-14 22:36:50,760]DEBUG  2019[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) -  Update 0: update CustomerTypes set Discount=?, MaxRange=?, MinRange=?, TypeName=? where ID=?
[2017-10-14 22:36:50,760]DEBUG  2019[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) -  Delete 0: delete from CustomerTypes where ID=?
[2017-10-14 22:36:50,761]DEBUG  2020[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2969) -  Identity insert: insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-14 22:36:50,773]DEBUG  2032[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Role [NONE]: select role0_.ID as ID0_0_, role0_.RoleName as RoleName0_0_ from Roles role0_ where role0_.ID=?
[2017-10-14 22:36:50,774]DEBUG  2033[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Role [READ]: select role0_.ID as ID0_0_, role0_.RoleName as RoleName0_0_ from Roles role0_ where role0_.ID=?
[2017-10-14 22:36:50,774]DEBUG  2033[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Role [UPGRADE]: select role0_.ID as ID0_0_, role0_.RoleName as RoleName0_0_ from Roles role0_ where role0_.ID=? for update
[2017-10-14 22:36:50,774]DEBUG  2033[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Role [UPGRADE_NOWAIT]: select role0_.ID as ID0_0_, role0_.RoleName as RoleName0_0_ from Roles role0_ where role0_.ID=? for update
[2017-10-14 22:36:50,774]DEBUG  2033[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Role [FORCE]: select role0_.ID as ID0_0_, role0_.RoleName as RoleName0_0_ from Roles role0_ where role0_.ID=? for update
[2017-10-14 22:36:50,775]DEBUG  2034[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Role [PESSIMISTIC_READ]: select role0_.ID as ID0_0_, role0_.RoleName as RoleName0_0_ from Roles role0_ where role0_.ID=? lock in share mode
[2017-10-14 22:36:50,775]DEBUG  2034[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Role [PESSIMISTIC_WRITE]: select role0_.ID as ID0_0_, role0_.RoleName as RoleName0_0_ from Roles role0_ where role0_.ID=? for update
[2017-10-14 22:36:50,775]DEBUG  2034[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Role [PESSIMISTIC_FORCE_INCREMENT]: select role0_.ID as ID0_0_, role0_.RoleName as RoleName0_0_ from Roles role0_ where role0_.ID=? for update
[2017-10-14 22:36:50,775]DEBUG  2034[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Role [OPTIMISTIC]: select role0_.ID as ID0_0_, role0_.RoleName as RoleName0_0_ from Roles role0_ where role0_.ID=?
[2017-10-14 22:36:50,776]DEBUG  2035[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Role [OPTIMISTIC_FORCE_INCREMENT]: select role0_.ID as ID0_0_, role0_.RoleName as RoleName0_0_ from Roles role0_ where role0_.ID=?
[2017-10-14 22:36:50,780]DEBUG  2039[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.softserveinc.edu.oms.domain.entities.Role: select role0_.ID as ID0_0_, role0_.RoleName as RoleName0_0_ from Roles role0_ where role0_.ID=?
[2017-10-14 22:36:50,780]DEBUG  2039[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.softserveinc.edu.oms.domain.entities.Role: select role0_.ID as ID0_0_, role0_.RoleName as RoleName0_0_ from Roles role0_ where role0_.ID=?
[2017-10-14 22:36:50,783]DEBUG  2042[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderItem [NONE]: select orderitem0_.ID as ID8_6_, orderitem0_.Cost as Cost8_6_, orderitem0_.DimensionRef as Dimensio5_8_6_, orderitem0_.ItemPrice as ItemPrice8_6_, orderitem0_.OrderRef as OrderRef8_6_, orderitem0_.ProductRef as ProductRef8_6_, orderitem0_.Quantity as Quantity8_6_, dimension1_.ID as ID7_0_, dimension1_.DimensionName as Dimensio2_7_0_, dimension1_.NumberOfProducts as NumberOf3_7_0_, order2_.ID as ID5_1_, order2_.Assigne as Assigne5_1_, order2_.Customer as Customer5_1_, order2_.DeliveryDate as Delivery2_5_1_, order2_.IsGift as IsGift5_1_, order2_.MaxDiscount as MaxDisco4_5_1_, order2_.OrderDate as OrderDate5_1_, order2_.OrderName as OrderName5_1_, order2_.OrderNumber as OrderNum7_5_1_, order2_.OrderStatusRef as OrderSt12_5_1_, order2_.PreferableDeliveryDate as Preferab8_5_1_, order2_.TotalPrice as TotalPrice5_1_, user3_.ID as ID3_2_, user3_.IsUserActive as IsUserAc2_3_2_, user3_.Balance as Balance3_2_, user3_.CustomerTypeRef as Customer9_3_2_, user3_.Email as Email3_2_, user3_.FirstName as FirstName3_2_, user3_.LastName as LastName3_2_, user3_.Login as Login3_2_, user3_.Password as Password3_2_, user3_.RegionRef as RegionRef3_2_, user3_.RoleRef as RoleRef3_2_, user4_.ID as ID3_3_, user4_.IsUserActive as IsUserAc2_3_3_, user4_.Balance as Balance3_3_, user4_.CustomerTypeRef as Customer9_3_3_, user4_.Email as Email3_3_, user4_.FirstName as FirstName3_3_, user4_.LastName as LastName3_3_, user4_.Login as Login3_3_, user4_.Password as Password3_3_, user4_.RegionRef as RegionRef3_3_, user4_.RoleRef as RoleRef3_3_, orderstatu5_.ID as ID4_4_, orderstatu5_.OrederStatusName as OrederSt2_4_4_, product6_.ID as ID6_5_, product6_.IsProductActive as IsProduc2_6_5_, product6_.ProductDescription as ProductD3_6_5_, product6_.ProductName as ProductN4_6_5_, product6_.ProductPrice as ProductP5_6_5_ from OrderItems orderitem0_ left outer join Dimensions dimension1_ on orderitem0_.DimensionRef=dimension1_.ID left outer join Orders order2_ on orderitem0_.OrderRef=order2_.ID left outer join Users user3_ on order2_.Assigne=user3_.ID left outer join Users user4_ on order2_.Customer=user4_.ID left outer join OrderStatuses orderstatu5_ on order2_.OrderStatusRef=orderstatu5_.ID left outer join Products product6_ on orderitem0_.ProductRef=product6_.ID where orderitem0_.ID=?
[2017-10-14 22:36:50,784]DEBUG  2043[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderItem [READ]: select orderitem0_.ID as ID8_6_, orderitem0_.Cost as Cost8_6_, orderitem0_.DimensionRef as Dimensio5_8_6_, orderitem0_.ItemPrice as ItemPrice8_6_, orderitem0_.OrderRef as OrderRef8_6_, orderitem0_.ProductRef as ProductRef8_6_, orderitem0_.Quantity as Quantity8_6_, dimension1_.ID as ID7_0_, dimension1_.DimensionName as Dimensio2_7_0_, dimension1_.NumberOfProducts as NumberOf3_7_0_, order2_.ID as ID5_1_, order2_.Assigne as Assigne5_1_, order2_.Customer as Customer5_1_, order2_.DeliveryDate as Delivery2_5_1_, order2_.IsGift as IsGift5_1_, order2_.MaxDiscount as MaxDisco4_5_1_, order2_.OrderDate as OrderDate5_1_, order2_.OrderName as OrderName5_1_, order2_.OrderNumber as OrderNum7_5_1_, order2_.OrderStatusRef as OrderSt12_5_1_, order2_.PreferableDeliveryDate as Preferab8_5_1_, order2_.TotalPrice as TotalPrice5_1_, user3_.ID as ID3_2_, user3_.IsUserActive as IsUserAc2_3_2_, user3_.Balance as Balance3_2_, user3_.CustomerTypeRef as Customer9_3_2_, user3_.Email as Email3_2_, user3_.FirstName as FirstName3_2_, user3_.LastName as LastName3_2_, user3_.Login as Login3_2_, user3_.Password as Password3_2_, user3_.RegionRef as RegionRef3_2_, user3_.RoleRef as RoleRef3_2_, user4_.ID as ID3_3_, user4_.IsUserActive as IsUserAc2_3_3_, user4_.Balance as Balance3_3_, user4_.CustomerTypeRef as Customer9_3_3_, user4_.Email as Email3_3_, user4_.FirstName as FirstName3_3_, user4_.LastName as LastName3_3_, user4_.Login as Login3_3_, user4_.Password as Password3_3_, user4_.RegionRef as RegionRef3_3_, user4_.RoleRef as RoleRef3_3_, orderstatu5_.ID as ID4_4_, orderstatu5_.OrederStatusName as OrederSt2_4_4_, product6_.ID as ID6_5_, product6_.IsProductActive as IsProduc2_6_5_, product6_.ProductDescription as ProductD3_6_5_, product6_.ProductName as ProductN4_6_5_, product6_.ProductPrice as ProductP5_6_5_ from OrderItems orderitem0_ left outer join Dimensions dimension1_ on orderitem0_.DimensionRef=dimension1_.ID left outer join Orders order2_ on orderitem0_.OrderRef=order2_.ID left outer join Users user3_ on order2_.Assigne=user3_.ID left outer join Users user4_ on order2_.Customer=user4_.ID left outer join OrderStatuses orderstatu5_ on order2_.OrderStatusRef=orderstatu5_.ID left outer join Products product6_ on orderitem0_.ProductRef=product6_.ID where orderitem0_.ID=?
[2017-10-14 22:36:50,784]DEBUG  2043[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderItem [UPGRADE]: select orderitem0_.ID as ID8_0_, orderitem0_.Cost as Cost8_0_, orderitem0_.DimensionRef as Dimensio5_8_0_, orderitem0_.ItemPrice as ItemPrice8_0_, orderitem0_.OrderRef as OrderRef8_0_, orderitem0_.ProductRef as ProductRef8_0_, orderitem0_.Quantity as Quantity8_0_ from OrderItems orderitem0_ where orderitem0_.ID=? for update
[2017-10-14 22:36:50,784]DEBUG  2043[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderItem [UPGRADE_NOWAIT]: select orderitem0_.ID as ID8_0_, orderitem0_.Cost as Cost8_0_, orderitem0_.DimensionRef as Dimensio5_8_0_, orderitem0_.ItemPrice as ItemPrice8_0_, orderitem0_.OrderRef as OrderRef8_0_, orderitem0_.ProductRef as ProductRef8_0_, orderitem0_.Quantity as Quantity8_0_ from OrderItems orderitem0_ where orderitem0_.ID=? for update
[2017-10-14 22:36:50,785]DEBUG  2044[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderItem [FORCE]: select orderitem0_.ID as ID8_0_, orderitem0_.Cost as Cost8_0_, orderitem0_.DimensionRef as Dimensio5_8_0_, orderitem0_.ItemPrice as ItemPrice8_0_, orderitem0_.OrderRef as OrderRef8_0_, orderitem0_.ProductRef as ProductRef8_0_, orderitem0_.Quantity as Quantity8_0_ from OrderItems orderitem0_ where orderitem0_.ID=? for update
[2017-10-14 22:36:50,785]DEBUG  2044[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderItem [PESSIMISTIC_READ]: select orderitem0_.ID as ID8_0_, orderitem0_.Cost as Cost8_0_, orderitem0_.DimensionRef as Dimensio5_8_0_, orderitem0_.ItemPrice as ItemPrice8_0_, orderitem0_.OrderRef as OrderRef8_0_, orderitem0_.ProductRef as ProductRef8_0_, orderitem0_.Quantity as Quantity8_0_ from OrderItems orderitem0_ where orderitem0_.ID=? lock in share mode
[2017-10-14 22:36:50,786]DEBUG  2045[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderItem [PESSIMISTIC_WRITE]: select orderitem0_.ID as ID8_0_, orderitem0_.Cost as Cost8_0_, orderitem0_.DimensionRef as Dimensio5_8_0_, orderitem0_.ItemPrice as ItemPrice8_0_, orderitem0_.OrderRef as OrderRef8_0_, orderitem0_.ProductRef as ProductRef8_0_, orderitem0_.Quantity as Quantity8_0_ from OrderItems orderitem0_ where orderitem0_.ID=? for update
[2017-10-14 22:36:50,786]DEBUG  2045[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderItem [PESSIMISTIC_FORCE_INCREMENT]: select orderitem0_.ID as ID8_0_, orderitem0_.Cost as Cost8_0_, orderitem0_.DimensionRef as Dimensio5_8_0_, orderitem0_.ItemPrice as ItemPrice8_0_, orderitem0_.OrderRef as OrderRef8_0_, orderitem0_.ProductRef as ProductRef8_0_, orderitem0_.Quantity as Quantity8_0_ from OrderItems orderitem0_ where orderitem0_.ID=? for update
[2017-10-14 22:36:50,787]DEBUG  2046[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderItem [OPTIMISTIC]: select orderitem0_.ID as ID8_6_, orderitem0_.Cost as Cost8_6_, orderitem0_.DimensionRef as Dimensio5_8_6_, orderitem0_.ItemPrice as ItemPrice8_6_, orderitem0_.OrderRef as OrderRef8_6_, orderitem0_.ProductRef as ProductRef8_6_, orderitem0_.Quantity as Quantity8_6_, dimension1_.ID as ID7_0_, dimension1_.DimensionName as Dimensio2_7_0_, dimension1_.NumberOfProducts as NumberOf3_7_0_, order2_.ID as ID5_1_, order2_.Assigne as Assigne5_1_, order2_.Customer as Customer5_1_, order2_.DeliveryDate as Delivery2_5_1_, order2_.IsGift as IsGift5_1_, order2_.MaxDiscount as MaxDisco4_5_1_, order2_.OrderDate as OrderDate5_1_, order2_.OrderName as OrderName5_1_, order2_.OrderNumber as OrderNum7_5_1_, order2_.OrderStatusRef as OrderSt12_5_1_, order2_.PreferableDeliveryDate as Preferab8_5_1_, order2_.TotalPrice as TotalPrice5_1_, user3_.ID as ID3_2_, user3_.IsUserActive as IsUserAc2_3_2_, user3_.Balance as Balance3_2_, user3_.CustomerTypeRef as Customer9_3_2_, user3_.Email as Email3_2_, user3_.FirstName as FirstName3_2_, user3_.LastName as LastName3_2_, user3_.Login as Login3_2_, user3_.Password as Password3_2_, user3_.RegionRef as RegionRef3_2_, user3_.RoleRef as RoleRef3_2_, user4_.ID as ID3_3_, user4_.IsUserActive as IsUserAc2_3_3_, user4_.Balance as Balance3_3_, user4_.CustomerTypeRef as Customer9_3_3_, user4_.Email as Email3_3_, user4_.FirstName as FirstName3_3_, user4_.LastName as LastName3_3_, user4_.Login as Login3_3_, user4_.Password as Password3_3_, user4_.RegionRef as RegionRef3_3_, user4_.RoleRef as RoleRef3_3_, orderstatu5_.ID as ID4_4_, orderstatu5_.OrederStatusName as OrederSt2_4_4_, product6_.ID as ID6_5_, product6_.IsProductActive as IsProduc2_6_5_, product6_.ProductDescription as ProductD3_6_5_, product6_.ProductName as ProductN4_6_5_, product6_.ProductPrice as ProductP5_6_5_ from OrderItems orderitem0_ left outer join Dimensions dimension1_ on orderitem0_.DimensionRef=dimension1_.ID left outer join Orders order2_ on orderitem0_.OrderRef=order2_.ID left outer join Users user3_ on order2_.Assigne=user3_.ID left outer join Users user4_ on order2_.Customer=user4_.ID left outer join OrderStatuses orderstatu5_ on order2_.OrderStatusRef=orderstatu5_.ID left outer join Products product6_ on orderitem0_.ProductRef=product6_.ID where orderitem0_.ID=?
[2017-10-14 22:36:50,788]DEBUG  2047[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderItem [OPTIMISTIC_FORCE_INCREMENT]: select orderitem0_.ID as ID8_6_, orderitem0_.Cost as Cost8_6_, orderitem0_.DimensionRef as Dimensio5_8_6_, orderitem0_.ItemPrice as ItemPrice8_6_, orderitem0_.OrderRef as OrderRef8_6_, orderitem0_.ProductRef as ProductRef8_6_, orderitem0_.Quantity as Quantity8_6_, dimension1_.ID as ID7_0_, dimension1_.DimensionName as Dimensio2_7_0_, dimension1_.NumberOfProducts as NumberOf3_7_0_, order2_.ID as ID5_1_, order2_.Assigne as Assigne5_1_, order2_.Customer as Customer5_1_, order2_.DeliveryDate as Delivery2_5_1_, order2_.IsGift as IsGift5_1_, order2_.MaxDiscount as MaxDisco4_5_1_, order2_.OrderDate as OrderDate5_1_, order2_.OrderName as OrderName5_1_, order2_.OrderNumber as OrderNum7_5_1_, order2_.OrderStatusRef as OrderSt12_5_1_, order2_.PreferableDeliveryDate as Preferab8_5_1_, order2_.TotalPrice as TotalPrice5_1_, user3_.ID as ID3_2_, user3_.IsUserActive as IsUserAc2_3_2_, user3_.Balance as Balance3_2_, user3_.CustomerTypeRef as Customer9_3_2_, user3_.Email as Email3_2_, user3_.FirstName as FirstName3_2_, user3_.LastName as LastName3_2_, user3_.Login as Login3_2_, user3_.Password as Password3_2_, user3_.RegionRef as RegionRef3_2_, user3_.RoleRef as RoleRef3_2_, user4_.ID as ID3_3_, user4_.IsUserActive as IsUserAc2_3_3_, user4_.Balance as Balance3_3_, user4_.CustomerTypeRef as Customer9_3_3_, user4_.Email as Email3_3_, user4_.FirstName as FirstName3_3_, user4_.LastName as LastName3_3_, user4_.Login as Login3_3_, user4_.Password as Password3_3_, user4_.RegionRef as RegionRef3_3_, user4_.RoleRef as RoleRef3_3_, orderstatu5_.ID as ID4_4_, orderstatu5_.OrederStatusName as OrederSt2_4_4_, product6_.ID as ID6_5_, product6_.IsProductActive as IsProduc2_6_5_, product6_.ProductDescription as ProductD3_6_5_, product6_.ProductName as ProductN4_6_5_, product6_.ProductPrice as ProductP5_6_5_ from OrderItems orderitem0_ left outer join Dimensions dimension1_ on orderitem0_.DimensionRef=dimension1_.ID left outer join Orders order2_ on orderitem0_.OrderRef=order2_.ID left outer join Users user3_ on order2_.Assigne=user3_.ID left outer join Users user4_ on order2_.Customer=user4_.ID left outer join OrderStatuses orderstatu5_ on order2_.OrderStatusRef=orderstatu5_.ID left outer join Products product6_ on orderitem0_.ProductRef=product6_.ID where orderitem0_.ID=?
[2017-10-14 22:36:50,788]DEBUG  2047[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.softserveinc.edu.oms.domain.entities.OrderItem: select orderitem0_.ID as ID8_6_, orderitem0_.Cost as Cost8_6_, orderitem0_.DimensionRef as Dimensio5_8_6_, orderitem0_.ItemPrice as ItemPrice8_6_, orderitem0_.OrderRef as OrderRef8_6_, orderitem0_.ProductRef as ProductRef8_6_, orderitem0_.Quantity as Quantity8_6_, dimension1_.ID as ID7_0_, dimension1_.DimensionName as Dimensio2_7_0_, dimension1_.NumberOfProducts as NumberOf3_7_0_, order2_.ID as ID5_1_, order2_.Assigne as Assigne5_1_, order2_.Customer as Customer5_1_, order2_.DeliveryDate as Delivery2_5_1_, order2_.IsGift as IsGift5_1_, order2_.MaxDiscount as MaxDisco4_5_1_, order2_.OrderDate as OrderDate5_1_, order2_.OrderName as OrderName5_1_, order2_.OrderNumber as OrderNum7_5_1_, order2_.OrderStatusRef as OrderSt12_5_1_, order2_.PreferableDeliveryDate as Preferab8_5_1_, order2_.TotalPrice as TotalPrice5_1_, user3_.ID as ID3_2_, user3_.IsUserActive as IsUserAc2_3_2_, user3_.Balance as Balance3_2_, user3_.CustomerTypeRef as Customer9_3_2_, user3_.Email as Email3_2_, user3_.FirstName as FirstName3_2_, user3_.LastName as LastName3_2_, user3_.Login as Login3_2_, user3_.Password as Password3_2_, user3_.RegionRef as RegionRef3_2_, user3_.RoleRef as RoleRef3_2_, user4_.ID as ID3_3_, user4_.IsUserActive as IsUserAc2_3_3_, user4_.Balance as Balance3_3_, user4_.CustomerTypeRef as Customer9_3_3_, user4_.Email as Email3_3_, user4_.FirstName as FirstName3_3_, user4_.LastName as LastName3_3_, user4_.Login as Login3_3_, user4_.Password as Password3_3_, user4_.RegionRef as RegionRef3_3_, user4_.RoleRef as RoleRef3_3_, orderstatu5_.ID as ID4_4_, orderstatu5_.OrederStatusName as OrederSt2_4_4_, product6_.ID as ID6_5_, product6_.IsProductActive as IsProduc2_6_5_, product6_.ProductDescription as ProductD3_6_5_, product6_.ProductName as ProductN4_6_5_, product6_.ProductPrice as ProductP5_6_5_ from OrderItems orderitem0_ left outer join Dimensions dimension1_ on orderitem0_.DimensionRef=dimension1_.ID left outer join Orders order2_ on orderitem0_.OrderRef=order2_.ID left outer join Users user3_ on order2_.Assigne=user3_.ID left outer join Users user4_ on order2_.Customer=user4_.ID left outer join OrderStatuses orderstatu5_ on order2_.OrderStatusRef=orderstatu5_.ID left outer join Products product6_ on orderitem0_.ProductRef=product6_.ID where orderitem0_.ID=?
[2017-10-14 22:36:50,789]DEBUG  2048[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.softserveinc.edu.oms.domain.entities.OrderItem: select orderitem0_.ID as ID8_0_, orderitem0_.Cost as Cost8_0_, orderitem0_.DimensionRef as Dimensio5_8_0_, orderitem0_.ItemPrice as ItemPrice8_0_, orderitem0_.OrderRef as OrderRef8_0_, orderitem0_.ProductRef as ProductRef8_0_, orderitem0_.Quantity as Quantity8_0_ from OrderItems orderitem0_ where orderitem0_.ID=?
[2017-10-14 22:36:50,789]DEBUG  2048[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CreditCardType [NONE]: select creditcard0_.ID as ID9_0_, creditcard0_.CardType as CardType9_0_, creditcard0_.CardNumber as CardNumber9_0_, creditcard0_.CardCvv2 as CardCvv4_9_0_, creditcard0_.Expiration_Date as Expiration5_9_0_, creditcard0_.IssueDate as IssueDate9_0_, creditcard0_.IssueNumber as IssueNum7_9_0_ from CardType creditcard0_ where creditcard0_.ID=?
[2017-10-14 22:36:50,789]DEBUG  2048[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CreditCardType [READ]: select creditcard0_.ID as ID9_0_, creditcard0_.CardType as CardType9_0_, creditcard0_.CardNumber as CardNumber9_0_, creditcard0_.CardCvv2 as CardCvv4_9_0_, creditcard0_.Expiration_Date as Expiration5_9_0_, creditcard0_.IssueDate as IssueDate9_0_, creditcard0_.IssueNumber as IssueNum7_9_0_ from CardType creditcard0_ where creditcard0_.ID=?
[2017-10-14 22:36:50,790]DEBUG  2049[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CreditCardType [UPGRADE]: select creditcard0_.ID as ID9_0_, creditcard0_.CardType as CardType9_0_, creditcard0_.CardNumber as CardNumber9_0_, creditcard0_.CardCvv2 as CardCvv4_9_0_, creditcard0_.Expiration_Date as Expiration5_9_0_, creditcard0_.IssueDate as IssueDate9_0_, creditcard0_.IssueNumber as IssueNum7_9_0_ from CardType creditcard0_ where creditcard0_.ID=? for update
[2017-10-14 22:36:50,790]DEBUG  2049[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CreditCardType [UPGRADE_NOWAIT]: select creditcard0_.ID as ID9_0_, creditcard0_.CardType as CardType9_0_, creditcard0_.CardNumber as CardNumber9_0_, creditcard0_.CardCvv2 as CardCvv4_9_0_, creditcard0_.Expiration_Date as Expiration5_9_0_, creditcard0_.IssueDate as IssueDate9_0_, creditcard0_.IssueNumber as IssueNum7_9_0_ from CardType creditcard0_ where creditcard0_.ID=? for update
[2017-10-14 22:36:50,790]DEBUG  2049[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CreditCardType [FORCE]: select creditcard0_.ID as ID9_0_, creditcard0_.CardType as CardType9_0_, creditcard0_.CardNumber as CardNumber9_0_, creditcard0_.CardCvv2 as CardCvv4_9_0_, creditcard0_.Expiration_Date as Expiration5_9_0_, creditcard0_.IssueDate as IssueDate9_0_, creditcard0_.IssueNumber as IssueNum7_9_0_ from CardType creditcard0_ where creditcard0_.ID=? for update
[2017-10-14 22:36:50,790]DEBUG  2049[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CreditCardType [PESSIMISTIC_READ]: select creditcard0_.ID as ID9_0_, creditcard0_.CardType as CardType9_0_, creditcard0_.CardNumber as CardNumber9_0_, creditcard0_.CardCvv2 as CardCvv4_9_0_, creditcard0_.Expiration_Date as Expiration5_9_0_, creditcard0_.IssueDate as IssueDate9_0_, creditcard0_.IssueNumber as IssueNum7_9_0_ from CardType creditcard0_ where creditcard0_.ID=? lock in share mode
[2017-10-14 22:36:50,791]DEBUG  2050[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CreditCardType [PESSIMISTIC_WRITE]: select creditcard0_.ID as ID9_0_, creditcard0_.CardType as CardType9_0_, creditcard0_.CardNumber as CardNumber9_0_, creditcard0_.CardCvv2 as CardCvv4_9_0_, creditcard0_.Expiration_Date as Expiration5_9_0_, creditcard0_.IssueDate as IssueDate9_0_, creditcard0_.IssueNumber as IssueNum7_9_0_ from CardType creditcard0_ where creditcard0_.ID=? for update
[2017-10-14 22:36:50,791]DEBUG  2050[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CreditCardType [PESSIMISTIC_FORCE_INCREMENT]: select creditcard0_.ID as ID9_0_, creditcard0_.CardType as CardType9_0_, creditcard0_.CardNumber as CardNumber9_0_, creditcard0_.CardCvv2 as CardCvv4_9_0_, creditcard0_.Expiration_Date as Expiration5_9_0_, creditcard0_.IssueDate as IssueDate9_0_, creditcard0_.IssueNumber as IssueNum7_9_0_ from CardType creditcard0_ where creditcard0_.ID=? for update
[2017-10-14 22:36:50,791]DEBUG  2050[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CreditCardType [OPTIMISTIC]: select creditcard0_.ID as ID9_0_, creditcard0_.CardType as CardType9_0_, creditcard0_.CardNumber as CardNumber9_0_, creditcard0_.CardCvv2 as CardCvv4_9_0_, creditcard0_.Expiration_Date as Expiration5_9_0_, creditcard0_.IssueDate as IssueDate9_0_, creditcard0_.IssueNumber as IssueNum7_9_0_ from CardType creditcard0_ where creditcard0_.ID=?
[2017-10-14 22:36:50,792]DEBUG  2051[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CreditCardType [OPTIMISTIC_FORCE_INCREMENT]: select creditcard0_.ID as ID9_0_, creditcard0_.CardType as CardType9_0_, creditcard0_.CardNumber as CardNumber9_0_, creditcard0_.CardCvv2 as CardCvv4_9_0_, creditcard0_.Expiration_Date as Expiration5_9_0_, creditcard0_.IssueDate as IssueDate9_0_, creditcard0_.IssueNumber as IssueNum7_9_0_ from CardType creditcard0_ where creditcard0_.ID=?
[2017-10-14 22:36:50,792]DEBUG  2051[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.softserveinc.edu.oms.domain.entities.CreditCardType: select creditcard0_.ID as ID9_0_, creditcard0_.CardType as CardType9_0_, creditcard0_.CardNumber as CardNumber9_0_, creditcard0_.CardCvv2 as CardCvv4_9_0_, creditcard0_.Expiration_Date as Expiration5_9_0_, creditcard0_.IssueDate as IssueDate9_0_, creditcard0_.IssueNumber as IssueNum7_9_0_ from CardType creditcard0_ where creditcard0_.ID=?
[2017-10-14 22:36:50,792]DEBUG  2051[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.softserveinc.edu.oms.domain.entities.CreditCardType: select creditcard0_.ID as ID9_0_, creditcard0_.CardType as CardType9_0_, creditcard0_.CardNumber as CardNumber9_0_, creditcard0_.CardCvv2 as CardCvv4_9_0_, creditcard0_.Expiration_Date as Expiration5_9_0_, creditcard0_.IssueDate as IssueDate9_0_, creditcard0_.IssueNumber as IssueNum7_9_0_ from CardType creditcard0_ where creditcard0_.ID=?
[2017-10-14 22:36:50,793]DEBUG  2052[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Order [NONE]: select order0_.ID as ID5_6_, order0_.Assigne as Assigne5_6_, order0_.Customer as Customer5_6_, order0_.DeliveryDate as Delivery2_5_6_, order0_.IsGift as IsGift5_6_, order0_.MaxDiscount as MaxDisco4_5_6_, order0_.OrderDate as OrderDate5_6_, order0_.OrderName as OrderName5_6_, order0_.OrderNumber as OrderNum7_5_6_, order0_.OrderStatusRef as OrderSt12_5_6_, order0_.PreferableDeliveryDate as Preferab8_5_6_, order0_.TotalPrice as TotalPrice5_6_, user1_.ID as ID3_0_, user1_.IsUserActive as IsUserAc2_3_0_, user1_.Balance as Balance3_0_, user1_.CustomerTypeRef as Customer9_3_0_, user1_.Email as Email3_0_, user1_.FirstName as FirstName3_0_, user1_.LastName as LastName3_0_, user1_.Login as Login3_0_, user1_.Password as Password3_0_, user1_.RegionRef as RegionRef3_0_, user1_.RoleRef as RoleRef3_0_, customerty2_.ID as ID2_1_, customerty2_.Discount as Discount2_1_, customerty2_.MaxRange as MaxRange2_1_, customerty2_.MinRange as MinRange2_1_, customerty2_.TypeName as TypeName2_1_, region3_.ID as ID1_2_, region3_.RegionName as RegionName1_2_, role4_.ID as ID0_3_, role4_.RoleName as RoleName0_3_, user5_.ID as ID3_4_, user5_.IsUserActive as IsUserAc2_3_4_, user5_.Balance as Balance3_4_, user5_.CustomerTypeRef as Customer9_3_4_, user5_.Email as Email3_4_, user5_.FirstName as FirstName3_4_, user5_.LastName as LastName3_4_, user5_.Login as Login3_4_, user5_.Password as Password3_4_, user5_.RegionRef as RegionRef3_4_, user5_.RoleRef as RoleRef3_4_, orderstatu6_.ID as ID4_5_, orderstatu6_.OrederStatusName as OrederSt2_4_5_ from Orders order0_ left outer join Users user1_ on order0_.Assigne=user1_.ID left outer join CustomerTypes customerty2_ on user1_.CustomerTypeRef=customerty2_.ID left outer join Regions region3_ on user1_.RegionRef=region3_.ID left outer join Roles role4_ on user1_.RoleRef=role4_.ID left outer join Users user5_ on order0_.Customer=user5_.ID left outer join OrderStatuses orderstatu6_ on order0_.OrderStatusRef=orderstatu6_.ID where order0_.ID=?
[2017-10-14 22:36:50,794]DEBUG  2053[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Order [READ]: select order0_.ID as ID5_6_, order0_.Assigne as Assigne5_6_, order0_.Customer as Customer5_6_, order0_.DeliveryDate as Delivery2_5_6_, order0_.IsGift as IsGift5_6_, order0_.MaxDiscount as MaxDisco4_5_6_, order0_.OrderDate as OrderDate5_6_, order0_.OrderName as OrderName5_6_, order0_.OrderNumber as OrderNum7_5_6_, order0_.OrderStatusRef as OrderSt12_5_6_, order0_.PreferableDeliveryDate as Preferab8_5_6_, order0_.TotalPrice as TotalPrice5_6_, user1_.ID as ID3_0_, user1_.IsUserActive as IsUserAc2_3_0_, user1_.Balance as Balance3_0_, user1_.CustomerTypeRef as Customer9_3_0_, user1_.Email as Email3_0_, user1_.FirstName as FirstName3_0_, user1_.LastName as LastName3_0_, user1_.Login as Login3_0_, user1_.Password as Password3_0_, user1_.RegionRef as RegionRef3_0_, user1_.RoleRef as RoleRef3_0_, customerty2_.ID as ID2_1_, customerty2_.Discount as Discount2_1_, customerty2_.MaxRange as MaxRange2_1_, customerty2_.MinRange as MinRange2_1_, customerty2_.TypeName as TypeName2_1_, region3_.ID as ID1_2_, region3_.RegionName as RegionName1_2_, role4_.ID as ID0_3_, role4_.RoleName as RoleName0_3_, user5_.ID as ID3_4_, user5_.IsUserActive as IsUserAc2_3_4_, user5_.Balance as Balance3_4_, user5_.CustomerTypeRef as Customer9_3_4_, user5_.Email as Email3_4_, user5_.FirstName as FirstName3_4_, user5_.LastName as LastName3_4_, user5_.Login as Login3_4_, user5_.Password as Password3_4_, user5_.RegionRef as RegionRef3_4_, user5_.RoleRef as RoleRef3_4_, orderstatu6_.ID as ID4_5_, orderstatu6_.OrederStatusName as OrederSt2_4_5_ from Orders order0_ left outer join Users user1_ on order0_.Assigne=user1_.ID left outer join CustomerTypes customerty2_ on user1_.CustomerTypeRef=customerty2_.ID left outer join Regions region3_ on user1_.RegionRef=region3_.ID left outer join Roles role4_ on user1_.RoleRef=role4_.ID left outer join Users user5_ on order0_.Customer=user5_.ID left outer join OrderStatuses orderstatu6_ on order0_.OrderStatusRef=orderstatu6_.ID where order0_.ID=?
[2017-10-14 22:36:50,794]DEBUG  2053[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Order [UPGRADE]: select order0_.ID as ID5_0_, order0_.Assigne as Assigne5_0_, order0_.Customer as Customer5_0_, order0_.DeliveryDate as Delivery2_5_0_, order0_.IsGift as IsGift5_0_, order0_.MaxDiscount as MaxDisco4_5_0_, order0_.OrderDate as OrderDate5_0_, order0_.OrderName as OrderName5_0_, order0_.OrderNumber as OrderNum7_5_0_, order0_.OrderStatusRef as OrderSt12_5_0_, order0_.PreferableDeliveryDate as Preferab8_5_0_, order0_.TotalPrice as TotalPrice5_0_ from Orders order0_ where order0_.ID=? for update
[2017-10-14 22:36:50,794]DEBUG  2053[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Order [UPGRADE_NOWAIT]: select order0_.ID as ID5_0_, order0_.Assigne as Assigne5_0_, order0_.Customer as Customer5_0_, order0_.DeliveryDate as Delivery2_5_0_, order0_.IsGift as IsGift5_0_, order0_.MaxDiscount as MaxDisco4_5_0_, order0_.OrderDate as OrderDate5_0_, order0_.OrderName as OrderName5_0_, order0_.OrderNumber as OrderNum7_5_0_, order0_.OrderStatusRef as OrderSt12_5_0_, order0_.PreferableDeliveryDate as Preferab8_5_0_, order0_.TotalPrice as TotalPrice5_0_ from Orders order0_ where order0_.ID=? for update
[2017-10-14 22:36:50,795]DEBUG  2054[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Order [FORCE]: select order0_.ID as ID5_0_, order0_.Assigne as Assigne5_0_, order0_.Customer as Customer5_0_, order0_.DeliveryDate as Delivery2_5_0_, order0_.IsGift as IsGift5_0_, order0_.MaxDiscount as MaxDisco4_5_0_, order0_.OrderDate as OrderDate5_0_, order0_.OrderName as OrderName5_0_, order0_.OrderNumber as OrderNum7_5_0_, order0_.OrderStatusRef as OrderSt12_5_0_, order0_.PreferableDeliveryDate as Preferab8_5_0_, order0_.TotalPrice as TotalPrice5_0_ from Orders order0_ where order0_.ID=? for update
[2017-10-14 22:36:50,795]DEBUG  2054[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Order [PESSIMISTIC_READ]: select order0_.ID as ID5_0_, order0_.Assigne as Assigne5_0_, order0_.Customer as Customer5_0_, order0_.DeliveryDate as Delivery2_5_0_, order0_.IsGift as IsGift5_0_, order0_.MaxDiscount as MaxDisco4_5_0_, order0_.OrderDate as OrderDate5_0_, order0_.OrderName as OrderName5_0_, order0_.OrderNumber as OrderNum7_5_0_, order0_.OrderStatusRef as OrderSt12_5_0_, order0_.PreferableDeliveryDate as Preferab8_5_0_, order0_.TotalPrice as TotalPrice5_0_ from Orders order0_ where order0_.ID=? lock in share mode
[2017-10-14 22:36:50,795]DEBUG  2054[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Order [PESSIMISTIC_WRITE]: select order0_.ID as ID5_0_, order0_.Assigne as Assigne5_0_, order0_.Customer as Customer5_0_, order0_.DeliveryDate as Delivery2_5_0_, order0_.IsGift as IsGift5_0_, order0_.MaxDiscount as MaxDisco4_5_0_, order0_.OrderDate as OrderDate5_0_, order0_.OrderName as OrderName5_0_, order0_.OrderNumber as OrderNum7_5_0_, order0_.OrderStatusRef as OrderSt12_5_0_, order0_.PreferableDeliveryDate as Preferab8_5_0_, order0_.TotalPrice as TotalPrice5_0_ from Orders order0_ where order0_.ID=? for update
[2017-10-14 22:36:50,796]DEBUG  2055[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Order [PESSIMISTIC_FORCE_INCREMENT]: select order0_.ID as ID5_0_, order0_.Assigne as Assigne5_0_, order0_.Customer as Customer5_0_, order0_.DeliveryDate as Delivery2_5_0_, order0_.IsGift as IsGift5_0_, order0_.MaxDiscount as MaxDisco4_5_0_, order0_.OrderDate as OrderDate5_0_, order0_.OrderName as OrderName5_0_, order0_.OrderNumber as OrderNum7_5_0_, order0_.OrderStatusRef as OrderSt12_5_0_, order0_.PreferableDeliveryDate as Preferab8_5_0_, order0_.TotalPrice as TotalPrice5_0_ from Orders order0_ where order0_.ID=? for update
[2017-10-14 22:36:50,797]DEBUG  2056[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Order [OPTIMISTIC]: select order0_.ID as ID5_6_, order0_.Assigne as Assigne5_6_, order0_.Customer as Customer5_6_, order0_.DeliveryDate as Delivery2_5_6_, order0_.IsGift as IsGift5_6_, order0_.MaxDiscount as MaxDisco4_5_6_, order0_.OrderDate as OrderDate5_6_, order0_.OrderName as OrderName5_6_, order0_.OrderNumber as OrderNum7_5_6_, order0_.OrderStatusRef as OrderSt12_5_6_, order0_.PreferableDeliveryDate as Preferab8_5_6_, order0_.TotalPrice as TotalPrice5_6_, user1_.ID as ID3_0_, user1_.IsUserActive as IsUserAc2_3_0_, user1_.Balance as Balance3_0_, user1_.CustomerTypeRef as Customer9_3_0_, user1_.Email as Email3_0_, user1_.FirstName as FirstName3_0_, user1_.LastName as LastName3_0_, user1_.Login as Login3_0_, user1_.Password as Password3_0_, user1_.RegionRef as RegionRef3_0_, user1_.RoleRef as RoleRef3_0_, customerty2_.ID as ID2_1_, customerty2_.Discount as Discount2_1_, customerty2_.MaxRange as MaxRange2_1_, customerty2_.MinRange as MinRange2_1_, customerty2_.TypeName as TypeName2_1_, region3_.ID as ID1_2_, region3_.RegionName as RegionName1_2_, role4_.ID as ID0_3_, role4_.RoleName as RoleName0_3_, user5_.ID as ID3_4_, user5_.IsUserActive as IsUserAc2_3_4_, user5_.Balance as Balance3_4_, user5_.CustomerTypeRef as Customer9_3_4_, user5_.Email as Email3_4_, user5_.FirstName as FirstName3_4_, user5_.LastName as LastName3_4_, user5_.Login as Login3_4_, user5_.Password as Password3_4_, user5_.RegionRef as RegionRef3_4_, user5_.RoleRef as RoleRef3_4_, orderstatu6_.ID as ID4_5_, orderstatu6_.OrederStatusName as OrederSt2_4_5_ from Orders order0_ left outer join Users user1_ on order0_.Assigne=user1_.ID left outer join CustomerTypes customerty2_ on user1_.CustomerTypeRef=customerty2_.ID left outer join Regions region3_ on user1_.RegionRef=region3_.ID left outer join Roles role4_ on user1_.RoleRef=role4_.ID left outer join Users user5_ on order0_.Customer=user5_.ID left outer join OrderStatuses orderstatu6_ on order0_.OrderStatusRef=orderstatu6_.ID where order0_.ID=?
[2017-10-14 22:36:50,797]DEBUG  2056[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Order [OPTIMISTIC_FORCE_INCREMENT]: select order0_.ID as ID5_6_, order0_.Assigne as Assigne5_6_, order0_.Customer as Customer5_6_, order0_.DeliveryDate as Delivery2_5_6_, order0_.IsGift as IsGift5_6_, order0_.MaxDiscount as MaxDisco4_5_6_, order0_.OrderDate as OrderDate5_6_, order0_.OrderName as OrderName5_6_, order0_.OrderNumber as OrderNum7_5_6_, order0_.OrderStatusRef as OrderSt12_5_6_, order0_.PreferableDeliveryDate as Preferab8_5_6_, order0_.TotalPrice as TotalPrice5_6_, user1_.ID as ID3_0_, user1_.IsUserActive as IsUserAc2_3_0_, user1_.Balance as Balance3_0_, user1_.CustomerTypeRef as Customer9_3_0_, user1_.Email as Email3_0_, user1_.FirstName as FirstName3_0_, user1_.LastName as LastName3_0_, user1_.Login as Login3_0_, user1_.Password as Password3_0_, user1_.RegionRef as RegionRef3_0_, user1_.RoleRef as RoleRef3_0_, customerty2_.ID as ID2_1_, customerty2_.Discount as Discount2_1_, customerty2_.MaxRange as MaxRange2_1_, customerty2_.MinRange as MinRange2_1_, customerty2_.TypeName as TypeName2_1_, region3_.ID as ID1_2_, region3_.RegionName as RegionName1_2_, role4_.ID as ID0_3_, role4_.RoleName as RoleName0_3_, user5_.ID as ID3_4_, user5_.IsUserActive as IsUserAc2_3_4_, user5_.Balance as Balance3_4_, user5_.CustomerTypeRef as Customer9_3_4_, user5_.Email as Email3_4_, user5_.FirstName as FirstName3_4_, user5_.LastName as LastName3_4_, user5_.Login as Login3_4_, user5_.Password as Password3_4_, user5_.RegionRef as RegionRef3_4_, user5_.RoleRef as RoleRef3_4_, orderstatu6_.ID as ID4_5_, orderstatu6_.OrederStatusName as OrederSt2_4_5_ from Orders order0_ left outer join Users user1_ on order0_.Assigne=user1_.ID left outer join CustomerTypes customerty2_ on user1_.CustomerTypeRef=customerty2_.ID left outer join Regions region3_ on user1_.RegionRef=region3_.ID left outer join Roles role4_ on user1_.RoleRef=role4_.ID left outer join Users user5_ on order0_.Customer=user5_.ID left outer join OrderStatuses orderstatu6_ on order0_.OrderStatusRef=orderstatu6_.ID where order0_.ID=?
[2017-10-14 22:36:50,798]DEBUG  2057[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.softserveinc.edu.oms.domain.entities.Order: select order0_.ID as ID5_6_, order0_.Assigne as Assigne5_6_, order0_.Customer as Customer5_6_, order0_.DeliveryDate as Delivery2_5_6_, order0_.IsGift as IsGift5_6_, order0_.MaxDiscount as MaxDisco4_5_6_, order0_.OrderDate as OrderDate5_6_, order0_.OrderName as OrderName5_6_, order0_.OrderNumber as OrderNum7_5_6_, order0_.OrderStatusRef as OrderSt12_5_6_, order0_.PreferableDeliveryDate as Preferab8_5_6_, order0_.TotalPrice as TotalPrice5_6_, user1_.ID as ID3_0_, user1_.IsUserActive as IsUserAc2_3_0_, user1_.Balance as Balance3_0_, user1_.CustomerTypeRef as Customer9_3_0_, user1_.Email as Email3_0_, user1_.FirstName as FirstName3_0_, user1_.LastName as LastName3_0_, user1_.Login as Login3_0_, user1_.Password as Password3_0_, user1_.RegionRef as RegionRef3_0_, user1_.RoleRef as RoleRef3_0_, customerty2_.ID as ID2_1_, customerty2_.Discount as Discount2_1_, customerty2_.MaxRange as MaxRange2_1_, customerty2_.MinRange as MinRange2_1_, customerty2_.TypeName as TypeName2_1_, region3_.ID as ID1_2_, region3_.RegionName as RegionName1_2_, role4_.ID as ID0_3_, role4_.RoleName as RoleName0_3_, user5_.ID as ID3_4_, user5_.IsUserActive as IsUserAc2_3_4_, user5_.Balance as Balance3_4_, user5_.CustomerTypeRef as Customer9_3_4_, user5_.Email as Email3_4_, user5_.FirstName as FirstName3_4_, user5_.LastName as LastName3_4_, user5_.Login as Login3_4_, user5_.Password as Password3_4_, user5_.RegionRef as RegionRef3_4_, user5_.RoleRef as RoleRef3_4_, orderstatu6_.ID as ID4_5_, orderstatu6_.OrederStatusName as OrederSt2_4_5_ from Orders order0_ left outer join Users user1_ on order0_.Assigne=user1_.ID left outer join CustomerTypes customerty2_ on user1_.CustomerTypeRef=customerty2_.ID left outer join Regions region3_ on user1_.RegionRef=region3_.ID left outer join Roles role4_ on user1_.RoleRef=role4_.ID left outer join Users user5_ on order0_.Customer=user5_.ID left outer join OrderStatuses orderstatu6_ on order0_.OrderStatusRef=orderstatu6_.ID where order0_.ID=?
[2017-10-14 22:36:50,799]DEBUG  2058[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.softserveinc.edu.oms.domain.entities.Order: select order0_.ID as ID5_0_, order0_.Assigne as Assigne5_0_, order0_.Customer as Customer5_0_, order0_.DeliveryDate as Delivery2_5_0_, order0_.IsGift as IsGift5_0_, order0_.MaxDiscount as MaxDisco4_5_0_, order0_.OrderDate as OrderDate5_0_, order0_.OrderName as OrderName5_0_, order0_.OrderNumber as OrderNum7_5_0_, order0_.OrderStatusRef as OrderSt12_5_0_, order0_.PreferableDeliveryDate as Preferab8_5_0_, order0_.TotalPrice as TotalPrice5_0_ from Orders order0_ where order0_.ID=?
[2017-10-14 22:36:50,799]DEBUG  2058[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Dimension [NONE]: select dimension0_.ID as ID7_0_, dimension0_.DimensionName as Dimensio2_7_0_, dimension0_.NumberOfProducts as NumberOf3_7_0_ from Dimensions dimension0_ where dimension0_.ID=?
[2017-10-14 22:36:50,799]DEBUG  2058[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Dimension [READ]: select dimension0_.ID as ID7_0_, dimension0_.DimensionName as Dimensio2_7_0_, dimension0_.NumberOfProducts as NumberOf3_7_0_ from Dimensions dimension0_ where dimension0_.ID=?
[2017-10-14 22:36:50,799]DEBUG  2058[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Dimension [UPGRADE]: select dimension0_.ID as ID7_0_, dimension0_.DimensionName as Dimensio2_7_0_, dimension0_.NumberOfProducts as NumberOf3_7_0_ from Dimensions dimension0_ where dimension0_.ID=? for update
[2017-10-14 22:36:50,800]DEBUG  2059[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Dimension [UPGRADE_NOWAIT]: select dimension0_.ID as ID7_0_, dimension0_.DimensionName as Dimensio2_7_0_, dimension0_.NumberOfProducts as NumberOf3_7_0_ from Dimensions dimension0_ where dimension0_.ID=? for update
[2017-10-14 22:36:50,800]DEBUG  2059[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Dimension [FORCE]: select dimension0_.ID as ID7_0_, dimension0_.DimensionName as Dimensio2_7_0_, dimension0_.NumberOfProducts as NumberOf3_7_0_ from Dimensions dimension0_ where dimension0_.ID=? for update
[2017-10-14 22:36:50,800]DEBUG  2059[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Dimension [PESSIMISTIC_READ]: select dimension0_.ID as ID7_0_, dimension0_.DimensionName as Dimensio2_7_0_, dimension0_.NumberOfProducts as NumberOf3_7_0_ from Dimensions dimension0_ where dimension0_.ID=? lock in share mode
[2017-10-14 22:36:50,800]DEBUG  2059[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Dimension [PESSIMISTIC_WRITE]: select dimension0_.ID as ID7_0_, dimension0_.DimensionName as Dimensio2_7_0_, dimension0_.NumberOfProducts as NumberOf3_7_0_ from Dimensions dimension0_ where dimension0_.ID=? for update
[2017-10-14 22:36:50,801]DEBUG  2060[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Dimension [PESSIMISTIC_FORCE_INCREMENT]: select dimension0_.ID as ID7_0_, dimension0_.DimensionName as Dimensio2_7_0_, dimension0_.NumberOfProducts as NumberOf3_7_0_ from Dimensions dimension0_ where dimension0_.ID=? for update
[2017-10-14 22:36:50,801]DEBUG  2060[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Dimension [OPTIMISTIC]: select dimension0_.ID as ID7_0_, dimension0_.DimensionName as Dimensio2_7_0_, dimension0_.NumberOfProducts as NumberOf3_7_0_ from Dimensions dimension0_ where dimension0_.ID=?
[2017-10-14 22:36:50,801]DEBUG  2060[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Dimension [OPTIMISTIC_FORCE_INCREMENT]: select dimension0_.ID as ID7_0_, dimension0_.DimensionName as Dimensio2_7_0_, dimension0_.NumberOfProducts as NumberOf3_7_0_ from Dimensions dimension0_ where dimension0_.ID=?
[2017-10-14 22:36:50,802]DEBUG  2061[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.softserveinc.edu.oms.domain.entities.Dimension: select dimension0_.ID as ID7_0_, dimension0_.DimensionName as Dimensio2_7_0_, dimension0_.NumberOfProducts as NumberOf3_7_0_ from Dimensions dimension0_ where dimension0_.ID=?
[2017-10-14 22:36:50,802]DEBUG  2061[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.softserveinc.edu.oms.domain.entities.Dimension: select dimension0_.ID as ID7_0_, dimension0_.DimensionName as Dimensio2_7_0_, dimension0_.NumberOfProducts as NumberOf3_7_0_ from Dimensions dimension0_ where dimension0_.ID=?
[2017-10-14 22:36:50,802]DEBUG  2061[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderStatus [NONE]: select orderstatu0_.ID as ID4_0_, orderstatu0_.OrederStatusName as OrederSt2_4_0_ from OrderStatuses orderstatu0_ where orderstatu0_.ID=?
[2017-10-14 22:36:50,802]DEBUG  2061[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderStatus [READ]: select orderstatu0_.ID as ID4_0_, orderstatu0_.OrederStatusName as OrederSt2_4_0_ from OrderStatuses orderstatu0_ where orderstatu0_.ID=?
[2017-10-14 22:36:50,803]DEBUG  2062[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderStatus [UPGRADE]: select orderstatu0_.ID as ID4_0_, orderstatu0_.OrederStatusName as OrederSt2_4_0_ from OrderStatuses orderstatu0_ where orderstatu0_.ID=? for update
[2017-10-14 22:36:50,803]DEBUG  2062[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderStatus [UPGRADE_NOWAIT]: select orderstatu0_.ID as ID4_0_, orderstatu0_.OrederStatusName as OrederSt2_4_0_ from OrderStatuses orderstatu0_ where orderstatu0_.ID=? for update
[2017-10-14 22:36:50,803]DEBUG  2062[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderStatus [FORCE]: select orderstatu0_.ID as ID4_0_, orderstatu0_.OrederStatusName as OrederSt2_4_0_ from OrderStatuses orderstatu0_ where orderstatu0_.ID=? for update
[2017-10-14 22:36:50,803]DEBUG  2062[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderStatus [PESSIMISTIC_READ]: select orderstatu0_.ID as ID4_0_, orderstatu0_.OrederStatusName as OrederSt2_4_0_ from OrderStatuses orderstatu0_ where orderstatu0_.ID=? lock in share mode
[2017-10-14 22:36:50,804]DEBUG  2063[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderStatus [PESSIMISTIC_WRITE]: select orderstatu0_.ID as ID4_0_, orderstatu0_.OrederStatusName as OrederSt2_4_0_ from OrderStatuses orderstatu0_ where orderstatu0_.ID=? for update
[2017-10-14 22:36:50,804]DEBUG  2063[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderStatus [PESSIMISTIC_FORCE_INCREMENT]: select orderstatu0_.ID as ID4_0_, orderstatu0_.OrederStatusName as OrederSt2_4_0_ from OrderStatuses orderstatu0_ where orderstatu0_.ID=? for update
[2017-10-14 22:36:50,804]DEBUG  2063[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderStatus [OPTIMISTIC]: select orderstatu0_.ID as ID4_0_, orderstatu0_.OrederStatusName as OrederSt2_4_0_ from OrderStatuses orderstatu0_ where orderstatu0_.ID=?
[2017-10-14 22:36:50,804]DEBUG  2063[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderStatus [OPTIMISTIC_FORCE_INCREMENT]: select orderstatu0_.ID as ID4_0_, orderstatu0_.OrederStatusName as OrederSt2_4_0_ from OrderStatuses orderstatu0_ where orderstatu0_.ID=?
[2017-10-14 22:36:50,805]DEBUG  2064[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.softserveinc.edu.oms.domain.entities.OrderStatus: select orderstatu0_.ID as ID4_0_, orderstatu0_.OrederStatusName as OrederSt2_4_0_ from OrderStatuses orderstatu0_ where orderstatu0_.ID=?
[2017-10-14 22:36:50,805]DEBUG  2064[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.softserveinc.edu.oms.domain.entities.OrderStatus: select orderstatu0_.ID as ID4_0_, orderstatu0_.OrederStatusName as OrederSt2_4_0_ from OrderStatuses orderstatu0_ where orderstatu0_.ID=?
[2017-10-14 22:36:50,805]DEBUG  2064[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Region [NONE]: select region0_.ID as ID1_0_, region0_.RegionName as RegionName1_0_ from Regions region0_ where region0_.ID=?
[2017-10-14 22:36:50,805]DEBUG  2064[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Region [READ]: select region0_.ID as ID1_0_, region0_.RegionName as RegionName1_0_ from Regions region0_ where region0_.ID=?
[2017-10-14 22:36:50,806]DEBUG  2065[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Region [UPGRADE]: select region0_.ID as ID1_0_, region0_.RegionName as RegionName1_0_ from Regions region0_ where region0_.ID=? for update
[2017-10-14 22:36:50,806]DEBUG  2065[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Region [UPGRADE_NOWAIT]: select region0_.ID as ID1_0_, region0_.RegionName as RegionName1_0_ from Regions region0_ where region0_.ID=? for update
[2017-10-14 22:36:50,806]DEBUG  2065[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Region [FORCE]: select region0_.ID as ID1_0_, region0_.RegionName as RegionName1_0_ from Regions region0_ where region0_.ID=? for update
[2017-10-14 22:36:50,806]DEBUG  2065[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Region [PESSIMISTIC_READ]: select region0_.ID as ID1_0_, region0_.RegionName as RegionName1_0_ from Regions region0_ where region0_.ID=? lock in share mode
[2017-10-14 22:36:50,807]DEBUG  2066[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Region [PESSIMISTIC_WRITE]: select region0_.ID as ID1_0_, region0_.RegionName as RegionName1_0_ from Regions region0_ where region0_.ID=? for update
[2017-10-14 22:36:50,807]DEBUG  2066[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Region [PESSIMISTIC_FORCE_INCREMENT]: select region0_.ID as ID1_0_, region0_.RegionName as RegionName1_0_ from Regions region0_ where region0_.ID=? for update
[2017-10-14 22:36:50,807]DEBUG  2066[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Region [OPTIMISTIC]: select region0_.ID as ID1_0_, region0_.RegionName as RegionName1_0_ from Regions region0_ where region0_.ID=?
[2017-10-14 22:36:50,807]DEBUG  2066[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Region [OPTIMISTIC_FORCE_INCREMENT]: select region0_.ID as ID1_0_, region0_.RegionName as RegionName1_0_ from Regions region0_ where region0_.ID=?
[2017-10-14 22:36:50,808]DEBUG  2067[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.softserveinc.edu.oms.domain.entities.Region: select region0_.ID as ID1_0_, region0_.RegionName as RegionName1_0_ from Regions region0_ where region0_.ID=?
[2017-10-14 22:36:50,808]DEBUG  2067[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.softserveinc.edu.oms.domain.entities.Region: select region0_.ID as ID1_0_, region0_.RegionName as RegionName1_0_ from Regions region0_ where region0_.ID=?
[2017-10-14 22:36:50,808]DEBUG  2067[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.User [NONE]: select user0_.ID as ID3_3_, user0_.IsUserActive as IsUserAc2_3_3_, user0_.Balance as Balance3_3_, user0_.CustomerTypeRef as Customer9_3_3_, user0_.Email as Email3_3_, user0_.FirstName as FirstName3_3_, user0_.LastName as LastName3_3_, user0_.Login as Login3_3_, user0_.Password as Password3_3_, user0_.RegionRef as RegionRef3_3_, user0_.RoleRef as RoleRef3_3_, customerty1_.ID as ID2_0_, customerty1_.Discount as Discount2_0_, customerty1_.MaxRange as MaxRange2_0_, customerty1_.MinRange as MinRange2_0_, customerty1_.TypeName as TypeName2_0_, region2_.ID as ID1_1_, region2_.RegionName as RegionName1_1_, role3_.ID as ID0_2_, role3_.RoleName as RoleName0_2_ from Users user0_ left outer join CustomerTypes customerty1_ on user0_.CustomerTypeRef=customerty1_.ID left outer join Regions region2_ on user0_.RegionRef=region2_.ID inner join Roles role3_ on user0_.RoleRef=role3_.ID where user0_.ID=?
[2017-10-14 22:36:50,809]DEBUG  2068[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.User [READ]: select user0_.ID as ID3_3_, user0_.IsUserActive as IsUserAc2_3_3_, user0_.Balance as Balance3_3_, user0_.CustomerTypeRef as Customer9_3_3_, user0_.Email as Email3_3_, user0_.FirstName as FirstName3_3_, user0_.LastName as LastName3_3_, user0_.Login as Login3_3_, user0_.Password as Password3_3_, user0_.RegionRef as RegionRef3_3_, user0_.RoleRef as RoleRef3_3_, customerty1_.ID as ID2_0_, customerty1_.Discount as Discount2_0_, customerty1_.MaxRange as MaxRange2_0_, customerty1_.MinRange as MinRange2_0_, customerty1_.TypeName as TypeName2_0_, region2_.ID as ID1_1_, region2_.RegionName as RegionName1_1_, role3_.ID as ID0_2_, role3_.RoleName as RoleName0_2_ from Users user0_ left outer join CustomerTypes customerty1_ on user0_.CustomerTypeRef=customerty1_.ID left outer join Regions region2_ on user0_.RegionRef=region2_.ID inner join Roles role3_ on user0_.RoleRef=role3_.ID where user0_.ID=?
[2017-10-14 22:36:50,809]DEBUG  2068[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.User [UPGRADE]: select user0_.ID as ID3_0_, user0_.IsUserActive as IsUserAc2_3_0_, user0_.Balance as Balance3_0_, user0_.CustomerTypeRef as Customer9_3_0_, user0_.Email as Email3_0_, user0_.FirstName as FirstName3_0_, user0_.LastName as LastName3_0_, user0_.Login as Login3_0_, user0_.Password as Password3_0_, user0_.RegionRef as RegionRef3_0_, user0_.RoleRef as RoleRef3_0_ from Users user0_ where user0_.ID=? for update
[2017-10-14 22:36:50,810]DEBUG  2069[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.User [UPGRADE_NOWAIT]: select user0_.ID as ID3_0_, user0_.IsUserActive as IsUserAc2_3_0_, user0_.Balance as Balance3_0_, user0_.CustomerTypeRef as Customer9_3_0_, user0_.Email as Email3_0_, user0_.FirstName as FirstName3_0_, user0_.LastName as LastName3_0_, user0_.Login as Login3_0_, user0_.Password as Password3_0_, user0_.RegionRef as RegionRef3_0_, user0_.RoleRef as RoleRef3_0_ from Users user0_ where user0_.ID=? for update
[2017-10-14 22:36:50,810]DEBUG  2069[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.User [FORCE]: select user0_.ID as ID3_0_, user0_.IsUserActive as IsUserAc2_3_0_, user0_.Balance as Balance3_0_, user0_.CustomerTypeRef as Customer9_3_0_, user0_.Email as Email3_0_, user0_.FirstName as FirstName3_0_, user0_.LastName as LastName3_0_, user0_.Login as Login3_0_, user0_.Password as Password3_0_, user0_.RegionRef as RegionRef3_0_, user0_.RoleRef as RoleRef3_0_ from Users user0_ where user0_.ID=? for update
[2017-10-14 22:36:50,810]DEBUG  2069[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.User [PESSIMISTIC_READ]: select user0_.ID as ID3_0_, user0_.IsUserActive as IsUserAc2_3_0_, user0_.Balance as Balance3_0_, user0_.CustomerTypeRef as Customer9_3_0_, user0_.Email as Email3_0_, user0_.FirstName as FirstName3_0_, user0_.LastName as LastName3_0_, user0_.Login as Login3_0_, user0_.Password as Password3_0_, user0_.RegionRef as RegionRef3_0_, user0_.RoleRef as RoleRef3_0_ from Users user0_ where user0_.ID=? lock in share mode
[2017-10-14 22:36:50,811]DEBUG  2070[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.User [PESSIMISTIC_WRITE]: select user0_.ID as ID3_0_, user0_.IsUserActive as IsUserAc2_3_0_, user0_.Balance as Balance3_0_, user0_.CustomerTypeRef as Customer9_3_0_, user0_.Email as Email3_0_, user0_.FirstName as FirstName3_0_, user0_.LastName as LastName3_0_, user0_.Login as Login3_0_, user0_.Password as Password3_0_, user0_.RegionRef as RegionRef3_0_, user0_.RoleRef as RoleRef3_0_ from Users user0_ where user0_.ID=? for update
[2017-10-14 22:36:50,811]DEBUG  2070[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.ID as ID3_0_, user0_.IsUserActive as IsUserAc2_3_0_, user0_.Balance as Balance3_0_, user0_.CustomerTypeRef as Customer9_3_0_, user0_.Email as Email3_0_, user0_.FirstName as FirstName3_0_, user0_.LastName as LastName3_0_, user0_.Login as Login3_0_, user0_.Password as Password3_0_, user0_.RegionRef as RegionRef3_0_, user0_.RoleRef as RoleRef3_0_ from Users user0_ where user0_.ID=? for update
[2017-10-14 22:36:50,811]DEBUG  2070[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.User [OPTIMISTIC]: select user0_.ID as ID3_3_, user0_.IsUserActive as IsUserAc2_3_3_, user0_.Balance as Balance3_3_, user0_.CustomerTypeRef as Customer9_3_3_, user0_.Email as Email3_3_, user0_.FirstName as FirstName3_3_, user0_.LastName as LastName3_3_, user0_.Login as Login3_3_, user0_.Password as Password3_3_, user0_.RegionRef as RegionRef3_3_, user0_.RoleRef as RoleRef3_3_, customerty1_.ID as ID2_0_, customerty1_.Discount as Discount2_0_, customerty1_.MaxRange as MaxRange2_0_, customerty1_.MinRange as MinRange2_0_, customerty1_.TypeName as TypeName2_0_, region2_.ID as ID1_1_, region2_.RegionName as RegionName1_1_, role3_.ID as ID0_2_, role3_.RoleName as RoleName0_2_ from Users user0_ left outer join CustomerTypes customerty1_ on user0_.CustomerTypeRef=customerty1_.ID left outer join Regions region2_ on user0_.RegionRef=region2_.ID inner join Roles role3_ on user0_.RoleRef=role3_.ID where user0_.ID=?
[2017-10-14 22:36:50,812]DEBUG  2071[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.ID as ID3_3_, user0_.IsUserActive as IsUserAc2_3_3_, user0_.Balance as Balance3_3_, user0_.CustomerTypeRef as Customer9_3_3_, user0_.Email as Email3_3_, user0_.FirstName as FirstName3_3_, user0_.LastName as LastName3_3_, user0_.Login as Login3_3_, user0_.Password as Password3_3_, user0_.RegionRef as RegionRef3_3_, user0_.RoleRef as RoleRef3_3_, customerty1_.ID as ID2_0_, customerty1_.Discount as Discount2_0_, customerty1_.MaxRange as MaxRange2_0_, customerty1_.MinRange as MinRange2_0_, customerty1_.TypeName as TypeName2_0_, region2_.ID as ID1_1_, region2_.RegionName as RegionName1_1_, role3_.ID as ID0_2_, role3_.RoleName as RoleName0_2_ from Users user0_ left outer join CustomerTypes customerty1_ on user0_.CustomerTypeRef=customerty1_.ID left outer join Regions region2_ on user0_.RegionRef=region2_.ID inner join Roles role3_ on user0_.RoleRef=role3_.ID where user0_.ID=?
[2017-10-14 22:36:50,812]DEBUG  2071[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.softserveinc.edu.oms.domain.entities.User: select user0_.ID as ID3_3_, user0_.IsUserActive as IsUserAc2_3_3_, user0_.Balance as Balance3_3_, user0_.CustomerTypeRef as Customer9_3_3_, user0_.Email as Email3_3_, user0_.FirstName as FirstName3_3_, user0_.LastName as LastName3_3_, user0_.Login as Login3_3_, user0_.Password as Password3_3_, user0_.RegionRef as RegionRef3_3_, user0_.RoleRef as RoleRef3_3_, customerty1_.ID as ID2_0_, customerty1_.Discount as Discount2_0_, customerty1_.MaxRange as MaxRange2_0_, customerty1_.MinRange as MinRange2_0_, customerty1_.TypeName as TypeName2_0_, region2_.ID as ID1_1_, region2_.RegionName as RegionName1_1_, role3_.ID as ID0_2_, role3_.RoleName as RoleName0_2_ from Users user0_ left outer join CustomerTypes customerty1_ on user0_.CustomerTypeRef=customerty1_.ID left outer join Regions region2_ on user0_.RegionRef=region2_.ID inner join Roles role3_ on user0_.RoleRef=role3_.ID where user0_.ID=?
[2017-10-14 22:36:50,813]DEBUG  2072[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.softserveinc.edu.oms.domain.entities.User: select user0_.ID as ID3_0_, user0_.IsUserActive as IsUserAc2_3_0_, user0_.Balance as Balance3_0_, user0_.CustomerTypeRef as Customer9_3_0_, user0_.Email as Email3_0_, user0_.FirstName as FirstName3_0_, user0_.LastName as LastName3_0_, user0_.Login as Login3_0_, user0_.Password as Password3_0_, user0_.RegionRef as RegionRef3_0_, user0_.RoleRef as RoleRef3_0_ from Users user0_ where user0_.ID=?
[2017-10-14 22:36:50,813]DEBUG  2072[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CustomerType [NONE]: select customerty0_.ID as ID2_0_, customerty0_.Discount as Discount2_0_, customerty0_.MaxRange as MaxRange2_0_, customerty0_.MinRange as MinRange2_0_, customerty0_.TypeName as TypeName2_0_ from CustomerTypes customerty0_ where customerty0_.ID=?
[2017-10-14 22:36:50,813]DEBUG  2072[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CustomerType [READ]: select customerty0_.ID as ID2_0_, customerty0_.Discount as Discount2_0_, customerty0_.MaxRange as MaxRange2_0_, customerty0_.MinRange as MinRange2_0_, customerty0_.TypeName as TypeName2_0_ from CustomerTypes customerty0_ where customerty0_.ID=?
[2017-10-14 22:36:50,813]DEBUG  2072[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CustomerType [UPGRADE]: select customerty0_.ID as ID2_0_, customerty0_.Discount as Discount2_0_, customerty0_.MaxRange as MaxRange2_0_, customerty0_.MinRange as MinRange2_0_, customerty0_.TypeName as TypeName2_0_ from CustomerTypes customerty0_ where customerty0_.ID=? for update
[2017-10-14 22:36:50,814]DEBUG  2073[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CustomerType [UPGRADE_NOWAIT]: select customerty0_.ID as ID2_0_, customerty0_.Discount as Discount2_0_, customerty0_.MaxRange as MaxRange2_0_, customerty0_.MinRange as MinRange2_0_, customerty0_.TypeName as TypeName2_0_ from CustomerTypes customerty0_ where customerty0_.ID=? for update
[2017-10-14 22:36:50,814]DEBUG  2073[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CustomerType [FORCE]: select customerty0_.ID as ID2_0_, customerty0_.Discount as Discount2_0_, customerty0_.MaxRange as MaxRange2_0_, customerty0_.MinRange as MinRange2_0_, customerty0_.TypeName as TypeName2_0_ from CustomerTypes customerty0_ where customerty0_.ID=? for update
[2017-10-14 22:36:50,814]DEBUG  2073[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CustomerType [PESSIMISTIC_READ]: select customerty0_.ID as ID2_0_, customerty0_.Discount as Discount2_0_, customerty0_.MaxRange as MaxRange2_0_, customerty0_.MinRange as MinRange2_0_, customerty0_.TypeName as TypeName2_0_ from CustomerTypes customerty0_ where customerty0_.ID=? lock in share mode
[2017-10-14 22:36:50,815]DEBUG  2074[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CustomerType [PESSIMISTIC_WRITE]: select customerty0_.ID as ID2_0_, customerty0_.Discount as Discount2_0_, customerty0_.MaxRange as MaxRange2_0_, customerty0_.MinRange as MinRange2_0_, customerty0_.TypeName as TypeName2_0_ from CustomerTypes customerty0_ where customerty0_.ID=? for update
[2017-10-14 22:36:50,815]DEBUG  2074[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CustomerType [PESSIMISTIC_FORCE_INCREMENT]: select customerty0_.ID as ID2_0_, customerty0_.Discount as Discount2_0_, customerty0_.MaxRange as MaxRange2_0_, customerty0_.MinRange as MinRange2_0_, customerty0_.TypeName as TypeName2_0_ from CustomerTypes customerty0_ where customerty0_.ID=? for update
[2017-10-14 22:36:50,815]DEBUG  2074[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CustomerType [OPTIMISTIC]: select customerty0_.ID as ID2_0_, customerty0_.Discount as Discount2_0_, customerty0_.MaxRange as MaxRange2_0_, customerty0_.MinRange as MinRange2_0_, customerty0_.TypeName as TypeName2_0_ from CustomerTypes customerty0_ where customerty0_.ID=?
[2017-10-14 22:36:50,815]DEBUG  2074[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CustomerType [OPTIMISTIC_FORCE_INCREMENT]: select customerty0_.ID as ID2_0_, customerty0_.Discount as Discount2_0_, customerty0_.MaxRange as MaxRange2_0_, customerty0_.MinRange as MinRange2_0_, customerty0_.TypeName as TypeName2_0_ from CustomerTypes customerty0_ where customerty0_.ID=?
[2017-10-14 22:36:50,816]DEBUG  2075[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.softserveinc.edu.oms.domain.entities.CustomerType: select customerty0_.ID as ID2_0_, customerty0_.Discount as Discount2_0_, customerty0_.MaxRange as MaxRange2_0_, customerty0_.MinRange as MinRange2_0_, customerty0_.TypeName as TypeName2_0_ from CustomerTypes customerty0_ where customerty0_.ID=?
[2017-10-14 22:36:50,816]DEBUG  2075[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.softserveinc.edu.oms.domain.entities.CustomerType: select customerty0_.ID as ID2_0_, customerty0_.Discount as Discount2_0_, customerty0_.MaxRange as MaxRange2_0_, customerty0_.MinRange as MinRange2_0_, customerty0_.TypeName as TypeName2_0_ from CustomerTypes customerty0_ where customerty0_.ID=?
[2017-10-14 22:36:50,816]DEBUG  2075[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Product [NONE]: select product0_.ID as ID6_0_, product0_.IsProductActive as IsProduc2_6_0_, product0_.ProductDescription as ProductD3_6_0_, product0_.ProductName as ProductN4_6_0_, product0_.ProductPrice as ProductP5_6_0_ from Products product0_ where product0_.ID=?
[2017-10-14 22:36:50,817]DEBUG  2076[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Product [READ]: select product0_.ID as ID6_0_, product0_.IsProductActive as IsProduc2_6_0_, product0_.ProductDescription as ProductD3_6_0_, product0_.ProductName as ProductN4_6_0_, product0_.ProductPrice as ProductP5_6_0_ from Products product0_ where product0_.ID=?
[2017-10-14 22:36:50,817]DEBUG  2076[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Product [UPGRADE]: select product0_.ID as ID6_0_, product0_.IsProductActive as IsProduc2_6_0_, product0_.ProductDescription as ProductD3_6_0_, product0_.ProductName as ProductN4_6_0_, product0_.ProductPrice as ProductP5_6_0_ from Products product0_ where product0_.ID=? for update
[2017-10-14 22:36:50,817]DEBUG  2076[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Product [UPGRADE_NOWAIT]: select product0_.ID as ID6_0_, product0_.IsProductActive as IsProduc2_6_0_, product0_.ProductDescription as ProductD3_6_0_, product0_.ProductName as ProductN4_6_0_, product0_.ProductPrice as ProductP5_6_0_ from Products product0_ where product0_.ID=? for update
[2017-10-14 22:36:50,817]DEBUG  2076[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Product [FORCE]: select product0_.ID as ID6_0_, product0_.IsProductActive as IsProduc2_6_0_, product0_.ProductDescription as ProductD3_6_0_, product0_.ProductName as ProductN4_6_0_, product0_.ProductPrice as ProductP5_6_0_ from Products product0_ where product0_.ID=? for update
[2017-10-14 22:36:50,818]DEBUG  2077[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Product [PESSIMISTIC_READ]: select product0_.ID as ID6_0_, product0_.IsProductActive as IsProduc2_6_0_, product0_.ProductDescription as ProductD3_6_0_, product0_.ProductName as ProductN4_6_0_, product0_.ProductPrice as ProductP5_6_0_ from Products product0_ where product0_.ID=? lock in share mode
[2017-10-14 22:36:50,818]DEBUG  2077[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Product [PESSIMISTIC_WRITE]: select product0_.ID as ID6_0_, product0_.IsProductActive as IsProduc2_6_0_, product0_.ProductDescription as ProductD3_6_0_, product0_.ProductName as ProductN4_6_0_, product0_.ProductPrice as ProductP5_6_0_ from Products product0_ where product0_.ID=? for update
[2017-10-14 22:36:50,818]DEBUG  2077[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Product [PESSIMISTIC_FORCE_INCREMENT]: select product0_.ID as ID6_0_, product0_.IsProductActive as IsProduc2_6_0_, product0_.ProductDescription as ProductD3_6_0_, product0_.ProductName as ProductN4_6_0_, product0_.ProductPrice as ProductP5_6_0_ from Products product0_ where product0_.ID=? for update
[2017-10-14 22:36:50,819]DEBUG  2078[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Product [OPTIMISTIC]: select product0_.ID as ID6_0_, product0_.IsProductActive as IsProduc2_6_0_, product0_.ProductDescription as ProductD3_6_0_, product0_.ProductName as ProductN4_6_0_, product0_.ProductPrice as ProductP5_6_0_ from Products product0_ where product0_.ID=?
[2017-10-14 22:36:50,819]DEBUG  2078[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Product [OPTIMISTIC_FORCE_INCREMENT]: select product0_.ID as ID6_0_, product0_.IsProductActive as IsProduc2_6_0_, product0_.ProductDescription as ProductD3_6_0_, product0_.ProductName as ProductN4_6_0_, product0_.ProductPrice as ProductP5_6_0_ from Products product0_ where product0_.ID=?
[2017-10-14 22:36:50,819]DEBUG  2078[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.softserveinc.edu.oms.domain.entities.Product: select product0_.ID as ID6_0_, product0_.IsProductActive as IsProduc2_6_0_, product0_.ProductDescription as ProductD3_6_0_, product0_.ProductName as ProductN4_6_0_, product0_.ProductPrice as ProductP5_6_0_ from Products product0_ where product0_.ID=?
[2017-10-14 22:36:50,819]DEBUG  2078[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.softserveinc.edu.oms.domain.entities.Product: select product0_.ID as ID6_0_, product0_.IsProductActive as IsProduc2_6_0_, product0_.ProductDescription as ProductD3_6_0_, product0_.ProductName as ProductN4_6_0_, product0_.ProductPrice as ProductP5_6_0_ from Products product0_ where product0_.ID=?
[2017-10-14 22:36:50,996]DEBUG  2255[main] - org.hibernate.impl.SessionFactoryObjectFactory.<clinit>(SessionFactoryObjectFactory.java:61) - initializing class SessionFactoryObjectFactory
[2017-10-14 22:36:50,998]DEBUG  2257[main] - org.hibernate.impl.SessionFactoryObjectFactory.addInstance(SessionFactoryObjectFactory.java:99) - registered: 992d6a1d-6e36-4105-bd73-c09d9de2cfb6 (unnamed)
[2017-10-14 22:36:50,998] INFO  2257[main] - org.hibernate.impl.SessionFactoryObjectFactory.addInstance(SessionFactoryObjectFactory.java:105) - Not binding factory to JNDI, no JNDI name configured
[2017-10-14 22:36:50,999]DEBUG  2258[main] - org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:369) - instantiated session factory
[2017-10-14 22:36:51,003]DEBUG  2262[main] - org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) - Processing hbm.xml files
[2017-10-14 22:36:51,004]DEBUG  2263[main] - org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) - Process annotated classes
[2017-10-14 22:36:51,004]DEBUG  2263[main] - org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) - processing fk mappings (*ToOne and JoinedSubclass)
[2017-10-14 22:36:51,004]DEBUG  2263[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) - processing extends queue
[2017-10-14 22:36:51,005]DEBUG  2264[main] - org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) - processing extends queue
[2017-10-14 22:36:51,005]DEBUG  2264[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) - processing collection mappings
[2017-10-14 22:36:51,006]DEBUG  2265[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) - processing native query and ResultSetMapping mappings
[2017-10-14 22:36:51,006]DEBUG  2265[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) - processing association property references
[2017-10-14 22:36:51,006]DEBUG  2265[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) - processing foreign key constraints
[2017-10-14 22:36:51,007]DEBUG  2266[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Product
[2017-10-14 22:36:51,007]DEBUG  2266[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Dimension
[2017-10-14 22:36:51,007]DEBUG  2266[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Order
[2017-10-14 22:36:51,008]DEBUG  2267[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.OrderStatus
[2017-10-14 22:36:51,008]DEBUG  2267[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.User
[2017-10-14 22:36:51,009]DEBUG  2268[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.User
[2017-10-14 22:36:51,009]DEBUG  2268[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Role
[2017-10-14 22:36:51,009]DEBUG  2268[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.CustomerType
[2017-10-14 22:36:51,010]DEBUG  2269[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Region
[2017-10-14 22:36:51,011]DEBUG  2270[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:107) - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2017-10-14 22:36:51,012]DEBUG  2271[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:118) - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.engine.resolver.JPATraversableResolver.
[2017-10-14 22:36:51,012]DEBUG  2271[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:203) - Trying to load META-INF/validation.xml for XML based Validator configuration.
[2017-10-14 22:36:51,013]DEBUG  2272[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:206) - No META-INF/validation.xml found. Using annotation based configuration only
[2017-10-14 22:36:51,038]DEBUG  2297[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 22:36:51,039]DEBUG  2298[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 22:36:51,039]DEBUG  2298[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 22:36:51,039]DEBUG  2298[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 22:36:51,039]DEBUG  2298[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 22:36:51,039]DEBUG  2298[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 22:36:51,040]DEBUG  2299[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 22:36:51,040]DEBUG  2299[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 22:36:51,041]DEBUG  2300[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 22:36:51,041]DEBUG  2300[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 22:36:51,041]DEBUG  2300[main] - org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) - Processing hbm.xml files
[2017-10-14 22:36:51,041]DEBUG  2300[main] - org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) - Process annotated classes
[2017-10-14 22:36:51,041]DEBUG  2300[main] - org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) - processing fk mappings (*ToOne and JoinedSubclass)
[2017-10-14 22:36:51,041]DEBUG  2300[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) - processing extends queue
[2017-10-14 22:36:51,042]DEBUG  2301[main] - org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) - processing extends queue
[2017-10-14 22:36:51,042]DEBUG  2301[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) - processing collection mappings
[2017-10-14 22:36:51,042]DEBUG  2301[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) - processing native query and ResultSetMapping mappings
[2017-10-14 22:36:51,042]DEBUG  2301[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) - processing association property references
[2017-10-14 22:36:51,042]DEBUG  2301[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) - processing foreign key constraints
[2017-10-14 22:36:51,042]DEBUG  2301[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Product
[2017-10-14 22:36:51,043]DEBUG  2302[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Dimension
[2017-10-14 22:36:51,043]DEBUG  2302[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Order
[2017-10-14 22:36:51,043]DEBUG  2302[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.OrderStatus
[2017-10-14 22:36:51,043]DEBUG  2302[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.User
[2017-10-14 22:36:51,043]DEBUG  2302[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.User
[2017-10-14 22:36:51,043]DEBUG  2302[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Role
[2017-10-14 22:36:51,044]DEBUG  2303[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.CustomerType
[2017-10-14 22:36:51,044]DEBUG  2303[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Region
[2017-10-14 22:36:51,045]DEBUG  2304[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:107) - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2017-10-14 22:36:51,045]DEBUG  2304[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:118) - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.engine.resolver.JPATraversableResolver.
[2017-10-14 22:36:51,045]DEBUG  2304[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:203) - Trying to load META-INF/validation.xml for XML based Validator configuration.
[2017-10-14 22:36:51,046]DEBUG  2305[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:206) - No META-INF/validation.xml found. Using annotation based configuration only
[2017-10-14 22:36:51,068]DEBUG  2327[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 22:36:51,069]DEBUG  2328[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 22:36:51,069]DEBUG  2328[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 22:36:51,069]DEBUG  2328[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 22:36:51,069]DEBUG  2328[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 22:36:51,070]DEBUG  2329[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 22:36:51,070]DEBUG  2329[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 22:36:51,070]DEBUG  2329[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 22:36:51,070]DEBUG  2329[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 22:36:51,071]DEBUG  2330[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 22:36:51,071]DEBUG  2330[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 22:36:51,071]DEBUG  2330[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 22:36:51,071]DEBUG  2330[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 22:36:51,072]DEBUG  2331[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 22:36:51,072]DEBUG  2331[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 22:36:51,072]DEBUG  2331[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 22:36:51,072]DEBUG  2331[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 22:36:51,072]DEBUG  2331[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 22:36:51,073]DEBUG  2332[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 22:36:51,073]DEBUG  2332[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 22:36:51,075] INFO  2334[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:234) - Running hbm2ddl schema export
[2017-10-14 22:36:51,075]DEBUG  2334[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:252) - import file not found: /import.sql
[2017-10-14 22:36:51,076] INFO  2335[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:262) - exporting generated schema to database
[2017-10-14 22:36:51,076]DEBUG  2335[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table OrderItems drop foreign key FKA2B1AD3262E1ABF7
[2017-10-14 22:36:51,083]DEBUG  2342[main] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: alter table OrderItems drop foreign key FKA2B1AD3262E1ABF7
[2017-10-14 22:36:51,083]DEBUG  2342[main] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - Table 'test1.OrderItems' doesn't exist
[2017-10-14 22:36:51,083]DEBUG  2342[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table OrderItems drop foreign key FKA2B1AD32A6376397
[2017-10-14 22:36:51,084]DEBUG  2343[main] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: alter table OrderItems drop foreign key FKA2B1AD32A6376397
[2017-10-14 22:36:51,084]DEBUG  2343[main] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - Table 'test1.OrderItems' doesn't exist
[2017-10-14 22:36:51,084]DEBUG  2343[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table OrderItems drop foreign key FKA2B1AD32BCDB3C97
[2017-10-14 22:36:51,085]DEBUG  2344[main] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: alter table OrderItems drop foreign key FKA2B1AD32BCDB3C97
[2017-10-14 22:36:51,085]DEBUG  2344[main] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - Table 'test1.OrderItems' doesn't exist
[2017-10-14 22:36:51,085]DEBUG  2344[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Orders drop foreign key FK8D444F05990DB877
[2017-10-14 22:36:51,085]DEBUG  2344[main] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: alter table Orders drop foreign key FK8D444F05990DB877
[2017-10-14 22:36:51,085]DEBUG  2344[main] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - Table 'test1.Orders' doesn't exist
[2017-10-14 22:36:51,085]DEBUG  2344[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Orders drop foreign key FK8D444F05C0F431DD
[2017-10-14 22:36:51,086]DEBUG  2345[main] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: alter table Orders drop foreign key FK8D444F05C0F431DD
[2017-10-14 22:36:51,086]DEBUG  2345[main] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - Table 'test1.Orders' doesn't exist
[2017-10-14 22:36:51,086]DEBUG  2345[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Orders drop foreign key FK8D444F05F161465
[2017-10-14 22:36:51,086]DEBUG  2345[main] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: alter table Orders drop foreign key FK8D444F05F161465
[2017-10-14 22:36:51,087]DEBUG  2346[main] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - Table 'test1.Orders' doesn't exist
[2017-10-14 22:36:51,087]DEBUG  2346[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Users drop foreign key FK4E39DE83D05058F
[2017-10-14 22:36:51,087]DEBUG  2346[main] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: alter table Users drop foreign key FK4E39DE83D05058F
[2017-10-14 22:36:51,087]DEBUG  2346[main] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - Table 'test1.Users' doesn't exist
[2017-10-14 22:36:51,087]DEBUG  2346[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Users drop foreign key FK4E39DE89AEF426F
[2017-10-14 22:36:51,088]DEBUG  2347[main] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: alter table Users drop foreign key FK4E39DE89AEF426F
[2017-10-14 22:36:51,088]DEBUG  2347[main] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - Table 'test1.Users' doesn't exist
[2017-10-14 22:36:51,088]DEBUG  2347[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Users drop foreign key FK4E39DE8FEAD4DCF
[2017-10-14 22:36:51,088]DEBUG  2347[main] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: alter table Users drop foreign key FK4E39DE8FEAD4DCF
[2017-10-14 22:36:51,089]DEBUG  2348[main] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - Table 'test1.Users' doesn't exist
[2017-10-14 22:36:51,089]DEBUG  2348[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists CardType
[2017-10-14 22:36:51,091]DEBUG  2350[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists CustomerTypes
[2017-10-14 22:36:51,091]DEBUG  2350[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists Dimensions
[2017-10-14 22:36:51,092]DEBUG  2351[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists OrderItems
[2017-10-14 22:36:51,093]DEBUG  2352[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists OrderStatuses
[2017-10-14 22:36:51,093]DEBUG  2352[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists Orders
[2017-10-14 22:36:51,094]DEBUG  2353[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists Products
[2017-10-14 22:36:51,094]DEBUG  2353[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists Regions
[2017-10-14 22:36:51,095]DEBUG  2354[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists Roles
[2017-10-14 22:36:51,096]DEBUG  2355[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists Users
[2017-10-14 22:36:51,097]DEBUG  2356[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - create table CardType (ID integer not null auto_increment, CardType varchar(255), CardNumber varchar(255), CardCvv2 integer, Expiration_Date varchar(255), IssueDate varchar(255), IssueNumber varchar(255), primary key (ID))
[2017-10-14 22:36:51,210]DEBUG  2469[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - create table CustomerTypes (ID integer not null auto_increment, Discount double precision, MaxRange double precision, MinRange double precision, TypeName varchar(255), primary key (ID))
[2017-10-14 22:36:51,311]DEBUG  2570[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - create table Dimensions (ID integer not null auto_increment, DimensionName varchar(255), NumberOfProducts integer, primary key (ID))
[2017-10-14 22:36:51,411]DEBUG  2670[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - create table OrderItems (ID integer not null auto_increment, Cost double precision, ItemPrice double precision, Quantity integer, DimensionRef integer, OrderRef integer, ProductRef integer, primary key (ID))
[2017-10-14 22:36:51,519]DEBUG  2778[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - create table OrderStatuses (ID integer not null auto_increment, OrederStatusName varchar(255), primary key (ID))
[2017-10-14 22:36:51,628]DEBUG  2887[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - create table Orders (ID integer not null auto_increment, DeliveryDate datetime, IsGift bit, MaxDiscount integer, OrderDate datetime, OrderName varchar(100), OrderNumber integer unique, PreferableDeliveryDate datetime, TotalPrice double precision, Assigne integer, Customer integer, OrderStatusRef integer, primary key (ID))
[2017-10-14 22:36:51,728]DEBUG  2987[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - create table Products (ID integer not null auto_increment, IsProductActive bit, ProductDescription varchar(255), ProductName varchar(255), ProductPrice double precision, primary key (ID))
[2017-10-14 22:36:51,828]DEBUG  3087[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - create table Regions (ID integer not null auto_increment, RegionName varchar(255), primary key (ID))
[2017-10-14 22:36:51,929]DEBUG  3188[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - create table Roles (ID integer not null auto_increment, RoleName varchar(255), primary key (ID))
[2017-10-14 22:36:52,029]DEBUG  3288[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - create table Users (ID integer not null auto_increment, IsUserActive bit, Balance double precision, Email varchar(255) not null, FirstName varchar(255) not null, LastName varchar(255) not null, Login varchar(255) not null, Password varchar(255) not null, CustomerTypeRef integer, RegionRef integer, RoleRef integer not null, primary key (ID))
[2017-10-14 22:36:52,137]DEBUG  3396[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table OrderItems add index FKA2B1AD3262E1ABF7 (ProductRef), add constraint FKA2B1AD3262E1ABF7 foreign key (ProductRef) references Products (ID)
[2017-10-14 22:36:52,355]DEBUG  3614[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table OrderItems add index FKA2B1AD32A6376397 (DimensionRef), add constraint FKA2B1AD32A6376397 foreign key (DimensionRef) references Dimensions (ID)
[2017-10-14 22:36:52,564]DEBUG  3823[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table OrderItems add index FKA2B1AD32BCDB3C97 (OrderRef), add constraint FKA2B1AD32BCDB3C97 foreign key (OrderRef) references Orders (ID)
[2017-10-14 22:36:52,764]DEBUG  4023[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Orders add index FK8D444F05990DB877 (OrderStatusRef), add constraint FK8D444F05990DB877 foreign key (OrderStatusRef) references OrderStatuses (ID)
[2017-10-14 22:36:52,981]DEBUG  4240[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Orders add index FK8D444F05C0F431DD (Assigne), add constraint FK8D444F05C0F431DD foreign key (Assigne) references Users (ID)
[2017-10-14 22:36:53,182]DEBUG  4441[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Orders add index FK8D444F05F161465 (Customer), add constraint FK8D444F05F161465 foreign key (Customer) references Users (ID)
[2017-10-14 22:36:53,392]DEBUG  4651[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Users add index FK4E39DE83D05058F (RoleRef), add constraint FK4E39DE83D05058F foreign key (RoleRef) references Roles (ID)
[2017-10-14 22:36:53,601]DEBUG  4860[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Users add index FK4E39DE89AEF426F (CustomerTypeRef), add constraint FK4E39DE89AEF426F foreign key (CustomerTypeRef) references CustomerTypes (ID)
[2017-10-14 22:36:53,818]DEBUG  5077[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Users add index FK4E39DE8FEAD4DCF (RegionRef), add constraint FK4E39DE8FEAD4DCF foreign key (RegionRef) references Regions (ID)
[2017-10-14 22:36:54,018] INFO  5277[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:281) - schema export complete
[2017-10-14 22:36:54,019]DEBUG  5278[main] - org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) - Processing hbm.xml files
[2017-10-14 22:36:54,020]DEBUG  5279[main] - org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) - Process annotated classes
[2017-10-14 22:36:54,020]DEBUG  5279[main] - org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) - processing fk mappings (*ToOne and JoinedSubclass)
[2017-10-14 22:36:54,021]DEBUG  5280[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) - processing extends queue
[2017-10-14 22:36:54,021]DEBUG  5280[main] - org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) - processing extends queue
[2017-10-14 22:36:54,021]DEBUG  5280[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) - processing collection mappings
[2017-10-14 22:36:54,022]DEBUG  5281[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) - processing native query and ResultSetMapping mappings
[2017-10-14 22:36:54,022]DEBUG  5281[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) - processing association property references
[2017-10-14 22:36:54,023]DEBUG  5282[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) - processing foreign key constraints
[2017-10-14 22:36:54,023]DEBUG  5282[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Product
[2017-10-14 22:36:54,024]DEBUG  5283[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Dimension
[2017-10-14 22:36:54,024]DEBUG  5283[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Order
[2017-10-14 22:36:54,025]DEBUG  5284[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.OrderStatus
[2017-10-14 22:36:54,025]DEBUG  5284[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.User
[2017-10-14 22:36:54,025]DEBUG  5284[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.User
[2017-10-14 22:36:54,026]DEBUG  5285[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Role
[2017-10-14 22:36:54,026]DEBUG  5285[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.CustomerType
[2017-10-14 22:36:54,027]DEBUG  5286[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Region
[2017-10-14 22:36:54,028]DEBUG  5287[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:107) - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2017-10-14 22:36:54,028]DEBUG  5287[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:118) - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.engine.resolver.JPATraversableResolver.
[2017-10-14 22:36:54,029]DEBUG  5288[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:203) - Trying to load META-INF/validation.xml for XML based Validator configuration.
[2017-10-14 22:36:54,030]DEBUG  5289[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:206) - No META-INF/validation.xml found. Using annotation based configuration only
[2017-10-14 22:36:54,055]DEBUG  5314[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 22:36:54,055]DEBUG  5314[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 22:36:54,055]DEBUG  5314[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 22:36:54,055]DEBUG  5314[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 22:36:54,056]DEBUG  5315[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 22:36:54,056]DEBUG  5315[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 22:36:54,056]DEBUG  5315[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 22:36:54,056]DEBUG  5315[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 22:36:54,057]DEBUG  5316[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 22:36:54,057]DEBUG  5316[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 22:36:54,057]DEBUG  5316[main] - org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) - Processing hbm.xml files
[2017-10-14 22:36:54,057]DEBUG  5316[main] - org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) - Process annotated classes
[2017-10-14 22:36:54,058]DEBUG  5317[main] - org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) - processing fk mappings (*ToOne and JoinedSubclass)
[2017-10-14 22:36:54,058]DEBUG  5317[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) - processing extends queue
[2017-10-14 22:36:54,058]DEBUG  5317[main] - org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) - processing extends queue
[2017-10-14 22:36:54,058]DEBUG  5317[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) - processing collection mappings
[2017-10-14 22:36:54,058]DEBUG  5317[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) - processing native query and ResultSetMapping mappings
[2017-10-14 22:36:54,058]DEBUG  5317[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) - processing association property references
[2017-10-14 22:36:54,059]DEBUG  5318[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) - processing foreign key constraints
[2017-10-14 22:36:54,059]DEBUG  5318[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Product
[2017-10-14 22:36:54,059]DEBUG  5318[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Dimension
[2017-10-14 22:36:54,059]DEBUG  5318[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Order
[2017-10-14 22:36:54,059]DEBUG  5318[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.OrderStatus
[2017-10-14 22:36:54,059]DEBUG  5318[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.User
[2017-10-14 22:36:54,060]DEBUG  5319[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.User
[2017-10-14 22:36:54,060]DEBUG  5319[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Role
[2017-10-14 22:36:54,060]DEBUG  5319[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.CustomerType
[2017-10-14 22:36:54,060]DEBUG  5319[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Region
[2017-10-14 22:36:54,061]DEBUG  5320[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:107) - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2017-10-14 22:36:54,061]DEBUG  5320[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:118) - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.engine.resolver.JPATraversableResolver.
[2017-10-14 22:36:54,061]DEBUG  5320[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:203) - Trying to load META-INF/validation.xml for XML based Validator configuration.
[2017-10-14 22:36:54,062]DEBUG  5321[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:206) - No META-INF/validation.xml found. Using annotation based configuration only
[2017-10-14 22:36:54,075]DEBUG  5334[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 22:36:54,075]DEBUG  5334[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 22:36:54,076]DEBUG  5335[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 22:36:54,076]DEBUG  5335[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 22:36:54,076]DEBUG  5335[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 22:36:54,076]DEBUG  5335[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 22:36:54,077]DEBUG  5336[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 22:36:54,077]DEBUG  5336[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 22:36:54,077]DEBUG  5336[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 22:36:54,077]DEBUG  5336[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 22:36:54,078]DEBUG  5337[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 22:36:54,078]DEBUG  5337[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 22:36:54,078]DEBUG  5337[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 22:36:54,078]DEBUG  5337[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 22:36:54,078]DEBUG  5337[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 22:36:54,079]DEBUG  5338[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 22:36:54,079]DEBUG  5338[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 22:36:54,079]DEBUG  5338[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 22:36:54,079]DEBUG  5338[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 22:36:54,079]DEBUG  5338[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[2017-10-14 22:36:54,080]DEBUG  5339[main] - org.hibernate.impl.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:539) - Checking 0 named HQL queries
[2017-10-14 22:36:54,080]DEBUG  5339[main] - org.hibernate.impl.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:559) - Checking 0 named SQL queries
[2017-10-14 22:36:54,081]DEBUG  5340[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 22:36:54,082]DEBUG  5341[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 22:36:54,083]DEBUG  5342[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'org.springframework.transaction.config.internalTransactionAdvisor' to allow for resolving potential circular references
[2017-10-14 22:36:54,087]DEBUG  5346[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
[2017-10-14 22:36:54,087]DEBUG  5346[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
[2017-10-14 22:36:54,088]DEBUG  5347[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' to allow for resolving potential circular references
[2017-10-14 22:36:54,092]DEBUG  5351[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
[2017-10-14 22:36:54,092]DEBUG  5351[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 22:36:54,095]DEBUG  5354[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'sessionFactory'
[2017-10-14 22:36:54,095]DEBUG  5354[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 22:36:54,112]DEBUG  5371[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1461) - Invoking afterPropertiesSet() on bean with name 'transactionManager'
[2017-10-14 22:36:54,118]DEBUG  5377[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 22:36:54,120]DEBUG  5379[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'transactionManager'
[2017-10-14 22:36:54,120]DEBUG  5379[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
[2017-10-14 22:36:54,120]DEBUG  5379[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
[2017-10-14 22:36:54,120]DEBUG  5379[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
[2017-10-14 22:36:54,120]DEBUG  5379[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
[2017-10-14 22:36:54,122]DEBUG  5381[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' to allow for resolving potential circular references
[2017-10-14 22:36:54,125]DEBUG  5384[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
[2017-10-14 22:36:54,125]DEBUG  5384[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1461) - Invoking afterPropertiesSet() on bean with name 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
[2017-10-14 22:36:54,125]DEBUG  5384[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
[2017-10-14 22:36:54,125]DEBUG  5384[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 22:36:54,126]DEBUG  5385[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
[2017-10-14 22:36:54,126]DEBUG  5385[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
[2017-10-14 22:36:54,126]DEBUG  5385[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
[2017-10-14 22:36:54,126]DEBUG  5385[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
[2017-10-14 22:36:54,126]DEBUG  5385[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
[2017-10-14 22:36:54,126]DEBUG  5385[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'orderStatusDao'
[2017-10-14 22:36:54,126]DEBUG  5385[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'orderStatusDao'
[2017-10-14 22:36:54,131]DEBUG  5390[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao]: AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2017-10-14 22:36:54,132]DEBUG  5391[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'orderStatusDao' to allow for resolving potential circular references
[2017-10-14 22:36:54,135]DEBUG  5394[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'orderStatusDao': AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2017-10-14 22:36:54,137]DEBUG  5396[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 22:36:54,137]DEBUG  5396[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'orderStatusDao' to bean named 'sessionFactory'
[2017-10-14 22:36:54,137]DEBUG  5396[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 22:36:54,140]DEBUG  5399[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'orderStatusDao'
[2017-10-14 22:36:54,140]DEBUG  5399[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'dimensionDao'
[2017-10-14 22:36:54,140]DEBUG  5399[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'dimensionDao'
[2017-10-14 22:36:54,141]DEBUG  5400[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao]: AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2017-10-14 22:36:54,141]DEBUG  5400[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'dimensionDao' to allow for resolving potential circular references
[2017-10-14 22:36:54,149]DEBUG  5408[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'dimensionDao': AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2017-10-14 22:36:54,150]DEBUG  5409[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 22:36:54,150]DEBUG  5409[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'dimensionDao' to bean named 'sessionFactory'
[2017-10-14 22:36:54,150]DEBUG  5409[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 22:36:54,152]DEBUG  5411[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'dimensionDao'
[2017-10-14 22:36:54,152]DEBUG  5411[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'creditCardTypeDao'
[2017-10-14 22:36:54,152]DEBUG  5411[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'creditCardTypeDao'
[2017-10-14 22:36:54,153]DEBUG  5412[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.concrete.CreditCardTypeDao]: AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2017-10-14 22:36:54,153]DEBUG  5412[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'creditCardTypeDao' to allow for resolving potential circular references
[2017-10-14 22:36:54,156]DEBUG  5415[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'creditCardTypeDao': AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2017-10-14 22:36:54,157]DEBUG  5416[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 22:36:54,157]DEBUG  5416[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'creditCardTypeDao' to bean named 'sessionFactory'
[2017-10-14 22:36:54,157]DEBUG  5416[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 22:36:54,159]DEBUG  5418[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'creditCardTypeDao'
[2017-10-14 22:36:54,159]DEBUG  5418[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'userDao'
[2017-10-14 22:36:54,159]DEBUG  5418[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'userDao'
[2017-10-14 22:36:54,162]DEBUG  5421[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.concrete.UserDao]: AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2017-10-14 22:36:54,162]DEBUG  5421[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'userDao' to allow for resolving potential circular references
[2017-10-14 22:36:54,168]DEBUG  5427[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'userDao': AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2017-10-14 22:36:54,168]DEBUG  5427[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 22:36:54,168]DEBUG  5427[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'userDao' to bean named 'sessionFactory'
[2017-10-14 22:36:54,169]DEBUG  5428[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 22:36:54,171]DEBUG  5430[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'userDao'
[2017-10-14 22:36:54,171]DEBUG  5430[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'orderDao'
[2017-10-14 22:36:54,172]DEBUG  5431[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'orderDao'
[2017-10-14 22:36:54,177]DEBUG  5436[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao]: AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2017-10-14 22:36:54,177]DEBUG  5436[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao]: AutowiredFieldElement for private com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao.orderStatusDao
[2017-10-14 22:36:54,177]DEBUG  5436[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao]: AutowiredFieldElement for private com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao.roleDao
[2017-10-14 22:36:54,177]DEBUG  5436[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'orderDao' to allow for resolving potential circular references
[2017-10-14 22:36:54,182]DEBUG  5441[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'orderDao': AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2017-10-14 22:36:54,183]DEBUG  5442[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 22:36:54,183]DEBUG  5442[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'orderDao' to bean named 'sessionFactory'
[2017-10-14 22:36:54,183]DEBUG  5442[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'orderDao': AutowiredFieldElement for private com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao.orderStatusDao
[2017-10-14 22:36:54,184]DEBUG  5443[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 22:36:54,184]DEBUG  5443[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'orderDao' to bean named 'orderStatusDao'
[2017-10-14 22:36:54,184]DEBUG  5443[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'orderDao': AutowiredFieldElement for private com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao.roleDao
[2017-10-14 22:36:54,185]DEBUG  5444[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'roleDao'
[2017-10-14 22:36:54,185]DEBUG  5444[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'roleDao'
[2017-10-14 22:36:54,185]DEBUG  5444[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao]: AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2017-10-14 22:36:54,186]DEBUG  5445[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'roleDao' to allow for resolving potential circular references
[2017-10-14 22:36:54,189]DEBUG  5448[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'roleDao': AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2017-10-14 22:36:54,190]DEBUG  5449[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 22:36:54,190]DEBUG  5449[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'roleDao' to bean named 'sessionFactory'
[2017-10-14 22:36:54,190]DEBUG  5449[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 22:36:54,192]DEBUG  5451[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'roleDao'
[2017-10-14 22:36:54,192]DEBUG  5451[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'orderDao' to bean named 'roleDao'
[2017-10-14 22:36:54,192]DEBUG  5451[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 22:36:54,194]DEBUG  5453[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'orderDao'
[2017-10-14 22:36:54,194]DEBUG  5453[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'orderItemDao'
[2017-10-14 22:36:54,195]DEBUG  5454[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'orderItemDao'
[2017-10-14 22:36:54,195]DEBUG  5454[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao]: AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2017-10-14 22:36:54,195]DEBUG  5454[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'orderItemDao' to allow for resolving potential circular references
[2017-10-14 22:36:54,200]DEBUG  5459[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'orderItemDao': AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2017-10-14 22:36:54,201]DEBUG  5460[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 22:36:54,201]DEBUG  5460[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'orderItemDao' to bean named 'sessionFactory'
[2017-10-14 22:36:54,201]DEBUG  5460[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 22:36:54,203]DEBUG  5462[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'orderItemDao'
[2017-10-14 22:36:54,203]DEBUG  5462[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'productDao'
[2017-10-14 22:36:54,203]DEBUG  5462[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'productDao'
[2017-10-14 22:36:54,204]DEBUG  5463[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao]: AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2017-10-14 22:36:54,204]DEBUG  5463[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'productDao' to allow for resolving potential circular references
[2017-10-14 22:36:54,210]DEBUG  5469[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'productDao': AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2017-10-14 22:36:54,210]DEBUG  5469[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 22:36:54,210]DEBUG  5469[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'productDao' to bean named 'sessionFactory'
[2017-10-14 22:36:54,211]DEBUG  5470[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 22:36:54,213]DEBUG  5472[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'productDao'
[2017-10-14 22:36:54,213]DEBUG  5472[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 22:36:54,213]DEBUG  5472[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'regionDao'
[2017-10-14 22:36:54,214]DEBUG  5473[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'regionDao'
[2017-10-14 22:36:54,214]DEBUG  5473[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao]: AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2017-10-14 22:36:54,214]DEBUG  5473[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'regionDao' to allow for resolving potential circular references
[2017-10-14 22:36:54,218]DEBUG  5477[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'regionDao': AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2017-10-14 22:36:54,218]DEBUG  5477[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 22:36:54,218]DEBUG  5477[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'regionDao' to bean named 'sessionFactory'
[2017-10-14 22:36:54,219]DEBUG  5478[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 22:36:54,220]DEBUG  5479[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'regionDao'
[2017-10-14 22:36:54,220]DEBUG  5479[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'customerTypeDao'
[2017-10-14 22:36:54,220]DEBUG  5479[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'customerTypeDao'
[2017-10-14 22:36:54,221]DEBUG  5480[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao]: AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2017-10-14 22:36:54,221]DEBUG  5480[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'customerTypeDao' to allow for resolving potential circular references
[2017-10-14 22:36:54,224]DEBUG  5483[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'customerTypeDao': AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2017-10-14 22:36:54,225]DEBUG  5484[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 22:36:54,225]DEBUG  5484[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'customerTypeDao' to bean named 'sessionFactory'
[2017-10-14 22:36:54,225]DEBUG  5484[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 22:36:54,226]DEBUG  5485[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'customerTypeDao'
[2017-10-14 22:36:54,226]DEBUG  5485[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 22:36:54,228]DEBUG  5487[main] - org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(AbstractApplicationContext.java:827) - Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@166fb70f]
[2017-10-14 22:36:54,228]DEBUG  5487[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'lifecycleProcessor'
[2017-10-14 22:36:54,235]DEBUG  5494[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 22:36:54,235]DEBUG  5494[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 22:36:54,235]DEBUG  5494[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 22:36:54,235]DEBUG  5494[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 22:36:54,235]DEBUG  5494[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 22:36:54,235]DEBUG  5494[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 22:36:54,236]DEBUG  5495[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 22:36:54,236]DEBUG  5495[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 22:36:54,236]DEBUG  5495[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 22:36:54,236]DEBUG  5495[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]: AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 22:36:54,236]DEBUG  5495[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 22:36:54,236]DEBUG  5495[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 22:36:54,236]DEBUG  5495[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' to bean named 'customerTypeDao'
[2017-10-14 22:36:54,237]DEBUG  5496[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 22:36:54,237]DEBUG  5496[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 22:36:54,237]DEBUG  5496[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' to bean named 'dimensionDao'
[2017-10-14 22:36:54,237]DEBUG  5496[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 22:36:54,237]DEBUG  5496[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 22:36:54,238]DEBUG  5497[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' to bean named 'orderDao'
[2017-10-14 22:36:54,238]DEBUG  5497[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 22:36:54,238]DEBUG  5497[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 22:36:54,238]DEBUG  5497[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' to bean named 'orderItemDao'
[2017-10-14 22:36:54,238]DEBUG  5497[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 22:36:54,239]DEBUG  5498[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 22:36:54,239]DEBUG  5498[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' to bean named 'orderStatusDao'
[2017-10-14 22:36:54,239]DEBUG  5498[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 22:36:54,239]DEBUG  5498[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 22:36:54,239]DEBUG  5498[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' to bean named 'productDao'
[2017-10-14 22:36:54,240]DEBUG  5499[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 22:36:54,240]DEBUG  5499[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 22:36:54,240]DEBUG  5499[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' to bean named 'regionDao'
[2017-10-14 22:36:54,240]DEBUG  5499[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 22:36:54,240]DEBUG  5499[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 22:36:54,241]DEBUG  5500[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' to bean named 'roleDao'
[2017-10-14 22:36:54,241]DEBUG  5500[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 22:36:54,241]DEBUG  5500[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 22:36:54,241]DEBUG  5500[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' to bean named 'userDao'
[2017-10-14 22:36:54,241]DEBUG  5500[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 22:36:54,242]DEBUG  5501[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 22:36:54,242]DEBUG  5501[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' to bean named 'sessionFactory'
[2017-10-14 22:36:54,242]DEBUG  5501[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 22:36:54,244]DEBUG  5503[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'setUp' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:54,247]DEBUG  5506[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 22:36:54,251]DEBUG  5510[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@6bd26ddd]
[2017-10-14 22:36:54,300]DEBUG  5559[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
[2017-10-14 22:36:54,305]DEBUG  5564[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest.setUp() throws java.lang.Exception
[2017-10-14 22:36:54,306]DEBUG  5565[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'tearDown' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:54,306]DEBUG  5565[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest.tearDown()
[2017-10-14 22:36:54,307]DEBUG  5566[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByID' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:54,307]DEBUG  5566[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest.testFindByID()
[2017-10-14 22:36:54,307]DEBUG  5566[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetStandartTypeDiscount' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:54,307]DEBUG  5566[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest.testGetStandartTypeDiscount()
[2017-10-14 22:36:54,307]DEBUG  5566[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetSilverTypeDiscount' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:54,308]DEBUG  5567[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest.testGetSilverTypeDiscount()
[2017-10-14 22:36:54,308]DEBUG  5567[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetGoldTypeDiscount' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:54,308]DEBUG  5567[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest.testGetGoldTypeDiscount()
[2017-10-14 22:36:54,308]DEBUG  5567[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetPlatinumTypeDiscount' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:54,308]DEBUG  5567[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest.testGetPlatinumTypeDiscount()
[2017-10-14 22:36:54,309]DEBUG  5568[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindAll' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:54,309]DEBUG  5568[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest.testFindAll()
[2017-10-14 22:36:54,309]DEBUG  5568[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByCriterions' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:54,309]DEBUG  5568[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest.testFindByCriterions()
[2017-10-14 22:36:54,310]DEBUG  5569[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByOneOfCriterions' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:54,310]DEBUG  5569[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest.testFindByOneOfCriterions()
[2017-10-14 22:36:54,310]DEBUG  5569[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testInsertOrUpdate' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:54,310]DEBUG  5569[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest.testInsertOrUpdate()
[2017-10-14 22:36:54,310]DEBUG  5569[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testDelete' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:54,311]DEBUG  5570[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest.testDelete()
[2017-10-14 22:36:54,311]DEBUG  5570[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanDB()
[2017-10-14 22:36:54,311]DEBUG  5570[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanCustomerType()
[2017-10-14 22:36:54,311]DEBUG  5570[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testContextFile' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:54,311]DEBUG  5570[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.testContextFile()
[2017-10-14 22:36:54,311]DEBUG  5570[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanUser()
[2017-10-14 22:36:54,312]DEBUG  5571[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanRole()
[2017-10-14 22:36:54,312]DEBUG  5571[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanRegion()
[2017-10-14 22:36:54,312]DEBUG  5571[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanProduct()
[2017-10-14 22:36:54,312]DEBUG  5571[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrderStatus()
[2017-10-14 22:36:54,312]DEBUG  5571[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrderItem()
[2017-10-14 22:36:54,312]DEBUG  5571[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrder()
[2017-10-14 22:36:54,312]DEBUG  5571[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanDimension()
[2017-10-14 22:36:54,313]DEBUG  5572[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:749) - Found finalize() method - using NO_OVERRIDE
[2017-10-14 22:36:54,313]DEBUG  5572[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:761) - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
[2017-10-14 22:36:54,313]DEBUG  5572[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
[2017-10-14 22:36:54,313]DEBUG  5572[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:766) - Found 'hashCode' method: public native int java.lang.Object.hashCode()
[2017-10-14 22:36:54,313]DEBUG  5572[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
[2017-10-14 22:36:54,313]DEBUG  5572[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
[2017-10-14 22:36:54,314]DEBUG  5573[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
[2017-10-14 22:36:54,314]DEBUG  5573[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
[2017-10-14 22:36:54,314]DEBUG  5573[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
[2017-10-14 22:36:54,314]DEBUG  5573[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2017-10-14 22:36:54,314]DEBUG  5573[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2017-10-14 22:36:54,314]DEBUG  5573[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
[2017-10-14 22:36:54,314]DEBUG  5573[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
[2017-10-14 22:36:54,315]DEBUG  5574[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
[2017-10-14 22:36:54,315]DEBUG  5574[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
[2017-10-14 22:36:54,315]DEBUG  5574[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
[2017-10-14 22:36:54,315]DEBUG  5574[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
[2017-10-14 22:36:54,315]DEBUG  5574[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
[2017-10-14 22:36:54,315]DEBUG  5574[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
[2017-10-14 22:36:54,315]DEBUG  5574[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
[2017-10-14 22:36:54,316]DEBUG  5575[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
[2017-10-14 22:36:54,316]DEBUG  5575[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
[2017-10-14 22:36:54,316]DEBUG  5575[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
[2017-10-14 22:36:54,316]DEBUG  5575[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2017-10-14 22:36:54,316]DEBUG  5575[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
[2017-10-14 22:36:54,316]DEBUG  5575[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
[2017-10-14 22:36:54,316]DEBUG  5575[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
[2017-10-14 22:36:54,317]DEBUG  5576[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
[2017-10-14 22:36:54,343]DEBUG  5602[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByID' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:54,345]DEBUG  5604[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@1833b96c testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@6bd26ddd, testMethod = testFindByID@CustomerTypeDaoTest, testException = [null]]]
[2017-10-14 22:36:54,346]DEBUG  5605[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.retrieveConfigurationAttributes(TransactionalTestExecutionListener.java:466) - Retrieved @TransactionConfiguration [@org.springframework.test.context.transaction.TransactionConfiguration(transactionManager=transactionManager, defaultRollback=true)] for test class [class com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2017-10-14 22:36:54,346]DEBUG  5605[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.retrieveConfigurationAttributes(TransactionalTestExecutionListener.java:483) - Retrieved TransactionConfigurationAttributes [[TransactionConfigurationAttributes@3b1b6813 transactionManagerName = 'transactionManager', defaultRollback = true]] for class [class com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2017-10-14 22:36:54,346]DEBUG  5605[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 22:36:54,351]DEBUG  5610[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByID]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:54,372]DEBUG  5631[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15080098143
[2017-10-14 22:36:54,372]DEBUG  5631[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@3a918a66] for Hibernate transaction
[2017-10-14 22:36:54,374]DEBUG  5633[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@3a918a66]
[2017-10-14 22:36:54,383]DEBUG  5642[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 22:36:54,383]DEBUG  5642[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 22:36:54,383]DEBUG  5642[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 22:36:54,384]DEBUG  5643[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@1833b96c testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@6bd26ddd, testMethod = testFindByID@CustomerTypeDaoTest, testException = [null]]]
[2017-10-14 22:36:54,384] INFO  5643[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (1): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@598b619b]; rollback [true]
[2017-10-14 22:36:54,392]DEBUG  5651[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:54,400]DEBUG  5659[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:54,400]DEBUG  5659[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-14 22:36:54,410]DEBUG  5669[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 1
[2017-10-14 22:36:54,410]DEBUG  5669[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:54,412]DEBUG  5671[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:54,412]DEBUG  5671[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:54,412]DEBUG  5671[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-14 22:36:54,413]DEBUG  5672[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 2
[2017-10-14 22:36:54,413]DEBUG  5672[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:54,413]DEBUG  5672[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:54,413]DEBUG  5672[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:54,414]DEBUG  5673[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-14 22:36:54,414]DEBUG  5673[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 3
[2017-10-14 22:36:54,414]DEBUG  5673[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:54,415]DEBUG  5674[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:54,415]DEBUG  5674[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:54,415]DEBUG  5674[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-14 22:36:54,416]DEBUG  5675[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 4
[2017-10-14 22:36:54,416]DEBUG  5675[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:54,443]DEBUG  5702[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: from com.softserveinc.edu.oms.domain.entities.CustomerType customerT where customerT.typeName = :Standard
[2017-10-14 22:36:54,472]DEBUG  5731[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  |  |  +-[IDENT] Node: 'com'
    |        |  |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
    |        |  |  |  |  |  \-[IDENT] Node: 'edu'
    |        |  |  |  |  \-[IDENT] Node: 'oms'
    |        |  |  |  \-[IDENT] Node: 'domain'
    |        |  |  \-[IDENT] Node: 'entities'
    |        |  \-[IDENT] Node: 'CustomerType'
    |        \-[ALIAS] Node: 'customerT'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'customerT'
          |  \-[IDENT] Node: 'typeName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'Standard'

[2017-10-14 22:36:54,472]DEBUG  5731[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-14 22:36:54,500]DEBUG  5759[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - select << begin [level=1, statement=select]
[2017-10-14 22:36:54,509]DEBUG  5768[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.CustomerType (customerT) -> customerty0_
[2017-10-14 22:36:54,510]DEBUG  5769[main] - org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  customerT -> customerty0_.ID
[2017-10-14 22:36:54,511]DEBUG  5770[main] - org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : typeName -> org.hibernate.type.StringType@36cebdbf
[2017-10-14 22:36:54,512]DEBUG  5771[main] - org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  customerT.typeName -> customerty0_.TypeName
[2017-10-14 22:36:54,514]DEBUG  5773[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - select : finishing up [level=1, statement=select]
[2017-10-14 22:36:54,514]DEBUG  5773[main] - org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) - processQuery() :  ( SELECT ( FromClause{level=1} CustomerTypes customerty0_ ) ( where ( = ( customerty0_.TypeName customerty0_.ID typeName ) ? ) ) )
[2017-10-14 22:36:54,517]DEBUG  5776[main] - org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) - Derived SELECT clause created.
[2017-10-14 22:36:54,520]DEBUG  5779[main] - org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) - Using FROM fragment [CustomerTypes customerty0_]
[2017-10-14 22:36:54,520]DEBUG  5779[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - select >> end [level=1, statement=select]
[2017-10-14 22:36:54,521]DEBUG  5780[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerTypes)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'customerty0_.ID as ID2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=customerT,role=null,tableName=CustomerTypes,tableAlias=customerty0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.CustomerType}}}
    |  \-[SQL_TOKEN] SqlFragment: 'customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[customerT], fromElementByTableAlias=[customerty0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CustomerTypes customerty0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=customerT,role=null,tableName=CustomerTypes,tableAlias=customerty0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.CustomerType}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customerty0_.TypeName' {propertyName=typeName,dereferenceType=ALL,propertyPath=typeName,path=customerT.typeName,tableAlias=customerty0_,className=com.softserveinc.edu.oms.domain.entities.CustomerType,classAlias=customerT}
          |  +-[ALIAS_REF] IdentNode: 'customerty0_.ID' {alias=customerT, className=com.softserveinc.edu.oms.domain.entities.CustomerType, tableAlias=customerty0_}
          |  \-[IDENT] IdentNode: 'typeName' {originalText=typeName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=Standard, expectedType=org.hibernate.type.StringType@36cebdbf}

[2017-10-14 22:36:54,521]DEBUG  5780[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-14 22:36:54,529]DEBUG  5788[main] - org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:241) - HQL: from com.softserveinc.edu.oms.domain.entities.CustomerType customerT where customerT.typeName = :Standard
[2017-10-14 22:36:54,529]DEBUG  5788[main] - org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:242) - SQL: select customerty0_.ID as ID2_, customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_ from CustomerTypes customerty0_ where customerty0_.TypeName=?
[2017-10-14 22:36:54,529]DEBUG  5788[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-14 22:36:54,542]DEBUG  5801[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:54,543]DEBUG  5802[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:54,545]DEBUG  5804[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:54,545]DEBUG  5804[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:54,546]DEBUG  5805[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:54,546]DEBUG  5805[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=3, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,546]DEBUG  5805[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=4, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,546]DEBUG  5805[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=2, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,547]DEBUG  5806[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=1, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,548]DEBUG  5807[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:54,548]DEBUG  5807[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select customerty0_.ID as ID2_, customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_ from CustomerTypes customerty0_ where customerty0_.TypeName=?
[2017-10-14 22:36:54,550]DEBUG  5809[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:54,553]DEBUG  5812[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.CustomerType#1]
[2017-10-14 22:36:54,553]DEBUG  5812[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:54,553]DEBUG  5812[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:54,554]DEBUG  5813[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:54,557]DEBUG  5816[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: Delete From com.softserveinc.edu.oms.domain.entities.OrderItem
[2017-10-14 22:36:54,559]DEBUG  5818[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[DELETE] Node: 'Delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[DOT] Node: '.'
             |  |  |  |  +-[DOT] Node: '.'
             |  |  |  |  |  +-[IDENT] Node: 'com'
             |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
             |  |  |  |  \-[IDENT] Node: 'edu'
             |  |  |  \-[IDENT] Node: 'oms'
             |  |  \-[IDENT] Node: 'domain'
             |  \-[IDENT] Node: 'entities'
             \-[IDENT] Node: 'OrderItem'

[2017-10-14 22:36:54,559]DEBUG  5818[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-14 22:36:54,560]DEBUG  5819[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - delete << begin [level=1, statement=delete]
[2017-10-14 22:36:54,561]DEBUG  5820[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.OrderItem (no alias) -> orderitem0_
[2017-10-14 22:36:54,561]DEBUG  5820[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - delete : finishing up [level=1, statement=delete]
[2017-10-14 22:36:54,561]DEBUG  5820[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - delete >> end [level=1, statement=delete]
[2017-10-14 22:36:54,562]DEBUG  5821[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'Delete'  querySpaces (OrderItems)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[orderitem0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'OrderItems' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=OrderItems,tableAlias=orderitem0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.OrderItem}}

[2017-10-14 22:36:54,562]DEBUG  5821[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-14 22:36:54,565]DEBUG  5824[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-14 22:36:54,565]DEBUG  5824[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:54,565]DEBUG  5824[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:54,566]DEBUG  5825[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:54,566]DEBUG  5825[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:54,567]DEBUG  5826[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:54,567]DEBUG  5826[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=3, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,567]DEBUG  5826[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=4, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,568]DEBUG  5827[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=2, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,568]DEBUG  5827[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=1, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,569]DEBUG  5828[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:54,569]DEBUG  5828[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 22:36:54,570]DEBUG  5829[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:54,571]DEBUG  5830[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: Delete From com.softserveinc.edu.oms.domain.entities.Dimension
[2017-10-14 22:36:54,573]DEBUG  5832[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[DELETE] Node: 'Delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[DOT] Node: '.'
             |  |  |  |  +-[DOT] Node: '.'
             |  |  |  |  |  +-[IDENT] Node: 'com'
             |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
             |  |  |  |  \-[IDENT] Node: 'edu'
             |  |  |  \-[IDENT] Node: 'oms'
             |  |  \-[IDENT] Node: 'domain'
             |  \-[IDENT] Node: 'entities'
             \-[IDENT] Node: 'Dimension'

[2017-10-14 22:36:54,573]DEBUG  5832[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-14 22:36:54,573]DEBUG  5832[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - delete << begin [level=1, statement=delete]
[2017-10-14 22:36:54,574]DEBUG  5833[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.Dimension (no alias) -> dimension0_
[2017-10-14 22:36:54,574]DEBUG  5833[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - delete : finishing up [level=1, statement=delete]
[2017-10-14 22:36:54,575]DEBUG  5834[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - delete >> end [level=1, statement=delete]
[2017-10-14 22:36:54,575]DEBUG  5834[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'Delete'  querySpaces (Dimensions)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[dimension0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Dimensions' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Dimensions,tableAlias=dimension0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.Dimension}}

[2017-10-14 22:36:54,575]DEBUG  5834[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-14 22:36:54,576]DEBUG  5835[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-14 22:36:54,576]DEBUG  5835[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:54,576]DEBUG  5835[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:54,577]DEBUG  5836[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:54,577]DEBUG  5836[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:54,577]DEBUG  5836[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:54,577]DEBUG  5836[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=3, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,577]DEBUG  5836[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=4, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,578]DEBUG  5837[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=2, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,578]DEBUG  5837[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=1, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,578]DEBUG  5837[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:54,582]DEBUG  5841[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 22:36:54,583]DEBUG  5842[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:54,584]DEBUG  5843[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: Delete From com.softserveinc.edu.oms.domain.entities.Product
[2017-10-14 22:36:54,586]DEBUG  5845[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[DELETE] Node: 'Delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[DOT] Node: '.'
             |  |  |  |  +-[DOT] Node: '.'
             |  |  |  |  |  +-[IDENT] Node: 'com'
             |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
             |  |  |  |  \-[IDENT] Node: 'edu'
             |  |  |  \-[IDENT] Node: 'oms'
             |  |  \-[IDENT] Node: 'domain'
             |  \-[IDENT] Node: 'entities'
             \-[IDENT] Node: 'Product'

[2017-10-14 22:36:54,586]DEBUG  5845[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-14 22:36:54,587]DEBUG  5846[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - delete << begin [level=1, statement=delete]
[2017-10-14 22:36:54,587]DEBUG  5846[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.Product (no alias) -> product0_
[2017-10-14 22:36:54,587]DEBUG  5846[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - delete : finishing up [level=1, statement=delete]
[2017-10-14 22:36:54,587]DEBUG  5846[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - delete >> end [level=1, statement=delete]
[2017-10-14 22:36:54,588]DEBUG  5847[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'Delete'  querySpaces (Products)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[product0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Products' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Products,tableAlias=product0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.Product}}

[2017-10-14 22:36:54,588]DEBUG  5847[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-14 22:36:54,589]DEBUG  5848[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-14 22:36:54,589]DEBUG  5848[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:54,589]DEBUG  5848[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:54,589]DEBUG  5848[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:54,589]DEBUG  5848[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:54,589]DEBUG  5848[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:54,590]DEBUG  5849[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=3, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,590]DEBUG  5849[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=4, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,590]DEBUG  5849[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=2, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,590]DEBUG  5849[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=1, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,590]DEBUG  5849[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:54,591]DEBUG  5850[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 22:36:54,591]DEBUG  5850[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:54,592]DEBUG  5851[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: Delete From com.softserveinc.edu.oms.domain.entities.Order
[2017-10-14 22:36:54,593]DEBUG  5852[main] - org.hibernate.hql.ast.HqlParser.weakKeywords(HqlParser.java:340) - weakKeywords() : new LT(1) token - ["Order",<126> previously: <41>,line=1,col=54,possibleID=true]
[2017-10-14 22:36:54,594]DEBUG  5853[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[DELETE] Node: 'Delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[DOT] Node: '.'
             |  |  |  |  +-[DOT] Node: '.'
             |  |  |  |  |  +-[IDENT] Node: 'com'
             |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
             |  |  |  |  \-[IDENT] Node: 'edu'
             |  |  |  \-[IDENT] Node: 'oms'
             |  |  \-[IDENT] Node: 'domain'
             |  \-[IDENT] Node: 'entities'
             \-[IDENT] Node: 'Order'

[2017-10-14 22:36:54,594]DEBUG  5853[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-14 22:36:54,595]DEBUG  5854[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - delete << begin [level=1, statement=delete]
[2017-10-14 22:36:54,595]DEBUG  5854[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.Order (no alias) -> order0_
[2017-10-14 22:36:54,595]DEBUG  5854[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - delete : finishing up [level=1, statement=delete]
[2017-10-14 22:36:54,595]DEBUG  5854[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - delete >> end [level=1, statement=delete]
[2017-10-14 22:36:54,596]DEBUG  5855[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'Delete'  querySpaces (Orders)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[order0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Orders' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Orders,tableAlias=order0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.Order}}

[2017-10-14 22:36:54,596]DEBUG  5855[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-14 22:36:54,596]DEBUG  5855[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-14 22:36:54,597]DEBUG  5856[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:54,597]DEBUG  5856[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:54,597]DEBUG  5856[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:54,597]DEBUG  5856[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:54,597]DEBUG  5856[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:54,598]DEBUG  5857[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=3, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,599]DEBUG  5858[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=4, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,599]DEBUG  5858[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=2, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,599]DEBUG  5858[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=1, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,599]DEBUG  5858[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:54,599]DEBUG  5858[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 22:36:54,600]DEBUG  5859[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:54,601]DEBUG  5860[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: Delete From com.softserveinc.edu.oms.domain.entities.OrderStatus
[2017-10-14 22:36:54,603]DEBUG  5862[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[DELETE] Node: 'Delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[DOT] Node: '.'
             |  |  |  |  +-[DOT] Node: '.'
             |  |  |  |  |  +-[IDENT] Node: 'com'
             |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
             |  |  |  |  \-[IDENT] Node: 'edu'
             |  |  |  \-[IDENT] Node: 'oms'
             |  |  \-[IDENT] Node: 'domain'
             |  \-[IDENT] Node: 'entities'
             \-[IDENT] Node: 'OrderStatus'

[2017-10-14 22:36:54,603]DEBUG  5862[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-14 22:36:54,604]DEBUG  5863[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - delete << begin [level=1, statement=delete]
[2017-10-14 22:36:54,604]DEBUG  5863[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.OrderStatus (no alias) -> orderstatu0_
[2017-10-14 22:36:54,604]DEBUG  5863[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - delete : finishing up [level=1, statement=delete]
[2017-10-14 22:36:54,605]DEBUG  5864[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - delete >> end [level=1, statement=delete]
[2017-10-14 22:36:54,605]DEBUG  5864[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'Delete'  querySpaces (OrderStatuses)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[orderstatu0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'OrderStatuses' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=OrderStatuses,tableAlias=orderstatu0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.OrderStatus}}

[2017-10-14 22:36:54,605]DEBUG  5864[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-14 22:36:54,606]DEBUG  5865[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-14 22:36:54,606]DEBUG  5865[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:54,606]DEBUG  5865[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:54,606]DEBUG  5865[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:54,607]DEBUG  5866[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:54,607]DEBUG  5866[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:54,607]DEBUG  5866[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=3, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,607]DEBUG  5866[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=4, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,609]DEBUG  5868[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=2, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,610]DEBUG  5869[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=1, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,610]DEBUG  5869[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:54,610]DEBUG  5869[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 22:36:54,611]DEBUG  5870[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:54,612]DEBUG  5871[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: Delete From com.softserveinc.edu.oms.domain.entities.User
[2017-10-14 22:36:54,613]DEBUG  5872[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[DELETE] Node: 'Delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[DOT] Node: '.'
             |  |  |  |  +-[DOT] Node: '.'
             |  |  |  |  |  +-[IDENT] Node: 'com'
             |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
             |  |  |  |  \-[IDENT] Node: 'edu'
             |  |  |  \-[IDENT] Node: 'oms'
             |  |  \-[IDENT] Node: 'domain'
             |  \-[IDENT] Node: 'entities'
             \-[IDENT] Node: 'User'

[2017-10-14 22:36:54,614]DEBUG  5873[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-14 22:36:54,614]DEBUG  5873[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - delete << begin [level=1, statement=delete]
[2017-10-14 22:36:54,614]DEBUG  5873[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.User (no alias) -> user0_
[2017-10-14 22:36:54,615]DEBUG  5874[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - delete : finishing up [level=1, statement=delete]
[2017-10-14 22:36:54,615]DEBUG  5874[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - delete >> end [level=1, statement=delete]
[2017-10-14 22:36:54,615]DEBUG  5874[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'Delete'  querySpaces (Users)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Users' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Users,tableAlias=user0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.User}}

[2017-10-14 22:36:54,615]DEBUG  5874[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-14 22:36:54,616]DEBUG  5875[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-14 22:36:54,616]DEBUG  5875[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:54,616]DEBUG  5875[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:54,616]DEBUG  5875[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:54,617]DEBUG  5876[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:54,617]DEBUG  5876[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:54,617]DEBUG  5876[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=3, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,617]DEBUG  5876[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=4, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,618]DEBUG  5877[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=2, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,618]DEBUG  5877[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=1, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,618]DEBUG  5877[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:54,618]DEBUG  5877[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 22:36:54,619]DEBUG  5878[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:54,620]DEBUG  5879[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: Delete From com.softserveinc.edu.oms.domain.entities.CustomerType
[2017-10-14 22:36:54,621]DEBUG  5880[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[DELETE] Node: 'Delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[DOT] Node: '.'
             |  |  |  |  +-[DOT] Node: '.'
             |  |  |  |  |  +-[IDENT] Node: 'com'
             |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
             |  |  |  |  \-[IDENT] Node: 'edu'
             |  |  |  \-[IDENT] Node: 'oms'
             |  |  \-[IDENT] Node: 'domain'
             |  \-[IDENT] Node: 'entities'
             \-[IDENT] Node: 'CustomerType'

[2017-10-14 22:36:54,622]DEBUG  5881[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-14 22:36:54,622]DEBUG  5881[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - delete << begin [level=1, statement=delete]
[2017-10-14 22:36:54,622]DEBUG  5881[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.CustomerType (no alias) -> customerty0_
[2017-10-14 22:36:54,622]DEBUG  5881[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - delete : finishing up [level=1, statement=delete]
[2017-10-14 22:36:54,623]DEBUG  5882[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - delete >> end [level=1, statement=delete]
[2017-10-14 22:36:54,623]DEBUG  5882[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'Delete'  querySpaces (CustomerTypes)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[customerty0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'CustomerTypes' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=CustomerTypes,tableAlias=customerty0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.CustomerType}}

[2017-10-14 22:36:54,623]DEBUG  5882[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-14 22:36:54,624]DEBUG  5883[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-14 22:36:54,624]DEBUG  5883[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:54,624]DEBUG  5883[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:54,624]DEBUG  5883[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:54,624]DEBUG  5883[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:54,625]DEBUG  5884[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:54,625]DEBUG  5884[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=3, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,625]DEBUG  5884[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=4, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,625]DEBUG  5884[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=2, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,625]DEBUG  5884[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=1, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,625]DEBUG  5884[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:54,626]DEBUG  5885[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 22:36:54,626]DEBUG  5885[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:54,627]DEBUG  5886[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: Delete From com.softserveinc.edu.oms.domain.entities.Region
[2017-10-14 22:36:54,629]DEBUG  5888[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[DELETE] Node: 'Delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[DOT] Node: '.'
             |  |  |  |  +-[DOT] Node: '.'
             |  |  |  |  |  +-[IDENT] Node: 'com'
             |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
             |  |  |  |  \-[IDENT] Node: 'edu'
             |  |  |  \-[IDENT] Node: 'oms'
             |  |  \-[IDENT] Node: 'domain'
             |  \-[IDENT] Node: 'entities'
             \-[IDENT] Node: 'Region'

[2017-10-14 22:36:54,629]DEBUG  5888[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-14 22:36:54,629]DEBUG  5888[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - delete << begin [level=1, statement=delete]
[2017-10-14 22:36:54,630]DEBUG  5889[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.Region (no alias) -> region0_
[2017-10-14 22:36:54,630]DEBUG  5889[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - delete : finishing up [level=1, statement=delete]
[2017-10-14 22:36:54,630]DEBUG  5889[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - delete >> end [level=1, statement=delete]
[2017-10-14 22:36:54,631]DEBUG  5890[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'Delete'  querySpaces (Regions)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[region0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Regions' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Regions,tableAlias=region0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.Region}}

[2017-10-14 22:36:54,631]DEBUG  5890[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-14 22:36:54,631]DEBUG  5890[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-14 22:36:54,631]DEBUG  5890[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:54,632]DEBUG  5891[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:54,632]DEBUG  5891[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:54,632]DEBUG  5891[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:54,632]DEBUG  5891[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:54,632]DEBUG  5891[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=3, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,633]DEBUG  5892[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=4, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,633]DEBUG  5892[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=2, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,633]DEBUG  5892[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=1, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,633]DEBUG  5892[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:54,633]DEBUG  5892[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 22:36:54,634]DEBUG  5893[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:54,635]DEBUG  5894[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: Delete From com.softserveinc.edu.oms.domain.entities.Role
[2017-10-14 22:36:54,637]DEBUG  5896[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[DELETE] Node: 'Delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[DOT] Node: '.'
             |  |  |  |  +-[DOT] Node: '.'
             |  |  |  |  |  +-[IDENT] Node: 'com'
             |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
             |  |  |  |  \-[IDENT] Node: 'edu'
             |  |  |  \-[IDENT] Node: 'oms'
             |  |  \-[IDENT] Node: 'domain'
             |  \-[IDENT] Node: 'entities'
             \-[IDENT] Node: 'Role'

[2017-10-14 22:36:54,637]DEBUG  5896[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-14 22:36:54,638]DEBUG  5897[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - delete << begin [level=1, statement=delete]
[2017-10-14 22:36:54,638]DEBUG  5897[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.Role (no alias) -> role0_
[2017-10-14 22:36:54,638]DEBUG  5897[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - delete : finishing up [level=1, statement=delete]
[2017-10-14 22:36:54,638]DEBUG  5897[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - delete >> end [level=1, statement=delete]
[2017-10-14 22:36:54,639]DEBUG  5898[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'Delete'  querySpaces (Roles)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[role0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Roles' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Roles,tableAlias=role0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.Role}}

[2017-10-14 22:36:54,639]DEBUG  5898[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-14 22:36:54,640]DEBUG  5899[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-14 22:36:54,640]DEBUG  5899[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:54,640]DEBUG  5899[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:54,640]DEBUG  5899[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:54,640]DEBUG  5899[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:54,641]DEBUG  5900[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:54,641]DEBUG  5900[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=3, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,641]DEBUG  5900[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=4, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,641]DEBUG  5900[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=2, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,641]DEBUG  5900[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=1, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,642]DEBUG  5901[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:54,642]DEBUG  5901[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 22:36:54,642]DEBUG  5901[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:54,643]DEBUG  5902[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@1833b96c testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@6bd26ddd, testMethod = testFindByID@CustomerTypeDaoTest, testException = [null]]]
[2017-10-14 22:36:54,643]DEBUG  5902[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 22:36:54,643]DEBUG  5902[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@3a918a66]
[2017-10-14 22:36:54,643]DEBUG  5902[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 22:36:54,710]DEBUG  5969[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 22:36:54,711]DEBUG  5970[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:54,712]DEBUG  5971[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@3a918a66] after transaction
[2017-10-14 22:36:54,712]DEBUG  5971[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 22:36:54,714]DEBUG  5973[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 22:36:54,715]DEBUG  5974[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:54,718] INFO  5977[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@1833b96c testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@6bd26ddd, testMethod = testFindByID@CustomerTypeDaoTest, testException = [null]]]
[2017-10-14 22:36:54,720]DEBUG  5979[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@1833b96c testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@6bd26ddd, testMethod = testFindByID@CustomerTypeDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 22:36:54,722]DEBUG  5981[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2017-10-14 22:36:54,722]DEBUG  5981[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2017-10-14 22:36:54,723]DEBUG  5982[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@1833b96c testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@53479964, testMethod = [null], testException = [null]]].
[2017-10-14 22:36:54,724]DEBUG  5983[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 22:36:54,724]DEBUG  5983[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 22:36:54,724]DEBUG  5983[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 22:36:54,725]DEBUG  5984[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 22:36:54,725]DEBUG  5984[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 22:36:54,725]DEBUG  5984[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 22:36:54,726]DEBUG  5985[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 22:36:54,726]DEBUG  5985[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 22:36:54,726]DEBUG  5985[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 22:36:54,727]DEBUG  5986[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 22:36:54,727]DEBUG  5986[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 22:36:54,727]DEBUG  5986[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 22:36:54,727]DEBUG  5986[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 22:36:54,728]DEBUG  5987[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 22:36:54,728]DEBUG  5987[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 22:36:54,728]DEBUG  5987[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 22:36:54,729]DEBUG  5988[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 22:36:54,729]DEBUG  5988[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 22:36:54,729]DEBUG  5988[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 22:36:54,729]DEBUG  5988[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 22:36:54,729]DEBUG  5988[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 22:36:54,729]DEBUG  5988[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 22:36:54,730]DEBUG  5989[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@53479964]
[2017-10-14 22:36:54,730]DEBUG  5989[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetStandartTypeDiscount' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:54,730]DEBUG  5989[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@1833b96c testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@53479964, testMethod = testGetStandartTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2017-10-14 22:36:54,731]DEBUG  5990[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 22:36:54,731]DEBUG  5990[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testGetStandartTypeDiscount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:54,732]DEBUG  5991[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15080098147
[2017-10-14 22:36:54,732]DEBUG  5991[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@a7969a0] for Hibernate transaction
[2017-10-14 22:36:54,732]DEBUG  5991[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@a7969a0]
[2017-10-14 22:36:54,732]DEBUG  5991[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 22:36:54,732]DEBUG  5991[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 22:36:54,732]DEBUG  5991[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 22:36:54,732]DEBUG  5991[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@1833b96c testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@53479964, testMethod = testGetStandartTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2017-10-14 22:36:54,733] INFO  5992[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (2): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@598b619b]; rollback [true]
[2017-10-14 22:36:54,733]DEBUG  5992[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:54,733]DEBUG  5992[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:54,733]DEBUG  5992[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-14 22:36:54,734]DEBUG  5993[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 5
[2017-10-14 22:36:54,734]DEBUG  5993[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:54,735]DEBUG  5994[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:54,735]DEBUG  5994[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:54,735]DEBUG  5994[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-14 22:36:54,736]DEBUG  5995[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 6
[2017-10-14 22:36:54,736]DEBUG  5995[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:54,736]DEBUG  5995[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:54,737]DEBUG  5996[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:54,737]DEBUG  5996[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-14 22:36:54,738]DEBUG  5997[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 7
[2017-10-14 22:36:54,738]DEBUG  5997[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:54,738]DEBUG  5997[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:54,738]DEBUG  5997[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:54,738]DEBUG  5997[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-14 22:36:54,739]DEBUG  5998[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 8
[2017-10-14 22:36:54,739]DEBUG  5998[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:54,739]DEBUG  5998[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:54,740]DEBUG  5999[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:54,740]DEBUG  5999[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:54,740]DEBUG  5999[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:54,740]DEBUG  5999[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:54,740]DEBUG  5999[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=5, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,741]DEBUG  6000[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=6, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,741]DEBUG  6000[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=7, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,741]DEBUG  6000[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=8, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,741]DEBUG  6000[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:54,741]DEBUG  6000[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select customerty0_.ID as ID2_, customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_ from CustomerTypes customerty0_ where customerty0_.TypeName=?
[2017-10-14 22:36:54,742]DEBUG  6001[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:54,742]DEBUG  6001[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.CustomerType#5]
[2017-10-14 22:36:54,743]DEBUG  6002[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:54,743]DEBUG  6002[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:54,743]DEBUG  6002[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:54,743]DEBUG  6002[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:54,743]DEBUG  6002[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:54,743]DEBUG  6002[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:54,744]DEBUG  6003[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:54,744]DEBUG  6003[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:54,744]DEBUG  6003[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=5, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,744]DEBUG  6003[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=6, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,744]DEBUG  6003[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=7, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,744]DEBUG  6003[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=8, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,745]DEBUG  6004[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:54,745]DEBUG  6004[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 22:36:54,745]DEBUG  6004[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:54,745]DEBUG  6004[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:54,745]DEBUG  6004[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:54,746]DEBUG  6005[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:54,746]DEBUG  6005[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:54,746]DEBUG  6005[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:54,746]DEBUG  6005[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=5, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,746]DEBUG  6005[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=6, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,746]DEBUG  6005[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=7, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,747]DEBUG  6006[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=8, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,747]DEBUG  6006[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:54,747]DEBUG  6006[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 22:36:54,747]DEBUG  6006[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:54,747]DEBUG  6006[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:54,748]DEBUG  6007[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:54,748]DEBUG  6007[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:54,748]DEBUG  6007[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:54,748]DEBUG  6007[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:54,748]DEBUG  6007[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=5, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,748]DEBUG  6007[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=6, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,749]DEBUG  6008[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=7, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,749]DEBUG  6008[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=8, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,749]DEBUG  6008[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:54,749]DEBUG  6008[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 22:36:54,749]DEBUG  6008[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:54,750]DEBUG  6009[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:54,750]DEBUG  6009[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:54,750]DEBUG  6009[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:54,750]DEBUG  6009[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:54,750]DEBUG  6009[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:54,751]DEBUG  6010[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=5, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,751]DEBUG  6010[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=6, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,751]DEBUG  6010[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=7, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,751]DEBUG  6010[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=8, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,751]DEBUG  6010[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:54,751]DEBUG  6010[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 22:36:54,752]DEBUG  6011[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:54,752]DEBUG  6011[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:54,752]DEBUG  6011[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:54,752]DEBUG  6011[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:54,752]DEBUG  6011[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:54,753]DEBUG  6012[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:54,753]DEBUG  6012[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=5, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,753]DEBUG  6012[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=6, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,753]DEBUG  6012[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=7, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,753]DEBUG  6012[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=8, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,753]DEBUG  6012[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:54,754]DEBUG  6013[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 22:36:54,754]DEBUG  6013[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:54,754]DEBUG  6013[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:54,754]DEBUG  6013[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:54,755]DEBUG  6014[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:54,755]DEBUG  6014[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:54,755]DEBUG  6014[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:54,755]DEBUG  6014[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=5, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,755]DEBUG  6014[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=6, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,755]DEBUG  6014[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=7, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,756]DEBUG  6015[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=8, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,756]DEBUG  6015[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:54,756]DEBUG  6015[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 22:36:54,756]DEBUG  6015[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:54,757]DEBUG  6016[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:54,757]DEBUG  6016[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:54,757]DEBUG  6016[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:54,757]DEBUG  6016[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:54,757]DEBUG  6016[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:54,757]DEBUG  6016[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=5, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,758]DEBUG  6017[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=6, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,758]DEBUG  6017[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=7, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,758]DEBUG  6017[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=8, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,758]DEBUG  6017[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:54,758]DEBUG  6017[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 22:36:54,759]DEBUG  6018[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:54,759]DEBUG  6018[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:54,759]DEBUG  6018[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:54,760]DEBUG  6019[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:54,760]DEBUG  6019[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:54,760]DEBUG  6019[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:54,760]DEBUG  6019[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=5, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,760]DEBUG  6019[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=6, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,760]DEBUG  6019[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=7, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,761]DEBUG  6020[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=8, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,761]DEBUG  6020[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:54,761]DEBUG  6020[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 22:36:54,761]DEBUG  6020[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:54,762]DEBUG  6021[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:54,762]DEBUG  6021[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:54,762]DEBUG  6021[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:54,762]DEBUG  6021[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:54,762]DEBUG  6021[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:54,763]DEBUG  6022[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=5, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,763]DEBUG  6022[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=6, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,763]DEBUG  6022[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=7, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,763]DEBUG  6022[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=8, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,763]DEBUG  6022[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:54,764]DEBUG  6023[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 22:36:54,764]DEBUG  6023[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:54,764]DEBUG  6023[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@1833b96c testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@53479964, testMethod = testGetStandartTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2017-10-14 22:36:54,764]DEBUG  6023[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 22:36:54,764]DEBUG  6023[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@a7969a0]
[2017-10-14 22:36:54,775]DEBUG  6034[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 22:36:54,818]DEBUG  6077[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 22:36:54,819]DEBUG  6078[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:54,819]DEBUG  6078[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@a7969a0] after transaction
[2017-10-14 22:36:54,819]DEBUG  6078[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 22:36:54,820]DEBUG  6079[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 22:36:54,820]DEBUG  6079[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:54,820] INFO  6079[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@1833b96c testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@53479964, testMethod = testGetStandartTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2017-10-14 22:36:54,822]DEBUG  6081[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@1833b96c testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@53479964, testMethod = testGetStandartTypeDiscount@CustomerTypeDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 22:36:54,823]DEBUG  6082[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2017-10-14 22:36:54,823]DEBUG  6082[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2017-10-14 22:36:54,824]DEBUG  6083[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@1833b96c testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@b937a2c, testMethod = [null], testException = [null]]].
[2017-10-14 22:36:54,824]DEBUG  6083[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 22:36:54,824]DEBUG  6083[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 22:36:54,825]DEBUG  6084[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 22:36:54,825]DEBUG  6084[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 22:36:54,825]DEBUG  6084[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 22:36:54,826]DEBUG  6085[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 22:36:54,826]DEBUG  6085[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 22:36:54,826]DEBUG  6085[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 22:36:54,826]DEBUG  6085[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 22:36:54,827]DEBUG  6086[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 22:36:54,827]DEBUG  6086[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 22:36:54,827]DEBUG  6086[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 22:36:54,827]DEBUG  6086[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 22:36:54,828]DEBUG  6087[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 22:36:54,828]DEBUG  6087[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 22:36:54,828]DEBUG  6087[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 22:36:54,828]DEBUG  6087[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 22:36:54,829]DEBUG  6088[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 22:36:54,829]DEBUG  6088[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 22:36:54,829]DEBUG  6088[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 22:36:54,829]DEBUG  6088[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 22:36:54,830]DEBUG  6089[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 22:36:54,830]DEBUG  6089[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@b937a2c]
[2017-10-14 22:36:54,831]DEBUG  6090[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetSilverTypeDiscount' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:54,831]DEBUG  6090[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@1833b96c testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@b937a2c, testMethod = testGetSilverTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2017-10-14 22:36:54,831]DEBUG  6090[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 22:36:54,833]DEBUG  6092[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testGetSilverTypeDiscount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:54,833]DEBUG  6092[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15080098148
[2017-10-14 22:36:54,834]DEBUG  6093[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@7a42eb59] for Hibernate transaction
[2017-10-14 22:36:54,834]DEBUG  6093[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7a42eb59]
[2017-10-14 22:36:54,834]DEBUG  6093[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 22:36:54,834]DEBUG  6093[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 22:36:54,835]DEBUG  6094[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 22:36:54,835]DEBUG  6094[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@1833b96c testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@b937a2c, testMethod = testGetSilverTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2017-10-14 22:36:54,835] INFO  6094[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (3): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@598b619b]; rollback [true]
[2017-10-14 22:36:54,836]DEBUG  6095[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:54,836]DEBUG  6095[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:54,836]DEBUG  6095[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-14 22:36:54,838]DEBUG  6097[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 9
[2017-10-14 22:36:54,838]DEBUG  6097[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:54,839]DEBUG  6098[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:54,839]DEBUG  6098[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:54,839]DEBUG  6098[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-14 22:36:54,841]DEBUG  6100[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 10
[2017-10-14 22:36:54,841]DEBUG  6100[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:54,841]DEBUG  6100[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:54,842]DEBUG  6101[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:54,842]DEBUG  6101[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-14 22:36:54,843]DEBUG  6102[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 11
[2017-10-14 22:36:54,844]DEBUG  6103[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:54,844]DEBUG  6103[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:54,844]DEBUG  6103[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:54,845]DEBUG  6104[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-14 22:36:54,846]DEBUG  6105[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 12
[2017-10-14 22:36:54,846]DEBUG  6105[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:54,848]DEBUG  6107[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: from com.softserveinc.edu.oms.domain.entities.CustomerType customerT where customerT.typeName = :Silver
[2017-10-14 22:36:54,850]DEBUG  6109[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  |  |  +-[IDENT] Node: 'com'
    |        |  |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
    |        |  |  |  |  |  \-[IDENT] Node: 'edu'
    |        |  |  |  |  \-[IDENT] Node: 'oms'
    |        |  |  |  \-[IDENT] Node: 'domain'
    |        |  |  \-[IDENT] Node: 'entities'
    |        |  \-[IDENT] Node: 'CustomerType'
    |        \-[ALIAS] Node: 'customerT'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'customerT'
          |  \-[IDENT] Node: 'typeName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'Silver'

[2017-10-14 22:36:54,850]DEBUG  6109[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-14 22:36:54,851]DEBUG  6110[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - select << begin [level=1, statement=select]
[2017-10-14 22:36:54,851]DEBUG  6110[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.CustomerType (customerT) -> customerty0_
[2017-10-14 22:36:54,852]DEBUG  6111[main] - org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  customerT -> customerty0_.ID
[2017-10-14 22:36:54,852]DEBUG  6111[main] - org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : typeName -> org.hibernate.type.StringType@36cebdbf
[2017-10-14 22:36:54,852]DEBUG  6111[main] - org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  customerT.typeName -> customerty0_.TypeName
[2017-10-14 22:36:54,852]DEBUG  6111[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - select : finishing up [level=1, statement=select]
[2017-10-14 22:36:54,852]DEBUG  6111[main] - org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) - processQuery() :  ( SELECT ( FromClause{level=1} CustomerTypes customerty0_ ) ( where ( = ( customerty0_.TypeName customerty0_.ID typeName ) ? ) ) )
[2017-10-14 22:36:54,853]DEBUG  6112[main] - org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) - Derived SELECT clause created.
[2017-10-14 22:36:54,853]DEBUG  6112[main] - org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) - Using FROM fragment [CustomerTypes customerty0_]
[2017-10-14 22:36:54,853]DEBUG  6112[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - select >> end [level=1, statement=select]
[2017-10-14 22:36:54,853]DEBUG  6112[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerTypes)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'customerty0_.ID as ID2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=customerT,role=null,tableName=CustomerTypes,tableAlias=customerty0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.CustomerType}}}
    |  \-[SQL_TOKEN] SqlFragment: 'customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[customerT], fromElementByTableAlias=[customerty0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CustomerTypes customerty0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=customerT,role=null,tableName=CustomerTypes,tableAlias=customerty0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.CustomerType}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customerty0_.TypeName' {propertyName=typeName,dereferenceType=ALL,propertyPath=typeName,path=customerT.typeName,tableAlias=customerty0_,className=com.softserveinc.edu.oms.domain.entities.CustomerType,classAlias=customerT}
          |  +-[ALIAS_REF] IdentNode: 'customerty0_.ID' {alias=customerT, className=com.softserveinc.edu.oms.domain.entities.CustomerType, tableAlias=customerty0_}
          |  \-[IDENT] IdentNode: 'typeName' {originalText=typeName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=Silver, expectedType=org.hibernate.type.StringType@36cebdbf}

[2017-10-14 22:36:54,854]DEBUG  6113[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-14 22:36:54,854]DEBUG  6113[main] - org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:241) - HQL: from com.softserveinc.edu.oms.domain.entities.CustomerType customerT where customerT.typeName = :Silver
[2017-10-14 22:36:54,854]DEBUG  6113[main] - org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:242) - SQL: select customerty0_.ID as ID2_, customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_ from CustomerTypes customerty0_ where customerty0_.TypeName=?
[2017-10-14 22:36:54,854]DEBUG  6113[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-14 22:36:54,854]DEBUG  6113[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:54,855]DEBUG  6114[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:54,855]DEBUG  6114[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:54,855]DEBUG  6114[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:54,855]DEBUG  6114[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:54,855]DEBUG  6114[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=11, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,855]DEBUG  6114[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=12, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,856]DEBUG  6115[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=9, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,856]DEBUG  6115[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=10, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,856]DEBUG  6115[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:54,856]DEBUG  6115[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select customerty0_.ID as ID2_, customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_ from CustomerTypes customerty0_ where customerty0_.TypeName=?
[2017-10-14 22:36:54,857]DEBUG  6116[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:54,857]DEBUG  6116[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.CustomerType#10]
[2017-10-14 22:36:54,857]DEBUG  6116[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:54,857]DEBUG  6116[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:54,858]DEBUG  6117[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:54,858]DEBUG  6117[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:54,858]DEBUG  6117[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:54,858]DEBUG  6117[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:54,858]DEBUG  6117[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:54,858]DEBUG  6117[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:54,858]DEBUG  6117[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=11, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,859]DEBUG  6118[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=12, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,859]DEBUG  6118[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=9, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,859]DEBUG  6118[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=10, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,859]DEBUG  6118[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:54,859]DEBUG  6118[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 22:36:54,859]DEBUG  6118[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:54,860]DEBUG  6119[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:54,860]DEBUG  6119[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:54,860]DEBUG  6119[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:54,861]DEBUG  6120[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:54,861]DEBUG  6120[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:54,861]DEBUG  6120[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=11, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,861]DEBUG  6120[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=12, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,861]DEBUG  6120[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=9, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,861]DEBUG  6120[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=10, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,861]DEBUG  6120[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:54,861]DEBUG  6120[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 22:36:54,862]DEBUG  6121[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:54,862]DEBUG  6121[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:54,862]DEBUG  6121[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:54,862]DEBUG  6121[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:54,862]DEBUG  6121[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:54,862]DEBUG  6121[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:54,863]DEBUG  6122[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=11, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,863]DEBUG  6122[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=12, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,863]DEBUG  6122[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=9, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,863]DEBUG  6122[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=10, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,863]DEBUG  6122[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:54,863]DEBUG  6122[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 22:36:54,864]DEBUG  6123[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:54,864]DEBUG  6123[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:54,864]DEBUG  6123[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:54,864]DEBUG  6123[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:54,864]DEBUG  6123[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:54,864]DEBUG  6123[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:54,864]DEBUG  6123[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=11, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,865]DEBUG  6124[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=12, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,865]DEBUG  6124[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=9, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,865]DEBUG  6124[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=10, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,865]DEBUG  6124[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:54,865]DEBUG  6124[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 22:36:54,866]DEBUG  6125[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:54,866]DEBUG  6125[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:54,866]DEBUG  6125[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:54,866]DEBUG  6125[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:54,866]DEBUG  6125[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:54,866]DEBUG  6125[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:54,866]DEBUG  6125[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=11, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,867]DEBUG  6126[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=12, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,867]DEBUG  6126[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=9, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,867]DEBUG  6126[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=10, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,867]DEBUG  6126[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:54,867]DEBUG  6126[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 22:36:54,867]DEBUG  6126[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:54,868]DEBUG  6127[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:54,868]DEBUG  6127[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:54,868]DEBUG  6127[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:54,868]DEBUG  6127[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:54,868]DEBUG  6127[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:54,868]DEBUG  6127[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=11, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,868]DEBUG  6127[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=12, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,869]DEBUG  6128[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=9, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,869]DEBUG  6128[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=10, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,869]DEBUG  6128[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:54,869]DEBUG  6128[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 22:36:54,869]DEBUG  6128[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:54,869]DEBUG  6128[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:54,870]DEBUG  6129[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:54,870]DEBUG  6129[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:54,870]DEBUG  6129[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:54,870]DEBUG  6129[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:54,870]DEBUG  6129[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=11, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,870]DEBUG  6129[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=12, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,870]DEBUG  6129[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=9, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,871]DEBUG  6130[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=10, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,871]DEBUG  6130[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:54,871]DEBUG  6130[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 22:36:54,871]DEBUG  6130[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:54,871]DEBUG  6130[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:54,871]DEBUG  6130[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:54,872]DEBUG  6131[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:54,872]DEBUG  6131[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:54,872]DEBUG  6131[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:54,872]DEBUG  6131[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=11, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,872]DEBUG  6131[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=12, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,872]DEBUG  6131[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=9, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,872]DEBUG  6131[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=10, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,873]DEBUG  6132[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:54,873]DEBUG  6132[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 22:36:54,873]DEBUG  6132[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:54,873]DEBUG  6132[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:54,873]DEBUG  6132[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:54,873]DEBUG  6132[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:54,874]DEBUG  6133[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:54,874]DEBUG  6133[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:54,874]DEBUG  6133[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=11, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,874]DEBUG  6133[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=12, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,874]DEBUG  6133[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=9, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,874]DEBUG  6133[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=10, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,874]DEBUG  6133[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:54,875]DEBUG  6134[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 22:36:54,875]DEBUG  6134[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:54,875]DEBUG  6134[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@1833b96c testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@b937a2c, testMethod = testGetSilverTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2017-10-14 22:36:54,875]DEBUG  6134[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 22:36:54,875]DEBUG  6134[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7a42eb59]
[2017-10-14 22:36:54,875]DEBUG  6134[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 22:36:54,910]DEBUG  6169[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 22:36:54,910]DEBUG  6169[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:54,911]DEBUG  6170[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@7a42eb59] after transaction
[2017-10-14 22:36:54,911]DEBUG  6170[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 22:36:54,911]DEBUG  6170[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 22:36:54,912]DEBUG  6171[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:54,912] INFO  6171[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@1833b96c testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@b937a2c, testMethod = testGetSilverTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2017-10-14 22:36:54,914]DEBUG  6173[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@1833b96c testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@b937a2c, testMethod = testGetSilverTypeDiscount@CustomerTypeDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 22:36:54,914]DEBUG  6173[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2017-10-14 22:36:54,915]DEBUG  6174[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2017-10-14 22:36:54,915]DEBUG  6174[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@1833b96c testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@29d2e740, testMethod = [null], testException = [null]]].
[2017-10-14 22:36:54,916]DEBUG  6175[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 22:36:54,916]DEBUG  6175[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 22:36:54,916]DEBUG  6175[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 22:36:54,917]DEBUG  6176[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 22:36:54,917]DEBUG  6176[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 22:36:54,917]DEBUG  6176[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 22:36:54,917]DEBUG  6176[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 22:36:54,918]DEBUG  6177[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 22:36:54,918]DEBUG  6177[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 22:36:54,918]DEBUG  6177[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 22:36:54,918]DEBUG  6177[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 22:36:54,919]DEBUG  6178[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 22:36:54,919]DEBUG  6178[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 22:36:54,919]DEBUG  6178[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 22:36:54,919]DEBUG  6178[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 22:36:54,920]DEBUG  6179[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 22:36:54,920]DEBUG  6179[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 22:36:54,920]DEBUG  6179[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 22:36:54,920]DEBUG  6179[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 22:36:54,921]DEBUG  6180[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 22:36:54,921]DEBUG  6180[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 22:36:54,921]DEBUG  6180[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 22:36:54,922]DEBUG  6181[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@29d2e740]
[2017-10-14 22:36:54,922]DEBUG  6181[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetGoldTypeDiscount' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:54,923]DEBUG  6182[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@1833b96c testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@29d2e740, testMethod = testGetGoldTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2017-10-14 22:36:54,923]DEBUG  6182[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 22:36:54,925]DEBUG  6184[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testGetGoldTypeDiscount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:54,925]DEBUG  6184[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15080098149
[2017-10-14 22:36:54,925]DEBUG  6184[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@2bb3ecd5] for Hibernate transaction
[2017-10-14 22:36:54,925]DEBUG  6184[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@2bb3ecd5]
[2017-10-14 22:36:54,926]DEBUG  6185[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 22:36:54,926]DEBUG  6185[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 22:36:54,926]DEBUG  6185[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 22:36:54,926]DEBUG  6185[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@1833b96c testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@29d2e740, testMethod = testGetGoldTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2017-10-14 22:36:54,927] INFO  6186[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (4): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@598b619b]; rollback [true]
[2017-10-14 22:36:54,927]DEBUG  6186[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:54,927]DEBUG  6186[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:54,928]DEBUG  6187[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-14 22:36:54,929]DEBUG  6188[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 13
[2017-10-14 22:36:54,929]DEBUG  6188[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:54,929]DEBUG  6188[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:54,930]DEBUG  6189[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:54,930]DEBUG  6189[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-14 22:36:54,930]DEBUG  6189[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 14
[2017-10-14 22:36:54,930]DEBUG  6189[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:54,931]DEBUG  6190[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:54,931]DEBUG  6190[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:54,931]DEBUG  6190[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-14 22:36:54,931]DEBUG  6190[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 15
[2017-10-14 22:36:54,932]DEBUG  6191[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:54,932]DEBUG  6191[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:54,932]DEBUG  6191[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:54,932]DEBUG  6191[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-14 22:36:54,933]DEBUG  6192[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 16
[2017-10-14 22:36:54,933]DEBUG  6192[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:54,934]DEBUG  6193[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: from com.softserveinc.edu.oms.domain.entities.CustomerType customerT where customerT.typeName = :Gold
[2017-10-14 22:36:54,936]DEBUG  6195[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  |  |  +-[IDENT] Node: 'com'
    |        |  |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
    |        |  |  |  |  |  \-[IDENT] Node: 'edu'
    |        |  |  |  |  \-[IDENT] Node: 'oms'
    |        |  |  |  \-[IDENT] Node: 'domain'
    |        |  |  \-[IDENT] Node: 'entities'
    |        |  \-[IDENT] Node: 'CustomerType'
    |        \-[ALIAS] Node: 'customerT'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'customerT'
          |  \-[IDENT] Node: 'typeName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'Gold'

[2017-10-14 22:36:54,936]DEBUG  6195[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-14 22:36:54,936]DEBUG  6195[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - select << begin [level=1, statement=select]
[2017-10-14 22:36:54,937]DEBUG  6196[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.CustomerType (customerT) -> customerty0_
[2017-10-14 22:36:54,937]DEBUG  6196[main] - org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  customerT -> customerty0_.ID
[2017-10-14 22:36:54,937]DEBUG  6196[main] - org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : typeName -> org.hibernate.type.StringType@36cebdbf
[2017-10-14 22:36:54,937]DEBUG  6196[main] - org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  customerT.typeName -> customerty0_.TypeName
[2017-10-14 22:36:54,937]DEBUG  6196[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - select : finishing up [level=1, statement=select]
[2017-10-14 22:36:54,937]DEBUG  6196[main] - org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) - processQuery() :  ( SELECT ( FromClause{level=1} CustomerTypes customerty0_ ) ( where ( = ( customerty0_.TypeName customerty0_.ID typeName ) ? ) ) )
[2017-10-14 22:36:54,938]DEBUG  6197[main] - org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) - Derived SELECT clause created.
[2017-10-14 22:36:54,938]DEBUG  6197[main] - org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) - Using FROM fragment [CustomerTypes customerty0_]
[2017-10-14 22:36:54,938]DEBUG  6197[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - select >> end [level=1, statement=select]
[2017-10-14 22:36:54,938]DEBUG  6197[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerTypes)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'customerty0_.ID as ID2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=customerT,role=null,tableName=CustomerTypes,tableAlias=customerty0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.CustomerType}}}
    |  \-[SQL_TOKEN] SqlFragment: 'customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[customerT], fromElementByTableAlias=[customerty0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CustomerTypes customerty0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=customerT,role=null,tableName=CustomerTypes,tableAlias=customerty0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.CustomerType}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customerty0_.TypeName' {propertyName=typeName,dereferenceType=ALL,propertyPath=typeName,path=customerT.typeName,tableAlias=customerty0_,className=com.softserveinc.edu.oms.domain.entities.CustomerType,classAlias=customerT}
          |  +-[ALIAS_REF] IdentNode: 'customerty0_.ID' {alias=customerT, className=com.softserveinc.edu.oms.domain.entities.CustomerType, tableAlias=customerty0_}
          |  \-[IDENT] IdentNode: 'typeName' {originalText=typeName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=Gold, expectedType=org.hibernate.type.StringType@36cebdbf}

[2017-10-14 22:36:54,939]DEBUG  6198[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-14 22:36:54,939]DEBUG  6198[main] - org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:241) - HQL: from com.softserveinc.edu.oms.domain.entities.CustomerType customerT where customerT.typeName = :Gold
[2017-10-14 22:36:54,939]DEBUG  6198[main] - org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:242) - SQL: select customerty0_.ID as ID2_, customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_ from CustomerTypes customerty0_ where customerty0_.TypeName=?
[2017-10-14 22:36:54,939]DEBUG  6198[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-14 22:36:54,939]DEBUG  6198[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:54,940]DEBUG  6199[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:54,940]DEBUG  6199[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:54,940]DEBUG  6199[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:54,940]DEBUG  6199[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:54,940]DEBUG  6199[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=13, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,940]DEBUG  6199[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=14, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,940]DEBUG  6199[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=15, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,941]DEBUG  6200[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=16, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,941]DEBUG  6200[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:54,941]DEBUG  6200[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select customerty0_.ID as ID2_, customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_ from CustomerTypes customerty0_ where customerty0_.TypeName=?
[2017-10-14 22:36:54,942]DEBUG  6201[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:54,942]DEBUG  6201[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.CustomerType#15]
[2017-10-14 22:36:54,942]DEBUG  6201[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:54,942]DEBUG  6201[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:54,943]DEBUG  6202[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:54,943]DEBUG  6202[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:54,943]DEBUG  6202[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:54,943]DEBUG  6202[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:54,943]DEBUG  6202[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:54,943]DEBUG  6202[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:54,943]DEBUG  6202[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=13, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,944]DEBUG  6203[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=14, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,944]DEBUG  6203[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=15, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,944]DEBUG  6203[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=16, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,944]DEBUG  6203[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:54,944]DEBUG  6203[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 22:36:54,944]DEBUG  6203[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:54,945]DEBUG  6204[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:54,945]DEBUG  6204[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:54,945]DEBUG  6204[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:54,945]DEBUG  6204[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:54,945]DEBUG  6204[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:54,945]DEBUG  6204[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=13, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,946]DEBUG  6205[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=14, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,946]DEBUG  6205[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=15, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,946]DEBUG  6205[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=16, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,946]DEBUG  6205[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:54,946]DEBUG  6205[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 22:36:54,946]DEBUG  6205[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:54,947]DEBUG  6206[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:54,947]DEBUG  6206[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:54,947]DEBUG  6206[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:54,947]DEBUG  6206[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:54,947]DEBUG  6206[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:54,947]DEBUG  6206[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=13, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,947]DEBUG  6206[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=14, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,948]DEBUG  6207[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=15, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,948]DEBUG  6207[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=16, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,948]DEBUG  6207[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:54,948]DEBUG  6207[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 22:36:54,948]DEBUG  6207[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:54,948]DEBUG  6207[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:54,949]DEBUG  6208[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:54,949]DEBUG  6208[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:54,949]DEBUG  6208[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:54,949]DEBUG  6208[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:54,949]DEBUG  6208[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=13, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,949]DEBUG  6208[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=14, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,949]DEBUG  6208[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=15, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,950]DEBUG  6209[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=16, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,950]DEBUG  6209[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:54,950]DEBUG  6209[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 22:36:54,950]DEBUG  6209[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:54,950]DEBUG  6209[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:54,950]DEBUG  6209[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:54,951]DEBUG  6210[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:54,951]DEBUG  6210[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:54,951]DEBUG  6210[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:54,951]DEBUG  6210[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=13, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,951]DEBUG  6210[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=14, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,951]DEBUG  6210[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=15, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,952]DEBUG  6211[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=16, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,952]DEBUG  6211[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:54,952]DEBUG  6211[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 22:36:54,952]DEBUG  6211[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:54,952]DEBUG  6211[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:54,952]DEBUG  6211[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:54,953]DEBUG  6212[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:54,953]DEBUG  6212[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:54,953]DEBUG  6212[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:54,953]DEBUG  6212[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=13, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,953]DEBUG  6212[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=14, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,953]DEBUG  6212[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=15, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,953]DEBUG  6212[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=16, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,954]DEBUG  6213[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:54,954]DEBUG  6213[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 22:36:54,954]DEBUG  6213[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:54,954]DEBUG  6213[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:54,954]DEBUG  6213[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:54,954]DEBUG  6213[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:54,955]DEBUG  6214[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:54,955]DEBUG  6214[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:54,955]DEBUG  6214[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=13, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,955]DEBUG  6214[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=14, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,955]DEBUG  6214[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=15, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,955]DEBUG  6214[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=16, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,955]DEBUG  6214[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:54,956]DEBUG  6215[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 22:36:54,956]DEBUG  6215[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:54,956]DEBUG  6215[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:54,956]DEBUG  6215[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:54,956]DEBUG  6215[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:54,956]DEBUG  6215[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:54,957]DEBUG  6216[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:54,957]DEBUG  6216[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=13, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,957]DEBUG  6216[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=14, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,957]DEBUG  6216[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=15, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,957]DEBUG  6216[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=16, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,957]DEBUG  6216[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:54,957]DEBUG  6216[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 22:36:54,958]DEBUG  6217[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:54,958]DEBUG  6217[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:54,958]DEBUG  6217[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:54,958]DEBUG  6217[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:54,958]DEBUG  6217[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:54,958]DEBUG  6217[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:54,958]DEBUG  6217[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=13, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,959]DEBUG  6218[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=14, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,959]DEBUG  6218[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=15, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,959]DEBUG  6218[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=16, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:54,959]DEBUG  6218[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:54,959]DEBUG  6218[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 22:36:54,959]DEBUG  6218[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:54,960]DEBUG  6219[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@1833b96c testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@29d2e740, testMethod = testGetGoldTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2017-10-14 22:36:54,960]DEBUG  6219[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 22:36:54,960]DEBUG  6219[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@2bb3ecd5]
[2017-10-14 22:36:54,960]DEBUG  6219[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 22:36:54,994]DEBUG  6253[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 22:36:54,994]DEBUG  6253[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:54,994]DEBUG  6253[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@2bb3ecd5] after transaction
[2017-10-14 22:36:54,995]DEBUG  6254[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 22:36:54,995]DEBUG  6254[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 22:36:54,995]DEBUG  6254[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:54,996] INFO  6255[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@1833b96c testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@29d2e740, testMethod = testGetGoldTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2017-10-14 22:36:54,997]DEBUG  6256[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@1833b96c testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@29d2e740, testMethod = testGetGoldTypeDiscount@CustomerTypeDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 22:36:54,998]DEBUG  6257[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2017-10-14 22:36:54,998]DEBUG  6257[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2017-10-14 22:36:54,999]DEBUG  6258[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@1833b96c testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@61be2a1d, testMethod = [null], testException = [null]]].
[2017-10-14 22:36:54,999]DEBUG  6258[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 22:36:55,000]DEBUG  6259[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 22:36:55,000]DEBUG  6259[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 22:36:55,000]DEBUG  6259[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 22:36:55,000]DEBUG  6259[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 22:36:55,001]DEBUG  6260[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 22:36:55,001]DEBUG  6260[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 22:36:55,001]DEBUG  6260[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 22:36:55,001]DEBUG  6260[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 22:36:55,002]DEBUG  6261[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 22:36:55,002]DEBUG  6261[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 22:36:55,002]DEBUG  6261[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 22:36:55,002]DEBUG  6261[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 22:36:55,003]DEBUG  6262[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 22:36:55,003]DEBUG  6262[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 22:36:55,003]DEBUG  6262[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 22:36:55,003]DEBUG  6262[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 22:36:55,004]DEBUG  6263[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 22:36:55,004]DEBUG  6263[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 22:36:55,004]DEBUG  6263[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 22:36:55,005]DEBUG  6264[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 22:36:55,005]DEBUG  6264[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 22:36:55,005]DEBUG  6264[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@61be2a1d]
[2017-10-14 22:36:55,006]DEBUG  6265[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetPlatinumTypeDiscount' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:55,006]DEBUG  6265[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@1833b96c testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@61be2a1d, testMethod = testGetPlatinumTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2017-10-14 22:36:55,007]DEBUG  6266[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 22:36:55,008]DEBUG  6267[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testGetPlatinumTypeDiscount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:55,009]DEBUG  6268[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15080098150
[2017-10-14 22:36:55,009]DEBUG  6268[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@1125b1e9] for Hibernate transaction
[2017-10-14 22:36:55,009]DEBUG  6268[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@1125b1e9]
[2017-10-14 22:36:55,009]DEBUG  6268[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 22:36:55,009]DEBUG  6268[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 22:36:55,009]DEBUG  6268[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 22:36:55,009]DEBUG  6268[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@1833b96c testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@61be2a1d, testMethod = testGetPlatinumTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2017-10-14 22:36:55,009] INFO  6268[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (5): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@598b619b]; rollback [true]
[2017-10-14 22:36:55,010]DEBUG  6269[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:55,010]DEBUG  6269[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,010]DEBUG  6269[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-14 22:36:55,011]DEBUG  6270[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 17
[2017-10-14 22:36:55,011]DEBUG  6270[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,011]DEBUG  6270[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:55,011]DEBUG  6270[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,011]DEBUG  6270[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-14 22:36:55,012]DEBUG  6271[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 18
[2017-10-14 22:36:55,012]DEBUG  6271[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,012]DEBUG  6271[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:55,012]DEBUG  6271[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,013]DEBUG  6272[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-14 22:36:55,013]DEBUG  6272[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 19
[2017-10-14 22:36:55,013]DEBUG  6272[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,013]DEBUG  6272[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:55,014]DEBUG  6273[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,014]DEBUG  6273[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-14 22:36:55,014]DEBUG  6273[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 20
[2017-10-14 22:36:55,014]DEBUG  6273[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,015]DEBUG  6274[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: from com.softserveinc.edu.oms.domain.entities.CustomerType customerT where customerT.typeName = :Platinum
[2017-10-14 22:36:55,017]DEBUG  6276[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  |  |  +-[IDENT] Node: 'com'
    |        |  |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
    |        |  |  |  |  |  \-[IDENT] Node: 'edu'
    |        |  |  |  |  \-[IDENT] Node: 'oms'
    |        |  |  |  \-[IDENT] Node: 'domain'
    |        |  |  \-[IDENT] Node: 'entities'
    |        |  \-[IDENT] Node: 'CustomerType'
    |        \-[ALIAS] Node: 'customerT'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'customerT'
          |  \-[IDENT] Node: 'typeName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'Platinum'

[2017-10-14 22:36:55,017]DEBUG  6276[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-14 22:36:55,017]DEBUG  6276[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - select << begin [level=1, statement=select]
[2017-10-14 22:36:55,018]DEBUG  6277[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.CustomerType (customerT) -> customerty0_
[2017-10-14 22:36:55,018]DEBUG  6277[main] - org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  customerT -> customerty0_.ID
[2017-10-14 22:36:55,018]DEBUG  6277[main] - org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : typeName -> org.hibernate.type.StringType@36cebdbf
[2017-10-14 22:36:55,018]DEBUG  6277[main] - org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  customerT.typeName -> customerty0_.TypeName
[2017-10-14 22:36:55,019]DEBUG  6278[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - select : finishing up [level=1, statement=select]
[2017-10-14 22:36:55,019]DEBUG  6278[main] - org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) - processQuery() :  ( SELECT ( FromClause{level=1} CustomerTypes customerty0_ ) ( where ( = ( customerty0_.TypeName customerty0_.ID typeName ) ? ) ) )
[2017-10-14 22:36:55,019]DEBUG  6278[main] - org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) - Derived SELECT clause created.
[2017-10-14 22:36:55,019]DEBUG  6278[main] - org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) - Using FROM fragment [CustomerTypes customerty0_]
[2017-10-14 22:36:55,019]DEBUG  6278[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - select >> end [level=1, statement=select]
[2017-10-14 22:36:55,020]DEBUG  6279[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerTypes)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'customerty0_.ID as ID2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=customerT,role=null,tableName=CustomerTypes,tableAlias=customerty0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.CustomerType}}}
    |  \-[SQL_TOKEN] SqlFragment: 'customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[customerT], fromElementByTableAlias=[customerty0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CustomerTypes customerty0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=customerT,role=null,tableName=CustomerTypes,tableAlias=customerty0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.CustomerType}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customerty0_.TypeName' {propertyName=typeName,dereferenceType=ALL,propertyPath=typeName,path=customerT.typeName,tableAlias=customerty0_,className=com.softserveinc.edu.oms.domain.entities.CustomerType,classAlias=customerT}
          |  +-[ALIAS_REF] IdentNode: 'customerty0_.ID' {alias=customerT, className=com.softserveinc.edu.oms.domain.entities.CustomerType, tableAlias=customerty0_}
          |  \-[IDENT] IdentNode: 'typeName' {originalText=typeName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=Platinum, expectedType=org.hibernate.type.StringType@36cebdbf}

[2017-10-14 22:36:55,020]DEBUG  6279[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-14 22:36:55,020]DEBUG  6279[main] - org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:241) - HQL: from com.softserveinc.edu.oms.domain.entities.CustomerType customerT where customerT.typeName = :Platinum
[2017-10-14 22:36:55,020]DEBUG  6279[main] - org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:242) - SQL: select customerty0_.ID as ID2_, customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_ from CustomerTypes customerty0_ where customerty0_.TypeName=?
[2017-10-14 22:36:55,020]DEBUG  6279[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2017-10-14 22:36:55,021]DEBUG  6280[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:55,021]DEBUG  6280[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:55,021]DEBUG  6280[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:55,021]DEBUG  6280[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:55,021]DEBUG  6280[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:55,021]DEBUG  6280[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=20, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,022]DEBUG  6281[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=17, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,022]DEBUG  6281[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=19, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,022]DEBUG  6281[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=18, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,022]DEBUG  6281[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,022]DEBUG  6281[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select customerty0_.ID as ID2_, customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_ from CustomerTypes customerty0_ where customerty0_.TypeName=?
[2017-10-14 22:36:55,023]DEBUG  6282[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:55,023]DEBUG  6282[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.CustomerType#20]
[2017-10-14 22:36:55,023]DEBUG  6282[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:55,024]DEBUG  6283[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,024]DEBUG  6283[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:55,024]DEBUG  6283[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:55,024]DEBUG  6283[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:55,024]DEBUG  6283[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:55,024]DEBUG  6283[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:55,025]DEBUG  6284[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:55,025]DEBUG  6284[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=20, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,025]DEBUG  6284[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=17, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,025]DEBUG  6284[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=19, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,025]DEBUG  6284[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=18, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,025]DEBUG  6284[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,025]DEBUG  6284[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 22:36:55,026]DEBUG  6285[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,026]DEBUG  6285[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:55,026]DEBUG  6285[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:55,026]DEBUG  6285[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:55,027]DEBUG  6286[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:55,027]DEBUG  6286[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:55,027]DEBUG  6286[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=20, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,027]DEBUG  6286[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=17, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,027]DEBUG  6286[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=19, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,027]DEBUG  6286[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=18, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,027]DEBUG  6286[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,028]DEBUG  6287[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 22:36:55,028]DEBUG  6287[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,028]DEBUG  6287[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:55,028]DEBUG  6287[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:55,029]DEBUG  6288[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:55,029]DEBUG  6288[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:55,029]DEBUG  6288[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:55,029]DEBUG  6288[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=20, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,029]DEBUG  6288[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=17, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,029]DEBUG  6288[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=19, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,029]DEBUG  6288[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=18, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,029]DEBUG  6288[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,030]DEBUG  6289[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 22:36:55,030]DEBUG  6289[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,030]DEBUG  6289[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:55,030]DEBUG  6289[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:55,031]DEBUG  6290[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:55,031]DEBUG  6290[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:55,031]DEBUG  6290[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:55,031]DEBUG  6290[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=20, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,031]DEBUG  6290[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=17, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,031]DEBUG  6290[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=19, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,031]DEBUG  6290[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=18, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,032]DEBUG  6291[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,032]DEBUG  6291[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 22:36:55,032]DEBUG  6291[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,032]DEBUG  6291[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:55,033]DEBUG  6292[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:55,033]DEBUG  6292[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:55,033]DEBUG  6292[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:55,033]DEBUG  6292[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:55,033]DEBUG  6292[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=20, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,033]DEBUG  6292[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=17, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,034]DEBUG  6293[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=19, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,034]DEBUG  6293[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=18, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,034]DEBUG  6293[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,034]DEBUG  6293[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 22:36:55,034]DEBUG  6293[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,035]DEBUG  6294[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:55,035]DEBUG  6294[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:55,035]DEBUG  6294[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:55,035]DEBUG  6294[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:55,035]DEBUG  6294[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:55,035]DEBUG  6294[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=20, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,036]DEBUG  6295[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=17, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,036]DEBUG  6295[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=19, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,036]DEBUG  6295[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=18, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,036]DEBUG  6295[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,036]DEBUG  6295[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 22:36:55,036]DEBUG  6295[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,037]DEBUG  6296[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:55,037]DEBUG  6296[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:55,037]DEBUG  6296[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:55,037]DEBUG  6296[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:55,037]DEBUG  6296[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:55,038]DEBUG  6297[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=20, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,038]DEBUG  6297[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=17, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,038]DEBUG  6297[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=19, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,038]DEBUG  6297[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=18, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,038]DEBUG  6297[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,038]DEBUG  6297[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 22:36:55,039]DEBUG  6298[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,039]DEBUG  6298[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:55,039]DEBUG  6298[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:55,039]DEBUG  6298[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:55,040]DEBUG  6299[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:55,040]DEBUG  6299[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:55,040]DEBUG  6299[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=20, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,040]DEBUG  6299[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=17, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,040]DEBUG  6299[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=19, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,040]DEBUG  6299[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=18, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,040]DEBUG  6299[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,041]DEBUG  6300[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 22:36:55,041]DEBUG  6300[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,041]DEBUG  6300[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:55,041]DEBUG  6300[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:55,042]DEBUG  6301[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:55,042]DEBUG  6301[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:55,042]DEBUG  6301[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:55,042]DEBUG  6301[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=20, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,042]DEBUG  6301[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=17, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,042]DEBUG  6301[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=19, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,043]DEBUG  6302[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=18, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,043]DEBUG  6302[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,043]DEBUG  6302[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 22:36:55,044]DEBUG  6303[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,044]DEBUG  6303[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@1833b96c testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@61be2a1d, testMethod = testGetPlatinumTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2017-10-14 22:36:55,044]DEBUG  6303[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 22:36:55,044]DEBUG  6303[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@1125b1e9]
[2017-10-14 22:36:55,044]DEBUG  6303[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 22:36:55,077]DEBUG  6336[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 22:36:55,077]DEBUG  6336[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:55,078]DEBUG  6337[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@1125b1e9] after transaction
[2017-10-14 22:36:55,078]DEBUG  6337[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 22:36:55,078]DEBUG  6337[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 22:36:55,079]DEBUG  6338[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:55,079] INFO  6338[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@1833b96c testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@61be2a1d, testMethod = testGetPlatinumTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2017-10-14 22:36:55,081]DEBUG  6340[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@1833b96c testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@61be2a1d, testMethod = testGetPlatinumTypeDiscount@CustomerTypeDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 22:36:55,082]DEBUG  6341[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2017-10-14 22:36:55,083]DEBUG  6342[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2017-10-14 22:36:55,083]DEBUG  6342[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@1833b96c testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@572a4a95, testMethod = [null], testException = [null]]].
[2017-10-14 22:36:55,084]DEBUG  6343[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 22:36:55,084]DEBUG  6343[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 22:36:55,084]DEBUG  6343[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 22:36:55,084]DEBUG  6343[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 22:36:55,085]DEBUG  6344[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 22:36:55,085]DEBUG  6344[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 22:36:55,085]DEBUG  6344[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 22:36:55,085]DEBUG  6344[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 22:36:55,086]DEBUG  6345[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 22:36:55,086]DEBUG  6345[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 22:36:55,086]DEBUG  6345[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 22:36:55,086]DEBUG  6345[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 22:36:55,087]DEBUG  6346[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 22:36:55,087]DEBUG  6346[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 22:36:55,087]DEBUG  6346[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 22:36:55,087]DEBUG  6346[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 22:36:55,088]DEBUG  6347[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 22:36:55,088]DEBUG  6347[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 22:36:55,088]DEBUG  6347[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 22:36:55,088]DEBUG  6347[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 22:36:55,089]DEBUG  6348[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 22:36:55,089]DEBUG  6348[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 22:36:55,089]DEBUG  6348[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@572a4a95]
[2017-10-14 22:36:55,090]DEBUG  6349[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindAll' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:55,091]DEBUG  6350[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@1833b96c testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@572a4a95, testMethod = testFindAll@CustomerTypeDaoTest, testException = [null]]]
[2017-10-14 22:36:55,091]DEBUG  6350[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 22:36:55,092]DEBUG  6351[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:55,093]DEBUG  6352[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15080098150
[2017-10-14 22:36:55,093]DEBUG  6352[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@302af117] for Hibernate transaction
[2017-10-14 22:36:55,093]DEBUG  6352[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@302af117]
[2017-10-14 22:36:55,094]DEBUG  6353[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 22:36:55,094]DEBUG  6353[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 22:36:55,094]DEBUG  6353[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 22:36:55,094]DEBUG  6353[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@1833b96c testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@572a4a95, testMethod = testFindAll@CustomerTypeDaoTest, testException = [null]]]
[2017-10-14 22:36:55,095] INFO  6354[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (6): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@598b619b]; rollback [true]
[2017-10-14 22:36:55,095]DEBUG  6354[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:55,095]DEBUG  6354[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,096]DEBUG  6355[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-14 22:36:55,097]DEBUG  6356[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 21
[2017-10-14 22:36:55,097]DEBUG  6356[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,098]DEBUG  6357[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:55,098]DEBUG  6357[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,099]DEBUG  6358[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-14 22:36:55,100]DEBUG  6359[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 22
[2017-10-14 22:36:55,100]DEBUG  6359[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,100]DEBUG  6359[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:55,101]DEBUG  6360[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,101]DEBUG  6360[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-14 22:36:55,102]DEBUG  6361[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 23
[2017-10-14 22:36:55,102]DEBUG  6361[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,103]DEBUG  6362[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:55,103]DEBUG  6362[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,104]DEBUG  6363[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-14 22:36:55,105]DEBUG  6364[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 24
[2017-10-14 22:36:55,105]DEBUG  6364[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,112]DEBUG  6371[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:55,112]DEBUG  6371[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:55,112]DEBUG  6371[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:55,113]DEBUG  6372[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:55,113]DEBUG  6372[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:55,113]DEBUG  6372[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=24, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,113]DEBUG  6372[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=23, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,113]DEBUG  6372[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=22, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,113]DEBUG  6372[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=21, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,114]DEBUG  6373[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,114]DEBUG  6373[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID2_0_, this_.Discount as Discount2_0_, this_.MaxRange as MaxRange2_0_, this_.MinRange as MinRange2_0_, this_.TypeName as TypeName2_0_ from CustomerTypes this_
[2017-10-14 22:36:55,114]DEBUG  6373[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:55,115]DEBUG  6374[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.CustomerType#21]
[2017-10-14 22:36:55,115]DEBUG  6374[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.CustomerType#22]
[2017-10-14 22:36:55,115]DEBUG  6374[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.CustomerType#23]
[2017-10-14 22:36:55,115]DEBUG  6374[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.CustomerType#24]
[2017-10-14 22:36:55,115]DEBUG  6374[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:55,115]DEBUG  6374[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,116]DEBUG  6375[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:55,116]DEBUG  6375[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:55,116]DEBUG  6375[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:55,116]DEBUG  6375[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:55,116]DEBUG  6375[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:55,116]DEBUG  6375[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:55,116]DEBUG  6375[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=24, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,117]DEBUG  6376[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=23, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,117]DEBUG  6376[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=22, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,117]DEBUG  6376[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=21, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,117]DEBUG  6376[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,117]DEBUG  6376[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 22:36:55,117]DEBUG  6376[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,118]DEBUG  6377[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:55,118]DEBUG  6377[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:55,118]DEBUG  6377[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:55,118]DEBUG  6377[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:55,118]DEBUG  6377[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:55,118]DEBUG  6377[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=24, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,118]DEBUG  6377[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=23, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,119]DEBUG  6378[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=22, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,119]DEBUG  6378[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=21, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,119]DEBUG  6378[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,119]DEBUG  6378[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 22:36:55,119]DEBUG  6378[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,119]DEBUG  6378[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:55,120]DEBUG  6379[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:55,120]DEBUG  6379[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:55,120]DEBUG  6379[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:55,120]DEBUG  6379[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:55,120]DEBUG  6379[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=24, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,120]DEBUG  6379[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=23, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,120]DEBUG  6379[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=22, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,121]DEBUG  6380[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=21, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,121]DEBUG  6380[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,121]DEBUG  6380[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 22:36:55,121]DEBUG  6380[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,121]DEBUG  6380[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:55,121]DEBUG  6380[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:55,122]DEBUG  6381[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:55,122]DEBUG  6381[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:55,122]DEBUG  6381[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:55,122]DEBUG  6381[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=24, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,122]DEBUG  6381[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=23, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,122]DEBUG  6381[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=22, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,122]DEBUG  6381[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=21, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,123]DEBUG  6382[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,123]DEBUG  6382[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 22:36:55,123]DEBUG  6382[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,123]DEBUG  6382[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:55,123]DEBUG  6382[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:55,123]DEBUG  6382[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:55,124]DEBUG  6383[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:55,124]DEBUG  6383[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:55,124]DEBUG  6383[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=24, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,124]DEBUG  6383[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=23, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,124]DEBUG  6383[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=22, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,124]DEBUG  6383[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=21, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,124]DEBUG  6383[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,124]DEBUG  6383[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 22:36:55,125]DEBUG  6384[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,125]DEBUG  6384[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:55,125]DEBUG  6384[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:55,125]DEBUG  6384[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:55,125]DEBUG  6384[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:55,125]DEBUG  6384[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:55,126]DEBUG  6385[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=24, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,126]DEBUG  6385[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=23, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,126]DEBUG  6385[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=22, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,126]DEBUG  6385[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=21, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,126]DEBUG  6385[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,126]DEBUG  6385[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 22:36:55,126]DEBUG  6385[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,127]DEBUG  6386[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:55,127]DEBUG  6386[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:55,127]DEBUG  6386[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:55,127]DEBUG  6386[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:55,127]DEBUG  6386[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:55,127]DEBUG  6386[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=24, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,127]DEBUG  6386[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=23, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,128]DEBUG  6387[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=22, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,128]DEBUG  6387[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=21, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,128]DEBUG  6387[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,128]DEBUG  6387[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 22:36:55,128]DEBUG  6387[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,128]DEBUG  6387[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:55,129]DEBUG  6388[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:55,129]DEBUG  6388[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:55,129]DEBUG  6388[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:55,129]DEBUG  6388[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:55,129]DEBUG  6388[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=24, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,129]DEBUG  6388[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=23, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,129]DEBUG  6388[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=22, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,130]DEBUG  6389[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=21, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,130]DEBUG  6389[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,130]DEBUG  6389[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 22:36:55,130]DEBUG  6389[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,130]DEBUG  6389[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:55,130]DEBUG  6389[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:55,131]DEBUG  6390[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:55,131]DEBUG  6390[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:55,131]DEBUG  6390[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:55,131]DEBUG  6390[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=24, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,131]DEBUG  6390[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=23, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,131]DEBUG  6390[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=22, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,131]DEBUG  6390[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=21, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,132]DEBUG  6391[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,132]DEBUG  6391[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 22:36:55,132]DEBUG  6391[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,132]DEBUG  6391[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@1833b96c testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@572a4a95, testMethod = testFindAll@CustomerTypeDaoTest, testException = [null]]]
[2017-10-14 22:36:55,132]DEBUG  6391[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 22:36:55,132]DEBUG  6391[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@302af117]
[2017-10-14 22:36:55,132]DEBUG  6391[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 22:36:55,169]DEBUG  6428[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 22:36:55,169]DEBUG  6428[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:55,169]DEBUG  6428[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@302af117] after transaction
[2017-10-14 22:36:55,169]DEBUG  6428[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 22:36:55,169]DEBUG  6428[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 22:36:55,169]DEBUG  6428[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:55,170] INFO  6429[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@1833b96c testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@572a4a95, testMethod = testFindAll@CustomerTypeDaoTest, testException = [null]]]
[2017-10-14 22:36:55,170]DEBUG  6429[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@1833b96c testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@572a4a95, testMethod = testFindAll@CustomerTypeDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 22:36:55,171]DEBUG  6430[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2017-10-14 22:36:55,171]DEBUG  6430[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2017-10-14 22:36:55,171]DEBUG  6430[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@1833b96c testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@5959e789, testMethod = [null], testException = [null]]].
[2017-10-14 22:36:55,171]DEBUG  6430[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 22:36:55,172]DEBUG  6431[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 22:36:55,172]DEBUG  6431[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 22:36:55,172]DEBUG  6431[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 22:36:55,172]DEBUG  6431[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 22:36:55,172]DEBUG  6431[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 22:36:55,172]DEBUG  6431[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 22:36:55,172]DEBUG  6431[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 22:36:55,172]DEBUG  6431[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 22:36:55,173]DEBUG  6432[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 22:36:55,173]DEBUG  6432[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 22:36:55,173]DEBUG  6432[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 22:36:55,173]DEBUG  6432[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 22:36:55,173]DEBUG  6432[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 22:36:55,173]DEBUG  6432[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 22:36:55,173]DEBUG  6432[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 22:36:55,173]DEBUG  6432[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 22:36:55,173]DEBUG  6432[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 22:36:55,174]DEBUG  6433[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 22:36:55,174]DEBUG  6433[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 22:36:55,174]DEBUG  6433[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 22:36:55,174]DEBUG  6433[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 22:36:55,174]DEBUG  6433[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@5959e789]
[2017-10-14 22:36:55,175]DEBUG  6434[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByCriterions' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:55,175]DEBUG  6434[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@1833b96c testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@5959e789, testMethod = testFindByCriterions@CustomerTypeDaoTest, testException = [null]]]
[2017-10-14 22:36:55,175]DEBUG  6434[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 22:36:55,177]DEBUG  6436[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByCriterions]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:55,177]DEBUG  6436[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15080098151
[2017-10-14 22:36:55,177]DEBUG  6436[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@34b07c59] for Hibernate transaction
[2017-10-14 22:36:55,178]DEBUG  6437[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@34b07c59]
[2017-10-14 22:36:55,178]DEBUG  6437[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 22:36:55,178]DEBUG  6437[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 22:36:55,178]DEBUG  6437[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 22:36:55,179]DEBUG  6438[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@1833b96c testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@5959e789, testMethod = testFindByCriterions@CustomerTypeDaoTest, testException = [null]]]
[2017-10-14 22:36:55,179] INFO  6438[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (7): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@598b619b]; rollback [true]
[2017-10-14 22:36:55,179]DEBUG  6438[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:55,180]DEBUG  6439[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,180]DEBUG  6439[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-14 22:36:55,181]DEBUG  6440[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 25
[2017-10-14 22:36:55,182]DEBUG  6441[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,182]DEBUG  6441[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:55,183]DEBUG  6442[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,183]DEBUG  6442[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-14 22:36:55,184]DEBUG  6443[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 26
[2017-10-14 22:36:55,184]DEBUG  6443[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,185]DEBUG  6444[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:55,185]DEBUG  6444[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,185]DEBUG  6444[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-14 22:36:55,186]DEBUG  6445[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 27
[2017-10-14 22:36:55,187]DEBUG  6446[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,187]DEBUG  6446[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:55,188]DEBUG  6447[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,188]DEBUG  6447[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-14 22:36:55,189]DEBUG  6448[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 28
[2017-10-14 22:36:55,189]DEBUG  6448[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,190]DEBUG  6449[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:55,190]DEBUG  6449[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:55,191]DEBUG  6450[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:55,191]DEBUG  6450[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:55,191]DEBUG  6450[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:55,191]DEBUG  6450[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=26, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,191]DEBUG  6450[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=25, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,191]DEBUG  6450[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=28, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,191]DEBUG  6450[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=27, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,192]DEBUG  6451[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,192]DEBUG  6451[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID2_0_, this_.Discount as Discount2_0_, this_.MaxRange as MaxRange2_0_, this_.MinRange as MinRange2_0_, this_.TypeName as TypeName2_0_ from CustomerTypes this_ where this_.TypeName=? and this_.ID<=?
[2017-10-14 22:36:55,193]DEBUG  6452[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:55,193]DEBUG  6452[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.CustomerType#25]
[2017-10-14 22:36:55,193]DEBUG  6452[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:55,193]DEBUG  6452[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,194]DEBUG  6453[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:55,194]DEBUG  6453[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:55,194]DEBUG  6453[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:55,194]DEBUG  6453[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:55,194]DEBUG  6453[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:55,194]DEBUG  6453[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:55,194]DEBUG  6453[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=26, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,195]DEBUG  6454[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=25, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,195]DEBUG  6454[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=28, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,195]DEBUG  6454[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=27, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,195]DEBUG  6454[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,195]DEBUG  6454[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 22:36:55,195]DEBUG  6454[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,196]DEBUG  6455[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:55,196]DEBUG  6455[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:55,196]DEBUG  6455[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:55,196]DEBUG  6455[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:55,196]DEBUG  6455[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:55,196]DEBUG  6455[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=26, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,197]DEBUG  6456[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=25, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,197]DEBUG  6456[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=28, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,197]DEBUG  6456[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=27, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,197]DEBUG  6456[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,197]DEBUG  6456[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 22:36:55,197]DEBUG  6456[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,197]DEBUG  6456[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:55,198]DEBUG  6457[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:55,198]DEBUG  6457[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:55,198]DEBUG  6457[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:55,198]DEBUG  6457[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:55,198]DEBUG  6457[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=26, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,198]DEBUG  6457[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=25, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,198]DEBUG  6457[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=28, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,199]DEBUG  6458[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=27, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,199]DEBUG  6458[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,199]DEBUG  6458[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 22:36:55,199]DEBUG  6458[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,199]DEBUG  6458[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:55,199]DEBUG  6458[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:55,200]DEBUG  6459[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:55,200]DEBUG  6459[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:55,200]DEBUG  6459[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:55,200]DEBUG  6459[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=26, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,200]DEBUG  6459[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=25, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,200]DEBUG  6459[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=28, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,200]DEBUG  6459[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=27, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,201]DEBUG  6460[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,201]DEBUG  6460[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 22:36:55,201]DEBUG  6460[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,201]DEBUG  6460[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:55,201]DEBUG  6460[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:55,201]DEBUG  6460[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:55,202]DEBUG  6461[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:55,202]DEBUG  6461[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:55,202]DEBUG  6461[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=26, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,202]DEBUG  6461[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=25, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,202]DEBUG  6461[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=28, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,202]DEBUG  6461[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=27, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,202]DEBUG  6461[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,203]DEBUG  6462[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 22:36:55,203]DEBUG  6462[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,203]DEBUG  6462[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:55,203]DEBUG  6462[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:55,203]DEBUG  6462[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:55,203]DEBUG  6462[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:55,204]DEBUG  6463[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:55,204]DEBUG  6463[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=26, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,204]DEBUG  6463[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=25, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,204]DEBUG  6463[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=28, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,204]DEBUG  6463[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=27, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,204]DEBUG  6463[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,204]DEBUG  6463[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 22:36:55,205]DEBUG  6464[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,205]DEBUG  6464[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:55,205]DEBUG  6464[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:55,205]DEBUG  6464[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:55,205]DEBUG  6464[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:55,205]DEBUG  6464[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:55,206]DEBUG  6465[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=26, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,206]DEBUG  6465[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=25, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,206]DEBUG  6465[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=28, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,206]DEBUG  6465[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=27, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,206]DEBUG  6465[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,206]DEBUG  6465[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 22:36:55,207]DEBUG  6466[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,207]DEBUG  6466[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:55,207]DEBUG  6466[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:55,207]DEBUG  6466[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:55,207]DEBUG  6466[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:55,207]DEBUG  6466[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:55,207]DEBUG  6466[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=26, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,208]DEBUG  6467[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=25, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,208]DEBUG  6467[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=28, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,208]DEBUG  6467[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=27, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,208]DEBUG  6467[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,208]DEBUG  6467[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 22:36:55,208]DEBUG  6467[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,209]DEBUG  6468[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:55,209]DEBUG  6468[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:55,209]DEBUG  6468[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:55,209]DEBUG  6468[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:55,209]DEBUG  6468[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:55,209]DEBUG  6468[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=26, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,209]DEBUG  6468[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=25, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,210]DEBUG  6469[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=28, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,210]DEBUG  6469[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=27, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,210]DEBUG  6469[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,210]DEBUG  6469[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 22:36:55,210]DEBUG  6469[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,210]DEBUG  6469[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@1833b96c testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@5959e789, testMethod = testFindByCriterions@CustomerTypeDaoTest, testException = [null]]]
[2017-10-14 22:36:55,210]DEBUG  6469[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 22:36:55,211]DEBUG  6470[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@34b07c59]
[2017-10-14 22:36:55,211]DEBUG  6470[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 22:36:55,244]DEBUG  6503[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 22:36:55,244]DEBUG  6503[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:55,245]DEBUG  6504[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@34b07c59] after transaction
[2017-10-14 22:36:55,245]DEBUG  6504[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 22:36:55,245]DEBUG  6504[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 22:36:55,245]DEBUG  6504[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:55,246] INFO  6505[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@1833b96c testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@5959e789, testMethod = testFindByCriterions@CustomerTypeDaoTest, testException = [null]]]
[2017-10-14 22:36:55,247]DEBUG  6506[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@1833b96c testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@5959e789, testMethod = testFindByCriterions@CustomerTypeDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 22:36:55,248]DEBUG  6507[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2017-10-14 22:36:55,248]DEBUG  6507[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2017-10-14 22:36:55,249]DEBUG  6508[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@1833b96c testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@54a57725, testMethod = [null], testException = [null]]].
[2017-10-14 22:36:55,250]DEBUG  6509[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 22:36:55,250]DEBUG  6509[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 22:36:55,250]DEBUG  6509[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 22:36:55,250]DEBUG  6509[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 22:36:55,251]DEBUG  6510[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 22:36:55,251]DEBUG  6510[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 22:36:55,251]DEBUG  6510[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 22:36:55,251]DEBUG  6510[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 22:36:55,252]DEBUG  6511[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 22:36:55,252]DEBUG  6511[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 22:36:55,252]DEBUG  6511[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 22:36:55,252]DEBUG  6511[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 22:36:55,253]DEBUG  6512[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 22:36:55,253]DEBUG  6512[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 22:36:55,253]DEBUG  6512[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 22:36:55,253]DEBUG  6512[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 22:36:55,254]DEBUG  6513[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 22:36:55,254]DEBUG  6513[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 22:36:55,254]DEBUG  6513[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 22:36:55,254]DEBUG  6513[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 22:36:55,255]DEBUG  6514[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 22:36:55,255]DEBUG  6514[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 22:36:55,255]DEBUG  6514[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@54a57725]
[2017-10-14 22:36:55,257]DEBUG  6516[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByOneOfCriterions' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:55,257]DEBUG  6516[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@1833b96c testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@54a57725, testMethod = testFindByOneOfCriterions@CustomerTypeDaoTest, testException = [null]]]
[2017-10-14 22:36:55,257]DEBUG  6516[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 22:36:55,259]DEBUG  6518[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByOneOfCriterions]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:55,259]DEBUG  6518[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15080098152
[2017-10-14 22:36:55,259]DEBUG  6518[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@19b3e4b8] for Hibernate transaction
[2017-10-14 22:36:55,260]DEBUG  6519[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@19b3e4b8]
[2017-10-14 22:36:55,260]DEBUG  6519[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 22:36:55,260]DEBUG  6519[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 22:36:55,260]DEBUG  6519[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 22:36:55,261]DEBUG  6520[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@1833b96c testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@54a57725, testMethod = testFindByOneOfCriterions@CustomerTypeDaoTest, testException = [null]]]
[2017-10-14 22:36:55,261] INFO  6520[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (8): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@598b619b]; rollback [true]
[2017-10-14 22:36:55,261]DEBUG  6520[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:55,262]DEBUG  6521[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,262]DEBUG  6521[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-14 22:36:55,263]DEBUG  6522[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 29
[2017-10-14 22:36:55,264]DEBUG  6523[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,264]DEBUG  6523[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:55,264]DEBUG  6523[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,265]DEBUG  6524[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-14 22:36:55,266]DEBUG  6525[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 30
[2017-10-14 22:36:55,266]DEBUG  6525[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,267]DEBUG  6526[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:55,267]DEBUG  6526[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,267]DEBUG  6526[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-14 22:36:55,268]DEBUG  6527[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 31
[2017-10-14 22:36:55,269]DEBUG  6528[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,269]DEBUG  6528[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:55,269]DEBUG  6528[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,269]DEBUG  6528[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-14 22:36:55,270]DEBUG  6529[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 32
[2017-10-14 22:36:55,270]DEBUG  6529[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,270]DEBUG  6529[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:55,270]DEBUG  6529[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:55,270]DEBUG  6529[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:55,271]DEBUG  6530[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:55,271]DEBUG  6530[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:55,271]DEBUG  6530[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=32, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,271]DEBUG  6530[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=31, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,271]DEBUG  6530[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=30, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,271]DEBUG  6530[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=29, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,271]DEBUG  6530[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,272]DEBUG  6531[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID2_0_, this_.Discount as Discount2_0_, this_.MaxRange as MaxRange2_0_, this_.MinRange as MinRange2_0_, this_.TypeName as TypeName2_0_ from CustomerTypes this_ where this_.TypeName=? and this_.ID<=?
[2017-10-14 22:36:55,272]DEBUG  6531[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:55,273]DEBUG  6532[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.CustomerType#29]
[2017-10-14 22:36:55,273]DEBUG  6532[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:55,273]DEBUG  6532[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,273]DEBUG  6532[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:55,273]DEBUG  6532[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:55,273]DEBUG  6532[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:55,274]DEBUG  6533[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:55,274]DEBUG  6533[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:55,274]DEBUG  6533[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:55,274]DEBUG  6533[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=32, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,274]DEBUG  6533[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=31, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,274]DEBUG  6533[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=30, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,274]DEBUG  6533[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=29, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,275]DEBUG  6534[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,275]DEBUG  6534[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 22:36:55,275]DEBUG  6534[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,275]DEBUG  6534[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:55,275]DEBUG  6534[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:55,275]DEBUG  6534[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:55,276]DEBUG  6535[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:55,276]DEBUG  6535[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:55,276]DEBUG  6535[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=32, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,276]DEBUG  6535[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=31, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,276]DEBUG  6535[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=30, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,276]DEBUG  6535[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=29, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,276]DEBUG  6535[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,276]DEBUG  6535[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 22:36:55,277]DEBUG  6536[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,277]DEBUG  6536[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:55,277]DEBUG  6536[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:55,277]DEBUG  6536[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:55,277]DEBUG  6536[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:55,277]DEBUG  6536[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:55,278]DEBUG  6537[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=32, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,278]DEBUG  6537[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=31, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,278]DEBUG  6537[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=30, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,278]DEBUG  6537[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=29, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,278]DEBUG  6537[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,278]DEBUG  6537[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 22:36:55,279]DEBUG  6538[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,279]DEBUG  6538[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:55,279]DEBUG  6538[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:55,279]DEBUG  6538[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:55,279]DEBUG  6538[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:55,279]DEBUG  6538[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:55,279]DEBUG  6538[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=32, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,280]DEBUG  6539[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=31, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,280]DEBUG  6539[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=30, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,280]DEBUG  6539[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=29, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,280]DEBUG  6539[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,280]DEBUG  6539[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 22:36:55,280]DEBUG  6539[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,281]DEBUG  6540[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:55,281]DEBUG  6540[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:55,281]DEBUG  6540[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:55,281]DEBUG  6540[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:55,281]DEBUG  6540[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:55,281]DEBUG  6540[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=32, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,281]DEBUG  6540[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=31, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,282]DEBUG  6541[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=30, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,282]DEBUG  6541[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=29, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,282]DEBUG  6541[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,282]DEBUG  6541[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 22:36:55,282]DEBUG  6541[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,282]DEBUG  6541[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:55,283]DEBUG  6542[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:55,283]DEBUG  6542[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:55,283]DEBUG  6542[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:55,283]DEBUG  6542[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:55,283]DEBUG  6542[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=32, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,283]DEBUG  6542[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=31, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,283]DEBUG  6542[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=30, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,284]DEBUG  6543[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=29, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,284]DEBUG  6543[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,284]DEBUG  6543[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 22:36:55,284]DEBUG  6543[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,284]DEBUG  6543[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:55,284]DEBUG  6543[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:55,285]DEBUG  6544[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:55,285]DEBUG  6544[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:55,285]DEBUG  6544[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:55,285]DEBUG  6544[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=32, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,285]DEBUG  6544[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=31, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,285]DEBUG  6544[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=30, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,285]DEBUG  6544[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=29, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,285]DEBUG  6544[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,286]DEBUG  6545[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 22:36:55,286]DEBUG  6545[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,286]DEBUG  6545[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:55,286]DEBUG  6545[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:55,286]DEBUG  6545[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:55,286]DEBUG  6545[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:55,287]DEBUG  6546[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:55,287]DEBUG  6546[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=32, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,287]DEBUG  6546[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=31, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,287]DEBUG  6546[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=30, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,287]DEBUG  6546[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=29, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,287]DEBUG  6546[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,287]DEBUG  6546[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 22:36:55,288]DEBUG  6547[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,288]DEBUG  6547[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:55,288]DEBUG  6547[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:55,288]DEBUG  6547[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:55,288]DEBUG  6547[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:55,288]DEBUG  6547[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:55,288]DEBUG  6547[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=32, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,289]DEBUG  6548[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=31, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,289]DEBUG  6548[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=30, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,289]DEBUG  6548[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=29, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,289]DEBUG  6548[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,289]DEBUG  6548[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 22:36:55,289]DEBUG  6548[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,290]DEBUG  6549[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@1833b96c testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@54a57725, testMethod = testFindByOneOfCriterions@CustomerTypeDaoTest, testException = [null]]]
[2017-10-14 22:36:55,290]DEBUG  6549[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 22:36:55,290]DEBUG  6549[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@19b3e4b8]
[2017-10-14 22:36:55,290]DEBUG  6549[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 22:36:55,319]DEBUG  6578[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 22:36:55,319]DEBUG  6578[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:55,319]DEBUG  6578[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@19b3e4b8] after transaction
[2017-10-14 22:36:55,320]DEBUG  6579[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 22:36:55,320]DEBUG  6579[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 22:36:55,320]DEBUG  6579[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:55,321] INFO  6580[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@1833b96c testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@54a57725, testMethod = testFindByOneOfCriterions@CustomerTypeDaoTest, testException = [null]]]
[2017-10-14 22:36:55,322]DEBUG  6581[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@1833b96c testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@54a57725, testMethod = testFindByOneOfCriterions@CustomerTypeDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 22:36:55,323]DEBUG  6582[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2017-10-14 22:36:55,323]DEBUG  6582[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2017-10-14 22:36:55,324]DEBUG  6583[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@1833b96c testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@26f6379c, testMethod = [null], testException = [null]]].
[2017-10-14 22:36:55,324]DEBUG  6583[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 22:36:55,325]DEBUG  6584[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 22:36:55,325]DEBUG  6584[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 22:36:55,325]DEBUG  6584[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 22:36:55,325]DEBUG  6584[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 22:36:55,326]DEBUG  6585[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 22:36:55,326]DEBUG  6585[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 22:36:55,326]DEBUG  6585[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 22:36:55,326]DEBUG  6585[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 22:36:55,327]DEBUG  6586[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 22:36:55,327]DEBUG  6586[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 22:36:55,327]DEBUG  6586[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 22:36:55,327]DEBUG  6586[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 22:36:55,328]DEBUG  6587[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 22:36:55,328]DEBUG  6587[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 22:36:55,328]DEBUG  6587[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 22:36:55,328]DEBUG  6587[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 22:36:55,329]DEBUG  6588[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 22:36:55,329]DEBUG  6588[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 22:36:55,329]DEBUG  6588[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 22:36:55,329]DEBUG  6588[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 22:36:55,330]DEBUG  6589[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 22:36:55,330]DEBUG  6589[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@26f6379c]
[2017-10-14 22:36:55,331]DEBUG  6590[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testInsertOrUpdate' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:55,331]DEBUG  6590[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@1833b96c testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@26f6379c, testMethod = testInsertOrUpdate@CustomerTypeDaoTest, testException = [null]]]
[2017-10-14 22:36:55,331]DEBUG  6590[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 22:36:55,333]DEBUG  6592[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testInsertOrUpdate]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:55,333]DEBUG  6592[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15080098153
[2017-10-14 22:36:55,334]DEBUG  6593[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@2e63e916] for Hibernate transaction
[2017-10-14 22:36:55,334]DEBUG  6593[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@2e63e916]
[2017-10-14 22:36:55,334]DEBUG  6593[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 22:36:55,334]DEBUG  6593[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 22:36:55,335]DEBUG  6594[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 22:36:55,335]DEBUG  6594[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@1833b96c testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@26f6379c, testMethod = testInsertOrUpdate@CustomerTypeDaoTest, testException = [null]]]
[2017-10-14 22:36:55,335] INFO  6594[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (9): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@598b619b]; rollback [true]
[2017-10-14 22:36:55,335]DEBUG  6594[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:55,336]DEBUG  6595[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,336]DEBUG  6595[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-14 22:36:55,337]DEBUG  6596[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 33
[2017-10-14 22:36:55,338]DEBUG  6597[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,338]DEBUG  6597[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:55,339]DEBUG  6598[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,339]DEBUG  6598[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-14 22:36:55,340]DEBUG  6599[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 34
[2017-10-14 22:36:55,340]DEBUG  6599[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,341]DEBUG  6600[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:55,341]DEBUG  6600[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,341]DEBUG  6600[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-14 22:36:55,343]DEBUG  6602[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 35
[2017-10-14 22:36:55,343]DEBUG  6602[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,343]DEBUG  6602[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:55,344]DEBUG  6603[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,344]DEBUG  6603[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-14 22:36:55,345]DEBUG  6604[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 36
[2017-10-14 22:36:55,345]DEBUG  6604[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,346]DEBUG  6605[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:55,346]DEBUG  6605[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:55,347]DEBUG  6606[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:55,347]DEBUG  6606[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:55,347]DEBUG  6606[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:55,348]DEBUG  6607[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=34, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,348]DEBUG  6607[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=33, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,348]DEBUG  6607[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=35, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,349]DEBUG  6608[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=36, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,349]DEBUG  6608[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,349]DEBUG  6608[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 22:36:55,349]DEBUG  6608[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,349]DEBUG  6608[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:55,350]DEBUG  6609[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,350]DEBUG  6609[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-14 22:36:55,350]DEBUG  6609[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 37
[2017-10-14 22:36:55,350]DEBUG  6609[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,351]DEBUG  6610[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:55,351]DEBUG  6610[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:55,351]DEBUG  6610[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2017-10-14 22:36:55,351]DEBUG  6610[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:55,351]DEBUG  6610[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:55,351]DEBUG  6610[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=34, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,352]DEBUG  6611[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=33, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,352]DEBUG  6611[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=37, maxRange=9.99999999E7, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,352]DEBUG  6611[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=35, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,352]DEBUG  6611[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=36, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,352]DEBUG  6611[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,352]DEBUG  6611[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select customerty0_.ID as ID2_, customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_ from CustomerTypes customerty0_ where customerty0_.TypeName=?
[2017-10-14 22:36:55,353]DEBUG  6612[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:55,353]DEBUG  6612[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.CustomerType#37]
[2017-10-14 22:36:55,354]DEBUG  6613[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:55,354]DEBUG  6613[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,354]DEBUG  6613[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:55,354]DEBUG  6613[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:55,354]DEBUG  6613[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:55,354]DEBUG  6613[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2017-10-14 22:36:55,355]DEBUG  6614[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:55,355]DEBUG  6614[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:55,355]DEBUG  6614[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=34, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,355]DEBUG  6614[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=33, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,355]DEBUG  6614[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=37, maxRange=9.99999999E7, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,355]DEBUG  6614[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=35, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,355]DEBUG  6614[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=36, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,356]DEBUG  6615[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,356]DEBUG  6615[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 22:36:55,356]DEBUG  6615[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,356]DEBUG  6615[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:55,356]DEBUG  6615[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:55,357]DEBUG  6616[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2017-10-14 22:36:55,357]DEBUG  6616[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:55,357]DEBUG  6616[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:55,357]DEBUG  6616[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=34, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,357]DEBUG  6616[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=33, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,357]DEBUG  6616[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=37, maxRange=9.99999999E7, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,357]DEBUG  6616[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=35, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,358]DEBUG  6617[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=36, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,358]DEBUG  6617[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,358]DEBUG  6617[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 22:36:55,358]DEBUG  6617[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,358]DEBUG  6617[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:55,358]DEBUG  6617[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:55,359]DEBUG  6618[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2017-10-14 22:36:55,359]DEBUG  6618[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:55,359]DEBUG  6618[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:55,359]DEBUG  6618[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=34, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,359]DEBUG  6618[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=33, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,359]DEBUG  6618[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=37, maxRange=9.99999999E7, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,359]DEBUG  6618[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=35, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,360]DEBUG  6619[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=36, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,360]DEBUG  6619[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,360]DEBUG  6619[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 22:36:55,360]DEBUG  6619[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,360]DEBUG  6619[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:55,360]DEBUG  6619[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:55,361]DEBUG  6620[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2017-10-14 22:36:55,361]DEBUG  6620[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:55,361]DEBUG  6620[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:55,361]DEBUG  6620[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=34, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,361]DEBUG  6620[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=33, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,361]DEBUG  6620[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=37, maxRange=9.99999999E7, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,361]DEBUG  6620[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=35, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,362]DEBUG  6621[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=36, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,362]DEBUG  6621[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,362]DEBUG  6621[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 22:36:55,362]DEBUG  6621[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,362]DEBUG  6621[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:55,363]DEBUG  6622[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:55,363]DEBUG  6622[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2017-10-14 22:36:55,363]DEBUG  6622[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:55,363]DEBUG  6622[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:55,363]DEBUG  6622[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=34, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,363]DEBUG  6622[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=33, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,363]DEBUG  6622[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=37, maxRange=9.99999999E7, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,364]DEBUG  6623[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=35, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,364]DEBUG  6623[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=36, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,364]DEBUG  6623[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,364]DEBUG  6623[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 22:36:55,364]DEBUG  6623[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,364]DEBUG  6623[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:55,365]DEBUG  6624[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:55,365]DEBUG  6624[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2017-10-14 22:36:55,365]DEBUG  6624[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:55,365]DEBUG  6624[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:55,365]DEBUG  6624[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=34, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,365]DEBUG  6624[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=33, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,366]DEBUG  6625[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=37, maxRange=9.99999999E7, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,366]DEBUG  6625[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=35, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,366]DEBUG  6625[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=36, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,366]DEBUG  6625[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,366]DEBUG  6625[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 22:36:55,366]DEBUG  6625[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,367]DEBUG  6626[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:55,367]DEBUG  6626[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:55,367]DEBUG  6626[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2017-10-14 22:36:55,367]DEBUG  6626[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:55,367]DEBUG  6626[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:55,367]DEBUG  6626[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=34, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,367]DEBUG  6626[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=33, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,368]DEBUG  6627[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=37, maxRange=9.99999999E7, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,368]DEBUG  6627[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=35, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,368]DEBUG  6627[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=36, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,368]DEBUG  6627[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,368]DEBUG  6627[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 22:36:55,368]DEBUG  6627[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,369]DEBUG  6628[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:55,369]DEBUG  6628[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:55,369]DEBUG  6628[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2017-10-14 22:36:55,369]DEBUG  6628[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:55,369]DEBUG  6628[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:55,369]DEBUG  6628[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=34, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,369]DEBUG  6628[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=33, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,370]DEBUG  6629[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=37, maxRange=9.99999999E7, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,370]DEBUG  6629[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=35, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,370]DEBUG  6629[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=36, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,370]DEBUG  6629[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,370]DEBUG  6629[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 22:36:55,370]DEBUG  6629[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,371]DEBUG  6630[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:55,371]DEBUG  6630[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:55,371]DEBUG  6630[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2017-10-14 22:36:55,371]DEBUG  6630[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:55,371]DEBUG  6630[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:55,371]DEBUG  6630[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=34, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,371]DEBUG  6630[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=33, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,372]DEBUG  6631[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=37, maxRange=9.99999999E7, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,372]DEBUG  6631[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=35, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,372]DEBUG  6631[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=36, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,372]DEBUG  6631[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,372]DEBUG  6631[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 22:36:55,372]DEBUG  6631[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,373]DEBUG  6632[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@1833b96c testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@26f6379c, testMethod = testInsertOrUpdate@CustomerTypeDaoTest, testException = [null]]]
[2017-10-14 22:36:55,373]DEBUG  6632[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 22:36:55,373]DEBUG  6632[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@2e63e916]
[2017-10-14 22:36:55,373]DEBUG  6632[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 22:36:55,402]DEBUG  6661[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 22:36:55,403]DEBUG  6662[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:55,403]DEBUG  6662[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@2e63e916] after transaction
[2017-10-14 22:36:55,403]DEBUG  6662[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 22:36:55,404]DEBUG  6663[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 22:36:55,404]DEBUG  6663[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:55,404] INFO  6663[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@1833b96c testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@26f6379c, testMethod = testInsertOrUpdate@CustomerTypeDaoTest, testException = [null]]]
[2017-10-14 22:36:55,406]DEBUG  6665[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@1833b96c testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@26f6379c, testMethod = testInsertOrUpdate@CustomerTypeDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 22:36:55,406]DEBUG  6665[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2017-10-14 22:36:55,407]DEBUG  6666[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2017-10-14 22:36:55,407]DEBUG  6666[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@1833b96c testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@4c887991, testMethod = [null], testException = [null]]].
[2017-10-14 22:36:55,408]DEBUG  6667[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 22:36:55,408]DEBUG  6667[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 22:36:55,408]DEBUG  6667[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 22:36:55,409]DEBUG  6668[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 22:36:55,409]DEBUG  6668[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 22:36:55,409]DEBUG  6668[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 22:36:55,409]DEBUG  6668[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 22:36:55,410]DEBUG  6669[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 22:36:55,410]DEBUG  6669[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 22:36:55,410]DEBUG  6669[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 22:36:55,410]DEBUG  6669[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 22:36:55,411]DEBUG  6670[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 22:36:55,411]DEBUG  6670[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 22:36:55,411]DEBUG  6670[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 22:36:55,411]DEBUG  6670[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 22:36:55,412]DEBUG  6671[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 22:36:55,412]DEBUG  6671[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 22:36:55,412]DEBUG  6671[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 22:36:55,412]DEBUG  6671[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 22:36:55,413]DEBUG  6672[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 22:36:55,413]DEBUG  6672[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 22:36:55,413]DEBUG  6672[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 22:36:55,414]DEBUG  6673[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@4c887991]
[2017-10-14 22:36:55,414]DEBUG  6673[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testDelete' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:55,415]DEBUG  6674[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@1833b96c testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@4c887991, testMethod = testDelete@CustomerTypeDaoTest, testException = [null]]]
[2017-10-14 22:36:55,415]DEBUG  6674[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 22:36:55,416]DEBUG  6675[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testDelete]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:55,417]DEBUG  6676[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15080098154
[2017-10-14 22:36:55,417]DEBUG  6676[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@2f0dbbc9] for Hibernate transaction
[2017-10-14 22:36:55,417]DEBUG  6676[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@2f0dbbc9]
[2017-10-14 22:36:55,417]DEBUG  6676[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 22:36:55,418]DEBUG  6677[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 22:36:55,418]DEBUG  6677[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 22:36:55,418]DEBUG  6677[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@1833b96c testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@4c887991, testMethod = testDelete@CustomerTypeDaoTest, testException = [null]]]
[2017-10-14 22:36:55,419] INFO  6678[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (10): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@598b619b]; rollback [true]
[2017-10-14 22:36:55,419]DEBUG  6678[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:55,419]DEBUG  6678[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,420]DEBUG  6679[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-14 22:36:55,421]DEBUG  6680[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 38
[2017-10-14 22:36:55,421]DEBUG  6680[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,422]DEBUG  6681[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:55,422]DEBUG  6681[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,422]DEBUG  6681[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-14 22:36:55,423]DEBUG  6682[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 39
[2017-10-14 22:36:55,424]DEBUG  6683[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,424]DEBUG  6683[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:55,425]DEBUG  6684[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,425]DEBUG  6684[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-14 22:36:55,426]DEBUG  6685[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 40
[2017-10-14 22:36:55,426]DEBUG  6685[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,427]DEBUG  6686[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:55,427]DEBUG  6686[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,427]DEBUG  6686[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-14 22:36:55,428]DEBUG  6687[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 41
[2017-10-14 22:36:55,429]DEBUG  6688[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,430] INFO  6689[main] - org.hibernate.event.def.DefaultDeleteEventListener.deleteTransientEntity(DefaultDeleteEventListener.java:203) - handling transient entity in delete processing
[2017-10-14 22:36:55,430]DEBUG  6689[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:55,430]DEBUG  6689[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:55,430]DEBUG  6689[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:55,430]DEBUG  6689[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:55,431]DEBUG  6690[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:55,431]DEBUG  6690[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=41, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,431]DEBUG  6690[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=39, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,431]DEBUG  6690[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=40, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,431]DEBUG  6690[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=38, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,431]DEBUG  6690[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,431]DEBUG  6690[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select customerty0_.ID as ID2_, customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_ from CustomerTypes customerty0_ where customerty0_.TypeName=?
[2017-10-14 22:36:55,432]DEBUG  6691[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:55,432]DEBUG  6691[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.CustomerType#38]
[2017-10-14 22:36:55,433]DEBUG  6692[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:55,433]DEBUG  6692[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,433]DEBUG  6692[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:55,433]DEBUG  6692[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:55,439]DEBUG  6698[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:55,439]DEBUG  6698[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:55,439]DEBUG  6698[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:55,439]DEBUG  6698[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:55,439]DEBUG  6698[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=41, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,440]DEBUG  6699[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=39, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,440]DEBUG  6699[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=40, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,440]DEBUG  6699[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=38, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,440]DEBUG  6699[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,440]DEBUG  6699[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 22:36:55,441]DEBUG  6700[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,441]DEBUG  6700[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:55,441]DEBUG  6700[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:55,441]DEBUG  6700[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:55,441]DEBUG  6700[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:55,441]DEBUG  6700[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:55,442]DEBUG  6701[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=41, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,442]DEBUG  6701[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=39, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,442]DEBUG  6701[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=40, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,442]DEBUG  6701[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=38, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,442]DEBUG  6701[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,442]DEBUG  6701[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 22:36:55,442]DEBUG  6701[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,443]DEBUG  6702[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:55,443]DEBUG  6702[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:55,443]DEBUG  6702[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:55,443]DEBUG  6702[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:55,443]DEBUG  6702[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:55,443]DEBUG  6702[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=41, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,443]DEBUG  6702[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=39, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,444]DEBUG  6703[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=40, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,444]DEBUG  6703[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=38, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,444]DEBUG  6703[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,444]DEBUG  6703[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 22:36:55,444]DEBUG  6703[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,445]DEBUG  6704[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:55,445]DEBUG  6704[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:55,445]DEBUG  6704[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:55,445]DEBUG  6704[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:55,445]DEBUG  6704[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:55,445]DEBUG  6704[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=41, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,445]DEBUG  6704[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=39, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,445]DEBUG  6704[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=40, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,446]DEBUG  6705[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=38, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,446]DEBUG  6705[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,446]DEBUG  6705[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 22:36:55,446]DEBUG  6705[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,446]DEBUG  6705[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:55,446]DEBUG  6705[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:55,447]DEBUG  6706[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:55,447]DEBUG  6706[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:55,447]DEBUG  6706[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:55,447]DEBUG  6706[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=41, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,447]DEBUG  6706[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=39, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,447]DEBUG  6706[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=40, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,447]DEBUG  6706[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=38, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,448]DEBUG  6707[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,448]DEBUG  6707[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 22:36:55,448]DEBUG  6707[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,448]DEBUG  6707[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:55,448]DEBUG  6707[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:55,448]DEBUG  6707[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:55,449]DEBUG  6708[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:55,449]DEBUG  6708[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:55,449]DEBUG  6708[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=41, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,449]DEBUG  6708[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=39, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,449]DEBUG  6708[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=40, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,449]DEBUG  6708[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=38, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,449]DEBUG  6708[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,450]DEBUG  6709[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 22:36:55,450]DEBUG  6709[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,450]DEBUG  6709[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:55,450]DEBUG  6709[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:55,450]DEBUG  6709[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:55,451]DEBUG  6710[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:55,451]DEBUG  6710[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:55,451]DEBUG  6710[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=41, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,451]DEBUG  6710[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=39, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,451]DEBUG  6710[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=40, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,451]DEBUG  6710[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=38, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,451]DEBUG  6710[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,451]DEBUG  6710[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 22:36:55,452]DEBUG  6711[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,452]DEBUG  6711[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:55,452]DEBUG  6711[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:55,452]DEBUG  6711[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:55,452]DEBUG  6711[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:55,453]DEBUG  6712[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:55,453]DEBUG  6712[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=41, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,453]DEBUG  6712[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=39, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,453]DEBUG  6712[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=40, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,453]DEBUG  6712[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=38, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,453]DEBUG  6712[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,453]DEBUG  6712[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 22:36:55,454]DEBUG  6713[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,454]DEBUG  6713[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:55,454]DEBUG  6713[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:55,454]DEBUG  6713[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:55,454]DEBUG  6713[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:55,454]DEBUG  6713[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:55,455]DEBUG  6714[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=41, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,455]DEBUG  6714[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=39, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,455]DEBUG  6714[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=40, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,455]DEBUG  6714[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=38, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,455]DEBUG  6714[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,455]DEBUG  6714[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 22:36:55,456]DEBUG  6715[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,456]DEBUG  6715[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@1833b96c testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@4c887991, testMethod = testDelete@CustomerTypeDaoTest, testException = [null]]]
[2017-10-14 22:36:55,456]DEBUG  6715[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 22:36:55,456]DEBUG  6715[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@2f0dbbc9]
[2017-10-14 22:36:55,456]DEBUG  6715[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 22:36:55,486]DEBUG  6745[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 22:36:55,486]DEBUG  6745[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:55,486]DEBUG  6745[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@2f0dbbc9] after transaction
[2017-10-14 22:36:55,487]DEBUG  6746[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 22:36:55,487]DEBUG  6746[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 22:36:55,487]DEBUG  6746[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:55,487] INFO  6746[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@1833b96c testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@4c887991, testMethod = testDelete@CustomerTypeDaoTest, testException = [null]]]
[2017-10-14 22:36:55,489]DEBUG  6748[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@1833b96c testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@4c887991, testMethod = testDelete@CustomerTypeDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 22:36:55,490]DEBUG  6749[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2017-10-14 22:36:55,490]DEBUG  6749[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2017-10-14 22:36:55,491]DEBUG  6750[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@1833b96c testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@49bd1798, testMethod = [null], testException = [null]]].
[2017-10-14 22:36:55,491]DEBUG  6750[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 22:36:55,491]DEBUG  6750[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 22:36:55,491]DEBUG  6750[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 22:36:55,492]DEBUG  6751[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 22:36:55,492]DEBUG  6751[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 22:36:55,492]DEBUG  6751[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 22:36:55,492]DEBUG  6751[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 22:36:55,493]DEBUG  6752[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 22:36:55,493]DEBUG  6752[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 22:36:55,493]DEBUG  6752[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 22:36:55,493]DEBUG  6752[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 22:36:55,494]DEBUG  6753[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 22:36:55,494]DEBUG  6753[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 22:36:55,494]DEBUG  6753[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 22:36:55,495]DEBUG  6754[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 22:36:55,496]DEBUG  6755[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 22:36:55,496]DEBUG  6755[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 22:36:55,496]DEBUG  6755[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 22:36:55,497]DEBUG  6756[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 22:36:55,497]DEBUG  6756[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 22:36:55,497]DEBUG  6756[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 22:36:55,497]DEBUG  6756[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 22:36:55,498]DEBUG  6757[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@49bd1798]
[2017-10-14 22:36:55,499]DEBUG  6758[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testContextFile' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:55,499]DEBUG  6758[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@1833b96c testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@49bd1798, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2017-10-14 22:36:55,499]DEBUG  6758[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 22:36:55,501]DEBUG  6760[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testContextFile]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:55,501]DEBUG  6760[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15080098155
[2017-10-14 22:36:55,501]DEBUG  6760[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@5452afa8] for Hibernate transaction
[2017-10-14 22:36:55,501]DEBUG  6760[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@5452afa8]
[2017-10-14 22:36:55,502]DEBUG  6761[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 22:36:55,502]DEBUG  6761[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 22:36:55,502]DEBUG  6761[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 22:36:55,502]DEBUG  6761[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@1833b96c testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@49bd1798, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2017-10-14 22:36:55,503] INFO  6762[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (11): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@598b619b]; rollback [true]
[2017-10-14 22:36:55,503]DEBUG  6762[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:55,503]DEBUG  6762[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,504]DEBUG  6763[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-14 22:36:55,505]DEBUG  6764[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 42
[2017-10-14 22:36:55,505]DEBUG  6764[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,506]DEBUG  6765[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:55,506]DEBUG  6765[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,506]DEBUG  6765[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-14 22:36:55,507]DEBUG  6766[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 43
[2017-10-14 22:36:55,508]DEBUG  6767[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,508]DEBUG  6767[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:55,509]DEBUG  6768[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,509]DEBUG  6768[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-14 22:36:55,510]DEBUG  6769[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 44
[2017-10-14 22:36:55,510]DEBUG  6769[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,511]DEBUG  6770[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:55,511]DEBUG  6770[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,511]DEBUG  6770[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2017-10-14 22:36:55,512]DEBUG  6771[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 45
[2017-10-14 22:36:55,512]DEBUG  6771[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,513]DEBUG  6772[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:55,513]DEBUG  6772[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:55,514]DEBUG  6773[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:55,514]DEBUG  6773[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:55,514]DEBUG  6773[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:55,515]DEBUG  6774[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=42, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,515]DEBUG  6774[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=45, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,515]DEBUG  6774[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=43, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,515]DEBUG  6774[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=44, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,516]DEBUG  6775[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,516]DEBUG  6775[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 22:36:55,517]DEBUG  6776[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,517]DEBUG  6776[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:55,517]DEBUG  6776[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:55,518]DEBUG  6777[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:55,518]DEBUG  6777[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:55,518]DEBUG  6777[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:55,519]DEBUG  6778[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=42, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,519]DEBUG  6778[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=45, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,519]DEBUG  6778[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=43, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,519]DEBUG  6778[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=44, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,520]DEBUG  6779[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,520]DEBUG  6779[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 22:36:55,521]DEBUG  6780[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,521]DEBUG  6780[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:55,521]DEBUG  6780[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:55,522]DEBUG  6781[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:55,522]DEBUG  6781[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:55,522]DEBUG  6781[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:55,522]DEBUG  6781[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=42, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,523]DEBUG  6782[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=45, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,523]DEBUG  6782[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=43, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,523]DEBUG  6782[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=44, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,524]DEBUG  6783[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,524]DEBUG  6783[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 22:36:55,524]DEBUG  6783[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,525]DEBUG  6784[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:55,525]DEBUG  6784[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:55,526]DEBUG  6785[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:55,526]DEBUG  6785[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:55,526]DEBUG  6785[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:55,526]DEBUG  6785[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=42, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,527]DEBUG  6786[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=45, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,527]DEBUG  6786[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=43, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,527]DEBUG  6786[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=44, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,528]DEBUG  6787[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,528]DEBUG  6787[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 22:36:55,528]DEBUG  6787[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,529]DEBUG  6788[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:55,529]DEBUG  6788[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:55,529]DEBUG  6788[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:55,529]DEBUG  6788[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:55,529]DEBUG  6788[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:55,529]DEBUG  6788[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=42, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,529]DEBUG  6788[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=45, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,530]DEBUG  6789[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=43, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,530]DEBUG  6789[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=44, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,530]DEBUG  6789[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,530]DEBUG  6789[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 22:36:55,530]DEBUG  6789[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,530]DEBUG  6789[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:55,530]DEBUG  6789[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:55,531]DEBUG  6790[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:55,531]DEBUG  6790[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:55,531]DEBUG  6790[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:55,531]DEBUG  6790[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=42, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,531]DEBUG  6790[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=45, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,531]DEBUG  6790[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=43, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,531]DEBUG  6790[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=44, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,532]DEBUG  6791[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,532]DEBUG  6791[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 22:36:55,532]DEBUG  6791[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,532]DEBUG  6791[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:55,532]DEBUG  6791[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:55,532]DEBUG  6791[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:55,532]DEBUG  6791[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:55,533]DEBUG  6792[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:55,533]DEBUG  6792[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=42, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,533]DEBUG  6792[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=45, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,533]DEBUG  6792[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=43, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,533]DEBUG  6792[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=44, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,533]DEBUG  6792[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,533]DEBUG  6792[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 22:36:55,534]DEBUG  6793[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,534]DEBUG  6793[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:55,534]DEBUG  6793[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:55,534]DEBUG  6793[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:55,534]DEBUG  6793[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:55,534]DEBUG  6793[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:55,534]DEBUG  6793[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=42, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,535]DEBUG  6794[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=45, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,535]DEBUG  6794[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=43, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,535]DEBUG  6794[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=44, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,535]DEBUG  6794[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,535]DEBUG  6794[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 22:36:55,535]DEBUG  6794[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,536]DEBUG  6795[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:55,536]DEBUG  6795[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:55,536]DEBUG  6795[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:55,536]DEBUG  6795[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:55,536]DEBUG  6795[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:55,536]DEBUG  6795[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=42, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,536]DEBUG  6795[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=45, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,536]DEBUG  6795[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=43, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,537]DEBUG  6796[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=44, maxRange=99999.0, minRange=0.0, discount=1.2}
[2017-10-14 22:36:55,537]DEBUG  6796[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,537]DEBUG  6796[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 22:36:55,537]DEBUG  6796[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,537]DEBUG  6796[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@1833b96c testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@49bd1798, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2017-10-14 22:36:55,537]DEBUG  6796[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 22:36:55,537]DEBUG  6796[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@5452afa8]
[2017-10-14 22:36:55,537]DEBUG  6796[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 22:36:55,569]DEBUG  6828[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 22:36:55,569]DEBUG  6828[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:55,570]DEBUG  6829[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@5452afa8] after transaction
[2017-10-14 22:36:55,570]DEBUG  6829[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 22:36:55,570]DEBUG  6829[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 22:36:55,570]DEBUG  6829[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:55,571] INFO  6830[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@1833b96c testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@49bd1798, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2017-10-14 22:36:55,572]DEBUG  6831[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@1833b96c testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@49bd1798, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 22:36:55,573]DEBUG  6832[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestClass(DirtiesContextTestExecutionListener.java:113) - After test class: context [[TestContext@1833b96c testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = [null], testMethod = [null], testException = [null]]], dirtiesContext [false].
[2017-10-14 22:36:55,577]DEBUG  6836[main] - org.springframework.test.context.junit4.SpringJUnit4ClassRunner.<init>(SpringJUnit4ClassRunner.java:106) - SpringJUnit4ClassRunner constructor called with [class com.softserveinc.edu.oms.persistence.dao.RoleDAOTest].
[2017-10-14 22:36:55,577] INFO  6836[main] - org.springframework.test.context.TestContextManager.retrieveTestExecutionListeners(TestContextManager.java:185) - @TestExecutionListeners is not present for class [class com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]: using defaults.
[2017-10-14 22:36:55,577]DEBUG  6836[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2017-10-14 22:36:55,578]DEBUG  6837[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2017-10-14 22:36:55,582]DEBUG  6841[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2017-10-14 22:36:55,582]DEBUG  6841[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2017-10-14 22:36:55,583]DEBUG  6842[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2017-10-14 22:36:55,583]DEBUG  6842[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2017-10-14 22:36:55,593]DEBUG  6852[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2017-10-14 22:36:55,593]DEBUG  6852[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2017-10-14 22:36:55,594]DEBUG  6853[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@41c70651 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@716fd193, testMethod = [null], testException = [null]]].
[2017-10-14 22:36:55,599]DEBUG  6858[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 22:36:55,600]DEBUG  6859[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 22:36:55,600]DEBUG  6859[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 22:36:55,600]DEBUG  6859[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 22:36:55,600]DEBUG  6859[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 22:36:55,600]DEBUG  6859[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 22:36:55,600]DEBUG  6859[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 22:36:55,600]DEBUG  6859[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 22:36:55,600]DEBUG  6859[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 22:36:55,601]DEBUG  6860[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]: AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 22:36:55,601]DEBUG  6860[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 22:36:55,601]DEBUG  6860[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 22:36:55,601]DEBUG  6860[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' to bean named 'customerTypeDao'
[2017-10-14 22:36:55,601]DEBUG  6860[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 22:36:55,602]DEBUG  6861[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 22:36:55,602]DEBUG  6861[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' to bean named 'dimensionDao'
[2017-10-14 22:36:55,602]DEBUG  6861[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 22:36:55,602]DEBUG  6861[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 22:36:55,602]DEBUG  6861[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' to bean named 'orderDao'
[2017-10-14 22:36:55,602]DEBUG  6861[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 22:36:55,603]DEBUG  6862[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 22:36:55,603]DEBUG  6862[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' to bean named 'orderItemDao'
[2017-10-14 22:36:55,603]DEBUG  6862[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 22:36:55,603]DEBUG  6862[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 22:36:55,603]DEBUG  6862[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' to bean named 'orderStatusDao'
[2017-10-14 22:36:55,604]DEBUG  6863[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 22:36:55,604]DEBUG  6863[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 22:36:55,604]DEBUG  6863[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' to bean named 'productDao'
[2017-10-14 22:36:55,604]DEBUG  6863[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 22:36:55,604]DEBUG  6863[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 22:36:55,605]DEBUG  6864[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' to bean named 'regionDao'
[2017-10-14 22:36:55,605]DEBUG  6864[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 22:36:55,605]DEBUG  6864[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 22:36:55,605]DEBUG  6864[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' to bean named 'roleDao'
[2017-10-14 22:36:55,605]DEBUG  6864[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 22:36:55,606]DEBUG  6865[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 22:36:55,606]DEBUG  6865[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' to bean named 'userDao'
[2017-10-14 22:36:55,606]DEBUG  6865[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 22:36:55,606]DEBUG  6865[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 22:36:55,606]DEBUG  6865[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' to bean named 'sessionFactory'
[2017-10-14 22:36:55,607]DEBUG  6866[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 22:36:55,607]DEBUG  6866[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'setUp' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:55,607]DEBUG  6866[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 22:36:55,608]DEBUG  6867[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@716fd193]
[2017-10-14 22:36:55,608]DEBUG  6867[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RoleDAOTest.setUp()
[2017-10-14 22:36:55,609]DEBUG  6868[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'tearDown' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:55,609]DEBUG  6868[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RoleDAOTest.tearDown() throws java.lang.Exception
[2017-10-14 22:36:55,609]DEBUG  6868[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByID' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:55,609]DEBUG  6868[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RoleDAOTest.testFindByID()
[2017-10-14 22:36:55,610]DEBUG  6869[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByCriterions' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:55,610]DEBUG  6869[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RoleDAOTest.testFindByCriterions()
[2017-10-14 22:36:55,610]DEBUG  6869[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByOneOfCriterions' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:55,610]DEBUG  6869[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RoleDAOTest.testFindByOneOfCriterions()
[2017-10-14 22:36:55,610]DEBUG  6869[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testInsertOrUpdate' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:55,610]DEBUG  6869[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RoleDAOTest.testInsertOrUpdate()
[2017-10-14 22:36:55,611]DEBUG  6870[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testDelete' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:55,611]DEBUG  6870[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RoleDAOTest.testDelete()
[2017-10-14 22:36:55,611]DEBUG  6870[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetAdminRole' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:55,611]DEBUG  6870[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RoleDAOTest.testGetAdminRole()
[2017-10-14 22:36:55,611]DEBUG  6870[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetCustomerRole' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:55,612]DEBUG  6871[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RoleDAOTest.testGetCustomerRole()
[2017-10-14 22:36:55,612]DEBUG  6871[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetMerchandiserRole' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:55,612]DEBUG  6871[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RoleDAOTest.testGetMerchandiserRole()
[2017-10-14 22:36:55,612]DEBUG  6871[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetSupervisorRole' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:55,612]DEBUG  6871[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RoleDAOTest.testGetSupervisorRole()
[2017-10-14 22:36:55,613]DEBUG  6872[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByRoleName' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:55,613]DEBUG  6872[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RoleDAOTest.testFindByRoleName()
[2017-10-14 22:36:55,613]DEBUG  6872[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testContainsRole' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:55,613]DEBUG  6872[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RoleDAOTest.testContainsRole()
[2017-10-14 22:36:55,613]DEBUG  6872[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByCriterionsSorting' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:55,613]DEBUG  6872[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RoleDAOTest.testFindByCriterionsSorting()
[2017-10-14 22:36:55,614]DEBUG  6873[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByOneOfCriterionsSorting' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:55,614]DEBUG  6873[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RoleDAOTest.testFindByOneOfCriterionsSorting()
[2017-10-14 22:36:55,614]DEBUG  6873[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByRoleNameWithUserSelectWayConditions' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:55,614]DEBUG  6873[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RoleDAOTest.testFindByRoleNameWithUserSelectWayConditions()
[2017-10-14 22:36:55,615]DEBUG  6874[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByRoleNameWithUserSelectWayConditionsSorting' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:55,615]DEBUG  6874[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RoleDAOTest.testFindByRoleNameWithUserSelectWayConditionsSorting()
[2017-10-14 22:36:55,615]DEBUG  6874[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanDB()
[2017-10-14 22:36:55,615]DEBUG  6874[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanCustomerType()
[2017-10-14 22:36:55,615]DEBUG  6874[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testContextFile' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:55,615]DEBUG  6874[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.testContextFile()
[2017-10-14 22:36:55,616]DEBUG  6875[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanUser()
[2017-10-14 22:36:55,616]DEBUG  6875[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanRole()
[2017-10-14 22:36:55,616]DEBUG  6875[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanRegion()
[2017-10-14 22:36:55,616]DEBUG  6875[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanProduct()
[2017-10-14 22:36:55,616]DEBUG  6875[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrderStatus()
[2017-10-14 22:36:55,616]DEBUG  6875[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrderItem()
[2017-10-14 22:36:55,616]DEBUG  6875[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrder()
[2017-10-14 22:36:55,617]DEBUG  6876[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanDimension()
[2017-10-14 22:36:55,617]DEBUG  6876[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:749) - Found finalize() method - using NO_OVERRIDE
[2017-10-14 22:36:55,617]DEBUG  6876[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:761) - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
[2017-10-14 22:36:55,617]DEBUG  6876[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
[2017-10-14 22:36:55,617]DEBUG  6876[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:766) - Found 'hashCode' method: public native int java.lang.Object.hashCode()
[2017-10-14 22:36:55,617]DEBUG  6876[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
[2017-10-14 22:36:55,617]DEBUG  6876[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
[2017-10-14 22:36:55,617]DEBUG  6876[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
[2017-10-14 22:36:55,618]DEBUG  6877[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
[2017-10-14 22:36:55,618]DEBUG  6877[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
[2017-10-14 22:36:55,618]DEBUG  6877[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2017-10-14 22:36:55,618]DEBUG  6877[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2017-10-14 22:36:55,618]DEBUG  6877[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
[2017-10-14 22:36:55,618]DEBUG  6877[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
[2017-10-14 22:36:55,618]DEBUG  6877[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
[2017-10-14 22:36:55,618]DEBUG  6877[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
[2017-10-14 22:36:55,619]DEBUG  6878[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
[2017-10-14 22:36:55,619]DEBUG  6878[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
[2017-10-14 22:36:55,619]DEBUG  6878[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
[2017-10-14 22:36:55,619]DEBUG  6878[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
[2017-10-14 22:36:55,619]DEBUG  6878[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
[2017-10-14 22:36:55,619]DEBUG  6878[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
[2017-10-14 22:36:55,619]DEBUG  6878[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
[2017-10-14 22:36:55,619]DEBUG  6878[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
[2017-10-14 22:36:55,620]DEBUG  6879[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2017-10-14 22:36:55,620]DEBUG  6879[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
[2017-10-14 22:36:55,620]DEBUG  6879[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
[2017-10-14 22:36:55,620]DEBUG  6879[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
[2017-10-14 22:36:55,620]DEBUG  6879[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
[2017-10-14 22:36:55,640]DEBUG  6899[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByID' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:55,640]DEBUG  6899[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@41c70651 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@716fd193, testMethod = testFindByID@RoleDAOTest, testException = [null]]]
[2017-10-14 22:36:55,640]DEBUG  6899[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.retrieveConfigurationAttributes(TransactionalTestExecutionListener.java:466) - Retrieved @TransactionConfiguration [@org.springframework.test.context.transaction.TransactionConfiguration(transactionManager=transactionManager, defaultRollback=true)] for test class [class com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2017-10-14 22:36:55,640]DEBUG  6899[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.retrieveConfigurationAttributes(TransactionalTestExecutionListener.java:483) - Retrieved TransactionConfigurationAttributes [[TransactionConfigurationAttributes@6aff64f7 transactionManagerName = 'transactionManager', defaultRollback = true]] for class [class com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2017-10-14 22:36:55,640]DEBUG  6899[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 22:36:55,641]DEBUG  6900[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByID]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:55,641]DEBUG  6900[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15080098156
[2017-10-14 22:36:55,641]DEBUG  6900[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@f26133c] for Hibernate transaction
[2017-10-14 22:36:55,641]DEBUG  6900[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@f26133c]
[2017-10-14 22:36:55,641]DEBUG  6900[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 22:36:55,642]DEBUG  6901[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 22:36:55,642]DEBUG  6901[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 22:36:55,642]DEBUG  6901[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@41c70651 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@716fd193, testMethod = testFindByID@RoleDAOTest, testException = [null]]]
[2017-10-14 22:36:55,642] INFO  6901[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (1): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@598b619b]; rollback [true]
[2017-10-14 22:36:55,642]DEBUG  6901[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:55,643]DEBUG  6902[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,643]DEBUG  6902[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 22:36:55,644]DEBUG  6903[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 1
[2017-10-14 22:36:55,644]DEBUG  6903[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,644]DEBUG  6903[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:55,644]DEBUG  6903[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,644]DEBUG  6903[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 22:36:55,645]DEBUG  6904[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 2
[2017-10-14 22:36:55,646]DEBUG  6905[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,646]DEBUG  6905[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:55,646]DEBUG  6905[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,646]DEBUG  6905[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 22:36:55,650]DEBUG  6909[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 3
[2017-10-14 22:36:55,650]DEBUG  6909[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,650]DEBUG  6909[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:55,650]DEBUG  6909[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,650]DEBUG  6909[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 22:36:55,651]DEBUG  6910[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 4
[2017-10-14 22:36:55,651]DEBUG  6910[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,652]DEBUG  6911[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:55,652]DEBUG  6911[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:55,652]DEBUG  6911[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:55,652]DEBUG  6911[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:55,652]DEBUG  6911[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:55,652]DEBUG  6911[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=1, roleName=Administrator}
[2017-10-14 22:36:55,653]DEBUG  6912[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=2, roleName=Supervisor}
[2017-10-14 22:36:55,653]DEBUG  6912[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=3, roleName=Customer}
[2017-10-14 22:36:55,653]DEBUG  6912[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=4, roleName=Merchandiser}
[2017-10-14 22:36:55,653]DEBUG  6912[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,653]DEBUG  6912[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_
[2017-10-14 22:36:55,654]DEBUG  6913[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:55,654]DEBUG  6913[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#1]
[2017-10-14 22:36:55,654]DEBUG  6913[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#2]
[2017-10-14 22:36:55,655]DEBUG  6914[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#3]
[2017-10-14 22:36:55,655]DEBUG  6914[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#4]
[2017-10-14 22:36:55,655]DEBUG  6914[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:55,655]DEBUG  6914[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,655]DEBUG  6914[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:55,655]DEBUG  6914[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:55,656]DEBUG  6915[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:55,656]DEBUG  6915[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:55,656]DEBUG  6915[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:55,656]DEBUG  6915[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:55,656]DEBUG  6915[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=1, roleName=Administrator}
[2017-10-14 22:36:55,657]DEBUG  6916[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=2, roleName=Supervisor}
[2017-10-14 22:36:55,657]DEBUG  6916[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=3, roleName=Customer}
[2017-10-14 22:36:55,657]DEBUG  6916[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=4, roleName=Merchandiser}
[2017-10-14 22:36:55,657]DEBUG  6916[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,657]DEBUG  6916[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 22:36:55,658]DEBUG  6917[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,658]DEBUG  6917[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@41c70651 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@716fd193, testMethod = testFindByID@RoleDAOTest, testException = [null]]]
[2017-10-14 22:36:55,658]DEBUG  6917[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 22:36:55,658]DEBUG  6917[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@f26133c]
[2017-10-14 22:36:55,658]DEBUG  6917[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 22:36:55,702]DEBUG  6961[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 22:36:55,703]DEBUG  6962[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:55,703]DEBUG  6962[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@f26133c] after transaction
[2017-10-14 22:36:55,703]DEBUG  6962[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 22:36:55,704]DEBUG  6963[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 22:36:55,704]DEBUG  6963[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:55,704] INFO  6963[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@41c70651 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@716fd193, testMethod = testFindByID@RoleDAOTest, testException = [null]]]
[2017-10-14 22:36:55,706]DEBUG  6965[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@41c70651 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@716fd193, testMethod = testFindByID@RoleDAOTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 22:36:55,707]DEBUG  6966[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2017-10-14 22:36:55,707]DEBUG  6966[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2017-10-14 22:36:55,708]DEBUG  6967[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@41c70651 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@2e6c611a, testMethod = [null], testException = [null]]].
[2017-10-14 22:36:55,708]DEBUG  6967[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 22:36:55,708]DEBUG  6967[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 22:36:55,709]DEBUG  6968[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 22:36:55,709]DEBUG  6968[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 22:36:55,709]DEBUG  6968[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 22:36:55,709]DEBUG  6968[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 22:36:55,710]DEBUG  6969[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 22:36:55,710]DEBUG  6969[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 22:36:55,710]DEBUG  6969[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 22:36:55,710]DEBUG  6969[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 22:36:55,711]DEBUG  6970[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 22:36:55,711]DEBUG  6970[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 22:36:55,711]DEBUG  6970[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 22:36:55,711]DEBUG  6970[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 22:36:55,711]DEBUG  6970[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 22:36:55,712]DEBUG  6971[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 22:36:55,712]DEBUG  6971[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 22:36:55,712]DEBUG  6971[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 22:36:55,712]DEBUG  6971[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 22:36:55,713]DEBUG  6972[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 22:36:55,713]DEBUG  6972[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 22:36:55,713]DEBUG  6972[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 22:36:55,714]DEBUG  6973[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@2e6c611a]
[2017-10-14 22:36:55,714]DEBUG  6973[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByCriterions' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:55,715]DEBUG  6974[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@41c70651 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@2e6c611a, testMethod = testFindByCriterions@RoleDAOTest, testException = [null]]]
[2017-10-14 22:36:55,715]DEBUG  6974[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 22:36:55,717]DEBUG  6976[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByCriterions]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:55,717]DEBUG  6976[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15080098157
[2017-10-14 22:36:55,717]DEBUG  6976[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@7978c9a2] for Hibernate transaction
[2017-10-14 22:36:55,717]DEBUG  6976[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7978c9a2]
[2017-10-14 22:36:55,718]DEBUG  6977[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 22:36:55,718]DEBUG  6977[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 22:36:55,718]DEBUG  6977[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 22:36:55,718]DEBUG  6977[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@41c70651 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@2e6c611a, testMethod = testFindByCriterions@RoleDAOTest, testException = [null]]]
[2017-10-14 22:36:55,719] INFO  6978[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (2): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@598b619b]; rollback [true]
[2017-10-14 22:36:55,719]DEBUG  6978[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:55,719]DEBUG  6978[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,720]DEBUG  6979[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 22:36:55,721]DEBUG  6980[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 5
[2017-10-14 22:36:55,721]DEBUG  6980[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,721]DEBUG  6980[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:55,722]DEBUG  6981[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,722]DEBUG  6981[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 22:36:55,723]DEBUG  6982[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 6
[2017-10-14 22:36:55,723]DEBUG  6982[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,724]DEBUG  6983[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:55,724]DEBUG  6983[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,724]DEBUG  6983[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 22:36:55,725]DEBUG  6984[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 7
[2017-10-14 22:36:55,725]DEBUG  6984[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,726]DEBUG  6985[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:55,726]DEBUG  6985[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,726]DEBUG  6985[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 22:36:55,727]DEBUG  6986[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 8
[2017-10-14 22:36:55,728]DEBUG  6987[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,729]DEBUG  6988[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:55,729]DEBUG  6988[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:55,729]DEBUG  6988[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:55,729]DEBUG  6988[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:55,729]DEBUG  6988[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:55,729]DEBUG  6988[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=5, roleName=Administrator}
[2017-10-14 22:36:55,729]DEBUG  6988[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=6, roleName=Supervisor}
[2017-10-14 22:36:55,730]DEBUG  6989[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=7, roleName=Customer}
[2017-10-14 22:36:55,730]DEBUG  6989[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=8, roleName=Merchandiser}
[2017-10-14 22:36:55,730]DEBUG  6989[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,730]DEBUG  6989[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=? and this_.ID<=?
[2017-10-14 22:36:55,731]DEBUG  6990[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:55,731]DEBUG  6990[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:55,731]DEBUG  6990[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,731]DEBUG  6990[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:55,731]DEBUG  6990[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:55,731]DEBUG  6990[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:55,732]DEBUG  6991[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:55,732]DEBUG  6991[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:55,732]DEBUG  6991[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:55,732]DEBUG  6991[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=5, roleName=Administrator}
[2017-10-14 22:36:55,732]DEBUG  6991[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=6, roleName=Supervisor}
[2017-10-14 22:36:55,732]DEBUG  6991[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=7, roleName=Customer}
[2017-10-14 22:36:55,732]DEBUG  6991[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=8, roleName=Merchandiser}
[2017-10-14 22:36:55,732]DEBUG  6991[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,733]DEBUG  6992[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 22:36:55,733]DEBUG  6992[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,733]DEBUG  6992[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@41c70651 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@2e6c611a, testMethod = testFindByCriterions@RoleDAOTest, testException = [null]]]
[2017-10-14 22:36:55,733]DEBUG  6992[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 22:36:55,733]DEBUG  6992[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7978c9a2]
[2017-10-14 22:36:55,733]DEBUG  6992[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 22:36:55,769]DEBUG  7028[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 22:36:55,770]DEBUG  7029[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:55,770]DEBUG  7029[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@7978c9a2] after transaction
[2017-10-14 22:36:55,770]DEBUG  7029[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 22:36:55,771]DEBUG  7030[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 22:36:55,771]DEBUG  7030[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:55,771] INFO  7030[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@41c70651 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@2e6c611a, testMethod = testFindByCriterions@RoleDAOTest, testException = [null]]]
[2017-10-14 22:36:55,773]DEBUG  7032[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@41c70651 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@2e6c611a, testMethod = testFindByCriterions@RoleDAOTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 22:36:55,774]DEBUG  7033[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2017-10-14 22:36:55,774]DEBUG  7033[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2017-10-14 22:36:55,775]DEBUG  7034[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@41c70651 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@5167e622, testMethod = [null], testException = [null]]].
[2017-10-14 22:36:55,775]DEBUG  7034[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 22:36:55,775]DEBUG  7034[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 22:36:55,775]DEBUG  7034[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 22:36:55,776]DEBUG  7035[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 22:36:55,776]DEBUG  7035[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 22:36:55,776]DEBUG  7035[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 22:36:55,776]DEBUG  7035[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 22:36:55,777]DEBUG  7036[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 22:36:55,777]DEBUG  7036[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 22:36:55,777]DEBUG  7036[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 22:36:55,777]DEBUG  7036[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 22:36:55,778]DEBUG  7037[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 22:36:55,778]DEBUG  7037[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 22:36:55,778]DEBUG  7037[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 22:36:55,778]DEBUG  7037[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 22:36:55,779]DEBUG  7038[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 22:36:55,779]DEBUG  7038[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 22:36:55,779]DEBUG  7038[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 22:36:55,779]DEBUG  7038[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 22:36:55,779]DEBUG  7038[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 22:36:55,780]DEBUG  7039[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 22:36:55,780]DEBUG  7039[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 22:36:55,780]DEBUG  7039[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@5167e622]
[2017-10-14 22:36:55,781]DEBUG  7040[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByOneOfCriterions' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:55,782]DEBUG  7041[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@41c70651 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@5167e622, testMethod = testFindByOneOfCriterions@RoleDAOTest, testException = [null]]]
[2017-10-14 22:36:55,782]DEBUG  7041[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 22:36:55,783]DEBUG  7042[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByOneOfCriterions]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:55,784]DEBUG  7043[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15080098157
[2017-10-14 22:36:55,784]DEBUG  7043[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@7ec2d0d0] for Hibernate transaction
[2017-10-14 22:36:55,784]DEBUG  7043[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7ec2d0d0]
[2017-10-14 22:36:55,784]DEBUG  7043[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 22:36:55,785]DEBUG  7044[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 22:36:55,785]DEBUG  7044[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 22:36:55,785]DEBUG  7044[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@41c70651 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@5167e622, testMethod = testFindByOneOfCriterions@RoleDAOTest, testException = [null]]]
[2017-10-14 22:36:55,785] INFO  7044[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (3): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@598b619b]; rollback [true]
[2017-10-14 22:36:55,786]DEBUG  7045[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:55,786]DEBUG  7045[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,786]DEBUG  7045[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 22:36:55,787]DEBUG  7046[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 9
[2017-10-14 22:36:55,788]DEBUG  7047[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,788]DEBUG  7047[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:55,789]DEBUG  7048[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,789]DEBUG  7048[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 22:36:55,789]DEBUG  7048[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 10
[2017-10-14 22:36:55,789]DEBUG  7048[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,789]DEBUG  7048[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:55,790]DEBUG  7049[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,790]DEBUG  7049[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 22:36:55,790]DEBUG  7049[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 11
[2017-10-14 22:36:55,790]DEBUG  7049[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,790]DEBUG  7049[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:55,791]DEBUG  7050[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,791]DEBUG  7050[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 22:36:55,791]DEBUG  7050[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 12
[2017-10-14 22:36:55,791]DEBUG  7050[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,793]DEBUG  7052[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:55,793]DEBUG  7052[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:55,793]DEBUG  7052[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:55,793]DEBUG  7052[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:55,793]DEBUG  7052[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:55,793]DEBUG  7052[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=9, roleName=Administrator}
[2017-10-14 22:36:55,793]DEBUG  7052[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=10, roleName=Supervisor}
[2017-10-14 22:36:55,794]DEBUG  7053[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=11, roleName=Customer}
[2017-10-14 22:36:55,794]DEBUG  7053[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=12, roleName=Merchandiser}
[2017-10-14 22:36:55,794]DEBUG  7053[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,794]DEBUG  7053[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where (this_.RoleName like ? or this_.ID<=?)
[2017-10-14 22:36:55,795]DEBUG  7054[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:55,795]DEBUG  7054[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#9]
[2017-10-14 22:36:55,795]DEBUG  7054[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#10]
[2017-10-14 22:36:55,795]DEBUG  7054[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#11]
[2017-10-14 22:36:55,795]DEBUG  7054[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#12]
[2017-10-14 22:36:55,795]DEBUG  7054[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:55,796]DEBUG  7055[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,796]DEBUG  7055[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:55,796]DEBUG  7055[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:55,796]DEBUG  7055[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:55,796]DEBUG  7055[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:55,796]DEBUG  7055[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:55,796]DEBUG  7055[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:55,797]DEBUG  7056[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=9, roleName=Administrator}
[2017-10-14 22:36:55,797]DEBUG  7056[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=10, roleName=Supervisor}
[2017-10-14 22:36:55,797]DEBUG  7056[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=11, roleName=Customer}
[2017-10-14 22:36:55,797]DEBUG  7056[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=12, roleName=Merchandiser}
[2017-10-14 22:36:55,797]DEBUG  7056[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,797]DEBUG  7056[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 22:36:55,797]DEBUG  7056[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,798]DEBUG  7057[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@41c70651 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@5167e622, testMethod = testFindByOneOfCriterions@RoleDAOTest, testException = [null]]]
[2017-10-14 22:36:55,798]DEBUG  7057[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 22:36:55,798]DEBUG  7057[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7ec2d0d0]
[2017-10-14 22:36:55,798]DEBUG  7057[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 22:36:55,828]DEBUG  7087[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 22:36:55,828]DEBUG  7087[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:55,828]DEBUG  7087[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@7ec2d0d0] after transaction
[2017-10-14 22:36:55,828]DEBUG  7087[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 22:36:55,828]DEBUG  7087[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 22:36:55,828]DEBUG  7087[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:55,829] INFO  7088[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@41c70651 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@5167e622, testMethod = testFindByOneOfCriterions@RoleDAOTest, testException = [null]]]
[2017-10-14 22:36:55,831]DEBUG  7090[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@41c70651 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@5167e622, testMethod = testFindByOneOfCriterions@RoleDAOTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 22:36:55,831]DEBUG  7090[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2017-10-14 22:36:55,832]DEBUG  7091[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2017-10-14 22:36:55,832]DEBUG  7091[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@41c70651 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@26375c6, testMethod = [null], testException = [null]]].
[2017-10-14 22:36:55,833]DEBUG  7092[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 22:36:55,833]DEBUG  7092[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 22:36:55,833]DEBUG  7092[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 22:36:55,833]DEBUG  7092[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 22:36:55,834]DEBUG  7093[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 22:36:55,834]DEBUG  7093[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 22:36:55,834]DEBUG  7093[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 22:36:55,834]DEBUG  7093[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 22:36:55,835]DEBUG  7094[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 22:36:55,835]DEBUG  7094[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 22:36:55,835]DEBUG  7094[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 22:36:55,835]DEBUG  7094[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 22:36:55,835]DEBUG  7094[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 22:36:55,836]DEBUG  7095[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 22:36:55,836]DEBUG  7095[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 22:36:55,836]DEBUG  7095[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 22:36:55,836]DEBUG  7095[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 22:36:55,837]DEBUG  7096[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 22:36:55,837]DEBUG  7096[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 22:36:55,837]DEBUG  7096[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 22:36:55,837]DEBUG  7096[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 22:36:55,838]DEBUG  7097[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 22:36:55,838]DEBUG  7097[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@26375c6]
[2017-10-14 22:36:55,839]DEBUG  7098[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testInsertOrUpdate' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:55,839]DEBUG  7098[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@41c70651 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@26375c6, testMethod = testInsertOrUpdate@RoleDAOTest, testException = [null]]]
[2017-10-14 22:36:55,841]DEBUG  7100[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 22:36:55,842]DEBUG  7101[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testInsertOrUpdate]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:55,843]DEBUG  7102[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15080098158
[2017-10-14 22:36:55,843]DEBUG  7102[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@317d5b4a] for Hibernate transaction
[2017-10-14 22:36:55,843]DEBUG  7102[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@317d5b4a]
[2017-10-14 22:36:55,843]DEBUG  7102[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 22:36:55,844]DEBUG  7103[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 22:36:55,844]DEBUG  7103[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 22:36:55,844]DEBUG  7103[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@41c70651 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@26375c6, testMethod = testInsertOrUpdate@RoleDAOTest, testException = [null]]]
[2017-10-14 22:36:55,844] INFO  7103[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (4): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@598b619b]; rollback [true]
[2017-10-14 22:36:55,845]DEBUG  7104[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:55,845]DEBUG  7104[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,845]DEBUG  7104[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 22:36:55,846]DEBUG  7105[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 13
[2017-10-14 22:36:55,847]DEBUG  7106[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,847]DEBUG  7106[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:55,848]DEBUG  7107[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,848]DEBUG  7107[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 22:36:55,849]DEBUG  7108[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 14
[2017-10-14 22:36:55,849]DEBUG  7108[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,850]DEBUG  7109[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:55,850]DEBUG  7109[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,850]DEBUG  7109[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 22:36:55,851]DEBUG  7110[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 15
[2017-10-14 22:36:55,851]DEBUG  7110[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,852]DEBUG  7111[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:55,852]DEBUG  7111[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,852]DEBUG  7111[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 22:36:55,853]DEBUG  7112[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 16
[2017-10-14 22:36:55,854]DEBUG  7113[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,855]DEBUG  7114[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:55,855]DEBUG  7114[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,855]DEBUG  7114[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 22:36:55,856]DEBUG  7115[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 17
[2017-10-14 22:36:55,856]DEBUG  7115[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,857]DEBUG  7116[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:55,857]DEBUG  7116[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:55,858]DEBUG  7117[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2017-10-14 22:36:55,858]DEBUG  7117[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:55,859]DEBUG  7118[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:55,859]DEBUG  7118[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=14, roleName=Supervisor}
[2017-10-14 22:36:55,859]DEBUG  7118[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=13, roleName=Administrator}
[2017-10-14 22:36:55,859]DEBUG  7118[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=16, roleName=Merchandiser}
[2017-10-14 22:36:55,860]DEBUG  7119[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=15, roleName=Customer}
[2017-10-14 22:36:55,860]DEBUG  7119[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=17, roleName=tempRole}
[2017-10-14 22:36:55,860]DEBUG  7119[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,861]DEBUG  7120[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_
[2017-10-14 22:36:55,861]DEBUG  7120[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:55,862]DEBUG  7121[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#13]
[2017-10-14 22:36:55,862]DEBUG  7121[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#14]
[2017-10-14 22:36:55,863]DEBUG  7122[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#15]
[2017-10-14 22:36:55,863]DEBUG  7122[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#16]
[2017-10-14 22:36:55,863]DEBUG  7122[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#17]
[2017-10-14 22:36:55,864]DEBUG  7123[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:55,864]DEBUG  7123[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,864]DEBUG  7123[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:55,865]DEBUG  7124[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:55,865]DEBUG  7124[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:55,865]DEBUG  7124[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2017-10-14 22:36:55,866]DEBUG  7125[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:55,866]DEBUG  7125[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:55,866]DEBUG  7125[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=14, roleName=Supervisor}
[2017-10-14 22:36:55,866]DEBUG  7125[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=13, roleName=Administrator}
[2017-10-14 22:36:55,867]DEBUG  7126[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=16, roleName=Merchandiser}
[2017-10-14 22:36:55,867]DEBUG  7126[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=15, roleName=Customer}
[2017-10-14 22:36:55,867]DEBUG  7126[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=17, roleName=tempRole}
[2017-10-14 22:36:55,868]DEBUG  7127[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,868]DEBUG  7127[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 22:36:55,869]DEBUG  7128[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,869]DEBUG  7128[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@41c70651 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@26375c6, testMethod = testInsertOrUpdate@RoleDAOTest, testException = [null]]]
[2017-10-14 22:36:55,869]DEBUG  7128[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 22:36:55,869]DEBUG  7128[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@317d5b4a]
[2017-10-14 22:36:55,869]DEBUG  7128[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 22:36:55,903]DEBUG  7162[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 22:36:55,903]DEBUG  7162[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:55,903]DEBUG  7162[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@317d5b4a] after transaction
[2017-10-14 22:36:55,904]DEBUG  7163[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 22:36:55,904]DEBUG  7163[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 22:36:55,904]DEBUG  7163[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:55,904] INFO  7163[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@41c70651 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@26375c6, testMethod = testInsertOrUpdate@RoleDAOTest, testException = [null]]]
[2017-10-14 22:36:55,906]DEBUG  7165[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@41c70651 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@26375c6, testMethod = testInsertOrUpdate@RoleDAOTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 22:36:55,907]DEBUG  7166[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2017-10-14 22:36:55,907]DEBUG  7166[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2017-10-14 22:36:55,908]DEBUG  7167[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@41c70651 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@4fd1b34f, testMethod = [null], testException = [null]]].
[2017-10-14 22:36:55,908]DEBUG  7167[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 22:36:55,909]DEBUG  7168[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 22:36:55,909]DEBUG  7168[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 22:36:55,909]DEBUG  7168[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 22:36:55,909]DEBUG  7168[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 22:36:55,910]DEBUG  7169[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 22:36:55,910]DEBUG  7169[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 22:36:55,910]DEBUG  7169[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 22:36:55,910]DEBUG  7169[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 22:36:55,911]DEBUG  7170[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 22:36:55,911]DEBUG  7170[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 22:36:55,911]DEBUG  7170[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 22:36:55,911]DEBUG  7170[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 22:36:55,912]DEBUG  7171[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 22:36:55,912]DEBUG  7171[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 22:36:55,912]DEBUG  7171[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 22:36:55,912]DEBUG  7171[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 22:36:55,912]DEBUG  7171[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 22:36:55,913]DEBUG  7172[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 22:36:55,913]DEBUG  7172[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 22:36:55,913]DEBUG  7172[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 22:36:55,914]DEBUG  7173[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 22:36:55,914]DEBUG  7173[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@4fd1b34f]
[2017-10-14 22:36:55,915]DEBUG  7174[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testDelete' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:55,915]DEBUG  7174[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@41c70651 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@4fd1b34f, testMethod = testDelete@RoleDAOTest, testException = [null]]]
[2017-10-14 22:36:55,916]DEBUG  7175[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 22:36:55,917]DEBUG  7176[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testDelete]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:55,918]DEBUG  7177[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15080098159
[2017-10-14 22:36:55,918]DEBUG  7177[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@7756f1fe] for Hibernate transaction
[2017-10-14 22:36:55,918]DEBUG  7177[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7756f1fe]
[2017-10-14 22:36:55,919]DEBUG  7178[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 22:36:55,919]DEBUG  7178[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 22:36:55,919]DEBUG  7178[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 22:36:55,920]DEBUG  7179[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@41c70651 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@4fd1b34f, testMethod = testDelete@RoleDAOTest, testException = [null]]]
[2017-10-14 22:36:55,920] INFO  7179[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (5): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@598b619b]; rollback [true]
[2017-10-14 22:36:55,920]DEBUG  7179[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:55,921]DEBUG  7180[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,921]DEBUG  7180[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 22:36:55,922]DEBUG  7181[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 18
[2017-10-14 22:36:55,922]DEBUG  7181[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,923]DEBUG  7182[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:55,923]DEBUG  7182[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,923]DEBUG  7182[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 22:36:55,924]DEBUG  7183[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 19
[2017-10-14 22:36:55,925]DEBUG  7184[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,925]DEBUG  7184[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:55,925]DEBUG  7184[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,926]DEBUG  7185[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 22:36:55,926]DEBUG  7185[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 20
[2017-10-14 22:36:55,927]DEBUG  7186[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,927]DEBUG  7186[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:55,928]DEBUG  7187[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,928]DEBUG  7187[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 22:36:55,929]DEBUG  7188[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 21
[2017-10-14 22:36:55,929]DEBUG  7188[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,929]DEBUG  7188[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:55,929]DEBUG  7188[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,929]DEBUG  7188[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 22:36:55,930]DEBUG  7189[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 22
[2017-10-14 22:36:55,930]DEBUG  7189[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,931]DEBUG  7190[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:55,931]DEBUG  7190[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:55,931]DEBUG  7190[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 5 objects
[2017-10-14 22:36:55,932]DEBUG  7191[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:55,932]DEBUG  7191[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:55,932]DEBUG  7191[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=22, roleName=tempRole}
[2017-10-14 22:36:55,932]DEBUG  7191[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=21, roleName=Merchandiser}
[2017-10-14 22:36:55,932]DEBUG  7191[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=18, roleName=Administrator}
[2017-10-14 22:36:55,932]DEBUG  7191[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=20, roleName=Customer}
[2017-10-14 22:36:55,932]DEBUG  7191[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=19, roleName=Supervisor}
[2017-10-14 22:36:55,933]DEBUG  7192[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Roles
[2017-10-14 22:36:55,935]DEBUG  7194[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,935]DEBUG  7194[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles where ID=?
[2017-10-14 22:36:55,936]DEBUG  7195[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
[2017-10-14 22:36:55,936]DEBUG  7195[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,936]DEBUG  7195[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,936]DEBUG  7195[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_
[2017-10-14 22:36:55,937]DEBUG  7196[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:55,937]DEBUG  7196[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#18]
[2017-10-14 22:36:55,937]DEBUG  7196[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#19]
[2017-10-14 22:36:55,937]DEBUG  7196[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#20]
[2017-10-14 22:36:55,938]DEBUG  7197[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#21]
[2017-10-14 22:36:55,938]DEBUG  7197[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:55,938]DEBUG  7197[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,938]DEBUG  7197[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:55,938]DEBUG  7197[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:55,938]DEBUG  7197[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:55,939]DEBUG  7198[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:55,939]DEBUG  7198[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:55,939]DEBUG  7198[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:55,939]DEBUG  7198[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=21, roleName=Merchandiser}
[2017-10-14 22:36:55,939]DEBUG  7198[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=18, roleName=Administrator}
[2017-10-14 22:36:55,939]DEBUG  7198[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=20, roleName=Customer}
[2017-10-14 22:36:55,939]DEBUG  7198[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=19, roleName=Supervisor}
[2017-10-14 22:36:55,939]DEBUG  7198[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,939]DEBUG  7198[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 22:36:55,940]DEBUG  7199[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,940]DEBUG  7199[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@41c70651 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@4fd1b34f, testMethod = testDelete@RoleDAOTest, testException = [null]]]
[2017-10-14 22:36:55,940]DEBUG  7199[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 22:36:55,940]DEBUG  7199[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7756f1fe]
[2017-10-14 22:36:55,940]DEBUG  7199[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 22:36:55,970]DEBUG  7229[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 22:36:55,970]DEBUG  7229[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:55,971]DEBUG  7230[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@7756f1fe] after transaction
[2017-10-14 22:36:55,971]DEBUG  7230[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 22:36:55,971]DEBUG  7230[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 22:36:55,972]DEBUG  7231[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:55,972] INFO  7231[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@41c70651 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@4fd1b34f, testMethod = testDelete@RoleDAOTest, testException = [null]]]
[2017-10-14 22:36:55,974]DEBUG  7233[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@41c70651 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@4fd1b34f, testMethod = testDelete@RoleDAOTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 22:36:55,974]DEBUG  7233[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2017-10-14 22:36:55,974]DEBUG  7233[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2017-10-14 22:36:55,975]DEBUG  7234[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@41c70651 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@590a7d8b, testMethod = [null], testException = [null]]].
[2017-10-14 22:36:55,975]DEBUG  7234[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 22:36:55,976]DEBUG  7235[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 22:36:55,976]DEBUG  7235[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 22:36:55,976]DEBUG  7235[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 22:36:55,977]DEBUG  7236[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 22:36:55,977]DEBUG  7236[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 22:36:55,977]DEBUG  7236[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 22:36:55,977]DEBUG  7236[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 22:36:55,977]DEBUG  7236[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 22:36:55,978]DEBUG  7237[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 22:36:55,978]DEBUG  7237[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 22:36:55,978]DEBUG  7237[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 22:36:55,978]DEBUG  7237[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 22:36:55,979]DEBUG  7238[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 22:36:55,979]DEBUG  7238[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 22:36:55,979]DEBUG  7238[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 22:36:55,979]DEBUG  7238[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 22:36:55,979]DEBUG  7238[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 22:36:55,980]DEBUG  7239[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 22:36:55,980]DEBUG  7239[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 22:36:55,980]DEBUG  7239[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 22:36:55,980]DEBUG  7239[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 22:36:55,980]DEBUG  7239[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@590a7d8b]
[2017-10-14 22:36:55,980]DEBUG  7239[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetAdminRole' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:55,981]DEBUG  7240[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@41c70651 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@590a7d8b, testMethod = testGetAdminRole@RoleDAOTest, testException = [null]]]
[2017-10-14 22:36:55,981]DEBUG  7240[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 22:36:55,982]DEBUG  7241[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testGetAdminRole]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:55,982]DEBUG  7241[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15080098159
[2017-10-14 22:36:55,982]DEBUG  7241[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@5694a0ba] for Hibernate transaction
[2017-10-14 22:36:55,982]DEBUG  7241[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@5694a0ba]
[2017-10-14 22:36:55,982]DEBUG  7241[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 22:36:55,982]DEBUG  7241[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 22:36:55,982]DEBUG  7241[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 22:36:55,983]DEBUG  7242[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@41c70651 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@590a7d8b, testMethod = testGetAdminRole@RoleDAOTest, testException = [null]]]
[2017-10-14 22:36:55,983] INFO  7242[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (6): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@598b619b]; rollback [true]
[2017-10-14 22:36:55,983]DEBUG  7242[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:55,984]DEBUG  7243[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,984]DEBUG  7243[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 22:36:55,985]DEBUG  7244[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 23
[2017-10-14 22:36:55,985]DEBUG  7244[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,986]DEBUG  7245[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:55,986]DEBUG  7245[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,986]DEBUG  7245[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 22:36:55,987]DEBUG  7246[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 24
[2017-10-14 22:36:55,987]DEBUG  7246[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,988]DEBUG  7247[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:55,988]DEBUG  7247[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,989]DEBUG  7248[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 22:36:55,989]DEBUG  7248[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 25
[2017-10-14 22:36:55,989]DEBUG  7248[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,989]DEBUG  7248[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:55,989]DEBUG  7248[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,990]DEBUG  7249[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 22:36:55,990]DEBUG  7249[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 26
[2017-10-14 22:36:55,990]DEBUG  7249[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,990]DEBUG  7249[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:55,991]DEBUG  7250[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:55,991]DEBUG  7250[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:55,991]DEBUG  7250[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:55,991]DEBUG  7250[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:55,991]DEBUG  7250[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=24, roleName=Supervisor}
[2017-10-14 22:36:55,991]DEBUG  7250[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=23, roleName=Administrator}
[2017-10-14 22:36:55,991]DEBUG  7250[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=26, roleName=Merchandiser}
[2017-10-14 22:36:55,991]DEBUG  7250[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=25, roleName=Customer}
[2017-10-14 22:36:55,992]DEBUG  7251[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,992]DEBUG  7251[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2017-10-14 22:36:55,992]DEBUG  7251[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:55,992]DEBUG  7251[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#23]
[2017-10-14 22:36:55,993]DEBUG  7252[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:55,993]DEBUG  7252[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,993]DEBUG  7252[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:55,993]DEBUG  7252[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:55,993]DEBUG  7252[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:55,994]DEBUG  7253[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:55,994]DEBUG  7253[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:55,994]DEBUG  7253[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:55,994]DEBUG  7253[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=24, roleName=Supervisor}
[2017-10-14 22:36:55,994]DEBUG  7253[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=23, roleName=Administrator}
[2017-10-14 22:36:55,994]DEBUG  7253[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=26, roleName=Merchandiser}
[2017-10-14 22:36:55,994]DEBUG  7253[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=25, roleName=Customer}
[2017-10-14 22:36:55,994]DEBUG  7253[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,994]DEBUG  7253[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2017-10-14 22:36:55,995]DEBUG  7254[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:55,995]DEBUG  7254[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#23]
[2017-10-14 22:36:55,995]DEBUG  7254[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:55,995]DEBUG  7254[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,996]DEBUG  7255[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:55,996]DEBUG  7255[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:55,996]DEBUG  7255[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:55,996]DEBUG  7255[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 4 objects
[2017-10-14 22:36:55,996]DEBUG  7255[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:55,997]DEBUG  7256[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:55,997]DEBUG  7256[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=24, roleName=Supervisor}
[2017-10-14 22:36:55,997]DEBUG  7256[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=23, roleName=Administrator}
[2017-10-14 22:36:55,997]DEBUG  7256[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=26, roleName=Merchandiser}
[2017-10-14 22:36:55,998]DEBUG  7257[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=25, roleName=Customer}
[2017-10-14 22:36:55,998]DEBUG  7257[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Roles
[2017-10-14 22:36:55,998]DEBUG  7257[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,998]DEBUG  7257[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles where ID=?
[2017-10-14 22:36:55,998]DEBUG  7257[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
[2017-10-14 22:36:55,999]DEBUG  7258[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:55,999]DEBUG  7258[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:55,999]DEBUG  7258[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2017-10-14 22:36:56,000]DEBUG  7259[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:56,000]DEBUG  7259[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:56,000]DEBUG  7259[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,000]DEBUG  7259[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:56,000]DEBUG  7259[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:56,000]DEBUG  7259[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,000]DEBUG  7259[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 22:36:56,001]DEBUG  7260[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 27
[2017-10-14 22:36:56,001]DEBUG  7260[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,001]DEBUG  7260[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:56,001]DEBUG  7260[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:56,002]DEBUG  7261[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:56,002]DEBUG  7261[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:56,002]DEBUG  7261[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:56,002]DEBUG  7261[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=24, roleName=Supervisor}
[2017-10-14 22:36:56,002]DEBUG  7261[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=26, roleName=Merchandiser}
[2017-10-14 22:36:56,002]DEBUG  7261[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=25, roleName=Customer}
[2017-10-14 22:36:56,002]DEBUG  7261[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=27, roleName=Administrator}
[2017-10-14 22:36:56,002]DEBUG  7261[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,003]DEBUG  7262[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 22:36:56,003]DEBUG  7262[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,003]DEBUG  7262[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@41c70651 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@590a7d8b, testMethod = testGetAdminRole@RoleDAOTest, testException = [null]]]
[2017-10-14 22:36:56,003]DEBUG  7262[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 22:36:56,003]DEBUG  7262[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@5694a0ba]
[2017-10-14 22:36:56,003]DEBUG  7262[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 22:36:56,036]DEBUG  7295[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 22:36:56,037]DEBUG  7296[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:56,037]DEBUG  7296[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@5694a0ba] after transaction
[2017-10-14 22:36:56,037]DEBUG  7296[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 22:36:56,037]DEBUG  7296[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 22:36:56,037]DEBUG  7296[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:56,037] INFO  7296[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@41c70651 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@590a7d8b, testMethod = testGetAdminRole@RoleDAOTest, testException = [null]]]
[2017-10-14 22:36:56,038]DEBUG  7297[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@41c70651 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@590a7d8b, testMethod = testGetAdminRole@RoleDAOTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 22:36:56,039]DEBUG  7298[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2017-10-14 22:36:56,039]DEBUG  7298[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2017-10-14 22:36:56,039]DEBUG  7298[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@41c70651 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@59499477, testMethod = [null], testException = [null]]].
[2017-10-14 22:36:56,040]DEBUG  7299[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 22:36:56,040]DEBUG  7299[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 22:36:56,040]DEBUG  7299[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 22:36:56,040]DEBUG  7299[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 22:36:56,040]DEBUG  7299[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 22:36:56,040]DEBUG  7299[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 22:36:56,040]DEBUG  7299[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 22:36:56,040]DEBUG  7299[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 22:36:56,040]DEBUG  7299[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 22:36:56,041]DEBUG  7300[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 22:36:56,041]DEBUG  7300[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 22:36:56,041]DEBUG  7300[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 22:36:56,041]DEBUG  7300[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 22:36:56,041]DEBUG  7300[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 22:36:56,041]DEBUG  7300[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 22:36:56,041]DEBUG  7300[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 22:36:56,041]DEBUG  7300[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 22:36:56,041]DEBUG  7300[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 22:36:56,042]DEBUG  7301[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 22:36:56,042]DEBUG  7301[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 22:36:56,042]DEBUG  7301[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 22:36:56,042]DEBUG  7301[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 22:36:56,042]DEBUG  7301[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@59499477]
[2017-10-14 22:36:56,043]DEBUG  7302[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetCustomerRole' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:56,043]DEBUG  7302[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@41c70651 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@59499477, testMethod = testGetCustomerRole@RoleDAOTest, testException = [null]]]
[2017-10-14 22:36:56,043]DEBUG  7302[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 22:36:56,044]DEBUG  7303[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testGetCustomerRole]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:56,044]DEBUG  7303[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15080098160
[2017-10-14 22:36:56,044]DEBUG  7303[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@7a12f24b] for Hibernate transaction
[2017-10-14 22:36:56,044]DEBUG  7303[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7a12f24b]
[2017-10-14 22:36:56,044]DEBUG  7303[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 22:36:56,044]DEBUG  7303[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 22:36:56,045]DEBUG  7304[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 22:36:56,045]DEBUG  7304[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@41c70651 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@59499477, testMethod = testGetCustomerRole@RoleDAOTest, testException = [null]]]
[2017-10-14 22:36:56,045] INFO  7304[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (7): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@598b619b]; rollback [true]
[2017-10-14 22:36:56,046]DEBUG  7305[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:56,046]DEBUG  7305[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,046]DEBUG  7305[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 22:36:56,047]DEBUG  7306[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 28
[2017-10-14 22:36:56,048]DEBUG  7307[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,048]DEBUG  7307[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:56,048]DEBUG  7307[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,049]DEBUG  7308[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 22:36:56,049]DEBUG  7308[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 29
[2017-10-14 22:36:56,049]DEBUG  7308[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,049]DEBUG  7308[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:56,050]DEBUG  7309[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,050]DEBUG  7309[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 22:36:56,050]DEBUG  7309[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 30
[2017-10-14 22:36:56,050]DEBUG  7309[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,050]DEBUG  7309[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:56,051]DEBUG  7310[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,051]DEBUG  7310[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 22:36:56,051]DEBUG  7310[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 31
[2017-10-14 22:36:56,051]DEBUG  7310[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,052]DEBUG  7311[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:56,052]DEBUG  7311[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:56,052]DEBUG  7311[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:56,052]DEBUG  7311[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:56,052]DEBUG  7311[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:56,052]DEBUG  7311[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=31, roleName=Merchandiser}
[2017-10-14 22:36:56,053]DEBUG  7312[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=29, roleName=Supervisor}
[2017-10-14 22:36:56,053]DEBUG  7312[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=28, roleName=Administrator}
[2017-10-14 22:36:56,053]DEBUG  7312[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=30, roleName=Customer}
[2017-10-14 22:36:56,053]DEBUG  7312[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,053]DEBUG  7312[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2017-10-14 22:36:56,054]DEBUG  7313[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:56,054]DEBUG  7313[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#30]
[2017-10-14 22:36:56,054]DEBUG  7313[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:56,054]DEBUG  7313[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,054]DEBUG  7313[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:56,055]DEBUG  7314[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:56,055]DEBUG  7314[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:56,055]DEBUG  7314[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:56,055]DEBUG  7314[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:56,055]DEBUG  7314[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:56,055]DEBUG  7314[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=31, roleName=Merchandiser}
[2017-10-14 22:36:56,055]DEBUG  7314[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=29, roleName=Supervisor}
[2017-10-14 22:36:56,056]DEBUG  7315[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=28, roleName=Administrator}
[2017-10-14 22:36:56,056]DEBUG  7315[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=30, roleName=Customer}
[2017-10-14 22:36:56,056]DEBUG  7315[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,056]DEBUG  7315[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2017-10-14 22:36:56,056]DEBUG  7315[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:56,057]DEBUG  7316[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#30]
[2017-10-14 22:36:56,057]DEBUG  7316[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:56,057]DEBUG  7316[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,057]DEBUG  7316[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:56,057]DEBUG  7316[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:56,058]DEBUG  7317[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:56,058]DEBUG  7317[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 4 objects
[2017-10-14 22:36:56,058]DEBUG  7317[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:56,058]DEBUG  7317[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:56,058]DEBUG  7317[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=31, roleName=Merchandiser}
[2017-10-14 22:36:56,058]DEBUG  7317[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=29, roleName=Supervisor}
[2017-10-14 22:36:56,058]DEBUG  7317[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=28, roleName=Administrator}
[2017-10-14 22:36:56,058]DEBUG  7317[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=30, roleName=Customer}
[2017-10-14 22:36:56,059]DEBUG  7318[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Roles
[2017-10-14 22:36:56,059]DEBUG  7318[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,059]DEBUG  7318[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles where ID=?
[2017-10-14 22:36:56,059]DEBUG  7318[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
[2017-10-14 22:36:56,060]DEBUG  7319[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,060]DEBUG  7319[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,060]DEBUG  7319[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2017-10-14 22:36:56,060]DEBUG  7319[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:56,060]DEBUG  7319[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:56,061]DEBUG  7320[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,061]DEBUG  7320[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:56,061]DEBUG  7320[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:56,061]DEBUG  7320[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,061]DEBUG  7320[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 22:36:56,062]DEBUG  7321[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 32
[2017-10-14 22:36:56,062]DEBUG  7321[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,062]DEBUG  7321[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:56,062]DEBUG  7321[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:56,062]DEBUG  7321[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:56,062]DEBUG  7321[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:56,063]DEBUG  7322[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:56,063]DEBUG  7322[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=31, roleName=Merchandiser}
[2017-10-14 22:36:56,063]DEBUG  7322[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=32, roleName=Customer}
[2017-10-14 22:36:56,063]DEBUG  7322[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=29, roleName=Supervisor}
[2017-10-14 22:36:56,063]DEBUG  7322[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=28, roleName=Administrator}
[2017-10-14 22:36:56,063]DEBUG  7322[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,063]DEBUG  7322[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 22:36:56,064]DEBUG  7323[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,064]DEBUG  7323[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@41c70651 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@59499477, testMethod = testGetCustomerRole@RoleDAOTest, testException = [null]]]
[2017-10-14 22:36:56,064]DEBUG  7323[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 22:36:56,064]DEBUG  7323[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7a12f24b]
[2017-10-14 22:36:56,064]DEBUG  7323[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 22:36:56,095]DEBUG  7354[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 22:36:56,095]DEBUG  7354[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:56,095]DEBUG  7354[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@7a12f24b] after transaction
[2017-10-14 22:36:56,095]DEBUG  7354[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 22:36:56,096]DEBUG  7355[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 22:36:56,096]DEBUG  7355[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:56,096] INFO  7355[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@41c70651 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@59499477, testMethod = testGetCustomerRole@RoleDAOTest, testException = [null]]]
[2017-10-14 22:36:56,098]DEBUG  7357[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@41c70651 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@59499477, testMethod = testGetCustomerRole@RoleDAOTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 22:36:56,098]DEBUG  7357[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2017-10-14 22:36:56,098]DEBUG  7357[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2017-10-14 22:36:56,099]DEBUG  7358[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@41c70651 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@7c1f3eec, testMethod = [null], testException = [null]]].
[2017-10-14 22:36:56,099]DEBUG  7358[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 22:36:56,099]DEBUG  7358[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 22:36:56,100]DEBUG  7359[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 22:36:56,100]DEBUG  7359[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 22:36:56,100]DEBUG  7359[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 22:36:56,100]DEBUG  7359[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 22:36:56,101]DEBUG  7360[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 22:36:56,101]DEBUG  7360[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 22:36:56,101]DEBUG  7360[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 22:36:56,101]DEBUG  7360[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 22:36:56,101]DEBUG  7360[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 22:36:56,102]DEBUG  7361[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 22:36:56,102]DEBUG  7361[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 22:36:56,102]DEBUG  7361[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 22:36:56,102]DEBUG  7361[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 22:36:56,102]DEBUG  7361[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 22:36:56,103]DEBUG  7362[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 22:36:56,103]DEBUG  7362[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 22:36:56,103]DEBUG  7362[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 22:36:56,103]DEBUG  7362[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 22:36:56,103]DEBUG  7362[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 22:36:56,104]DEBUG  7363[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 22:36:56,104]DEBUG  7363[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@7c1f3eec]
[2017-10-14 22:36:56,105]DEBUG  7364[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetMerchandiserRole' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:56,105]DEBUG  7364[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@41c70651 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@7c1f3eec, testMethod = testGetMerchandiserRole@RoleDAOTest, testException = [null]]]
[2017-10-14 22:36:56,105]DEBUG  7364[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 22:36:56,107]DEBUG  7366[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testGetMerchandiserRole]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:56,107]DEBUG  7366[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15080098161
[2017-10-14 22:36:56,107]DEBUG  7366[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@262d0885] for Hibernate transaction
[2017-10-14 22:36:56,108]DEBUG  7367[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@262d0885]
[2017-10-14 22:36:56,108]DEBUG  7367[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 22:36:56,108]DEBUG  7367[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 22:36:56,108]DEBUG  7367[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 22:36:56,108]DEBUG  7367[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@41c70651 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@7c1f3eec, testMethod = testGetMerchandiserRole@RoleDAOTest, testException = [null]]]
[2017-10-14 22:36:56,109] INFO  7368[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (8): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@598b619b]; rollback [true]
[2017-10-14 22:36:56,109]DEBUG  7368[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:56,109]DEBUG  7368[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,109]DEBUG  7368[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 22:36:56,110]DEBUG  7369[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 33
[2017-10-14 22:36:56,110]DEBUG  7369[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,110]DEBUG  7369[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:56,110]DEBUG  7369[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,110]DEBUG  7369[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 22:36:56,111]DEBUG  7370[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 34
[2017-10-14 22:36:56,111]DEBUG  7370[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,111]DEBUG  7370[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:56,111]DEBUG  7370[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,111]DEBUG  7370[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 22:36:56,112]DEBUG  7371[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 35
[2017-10-14 22:36:56,112]DEBUG  7371[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,112]DEBUG  7371[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:56,112]DEBUG  7371[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,112]DEBUG  7371[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 22:36:56,113]DEBUG  7372[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 36
[2017-10-14 22:36:56,113]DEBUG  7372[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,113]DEBUG  7372[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:56,113]DEBUG  7372[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:56,113]DEBUG  7372[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:56,114]DEBUG  7373[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:56,114]DEBUG  7373[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:56,114]DEBUG  7373[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=35, roleName=Customer}
[2017-10-14 22:36:56,114]DEBUG  7373[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=36, roleName=Merchandiser}
[2017-10-14 22:36:56,114]DEBUG  7373[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=33, roleName=Administrator}
[2017-10-14 22:36:56,114]DEBUG  7373[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=34, roleName=Supervisor}
[2017-10-14 22:36:56,114]DEBUG  7373[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,114]DEBUG  7373[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2017-10-14 22:36:56,115]DEBUG  7374[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:56,115]DEBUG  7374[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#36]
[2017-10-14 22:36:56,115]DEBUG  7374[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:56,115]DEBUG  7374[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,116]DEBUG  7375[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:56,116]DEBUG  7375[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:56,116]DEBUG  7375[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:56,116]DEBUG  7375[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:56,116]DEBUG  7375[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:56,116]DEBUG  7375[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:56,117]DEBUG  7376[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=35, roleName=Customer}
[2017-10-14 22:36:56,117]DEBUG  7376[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=36, roleName=Merchandiser}
[2017-10-14 22:36:56,117]DEBUG  7376[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=33, roleName=Administrator}
[2017-10-14 22:36:56,117]DEBUG  7376[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=34, roleName=Supervisor}
[2017-10-14 22:36:56,117]DEBUG  7376[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,117]DEBUG  7376[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2017-10-14 22:36:56,118]DEBUG  7377[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:56,118]DEBUG  7377[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#36]
[2017-10-14 22:36:56,118]DEBUG  7377[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:56,118]DEBUG  7377[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,118]DEBUG  7377[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:56,119]DEBUG  7378[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:56,119]DEBUG  7378[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:56,119]DEBUG  7378[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 4 objects
[2017-10-14 22:36:56,119]DEBUG  7378[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:56,119]DEBUG  7378[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:56,119]DEBUG  7378[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=35, roleName=Customer}
[2017-10-14 22:36:56,119]DEBUG  7378[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=36, roleName=Merchandiser}
[2017-10-14 22:36:56,119]DEBUG  7378[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=33, roleName=Administrator}
[2017-10-14 22:36:56,120]DEBUG  7379[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=34, roleName=Supervisor}
[2017-10-14 22:36:56,120]DEBUG  7379[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Roles
[2017-10-14 22:36:56,120]DEBUG  7379[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,120]DEBUG  7379[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles where ID=?
[2017-10-14 22:36:56,120]DEBUG  7379[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
[2017-10-14 22:36:56,120]DEBUG  7379[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,121]DEBUG  7380[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,121]DEBUG  7380[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2017-10-14 22:36:56,121]DEBUG  7380[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:56,121]DEBUG  7380[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:56,121]DEBUG  7380[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,121]DEBUG  7380[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:56,122]DEBUG  7381[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:56,122]DEBUG  7381[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,122]DEBUG  7381[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 22:36:56,122]DEBUG  7381[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 37
[2017-10-14 22:36:56,122]DEBUG  7381[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,123]DEBUG  7382[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:56,123]DEBUG  7382[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:56,123]DEBUG  7382[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:56,123]DEBUG  7382[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:56,123]DEBUG  7382[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:56,123]DEBUG  7382[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=35, roleName=Customer}
[2017-10-14 22:36:56,123]DEBUG  7382[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=33, roleName=Administrator}
[2017-10-14 22:36:56,123]DEBUG  7382[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=34, roleName=Supervisor}
[2017-10-14 22:36:56,124]DEBUG  7383[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=37, roleName=Merchandiser}
[2017-10-14 22:36:56,124]DEBUG  7383[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,124]DEBUG  7383[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 22:36:56,124]DEBUG  7383[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,124]DEBUG  7383[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@41c70651 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@7c1f3eec, testMethod = testGetMerchandiserRole@RoleDAOTest, testException = [null]]]
[2017-10-14 22:36:56,124]DEBUG  7383[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 22:36:56,124]DEBUG  7383[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@262d0885]
[2017-10-14 22:36:56,125]DEBUG  7384[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 22:36:56,153]DEBUG  7412[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 22:36:56,153]DEBUG  7412[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:56,154]DEBUG  7413[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@262d0885] after transaction
[2017-10-14 22:36:56,154]DEBUG  7413[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 22:36:56,154]DEBUG  7413[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 22:36:56,154]DEBUG  7413[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:56,155] INFO  7414[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@41c70651 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@7c1f3eec, testMethod = testGetMerchandiserRole@RoleDAOTest, testException = [null]]]
[2017-10-14 22:36:56,156]DEBUG  7415[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@41c70651 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@7c1f3eec, testMethod = testGetMerchandiserRole@RoleDAOTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 22:36:56,157]DEBUG  7416[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2017-10-14 22:36:56,157]DEBUG  7416[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2017-10-14 22:36:56,158]DEBUG  7417[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@41c70651 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@47bb55f4, testMethod = [null], testException = [null]]].
[2017-10-14 22:36:56,158]DEBUG  7417[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 22:36:56,159]DEBUG  7418[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 22:36:56,159]DEBUG  7418[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 22:36:56,159]DEBUG  7418[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 22:36:56,159]DEBUG  7418[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 22:36:56,160]DEBUG  7419[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 22:36:56,160]DEBUG  7419[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 22:36:56,160]DEBUG  7419[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 22:36:56,160]DEBUG  7419[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 22:36:56,161]DEBUG  7420[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 22:36:56,161]DEBUG  7420[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 22:36:56,161]DEBUG  7420[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 22:36:56,161]DEBUG  7420[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 22:36:56,162]DEBUG  7421[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 22:36:56,162]DEBUG  7421[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 22:36:56,162]DEBUG  7421[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 22:36:56,162]DEBUG  7421[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 22:36:56,163]DEBUG  7422[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 22:36:56,163]DEBUG  7422[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 22:36:56,163]DEBUG  7422[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 22:36:56,163]DEBUG  7422[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 22:36:56,164]DEBUG  7423[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 22:36:56,164]DEBUG  7423[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@47bb55f4]
[2017-10-14 22:36:56,165]DEBUG  7424[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetSupervisorRole' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:56,165]DEBUG  7424[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@41c70651 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@47bb55f4, testMethod = testGetSupervisorRole@RoleDAOTest, testException = [null]]]
[2017-10-14 22:36:56,165]DEBUG  7424[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 22:36:56,167]DEBUG  7426[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testGetSupervisorRole]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:56,167]DEBUG  7426[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15080098161
[2017-10-14 22:36:56,167]DEBUG  7426[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@59a35c1] for Hibernate transaction
[2017-10-14 22:36:56,168]DEBUG  7427[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@59a35c1]
[2017-10-14 22:36:56,168]DEBUG  7427[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 22:36:56,168]DEBUG  7427[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 22:36:56,168]DEBUG  7427[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 22:36:56,169]DEBUG  7428[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@41c70651 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@47bb55f4, testMethod = testGetSupervisorRole@RoleDAOTest, testException = [null]]]
[2017-10-14 22:36:56,169] INFO  7428[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (9): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@598b619b]; rollback [true]
[2017-10-14 22:36:56,169]DEBUG  7428[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:56,169]DEBUG  7428[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,169]DEBUG  7428[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 22:36:56,170]DEBUG  7429[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 38
[2017-10-14 22:36:56,170]DEBUG  7429[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,170]DEBUG  7429[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:56,170]DEBUG  7429[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,170]DEBUG  7429[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 22:36:56,171]DEBUG  7430[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 39
[2017-10-14 22:36:56,171]DEBUG  7430[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,171]DEBUG  7430[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:56,171]DEBUG  7430[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,171]DEBUG  7430[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 22:36:56,172]DEBUG  7431[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 40
[2017-10-14 22:36:56,172]DEBUG  7431[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,172]DEBUG  7431[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:56,172]DEBUG  7431[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,172]DEBUG  7431[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 22:36:56,173]DEBUG  7432[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 41
[2017-10-14 22:36:56,173]DEBUG  7432[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,173]DEBUG  7432[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:56,173]DEBUG  7432[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:56,173]DEBUG  7432[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:56,174]DEBUG  7433[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:56,174]DEBUG  7433[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:56,174]DEBUG  7433[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=41, roleName=Merchandiser}
[2017-10-14 22:36:56,174]DEBUG  7433[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=39, roleName=Supervisor}
[2017-10-14 22:36:56,174]DEBUG  7433[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=40, roleName=Customer}
[2017-10-14 22:36:56,174]DEBUG  7433[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=38, roleName=Administrator}
[2017-10-14 22:36:56,174]DEBUG  7433[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,174]DEBUG  7433[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2017-10-14 22:36:56,175]DEBUG  7434[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:56,175]DEBUG  7434[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#39]
[2017-10-14 22:36:56,175]DEBUG  7434[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:56,175]DEBUG  7434[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,176]DEBUG  7435[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:56,176]DEBUG  7435[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:56,176]DEBUG  7435[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:56,176]DEBUG  7435[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:56,176]DEBUG  7435[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:56,176]DEBUG  7435[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:56,177]DEBUG  7436[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=41, roleName=Merchandiser}
[2017-10-14 22:36:56,177]DEBUG  7436[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=39, roleName=Supervisor}
[2017-10-14 22:36:56,177]DEBUG  7436[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=40, roleName=Customer}
[2017-10-14 22:36:56,177]DEBUG  7436[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=38, roleName=Administrator}
[2017-10-14 22:36:56,177]DEBUG  7436[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,177]DEBUG  7436[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2017-10-14 22:36:56,178]DEBUG  7437[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:56,178]DEBUG  7437[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#39]
[2017-10-14 22:36:56,178]DEBUG  7437[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:56,178]DEBUG  7437[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,178]DEBUG  7437[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:56,179]DEBUG  7438[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:56,179]DEBUG  7438[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:56,179]DEBUG  7438[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 4 objects
[2017-10-14 22:36:56,179]DEBUG  7438[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:56,179]DEBUG  7438[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:56,179]DEBUG  7438[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=41, roleName=Merchandiser}
[2017-10-14 22:36:56,180]DEBUG  7439[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=39, roleName=Supervisor}
[2017-10-14 22:36:56,180]DEBUG  7439[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=40, roleName=Customer}
[2017-10-14 22:36:56,180]DEBUG  7439[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=38, roleName=Administrator}
[2017-10-14 22:36:56,180]DEBUG  7439[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Roles
[2017-10-14 22:36:56,180]DEBUG  7439[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,180]DEBUG  7439[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles where ID=?
[2017-10-14 22:36:56,180]DEBUG  7439[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
[2017-10-14 22:36:56,181]DEBUG  7440[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,181]DEBUG  7440[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,181]DEBUG  7440[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2017-10-14 22:36:56,182]DEBUG  7441[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:56,182]DEBUG  7441[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:56,182]DEBUG  7441[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,182]DEBUG  7441[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:56,182]DEBUG  7441[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:56,183]DEBUG  7442[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,183]DEBUG  7442[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 22:36:56,184]DEBUG  7443[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 42
[2017-10-14 22:36:56,184]DEBUG  7443[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,185]DEBUG  7444[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:56,185]DEBUG  7444[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:56,185]DEBUG  7444[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:56,186]DEBUG  7445[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:56,186]DEBUG  7445[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:56,186]DEBUG  7445[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=41, roleName=Merchandiser}
[2017-10-14 22:36:56,186]DEBUG  7445[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=42, roleName=Supervisor}
[2017-10-14 22:36:56,187]DEBUG  7446[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=40, roleName=Customer}
[2017-10-14 22:36:56,187]DEBUG  7446[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=38, roleName=Administrator}
[2017-10-14 22:36:56,187]DEBUG  7446[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,187]DEBUG  7446[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 22:36:56,188]DEBUG  7447[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,189]DEBUG  7448[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@41c70651 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@47bb55f4, testMethod = testGetSupervisorRole@RoleDAOTest, testException = [null]]]
[2017-10-14 22:36:56,189]DEBUG  7448[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 22:36:56,189]DEBUG  7448[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@59a35c1]
[2017-10-14 22:36:56,189]DEBUG  7448[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 22:36:56,220]DEBUG  7479[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 22:36:56,220]DEBUG  7479[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:56,220]DEBUG  7479[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@59a35c1] after transaction
[2017-10-14 22:36:56,221]DEBUG  7480[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 22:36:56,221]DEBUG  7480[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 22:36:56,221]DEBUG  7480[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:56,221] INFO  7480[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@41c70651 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@47bb55f4, testMethod = testGetSupervisorRole@RoleDAOTest, testException = [null]]]
[2017-10-14 22:36:56,223]DEBUG  7482[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@41c70651 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@47bb55f4, testMethod = testGetSupervisorRole@RoleDAOTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 22:36:56,224]DEBUG  7483[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2017-10-14 22:36:56,224]DEBUG  7483[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2017-10-14 22:36:56,225]DEBUG  7484[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@41c70651 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@434ce1aa, testMethod = [null], testException = [null]]].
[2017-10-14 22:36:56,225]DEBUG  7484[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 22:36:56,225]DEBUG  7484[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 22:36:56,226]DEBUG  7485[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 22:36:56,226]DEBUG  7485[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 22:36:56,226]DEBUG  7485[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 22:36:56,226]DEBUG  7485[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 22:36:56,227]DEBUG  7486[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 22:36:56,227]DEBUG  7486[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 22:36:56,227]DEBUG  7486[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 22:36:56,227]DEBUG  7486[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 22:36:56,228]DEBUG  7487[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 22:36:56,228]DEBUG  7487[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 22:36:56,228]DEBUG  7487[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 22:36:56,228]DEBUG  7487[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 22:36:56,229]DEBUG  7488[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 22:36:56,229]DEBUG  7488[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 22:36:56,229]DEBUG  7488[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 22:36:56,230]DEBUG  7489[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 22:36:56,230]DEBUG  7489[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 22:36:56,230]DEBUG  7489[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 22:36:56,230]DEBUG  7489[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 22:36:56,231]DEBUG  7490[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 22:36:56,231]DEBUG  7490[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@434ce1aa]
[2017-10-14 22:36:56,232]DEBUG  7491[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByRoleName' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:56,232]DEBUG  7491[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@41c70651 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@434ce1aa, testMethod = testFindByRoleName@RoleDAOTest, testException = [null]]]
[2017-10-14 22:36:56,233]DEBUG  7492[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 22:36:56,234]DEBUG  7493[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByRoleName]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:56,235]DEBUG  7494[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15080098162
[2017-10-14 22:36:56,235]DEBUG  7494[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@43af15e3] for Hibernate transaction
[2017-10-14 22:36:56,235]DEBUG  7494[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@43af15e3]
[2017-10-14 22:36:56,236]DEBUG  7495[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 22:36:56,236]DEBUG  7495[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 22:36:56,236]DEBUG  7495[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 22:36:56,236]DEBUG  7495[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@41c70651 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@434ce1aa, testMethod = testFindByRoleName@RoleDAOTest, testException = [null]]]
[2017-10-14 22:36:56,237] INFO  7496[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (10): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@598b619b]; rollback [true]
[2017-10-14 22:36:56,237]DEBUG  7496[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:56,238]DEBUG  7497[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,238]DEBUG  7497[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 22:36:56,239]DEBUG  7498[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 43
[2017-10-14 22:36:56,239]DEBUG  7498[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,240]DEBUG  7499[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:56,240]DEBUG  7499[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,241]DEBUG  7500[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 22:36:56,242]DEBUG  7501[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 44
[2017-10-14 22:36:56,242]DEBUG  7501[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,242]DEBUG  7501[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:56,243]DEBUG  7502[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,243]DEBUG  7502[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 22:36:56,244]DEBUG  7503[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 45
[2017-10-14 22:36:56,244]DEBUG  7503[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,245]DEBUG  7504[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:56,245]DEBUG  7504[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,246]DEBUG  7505[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 22:36:56,247]DEBUG  7506[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 46
[2017-10-14 22:36:56,247]DEBUG  7506[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,248]DEBUG  7507[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:56,248]DEBUG  7507[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:56,249]DEBUG  7508[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:56,249]DEBUG  7508[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:56,249]DEBUG  7508[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:56,249]DEBUG  7508[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=43, roleName=Administrator}
[2017-10-14 22:36:56,249]DEBUG  7508[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=44, roleName=Supervisor}
[2017-10-14 22:36:56,249]DEBUG  7508[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=46, roleName=Merchandiser}
[2017-10-14 22:36:56,250]DEBUG  7509[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=45, roleName=Customer}
[2017-10-14 22:36:56,250]DEBUG  7509[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,250]DEBUG  7509[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2017-10-14 22:36:56,251]DEBUG  7510[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:56,251]DEBUG  7510[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#46]
[2017-10-14 22:36:56,251]DEBUG  7510[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:56,252]DEBUG  7511[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,252]DEBUG  7511[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:56,252]DEBUG  7511[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:56,252]DEBUG  7511[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:56,253]DEBUG  7512[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:56,253]DEBUG  7512[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:56,253]DEBUG  7512[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:56,253]DEBUG  7512[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=43, roleName=Administrator}
[2017-10-14 22:36:56,253]DEBUG  7512[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=44, roleName=Supervisor}
[2017-10-14 22:36:56,253]DEBUG  7512[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=46, roleName=Merchandiser}
[2017-10-14 22:36:56,253]DEBUG  7512[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=45, roleName=Customer}
[2017-10-14 22:36:56,254]DEBUG  7513[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,254]DEBUG  7513[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2017-10-14 22:36:56,254]DEBUG  7513[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:56,255]DEBUG  7514[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#44]
[2017-10-14 22:36:56,255]DEBUG  7514[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:56,255]DEBUG  7514[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,255]DEBUG  7514[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:56,255]DEBUG  7514[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:56,256]DEBUG  7515[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:56,256]DEBUG  7515[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:56,256]DEBUG  7515[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:56,256]DEBUG  7515[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:56,256]DEBUG  7515[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=43, roleName=Administrator}
[2017-10-14 22:36:56,256]DEBUG  7515[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=44, roleName=Supervisor}
[2017-10-14 22:36:56,257]DEBUG  7516[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=46, roleName=Merchandiser}
[2017-10-14 22:36:56,257]DEBUG  7516[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=45, roleName=Customer}
[2017-10-14 22:36:56,257]DEBUG  7516[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,257]DEBUG  7516[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2017-10-14 22:36:56,263]DEBUG  7522[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:56,263]DEBUG  7522[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#43]
[2017-10-14 22:36:56,263]DEBUG  7522[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:56,263]DEBUG  7522[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,263]DEBUG  7522[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:56,264]DEBUG  7523[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:56,264]DEBUG  7523[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:56,264]DEBUG  7523[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:56,264]DEBUG  7523[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:56,265]DEBUG  7524[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:56,265]DEBUG  7524[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=43, roleName=Administrator}
[2017-10-14 22:36:56,265]DEBUG  7524[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=44, roleName=Supervisor}
[2017-10-14 22:36:56,265]DEBUG  7524[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=46, roleName=Merchandiser}
[2017-10-14 22:36:56,265]DEBUG  7524[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=45, roleName=Customer}
[2017-10-14 22:36:56,265]DEBUG  7524[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,266]DEBUG  7525[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2017-10-14 22:36:56,272]DEBUG  7531[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:56,273]DEBUG  7532[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#45]
[2017-10-14 22:36:56,273]DEBUG  7532[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:56,273]DEBUG  7532[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,273]DEBUG  7532[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:56,273]DEBUG  7532[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:56,273]DEBUG  7532[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:56,274]DEBUG  7533[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:56,274]DEBUG  7533[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:56,274]DEBUG  7533[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:56,274]DEBUG  7533[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=43, roleName=Administrator}
[2017-10-14 22:36:56,274]DEBUG  7533[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=44, roleName=Supervisor}
[2017-10-14 22:36:56,274]DEBUG  7533[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=46, roleName=Merchandiser}
[2017-10-14 22:36:56,274]DEBUG  7533[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=45, roleName=Customer}
[2017-10-14 22:36:56,275]DEBUG  7534[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,275]DEBUG  7534[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 22:36:56,279]DEBUG  7538[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,280]DEBUG  7539[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@41c70651 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@434ce1aa, testMethod = testFindByRoleName@RoleDAOTest, testException = [null]]]
[2017-10-14 22:36:56,280]DEBUG  7539[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 22:36:56,280]DEBUG  7539[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@43af15e3]
[2017-10-14 22:36:56,280]DEBUG  7539[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 22:36:56,353]DEBUG  7612[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 22:36:56,354]DEBUG  7613[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:56,354]DEBUG  7613[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@43af15e3] after transaction
[2017-10-14 22:36:56,354]DEBUG  7613[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 22:36:56,355]DEBUG  7614[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 22:36:56,355]DEBUG  7614[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:56,355] INFO  7614[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@41c70651 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@434ce1aa, testMethod = testFindByRoleName@RoleDAOTest, testException = [null]]]
[2017-10-14 22:36:56,357]DEBUG  7616[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@41c70651 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@434ce1aa, testMethod = testFindByRoleName@RoleDAOTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 22:36:56,358]DEBUG  7617[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2017-10-14 22:36:56,358]DEBUG  7617[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2017-10-14 22:36:56,359]DEBUG  7618[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@41c70651 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@712f15db, testMethod = [null], testException = [null]]].
[2017-10-14 22:36:56,359]DEBUG  7618[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 22:36:56,360]DEBUG  7619[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 22:36:56,360]DEBUG  7619[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 22:36:56,360]DEBUG  7619[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 22:36:56,360]DEBUG  7619[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 22:36:56,361]DEBUG  7620[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 22:36:56,361]DEBUG  7620[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 22:36:56,361]DEBUG  7620[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 22:36:56,362]DEBUG  7621[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 22:36:56,362]DEBUG  7621[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 22:36:56,362]DEBUG  7621[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 22:36:56,362]DEBUG  7621[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 22:36:56,363]DEBUG  7622[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 22:36:56,363]DEBUG  7622[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 22:36:56,363]DEBUG  7622[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 22:36:56,364]DEBUG  7623[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 22:36:56,364]DEBUG  7623[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 22:36:56,364]DEBUG  7623[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 22:36:56,365]DEBUG  7624[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 22:36:56,365]DEBUG  7624[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 22:36:56,365]DEBUG  7624[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 22:36:56,366]DEBUG  7625[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 22:36:56,366]DEBUG  7625[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@712f15db]
[2017-10-14 22:36:56,367]DEBUG  7626[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testContainsRole' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:56,367]DEBUG  7626[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@41c70651 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@712f15db, testMethod = testContainsRole@RoleDAOTest, testException = [null]]]
[2017-10-14 22:36:56,367]DEBUG  7626[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 22:36:56,369]DEBUG  7628[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testContainsRole]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:56,369]DEBUG  7628[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15080098163
[2017-10-14 22:36:56,369]DEBUG  7628[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@77d3b93] for Hibernate transaction
[2017-10-14 22:36:56,369]DEBUG  7628[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@77d3b93]
[2017-10-14 22:36:56,369]DEBUG  7628[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 22:36:56,369]DEBUG  7628[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 22:36:56,370]DEBUG  7629[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 22:36:56,370]DEBUG  7629[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@41c70651 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@712f15db, testMethod = testContainsRole@RoleDAOTest, testException = [null]]]
[2017-10-14 22:36:56,370] INFO  7629[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (11): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@598b619b]; rollback [true]
[2017-10-14 22:36:56,370]DEBUG  7629[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:56,370]DEBUG  7629[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,370]DEBUG  7629[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 22:36:56,371]DEBUG  7630[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 47
[2017-10-14 22:36:56,371]DEBUG  7630[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,372]DEBUG  7631[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:56,372]DEBUG  7631[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,372]DEBUG  7631[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 22:36:56,372]DEBUG  7631[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 48
[2017-10-14 22:36:56,372]DEBUG  7631[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,373]DEBUG  7632[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:56,373]DEBUG  7632[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,373]DEBUG  7632[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 22:36:56,373]DEBUG  7632[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 49
[2017-10-14 22:36:56,374]DEBUG  7633[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,374]DEBUG  7633[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:56,374]DEBUG  7633[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,374]DEBUG  7633[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 22:36:56,375]DEBUG  7634[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 50
[2017-10-14 22:36:56,375]DEBUG  7634[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,375]DEBUG  7634[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:56,375]DEBUG  7634[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:56,375]DEBUG  7634[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:56,376]DEBUG  7635[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:56,376]DEBUG  7635[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:56,376]DEBUG  7635[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=50, roleName=Merchandiser}
[2017-10-14 22:36:56,376]DEBUG  7635[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=49, roleName=Customer}
[2017-10-14 22:36:56,376]DEBUG  7635[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=48, roleName=Supervisor}
[2017-10-14 22:36:56,376]DEBUG  7635[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=47, roleName=Administrator}
[2017-10-14 22:36:56,376]DEBUG  7635[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,377]DEBUG  7636[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2017-10-14 22:36:56,377]DEBUG  7636[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:56,377]DEBUG  7636[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#47]
[2017-10-14 22:36:56,377]DEBUG  7636[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:56,378]DEBUG  7637[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,378]DEBUG  7637[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:56,378]DEBUG  7637[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:56,378]DEBUG  7637[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:56,378]DEBUG  7637[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:56,379]DEBUG  7638[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:56,379]DEBUG  7638[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:56,379]DEBUG  7638[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=50, roleName=Merchandiser}
[2017-10-14 22:36:56,379]DEBUG  7638[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=49, roleName=Customer}
[2017-10-14 22:36:56,379]DEBUG  7638[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=48, roleName=Supervisor}
[2017-10-14 22:36:56,379]DEBUG  7638[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=47, roleName=Administrator}
[2017-10-14 22:36:56,379]DEBUG  7638[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,379]DEBUG  7638[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2017-10-14 22:36:56,380]DEBUG  7639[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:56,380]DEBUG  7639[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#48]
[2017-10-14 22:36:56,380]DEBUG  7639[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:56,381]DEBUG  7640[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,381]DEBUG  7640[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:56,381]DEBUG  7640[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:56,381]DEBUG  7640[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:56,381]DEBUG  7640[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:56,381]DEBUG  7640[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:56,382]DEBUG  7641[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:56,382]DEBUG  7641[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=50, roleName=Merchandiser}
[2017-10-14 22:36:56,382]DEBUG  7641[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=49, roleName=Customer}
[2017-10-14 22:36:56,382]DEBUG  7641[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=48, roleName=Supervisor}
[2017-10-14 22:36:56,382]DEBUG  7641[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=47, roleName=Administrator}
[2017-10-14 22:36:56,382]DEBUG  7641[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,382]DEBUG  7641[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2017-10-14 22:36:56,383]DEBUG  7642[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:56,383]DEBUG  7642[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#50]
[2017-10-14 22:36:56,383]DEBUG  7642[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:56,384]DEBUG  7643[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,384]DEBUG  7643[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:56,384]DEBUG  7643[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:56,384]DEBUG  7643[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:56,384]DEBUG  7643[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:56,384]DEBUG  7643[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:56,385]DEBUG  7644[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:56,385]DEBUG  7644[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=50, roleName=Merchandiser}
[2017-10-14 22:36:56,385]DEBUG  7644[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=49, roleName=Customer}
[2017-10-14 22:36:56,385]DEBUG  7644[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=48, roleName=Supervisor}
[2017-10-14 22:36:56,385]DEBUG  7644[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=47, roleName=Administrator}
[2017-10-14 22:36:56,385]DEBUG  7644[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,385]DEBUG  7644[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2017-10-14 22:36:56,386]DEBUG  7645[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:56,386]DEBUG  7645[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#49]
[2017-10-14 22:36:56,386]DEBUG  7645[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:56,386]DEBUG  7645[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,386]DEBUG  7645[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:56,387]DEBUG  7646[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:56,387]DEBUG  7646[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:56,387]DEBUG  7646[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:56,387]DEBUG  7646[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:56,387]DEBUG  7646[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:56,387]DEBUG  7646[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=50, roleName=Merchandiser}
[2017-10-14 22:36:56,388]DEBUG  7647[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=49, roleName=Customer}
[2017-10-14 22:36:56,388]DEBUG  7647[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=48, roleName=Supervisor}
[2017-10-14 22:36:56,388]DEBUG  7647[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=47, roleName=Administrator}
[2017-10-14 22:36:56,388]DEBUG  7647[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,388]DEBUG  7647[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2017-10-14 22:36:56,389]DEBUG  7648[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:56,389]DEBUG  7648[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:56,389]DEBUG  7648[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,389]DEBUG  7648[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:56,389]DEBUG  7648[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:56,389]DEBUG  7648[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:56,390]DEBUG  7649[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:56,390]DEBUG  7649[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:56,390]DEBUG  7649[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:56,390]DEBUG  7649[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=50, roleName=Merchandiser}
[2017-10-14 22:36:56,390]DEBUG  7649[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=49, roleName=Customer}
[2017-10-14 22:36:56,390]DEBUG  7649[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=48, roleName=Supervisor}
[2017-10-14 22:36:56,390]DEBUG  7649[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=47, roleName=Administrator}
[2017-10-14 22:36:56,391]DEBUG  7650[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,391]DEBUG  7650[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2017-10-14 22:36:56,391]DEBUG  7650[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:56,391]DEBUG  7650[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:56,391]DEBUG  7650[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,391]DEBUG  7650[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:56,392]DEBUG  7651[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:56,392]DEBUG  7651[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:56,392]DEBUG  7651[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:56,392]DEBUG  7651[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:56,392]DEBUG  7651[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:56,392]DEBUG  7651[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=50, roleName=Merchandiser}
[2017-10-14 22:36:56,392]DEBUG  7651[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=49, roleName=Customer}
[2017-10-14 22:36:56,393]DEBUG  7652[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=48, roleName=Supervisor}
[2017-10-14 22:36:56,393]DEBUG  7652[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=47, roleName=Administrator}
[2017-10-14 22:36:56,393]DEBUG  7652[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,393]DEBUG  7652[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 22:36:56,393]DEBUG  7652[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,394]DEBUG  7653[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@41c70651 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@712f15db, testMethod = testContainsRole@RoleDAOTest, testException = [null]]]
[2017-10-14 22:36:56,394]DEBUG  7653[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 22:36:56,394]DEBUG  7653[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@77d3b93]
[2017-10-14 22:36:56,394]DEBUG  7653[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 22:36:56,428]DEBUG  7687[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 22:36:56,429]DEBUG  7688[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:56,429]DEBUG  7688[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@77d3b93] after transaction
[2017-10-14 22:36:56,429]DEBUG  7688[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 22:36:56,430]DEBUG  7689[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 22:36:56,430]DEBUG  7689[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:56,430] INFO  7689[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@41c70651 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@712f15db, testMethod = testContainsRole@RoleDAOTest, testException = [null]]]
[2017-10-14 22:36:56,432]DEBUG  7691[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@41c70651 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@712f15db, testMethod = testContainsRole@RoleDAOTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 22:36:56,433]DEBUG  7692[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2017-10-14 22:36:56,433]DEBUG  7692[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2017-10-14 22:36:56,434]DEBUG  7693[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@41c70651 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@5ecaeee0, testMethod = [null], testException = [null]]].
[2017-10-14 22:36:56,434]DEBUG  7693[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 22:36:56,434]DEBUG  7693[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 22:36:56,435]DEBUG  7694[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 22:36:56,435]DEBUG  7694[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 22:36:56,435]DEBUG  7694[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 22:36:56,435]DEBUG  7694[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 22:36:56,436]DEBUG  7695[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 22:36:56,436]DEBUG  7695[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 22:36:56,436]DEBUG  7695[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 22:36:56,436]DEBUG  7695[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 22:36:56,437]DEBUG  7696[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 22:36:56,437]DEBUG  7696[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 22:36:56,437]DEBUG  7696[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 22:36:56,437]DEBUG  7696[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 22:36:56,438]DEBUG  7697[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 22:36:56,438]DEBUG  7697[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 22:36:56,438]DEBUG  7697[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 22:36:56,438]DEBUG  7697[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 22:36:56,439]DEBUG  7698[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 22:36:56,439]DEBUG  7698[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 22:36:56,439]DEBUG  7698[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 22:36:56,440]DEBUG  7699[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 22:36:56,440]DEBUG  7699[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@5ecaeee0]
[2017-10-14 22:36:56,441]DEBUG  7700[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByCriterionsSorting' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:56,441]DEBUG  7700[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@41c70651 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@5ecaeee0, testMethod = testFindByCriterionsSorting@RoleDAOTest, testException = [null]]]
[2017-10-14 22:36:56,441]DEBUG  7700[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 22:36:56,443]DEBUG  7702[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByCriterionsSorting]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:56,443]DEBUG  7702[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15080098164
[2017-10-14 22:36:56,443]DEBUG  7702[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@5d42f5b7] for Hibernate transaction
[2017-10-14 22:36:56,444]DEBUG  7703[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@5d42f5b7]
[2017-10-14 22:36:56,444]DEBUG  7703[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 22:36:56,444]DEBUG  7703[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 22:36:56,444]DEBUG  7703[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 22:36:56,445]DEBUG  7704[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@41c70651 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@5ecaeee0, testMethod = testFindByCriterionsSorting@RoleDAOTest, testException = [null]]]
[2017-10-14 22:36:56,445] INFO  7704[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (12): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@598b619b]; rollback [true]
[2017-10-14 22:36:56,445]DEBUG  7704[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:56,446]DEBUG  7705[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,446]DEBUG  7705[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 22:36:56,447]DEBUG  7706[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 51
[2017-10-14 22:36:56,448]DEBUG  7707[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,448]DEBUG  7707[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:56,448]DEBUG  7707[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,449]DEBUG  7708[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 22:36:56,449]DEBUG  7708[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 52
[2017-10-14 22:36:56,449]DEBUG  7708[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,449]DEBUG  7708[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:56,449]DEBUG  7708[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,450]DEBUG  7709[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 22:36:56,450]DEBUG  7709[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 53
[2017-10-14 22:36:56,450]DEBUG  7709[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,450]DEBUG  7709[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:56,450]DEBUG  7709[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,451]DEBUG  7710[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 22:36:56,451]DEBUG  7710[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 54
[2017-10-14 22:36:56,451]DEBUG  7710[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,452]DEBUG  7711[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:56,453]DEBUG  7712[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:56,453]DEBUG  7712[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:56,453]DEBUG  7712[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:56,453]DEBUG  7712[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:56,453]DEBUG  7712[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=52, roleName=Supervisor}
[2017-10-14 22:36:56,453]DEBUG  7712[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=51, roleName=Administrator}
[2017-10-14 22:36:56,453]DEBUG  7712[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=54, roleName=Merchandiser}
[2017-10-14 22:36:56,454]DEBUG  7713[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=53, roleName=Customer}
[2017-10-14 22:36:56,454]DEBUG  7713[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,454]DEBUG  7713[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName like ? and this_.ID<=? order by this_.RoleName asc
[2017-10-14 22:36:56,454]DEBUG  7713[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:56,455]DEBUG  7714[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#51]
[2017-10-14 22:36:56,455]DEBUG  7714[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#54]
[2017-10-14 22:36:56,455]DEBUG  7714[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#52]
[2017-10-14 22:36:56,455]DEBUG  7714[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:56,455]DEBUG  7714[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,455]DEBUG  7714[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:56,456]DEBUG  7715[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:56,456]DEBUG  7715[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:56,456]DEBUG  7715[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:56,456]DEBUG  7715[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:56,456]DEBUG  7715[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:56,456]DEBUG  7715[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=52, roleName=Supervisor}
[2017-10-14 22:36:56,457]DEBUG  7716[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=51, roleName=Administrator}
[2017-10-14 22:36:56,457]DEBUG  7716[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=54, roleName=Merchandiser}
[2017-10-14 22:36:56,457]DEBUG  7716[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=53, roleName=Customer}
[2017-10-14 22:36:56,457]DEBUG  7716[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,457]DEBUG  7716[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName like ? and this_.ID<=? order by this_.RoleName desc
[2017-10-14 22:36:56,458]DEBUG  7717[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:56,458]DEBUG  7717[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#52]
[2017-10-14 22:36:56,458]DEBUG  7717[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#54]
[2017-10-14 22:36:56,458]DEBUG  7717[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#51]
[2017-10-14 22:36:56,458]DEBUG  7717[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:56,458]DEBUG  7717[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,458]DEBUG  7717[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:56,459]DEBUG  7718[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:56,459]DEBUG  7718[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:56,459]DEBUG  7718[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:56,459]DEBUG  7718[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:56,459]DEBUG  7718[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:56,459]DEBUG  7718[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=52, roleName=Supervisor}
[2017-10-14 22:36:56,460]DEBUG  7719[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=51, roleName=Administrator}
[2017-10-14 22:36:56,460]DEBUG  7719[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=54, roleName=Merchandiser}
[2017-10-14 22:36:56,460]DEBUG  7719[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=53, roleName=Customer}
[2017-10-14 22:36:56,460]DEBUG  7719[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,460]DEBUG  7719[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName like ? and this_.ID<=? order by this_.ID asc
[2017-10-14 22:36:56,460]DEBUG  7719[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:56,461]DEBUG  7720[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#51]
[2017-10-14 22:36:56,461]DEBUG  7720[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#52]
[2017-10-14 22:36:56,461]DEBUG  7720[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#54]
[2017-10-14 22:36:56,461]DEBUG  7720[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:56,461]DEBUG  7720[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,461]DEBUG  7720[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:56,462]DEBUG  7721[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:56,462]DEBUG  7721[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:56,462]DEBUG  7721[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:56,462]DEBUG  7721[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:56,462]DEBUG  7721[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:56,462]DEBUG  7721[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=52, roleName=Supervisor}
[2017-10-14 22:36:56,462]DEBUG  7721[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=51, roleName=Administrator}
[2017-10-14 22:36:56,463]DEBUG  7722[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=54, roleName=Merchandiser}
[2017-10-14 22:36:56,463]DEBUG  7722[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=53, roleName=Customer}
[2017-10-14 22:36:56,463]DEBUG  7722[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,463]DEBUG  7722[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName like ? and this_.ID<=? order by this_.ID desc
[2017-10-14 22:36:56,463]DEBUG  7722[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:56,464]DEBUG  7723[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#54]
[2017-10-14 22:36:56,464]DEBUG  7723[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#52]
[2017-10-14 22:36:56,464]DEBUG  7723[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#51]
[2017-10-14 22:36:56,464]DEBUG  7723[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:56,464]DEBUG  7723[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,464]DEBUG  7723[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:56,464]DEBUG  7723[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:56,465]DEBUG  7724[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:56,465]DEBUG  7724[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:56,465]DEBUG  7724[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:56,465]DEBUG  7724[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:56,465]DEBUG  7724[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=52, roleName=Supervisor}
[2017-10-14 22:36:56,465]DEBUG  7724[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=51, roleName=Administrator}
[2017-10-14 22:36:56,465]DEBUG  7724[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=54, roleName=Merchandiser}
[2017-10-14 22:36:56,466]DEBUG  7725[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=53, roleName=Customer}
[2017-10-14 22:36:56,466]DEBUG  7725[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,466]DEBUG  7725[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 22:36:56,466]DEBUG  7725[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,466]DEBUG  7725[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@41c70651 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@5ecaeee0, testMethod = testFindByCriterionsSorting@RoleDAOTest, testException = [null]]]
[2017-10-14 22:36:56,466]DEBUG  7725[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 22:36:56,467]DEBUG  7726[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@5d42f5b7]
[2017-10-14 22:36:56,467]DEBUG  7726[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 22:36:56,504]DEBUG  7763[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 22:36:56,504]DEBUG  7763[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:56,504]DEBUG  7763[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@5d42f5b7] after transaction
[2017-10-14 22:36:56,504]DEBUG  7763[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 22:36:56,505]DEBUG  7764[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 22:36:56,505]DEBUG  7764[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:56,505] INFO  7764[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@41c70651 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@5ecaeee0, testMethod = testFindByCriterionsSorting@RoleDAOTest, testException = [null]]]
[2017-10-14 22:36:56,507]DEBUG  7766[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@41c70651 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@5ecaeee0, testMethod = testFindByCriterionsSorting@RoleDAOTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 22:36:56,508]DEBUG  7767[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2017-10-14 22:36:56,508]DEBUG  7767[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2017-10-14 22:36:56,509]DEBUG  7768[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@41c70651 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@43a09713, testMethod = [null], testException = [null]]].
[2017-10-14 22:36:56,509]DEBUG  7768[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 22:36:56,509]DEBUG  7768[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 22:36:56,509]DEBUG  7768[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 22:36:56,510]DEBUG  7769[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 22:36:56,510]DEBUG  7769[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 22:36:56,510]DEBUG  7769[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 22:36:56,511]DEBUG  7770[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 22:36:56,511]DEBUG  7770[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 22:36:56,511]DEBUG  7770[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 22:36:56,511]DEBUG  7770[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 22:36:56,512]DEBUG  7771[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 22:36:56,512]DEBUG  7771[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 22:36:56,512]DEBUG  7771[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 22:36:56,512]DEBUG  7771[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 22:36:56,513]DEBUG  7772[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 22:36:56,513]DEBUG  7772[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 22:36:56,513]DEBUG  7772[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 22:36:56,513]DEBUG  7772[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 22:36:56,514]DEBUG  7773[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 22:36:56,514]DEBUG  7773[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 22:36:56,514]DEBUG  7773[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 22:36:56,514]DEBUG  7773[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 22:36:56,515]DEBUG  7774[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@43a09713]
[2017-10-14 22:36:56,515]DEBUG  7774[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByOneOfCriterionsSorting' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:56,516]DEBUG  7775[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@41c70651 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@43a09713, testMethod = testFindByOneOfCriterionsSorting@RoleDAOTest, testException = [null]]]
[2017-10-14 22:36:56,516]DEBUG  7775[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 22:36:56,518]DEBUG  7777[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByOneOfCriterionsSorting]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:56,518]DEBUG  7777[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15080098165
[2017-10-14 22:36:56,518]DEBUG  7777[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@7c6cb947] for Hibernate transaction
[2017-10-14 22:36:56,519]DEBUG  7778[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7c6cb947]
[2017-10-14 22:36:56,519]DEBUG  7778[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 22:36:56,519]DEBUG  7778[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 22:36:56,519]DEBUG  7778[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 22:36:56,520]DEBUG  7779[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@41c70651 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@43a09713, testMethod = testFindByOneOfCriterionsSorting@RoleDAOTest, testException = [null]]]
[2017-10-14 22:36:56,520] INFO  7779[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (13): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@598b619b]; rollback [true]
[2017-10-14 22:36:56,520]DEBUG  7779[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:56,521]DEBUG  7780[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,521]DEBUG  7780[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 22:36:56,522]DEBUG  7781[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 55
[2017-10-14 22:36:56,522]DEBUG  7781[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,523]DEBUG  7782[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:56,523]DEBUG  7782[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,523]DEBUG  7782[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 22:36:56,524]DEBUG  7783[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 56
[2017-10-14 22:36:56,524]DEBUG  7783[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,525]DEBUG  7784[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:56,525]DEBUG  7784[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,526]DEBUG  7785[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 22:36:56,526]DEBUG  7785[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 57
[2017-10-14 22:36:56,527]DEBUG  7786[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,527]DEBUG  7786[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:56,528]DEBUG  7787[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,528]DEBUG  7787[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 22:36:56,529]DEBUG  7788[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 58
[2017-10-14 22:36:56,529]DEBUG  7788[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,529]DEBUG  7788[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:56,529]DEBUG  7788[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:56,530]DEBUG  7789[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:56,530]DEBUG  7789[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:56,530]DEBUG  7789[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:56,530]DEBUG  7789[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=58, roleName=Merchandiser}
[2017-10-14 22:36:56,530]DEBUG  7789[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=57, roleName=Customer}
[2017-10-14 22:36:56,530]DEBUG  7789[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=56, roleName=Supervisor}
[2017-10-14 22:36:56,530]DEBUG  7789[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=55, roleName=Administrator}
[2017-10-14 22:36:56,530]DEBUG  7789[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,531]DEBUG  7790[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName like ? and this_.ID<=? order by this_.RoleName asc
[2017-10-14 22:36:56,531]DEBUG  7790[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:56,531]DEBUG  7790[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#55]
[2017-10-14 22:36:56,531]DEBUG  7790[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#58]
[2017-10-14 22:36:56,532]DEBUG  7791[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#56]
[2017-10-14 22:36:56,532]DEBUG  7791[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:56,532]DEBUG  7791[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,532]DEBUG  7791[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:56,532]DEBUG  7791[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:56,533]DEBUG  7792[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:56,533]DEBUG  7792[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:56,533]DEBUG  7792[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:56,533]DEBUG  7792[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:56,533]DEBUG  7792[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=58, roleName=Merchandiser}
[2017-10-14 22:36:56,533]DEBUG  7792[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=57, roleName=Customer}
[2017-10-14 22:36:56,533]DEBUG  7792[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=56, roleName=Supervisor}
[2017-10-14 22:36:56,533]DEBUG  7792[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=55, roleName=Administrator}
[2017-10-14 22:36:56,534]DEBUG  7793[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,534]DEBUG  7793[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName like ? and this_.ID<=? order by this_.RoleName desc
[2017-10-14 22:36:56,534]DEBUG  7793[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:56,534]DEBUG  7793[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#56]
[2017-10-14 22:36:56,535]DEBUG  7794[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#58]
[2017-10-14 22:36:56,535]DEBUG  7794[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#55]
[2017-10-14 22:36:56,535]DEBUG  7794[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:56,535]DEBUG  7794[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,535]DEBUG  7794[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:56,535]DEBUG  7794[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:56,535]DEBUG  7794[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:56,536]DEBUG  7795[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:56,536]DEBUG  7795[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:56,536]DEBUG  7795[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:56,536]DEBUG  7795[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=58, roleName=Merchandiser}
[2017-10-14 22:36:56,536]DEBUG  7795[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=57, roleName=Customer}
[2017-10-14 22:36:56,536]DEBUG  7795[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=56, roleName=Supervisor}
[2017-10-14 22:36:56,536]DEBUG  7795[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=55, roleName=Administrator}
[2017-10-14 22:36:56,536]DEBUG  7795[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,537]DEBUG  7796[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 22:36:56,537]DEBUG  7796[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,537]DEBUG  7796[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@41c70651 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@43a09713, testMethod = testFindByOneOfCriterionsSorting@RoleDAOTest, testException = [null]]]
[2017-10-14 22:36:56,537]DEBUG  7796[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 22:36:56,537]DEBUG  7796[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7c6cb947]
[2017-10-14 22:36:56,537]DEBUG  7796[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 22:36:56,603]DEBUG  7862[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 22:36:56,604]DEBUG  7863[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:56,604]DEBUG  7863[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@7c6cb947] after transaction
[2017-10-14 22:36:56,604]DEBUG  7863[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 22:36:56,605]DEBUG  7864[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 22:36:56,605]DEBUG  7864[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:56,605] INFO  7864[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@41c70651 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@43a09713, testMethod = testFindByOneOfCriterionsSorting@RoleDAOTest, testException = [null]]]
[2017-10-14 22:36:56,607]DEBUG  7866[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@41c70651 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@43a09713, testMethod = testFindByOneOfCriterionsSorting@RoleDAOTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 22:36:56,608]DEBUG  7867[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2017-10-14 22:36:56,608]DEBUG  7867[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2017-10-14 22:36:56,609]DEBUG  7868[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@41c70651 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@380d39dc, testMethod = [null], testException = [null]]].
[2017-10-14 22:36:56,609]DEBUG  7868[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 22:36:56,609]DEBUG  7868[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 22:36:56,610]DEBUG  7869[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 22:36:56,610]DEBUG  7869[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 22:36:56,610]DEBUG  7869[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 22:36:56,610]DEBUG  7869[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 22:36:56,611]DEBUG  7870[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 22:36:56,611]DEBUG  7870[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 22:36:56,611]DEBUG  7870[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 22:36:56,611]DEBUG  7870[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 22:36:56,612]DEBUG  7871[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 22:36:56,612]DEBUG  7871[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 22:36:56,612]DEBUG  7871[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 22:36:56,612]DEBUG  7871[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 22:36:56,612]DEBUG  7871[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 22:36:56,613]DEBUG  7872[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 22:36:56,613]DEBUG  7872[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 22:36:56,613]DEBUG  7872[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 22:36:56,613]DEBUG  7872[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 22:36:56,613]DEBUG  7872[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 22:36:56,614]DEBUG  7873[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 22:36:56,614]DEBUG  7873[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 22:36:56,614]DEBUG  7873[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@380d39dc]
[2017-10-14 22:36:56,615]DEBUG  7874[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByRoleNameWithUserSelectWayConditions' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:56,615]DEBUG  7874[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@41c70651 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@380d39dc, testMethod = testFindByRoleNameWithUserSelectWayConditions@RoleDAOTest, testException = [null]]]
[2017-10-14 22:36:56,616]DEBUG  7875[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 22:36:56,617]DEBUG  7876[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByRoleNameWithUserSelectWayConditions]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:56,618]DEBUG  7877[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15080098166
[2017-10-14 22:36:56,618]DEBUG  7877[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@1cd3eab7] for Hibernate transaction
[2017-10-14 22:36:56,618]DEBUG  7877[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@1cd3eab7]
[2017-10-14 22:36:56,618]DEBUG  7877[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 22:36:56,618]DEBUG  7877[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 22:36:56,619]DEBUG  7878[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 22:36:56,619]DEBUG  7878[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@41c70651 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@380d39dc, testMethod = testFindByRoleNameWithUserSelectWayConditions@RoleDAOTest, testException = [null]]]
[2017-10-14 22:36:56,619] INFO  7878[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (14): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@598b619b]; rollback [true]
[2017-10-14 22:36:56,620]DEBUG  7879[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:56,620]DEBUG  7879[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,620]DEBUG  7879[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 22:36:56,621]DEBUG  7880[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 59
[2017-10-14 22:36:56,622]DEBUG  7881[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,622]DEBUG  7881[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:56,623]DEBUG  7882[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,623]DEBUG  7882[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 22:36:56,624]DEBUG  7883[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 60
[2017-10-14 22:36:56,624]DEBUG  7883[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,625]DEBUG  7884[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:56,625]DEBUG  7884[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,625]DEBUG  7884[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 22:36:56,626]DEBUG  7885[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 61
[2017-10-14 22:36:56,627]DEBUG  7886[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,627]DEBUG  7886[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:56,627]DEBUG  7886[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,628]DEBUG  7887[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 22:36:56,628]DEBUG  7887[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 62
[2017-10-14 22:36:56,629]DEBUG  7888[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,629]DEBUG  7888[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:56,629]DEBUG  7888[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,629]DEBUG  7888[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 22:36:56,630]DEBUG  7889[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 63
[2017-10-14 22:36:56,630]DEBUG  7889[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,631]DEBUG  7890[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:56,632]DEBUG  7891[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:56,632]DEBUG  7891[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2017-10-14 22:36:56,632]DEBUG  7891[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:56,632]DEBUG  7891[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:56,632]DEBUG  7891[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=60, roleName=Supervisor}
[2017-10-14 22:36:56,632]DEBUG  7891[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=59, roleName=Administrator}
[2017-10-14 22:36:56,633]DEBUG  7892[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=61, roleName=Customer}
[2017-10-14 22:36:56,633]DEBUG  7892[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=62, roleName=Merchandiser}
[2017-10-14 22:36:56,633]DEBUG  7892[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=63, roleName=tempAdmin}
[2017-10-14 22:36:56,633]DEBUG  7892[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,633]DEBUG  7892[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2017-10-14 22:36:56,634]DEBUG  7893[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:56,634]DEBUG  7893[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#63]
[2017-10-14 22:36:56,634]DEBUG  7893[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:56,634]DEBUG  7893[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,634]DEBUG  7893[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:56,635]DEBUG  7894[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:56,635]DEBUG  7894[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:56,636]DEBUG  7895[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 1 updates, 0 deletions to 5 objects
[2017-10-14 22:36:56,636]DEBUG  7895[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:56,636]DEBUG  7895[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:56,636]DEBUG  7895[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=60, roleName=Supervisor}
[2017-10-14 22:36:56,636]DEBUG  7895[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=59, roleName=Administrator}
[2017-10-14 22:36:56,637]DEBUG  7896[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=61, roleName=Customer}
[2017-10-14 22:36:56,637]DEBUG  7896[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=62, roleName=Merchandiser}
[2017-10-14 22:36:56,637]DEBUG  7896[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=63, roleName=tempAdmin and something}
[2017-10-14 22:36:56,637]DEBUG  7896[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Roles
[2017-10-14 22:36:56,638]DEBUG  7897[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,638]DEBUG  7897[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Roles set RoleName=? where ID=?
[2017-10-14 22:36:56,638]DEBUG  7897[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
[2017-10-14 22:36:56,638]DEBUG  7897[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,639]DEBUG  7898[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,639]DEBUG  7898[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName like ?
[2017-10-14 22:36:56,639]DEBUG  7898[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:56,639]DEBUG  7898[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#63]
[2017-10-14 22:36:56,640]DEBUG  7899[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:56,640]DEBUG  7899[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,640]DEBUG  7899[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:56,640]DEBUG  7899[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:56,640]DEBUG  7899[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:56,640]DEBUG  7899[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 1 updates, 0 deletions to 5 objects
[2017-10-14 22:36:56,641]DEBUG  7900[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:56,641]DEBUG  7900[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:56,641]DEBUG  7900[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=60, roleName=Supervisor}
[2017-10-14 22:36:56,641]DEBUG  7900[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=59, roleName=Administrator}
[2017-10-14 22:36:56,641]DEBUG  7900[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=61, roleName=Customer}
[2017-10-14 22:36:56,641]DEBUG  7900[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=62, roleName=Merchandiser}
[2017-10-14 22:36:56,641]DEBUG  7900[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=63, roleName=something heretempAdmin and something and something here}
[2017-10-14 22:36:56,641]DEBUG  7900[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Roles
[2017-10-14 22:36:56,642]DEBUG  7901[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,642]DEBUG  7901[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Roles set RoleName=? where ID=?
[2017-10-14 22:36:56,642]DEBUG  7901[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
[2017-10-14 22:36:56,642]DEBUG  7901[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,643]DEBUG  7902[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,643]DEBUG  7902[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName like ?
[2017-10-14 22:36:56,643]DEBUG  7902[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:56,643]DEBUG  7902[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#63]
[2017-10-14 22:36:56,643]DEBUG  7902[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:56,644]DEBUG  7903[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,644]DEBUG  7903[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:56,644]DEBUG  7903[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:56,644]DEBUG  7903[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:56,644]DEBUG  7903[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2017-10-14 22:36:56,644]DEBUG  7903[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:56,644]DEBUG  7903[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:56,645]DEBUG  7904[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=60, roleName=Supervisor}
[2017-10-14 22:36:56,645]DEBUG  7904[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=59, roleName=Administrator}
[2017-10-14 22:36:56,645]DEBUG  7904[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=61, roleName=Customer}
[2017-10-14 22:36:56,645]DEBUG  7904[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=62, roleName=Merchandiser}
[2017-10-14 22:36:56,645]DEBUG  7904[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=63, roleName=something heretempAdmin and something and something here}
[2017-10-14 22:36:56,645]DEBUG  7904[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,645]DEBUG  7904[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 22:36:56,646]DEBUG  7905[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,646]DEBUG  7905[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@41c70651 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@380d39dc, testMethod = testFindByRoleNameWithUserSelectWayConditions@RoleDAOTest, testException = [null]]]
[2017-10-14 22:36:56,646]DEBUG  7905[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 22:36:56,646]DEBUG  7905[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@1cd3eab7]
[2017-10-14 22:36:56,646]DEBUG  7905[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 22:36:56,704]DEBUG  7963[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 22:36:56,704]DEBUG  7963[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:56,704]DEBUG  7963[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@1cd3eab7] after transaction
[2017-10-14 22:36:56,705]DEBUG  7964[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 22:36:56,705]DEBUG  7964[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 22:36:56,705]DEBUG  7964[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:56,705] INFO  7964[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@41c70651 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@380d39dc, testMethod = testFindByRoleNameWithUserSelectWayConditions@RoleDAOTest, testException = [null]]]
[2017-10-14 22:36:56,707]DEBUG  7966[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@41c70651 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@380d39dc, testMethod = testFindByRoleNameWithUserSelectWayConditions@RoleDAOTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 22:36:56,708]DEBUG  7967[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2017-10-14 22:36:56,708]DEBUG  7967[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2017-10-14 22:36:56,709]DEBUG  7968[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@41c70651 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@355d940a, testMethod = [null], testException = [null]]].
[2017-10-14 22:36:56,709]DEBUG  7968[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 22:36:56,709]DEBUG  7968[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 22:36:56,710]DEBUG  7969[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 22:36:56,710]DEBUG  7969[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 22:36:56,710]DEBUG  7969[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 22:36:56,711]DEBUG  7970[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 22:36:56,711]DEBUG  7970[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 22:36:56,711]DEBUG  7970[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 22:36:56,711]DEBUG  7970[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 22:36:56,712]DEBUG  7971[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 22:36:56,712]DEBUG  7971[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 22:36:56,712]DEBUG  7971[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 22:36:56,712]DEBUG  7971[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 22:36:56,713]DEBUG  7972[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 22:36:56,713]DEBUG  7972[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 22:36:56,713]DEBUG  7972[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 22:36:56,713]DEBUG  7972[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 22:36:56,714]DEBUG  7973[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 22:36:56,714]DEBUG  7973[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 22:36:56,714]DEBUG  7973[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 22:36:56,714]DEBUG  7973[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 22:36:56,715]DEBUG  7974[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 22:36:56,715]DEBUG  7974[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@355d940a]
[2017-10-14 22:36:56,716]DEBUG  7975[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByRoleNameWithUserSelectWayConditionsSorting' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:56,716]DEBUG  7975[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@41c70651 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@355d940a, testMethod = testFindByRoleNameWithUserSelectWayConditionsSorting@RoleDAOTest, testException = [null]]]
[2017-10-14 22:36:56,716]DEBUG  7975[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 22:36:56,718]DEBUG  7977[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByRoleNameWithUserSelectWayConditionsSorting]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:56,718]DEBUG  7977[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15080098167
[2017-10-14 22:36:56,718]DEBUG  7977[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@1487cd50] for Hibernate transaction
[2017-10-14 22:36:56,719]DEBUG  7978[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@1487cd50]
[2017-10-14 22:36:56,719]DEBUG  7978[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 22:36:56,719]DEBUG  7978[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 22:36:56,719]DEBUG  7978[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 22:36:56,720]DEBUG  7979[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@41c70651 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@355d940a, testMethod = testFindByRoleNameWithUserSelectWayConditionsSorting@RoleDAOTest, testException = [null]]]
[2017-10-14 22:36:56,720] INFO  7979[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (15): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@598b619b]; rollback [true]
[2017-10-14 22:36:56,720]DEBUG  7979[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:56,721]DEBUG  7980[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,721]DEBUG  7980[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 22:36:56,722]DEBUG  7981[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 64
[2017-10-14 22:36:56,722]DEBUG  7981[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,723]DEBUG  7982[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:56,723]DEBUG  7982[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,724]DEBUG  7983[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 22:36:56,724]DEBUG  7983[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 65
[2017-10-14 22:36:56,725]DEBUG  7984[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,725]DEBUG  7984[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:56,726]DEBUG  7985[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,726]DEBUG  7985[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 22:36:56,727]DEBUG  7986[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 66
[2017-10-14 22:36:56,727]DEBUG  7986[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,727]DEBUG  7986[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:56,728]DEBUG  7987[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,728]DEBUG  7987[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 22:36:56,729]DEBUG  7988[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 67
[2017-10-14 22:36:56,729]DEBUG  7988[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,729]DEBUG  7988[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:56,729]DEBUG  7988[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,729]DEBUG  7988[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 22:36:56,730]DEBUG  7989[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 68
[2017-10-14 22:36:56,730]DEBUG  7989[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,730]DEBUG  7989[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:56,730]DEBUG  7989[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:56,731]DEBUG  7990[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2017-10-14 22:36:56,731]DEBUG  7990[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:56,731]DEBUG  7990[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:56,731]DEBUG  7990[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=65, roleName=Supervisor}
[2017-10-14 22:36:56,731]DEBUG  7990[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=66, roleName=Customer}
[2017-10-14 22:36:56,731]DEBUG  7990[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=67, roleName=Merchandiser}
[2017-10-14 22:36:56,732]DEBUG  7991[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=68, roleName=tempAdmin}
[2017-10-14 22:36:56,732]DEBUG  7991[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=64, roleName=Administrator}
[2017-10-14 22:36:56,736]DEBUG  7995[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,736]DEBUG  7995[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2017-10-14 22:36:56,737]DEBUG  7996[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:56,737]DEBUG  7996[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#68]
[2017-10-14 22:36:56,737]DEBUG  7996[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:56,738]DEBUG  7997[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,738]DEBUG  7997[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:56,739]DEBUG  7998[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:56,739]DEBUG  7998[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:56,740]DEBUG  7999[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 1 updates, 0 deletions to 5 objects
[2017-10-14 22:36:56,740]DEBUG  7999[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:56,740]DEBUG  7999[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:56,740]DEBUG  7999[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=65, roleName=Supervisor}
[2017-10-14 22:36:56,740]DEBUG  7999[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=66, roleName=Customer}
[2017-10-14 22:36:56,740]DEBUG  7999[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=67, roleName=Merchandiser}
[2017-10-14 22:36:56,740]DEBUG  7999[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=68, roleName=tempAdmin and something}
[2017-10-14 22:36:56,740]DEBUG  7999[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=64, roleName=Administrator}
[2017-10-14 22:36:56,740]DEBUG  7999[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Roles
[2017-10-14 22:36:56,741]DEBUG  8000[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,741]DEBUG  8000[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Roles set RoleName=? where ID=?
[2017-10-14 22:36:56,741]DEBUG  8000[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
[2017-10-14 22:36:56,741]DEBUG  8000[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,742]DEBUG  8001[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,742]DEBUG  8001[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName like ?
[2017-10-14 22:36:56,742]DEBUG  8001[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:56,742]DEBUG  8001[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#68]
[2017-10-14 22:36:56,742]DEBUG  8001[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:56,743]DEBUG  8002[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,743]DEBUG  8002[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:56,743]DEBUG  8002[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:56,743]DEBUG  8002[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:56,743]DEBUG  8002[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 1 updates, 0 deletions to 5 objects
[2017-10-14 22:36:56,743]DEBUG  8002[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:56,744]DEBUG  8003[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:56,744]DEBUG  8003[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=65, roleName=Supervisor}
[2017-10-14 22:36:56,744]DEBUG  8003[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=66, roleName=Customer}
[2017-10-14 22:36:56,744]DEBUG  8003[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=67, roleName=Merchandiser}
[2017-10-14 22:36:56,744]DEBUG  8003[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=68, roleName=something heretempAdmin and something and something here}
[2017-10-14 22:36:56,744]DEBUG  8003[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=64, roleName=Administrator}
[2017-10-14 22:36:56,744]DEBUG  8003[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Roles
[2017-10-14 22:36:56,744]DEBUG  8003[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,744]DEBUG  8003[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Roles set RoleName=? where ID=?
[2017-10-14 22:36:56,745]DEBUG  8004[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
[2017-10-14 22:36:56,745]DEBUG  8004[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,745]DEBUG  8004[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,745]DEBUG  8004[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName like ?
[2017-10-14 22:36:56,746]DEBUG  8005[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:56,746]DEBUG  8005[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#68]
[2017-10-14 22:36:56,746]DEBUG  8005[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:56,746]DEBUG  8005[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,746]DEBUG  8005[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:56,746]DEBUG  8005[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:56,746]DEBUG  8005[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:56,747]DEBUG  8006[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2017-10-14 22:36:56,747]DEBUG  8006[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:56,747]DEBUG  8006[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:56,747]DEBUG  8006[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=65, roleName=Supervisor}
[2017-10-14 22:36:56,747]DEBUG  8006[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=66, roleName=Customer}
[2017-10-14 22:36:56,747]DEBUG  8006[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=67, roleName=Merchandiser}
[2017-10-14 22:36:56,747]DEBUG  8006[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=68, roleName=something heretempAdmin and something and something here}
[2017-10-14 22:36:56,747]DEBUG  8006[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=64, roleName=Administrator}
[2017-10-14 22:36:56,747]DEBUG  8006[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,747]DEBUG  8006[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 22:36:56,748]DEBUG  8007[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,748]DEBUG  8007[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@41c70651 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@355d940a, testMethod = testFindByRoleNameWithUserSelectWayConditionsSorting@RoleDAOTest, testException = [null]]]
[2017-10-14 22:36:56,748]DEBUG  8007[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 22:36:56,748]DEBUG  8007[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@1487cd50]
[2017-10-14 22:36:56,748]DEBUG  8007[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 22:36:56,787]DEBUG  8046[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 22:36:56,788]DEBUG  8047[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:56,788]DEBUG  8047[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@1487cd50] after transaction
[2017-10-14 22:36:56,788]DEBUG  8047[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 22:36:56,788]DEBUG  8047[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 22:36:56,789]DEBUG  8048[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:56,789] INFO  8048[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@41c70651 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@355d940a, testMethod = testFindByRoleNameWithUserSelectWayConditionsSorting@RoleDAOTest, testException = [null]]]
[2017-10-14 22:36:56,790]DEBUG  8049[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@41c70651 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@355d940a, testMethod = testFindByRoleNameWithUserSelectWayConditionsSorting@RoleDAOTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 22:36:56,791]DEBUG  8050[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2017-10-14 22:36:56,791]DEBUG  8050[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2017-10-14 22:36:56,792]DEBUG  8051[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@41c70651 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@2758160f, testMethod = [null], testException = [null]]].
[2017-10-14 22:36:56,793]DEBUG  8052[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 22:36:56,793]DEBUG  8052[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 22:36:56,793]DEBUG  8052[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 22:36:56,794]DEBUG  8053[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 22:36:56,794]DEBUG  8053[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 22:36:56,794]DEBUG  8053[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 22:36:56,794]DEBUG  8053[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 22:36:56,794]DEBUG  8053[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 22:36:56,795]DEBUG  8054[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 22:36:56,795]DEBUG  8054[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 22:36:56,795]DEBUG  8054[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 22:36:56,795]DEBUG  8054[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 22:36:56,795]DEBUG  8054[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 22:36:56,796]DEBUG  8055[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 22:36:56,796]DEBUG  8055[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 22:36:56,796]DEBUG  8055[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 22:36:56,796]DEBUG  8055[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 22:36:56,796]DEBUG  8055[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 22:36:56,797]DEBUG  8056[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 22:36:56,797]DEBUG  8056[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 22:36:56,797]DEBUG  8056[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 22:36:56,797]DEBUG  8056[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 22:36:56,798]DEBUG  8057[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@2758160f]
[2017-10-14 22:36:56,799]DEBUG  8058[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testContextFile' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:56,799]DEBUG  8058[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@41c70651 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@2758160f, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2017-10-14 22:36:56,799]DEBUG  8058[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 22:36:56,801]DEBUG  8060[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testContextFile]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:56,801]DEBUG  8060[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15080098168
[2017-10-14 22:36:56,801]DEBUG  8060[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@4c4c8834] for Hibernate transaction
[2017-10-14 22:36:56,801]DEBUG  8060[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@4c4c8834]
[2017-10-14 22:36:56,802]DEBUG  8061[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 22:36:56,802]DEBUG  8061[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 22:36:56,802]DEBUG  8061[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 22:36:56,802]DEBUG  8061[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@41c70651 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@2758160f, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2017-10-14 22:36:56,802] INFO  8061[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (16): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@598b619b]; rollback [true]
[2017-10-14 22:36:56,803]DEBUG  8062[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:56,804]DEBUG  8063[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,804]DEBUG  8063[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 22:36:56,805]DEBUG  8064[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 69
[2017-10-14 22:36:56,805]DEBUG  8064[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,806]DEBUG  8065[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:56,806]DEBUG  8065[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,806]DEBUG  8065[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 22:36:56,807]DEBUG  8066[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 70
[2017-10-14 22:36:56,807]DEBUG  8066[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,808]DEBUG  8067[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:56,808]DEBUG  8067[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,808]DEBUG  8067[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 22:36:56,809]DEBUG  8068[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 71
[2017-10-14 22:36:56,809]DEBUG  8068[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,809]DEBUG  8068[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:56,809]DEBUG  8068[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,809]DEBUG  8068[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 22:36:56,810]DEBUG  8069[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 72
[2017-10-14 22:36:56,810]DEBUG  8069[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,810]DEBUG  8069[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:56,810]DEBUG  8069[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:56,810]DEBUG  8069[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2017-10-14 22:36:56,810]DEBUG  8069[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:56,811]DEBUG  8070[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:56,811]DEBUG  8070[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=69, roleName=Administrator}
[2017-10-14 22:36:56,811]DEBUG  8070[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=70, roleName=Supervisor}
[2017-10-14 22:36:56,811]DEBUG  8070[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=71, roleName=Customer}
[2017-10-14 22:36:56,811]DEBUG  8070[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=72, roleName=Merchandiser}
[2017-10-14 22:36:56,811]DEBUG  8070[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,811]DEBUG  8070[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 22:36:56,811]DEBUG  8070[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,812]DEBUG  8071[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@41c70651 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@2758160f, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2017-10-14 22:36:56,812]DEBUG  8071[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 22:36:56,812]DEBUG  8071[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@4c4c8834]
[2017-10-14 22:36:56,812]DEBUG  8071[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 22:36:56,854]DEBUG  8113[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 22:36:56,854]DEBUG  8113[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:56,855]DEBUG  8114[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@4c4c8834] after transaction
[2017-10-14 22:36:56,855]DEBUG  8114[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 22:36:56,855]DEBUG  8114[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 22:36:56,855]DEBUG  8114[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:56,855] INFO  8114[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@41c70651 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@2758160f, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2017-10-14 22:36:56,857]DEBUG  8116[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@41c70651 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@2758160f, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 22:36:56,858]DEBUG  8117[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestClass(DirtiesContextTestExecutionListener.java:113) - After test class: context [[TestContext@41c70651 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = [null], testMethod = [null], testException = [null]]], dirtiesContext [false].
[2017-10-14 22:36:56,861]DEBUG  8120[main] - org.springframework.test.context.junit4.SpringJUnit4ClassRunner.<init>(SpringJUnit4ClassRunner.java:106) - SpringJUnit4ClassRunner constructor called with [class com.softserveinc.edu.oms.persistence.dao.OrderDaoTest].
[2017-10-14 22:36:56,861] INFO  8120[main] - org.springframework.test.context.TestContextManager.retrieveTestExecutionListeners(TestContextManager.java:185) - @TestExecutionListeners is not present for class [class com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]: using defaults.
[2017-10-14 22:36:56,862]DEBUG  8121[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2017-10-14 22:36:56,862]DEBUG  8121[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2017-10-14 22:36:56,865]DEBUG  8124[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2017-10-14 22:36:56,866]DEBUG  8125[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2017-10-14 22:36:56,866]DEBUG  8125[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2017-10-14 22:36:56,866]DEBUG  8125[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2017-10-14 22:36:56,870]DEBUG  8129[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2017-10-14 22:36:56,870]DEBUG  8129[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2017-10-14 22:36:56,870]DEBUG  8129[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@4481290d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@7bae379d, testMethod = [null], testException = [null]]].
[2017-10-14 22:36:56,876]DEBUG  8135[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 22:36:56,876]DEBUG  8135[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 22:36:56,876]DEBUG  8135[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 22:36:56,876]DEBUG  8135[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 22:36:56,876]DEBUG  8135[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 22:36:56,876]DEBUG  8135[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 22:36:56,876]DEBUG  8135[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 22:36:56,876]DEBUG  8135[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 22:36:56,877]DEBUG  8136[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 22:36:56,877]DEBUG  8136[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]: AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 22:36:56,877]DEBUG  8136[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 22:36:56,877]DEBUG  8136[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 22:36:56,877]DEBUG  8136[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest' to bean named 'customerTypeDao'
[2017-10-14 22:36:56,877]DEBUG  8136[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 22:36:56,878]DEBUG  8137[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 22:36:56,878]DEBUG  8137[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest' to bean named 'dimensionDao'
[2017-10-14 22:36:56,878]DEBUG  8137[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 22:36:56,878]DEBUG  8137[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 22:36:56,878]DEBUG  8137[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest' to bean named 'orderDao'
[2017-10-14 22:36:56,878]DEBUG  8137[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 22:36:56,879]DEBUG  8138[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 22:36:56,879]DEBUG  8138[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest' to bean named 'orderItemDao'
[2017-10-14 22:36:56,879]DEBUG  8138[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 22:36:56,879]DEBUG  8138[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 22:36:56,879]DEBUG  8138[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest' to bean named 'orderStatusDao'
[2017-10-14 22:36:56,879]DEBUG  8138[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 22:36:56,880]DEBUG  8139[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 22:36:56,880]DEBUG  8139[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest' to bean named 'productDao'
[2017-10-14 22:36:56,880]DEBUG  8139[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 22:36:56,880]DEBUG  8139[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 22:36:56,880]DEBUG  8139[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest' to bean named 'regionDao'
[2017-10-14 22:36:56,880]DEBUG  8139[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 22:36:56,881]DEBUG  8140[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 22:36:56,881]DEBUG  8140[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest' to bean named 'roleDao'
[2017-10-14 22:36:56,881]DEBUG  8140[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 22:36:56,881]DEBUG  8140[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 22:36:56,881]DEBUG  8140[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest' to bean named 'userDao'
[2017-10-14 22:36:56,881]DEBUG  8140[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 22:36:56,882]DEBUG  8141[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 22:36:56,882]DEBUG  8141[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest' to bean named 'sessionFactory'
[2017-10-14 22:36:56,883]DEBUG  8142[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 22:36:56,883]DEBUG  8142[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'setUp' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:56,883]DEBUG  8142[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 22:36:56,883]DEBUG  8142[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@7bae379d]
[2017-10-14 22:36:56,884]DEBUG  8143[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderDaoTest.setUp() throws java.lang.Exception
[2017-10-14 22:36:56,884]DEBUG  8143[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'tearDown' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:56,884]DEBUG  8143[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderDaoTest.tearDown()
[2017-10-14 22:36:56,884]DEBUG  8143[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindAll' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:56,885]DEBUG  8144[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderDaoTest.testFindAll()
[2017-10-14 22:36:56,885]DEBUG  8144[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testInsertOrUpdate' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:56,885]DEBUG  8144[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderDaoTest.testInsertOrUpdate()
[2017-10-14 22:36:56,885]DEBUG  8144[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testDelete' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:56,885]DEBUG  8144[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderDaoTest.testDelete()
[2017-10-14 22:36:56,885]DEBUG  8144[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByTotalPriceEquals' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:56,885]DEBUG  8144[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderDaoTest.testFindByTotalPriceEquals()
[2017-10-14 22:36:56,886]DEBUG  8145[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByTotalPriceLess' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:56,886]DEBUG  8145[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderDaoTest.testFindByTotalPriceLess()
[2017-10-14 22:36:56,886]DEBUG  8145[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByTotalPriceMore' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:56,886]DEBUG  8145[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderDaoTest.testFindByTotalPriceMore()
[2017-10-14 22:36:56,886]DEBUG  8145[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByDeliveryDateEquals' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:56,886]DEBUG  8145[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderDaoTest.testFindByDeliveryDateEquals()
[2017-10-14 22:36:56,887]DEBUG  8146[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByDeliveryDateMore' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:56,887]DEBUG  8146[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderDaoTest.testFindByDeliveryDateMore()
[2017-10-14 22:36:56,887]DEBUG  8146[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByDeliveryDateLess' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:56,887]DEBUG  8146[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderDaoTest.testFindByDeliveryDateLess()
[2017-10-14 22:36:56,887]DEBUG  8146[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByOrderDateEquals' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:56,887]DEBUG  8146[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderDaoTest.testFindByOrderDateEquals()
[2017-10-14 22:36:56,888]DEBUG  8147[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByOrderDateMore' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:56,888]DEBUG  8147[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderDaoTest.testFindByOrderDateMore()
[2017-10-14 22:36:56,888]DEBUG  8147[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByOrderDateLess' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:56,888]DEBUG  8147[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderDaoTest.testFindByOrderDateLess()
[2017-10-14 22:36:56,888]DEBUG  8147[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByOrderStatus' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:56,888]DEBUG  8147[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderDaoTest.testFindByOrderStatus()
[2017-10-14 22:36:56,889]DEBUG  8148[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindFindById' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:56,889]DEBUG  8148[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderDaoTest.testFindFindById()
[2017-10-14 22:36:56,889]DEBUG  8148[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanDB()
[2017-10-14 22:36:56,889]DEBUG  8148[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanCustomerType()
[2017-10-14 22:36:56,889]DEBUG  8148[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testContextFile' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:56,889]DEBUG  8148[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.testContextFile()
[2017-10-14 22:36:56,889]DEBUG  8148[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanUser()
[2017-10-14 22:36:56,890]DEBUG  8149[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanRole()
[2017-10-14 22:36:56,890]DEBUG  8149[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanRegion()
[2017-10-14 22:36:56,890]DEBUG  8149[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanProduct()
[2017-10-14 22:36:56,890]DEBUG  8149[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrderStatus()
[2017-10-14 22:36:56,890]DEBUG  8149[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrderItem()
[2017-10-14 22:36:56,890]DEBUG  8149[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrder()
[2017-10-14 22:36:56,890]DEBUG  8149[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanDimension()
[2017-10-14 22:36:56,890]DEBUG  8149[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:749) - Found finalize() method - using NO_OVERRIDE
[2017-10-14 22:36:56,890]DEBUG  8149[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:761) - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
[2017-10-14 22:36:56,891]DEBUG  8150[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
[2017-10-14 22:36:56,891]DEBUG  8150[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:766) - Found 'hashCode' method: public native int java.lang.Object.hashCode()
[2017-10-14 22:36:56,891]DEBUG  8150[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
[2017-10-14 22:36:56,891]DEBUG  8150[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
[2017-10-14 22:36:56,891]DEBUG  8150[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
[2017-10-14 22:36:56,891]DEBUG  8150[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
[2017-10-14 22:36:56,891]DEBUG  8150[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
[2017-10-14 22:36:56,891]DEBUG  8150[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2017-10-14 22:36:56,891]DEBUG  8150[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2017-10-14 22:36:56,892]DEBUG  8151[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
[2017-10-14 22:36:56,892]DEBUG  8151[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
[2017-10-14 22:36:56,892]DEBUG  8151[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
[2017-10-14 22:36:56,892]DEBUG  8151[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
[2017-10-14 22:36:56,892]DEBUG  8151[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
[2017-10-14 22:36:56,892]DEBUG  8151[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
[2017-10-14 22:36:56,892]DEBUG  8151[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
[2017-10-14 22:36:56,892]DEBUG  8151[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
[2017-10-14 22:36:56,892]DEBUG  8151[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
[2017-10-14 22:36:56,892]DEBUG  8151[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
[2017-10-14 22:36:56,893]DEBUG  8152[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
[2017-10-14 22:36:56,893]DEBUG  8152[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
[2017-10-14 22:36:56,893]DEBUG  8152[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2017-10-14 22:36:56,893]DEBUG  8152[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
[2017-10-14 22:36:56,893]DEBUG  8152[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
[2017-10-14 22:36:56,893]DEBUG  8152[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
[2017-10-14 22:36:56,893]DEBUG  8152[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
[2017-10-14 22:36:56,906]DEBUG  8165[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindAll' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:56,906]DEBUG  8165[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@4481290d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@7bae379d, testMethod = testFindAll@OrderDaoTest, testException = [null]]]
[2017-10-14 22:36:56,907]DEBUG  8166[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.retrieveConfigurationAttributes(TransactionalTestExecutionListener.java:466) - Retrieved @TransactionConfiguration [@org.springframework.test.context.transaction.TransactionConfiguration(transactionManager=transactionManager, defaultRollback=true)] for test class [class com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2017-10-14 22:36:56,907]DEBUG  8166[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.retrieveConfigurationAttributes(TransactionalTestExecutionListener.java:483) - Retrieved TransactionConfigurationAttributes [[TransactionConfigurationAttributes@1fa2fc5f transactionManagerName = 'transactionManager', defaultRollback = true]] for class [class com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2017-10-14 22:36:56,907]DEBUG  8166[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 22:36:56,907]DEBUG  8166[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:56,908]DEBUG  8167[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15080098169
[2017-10-14 22:36:56,908]DEBUG  8167[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@2e35f110] for Hibernate transaction
[2017-10-14 22:36:56,908]DEBUG  8167[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@2e35f110]
[2017-10-14 22:36:56,908]DEBUG  8167[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 22:36:56,908]DEBUG  8167[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 22:36:56,908]DEBUG  8167[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 22:36:56,908]DEBUG  8167[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@4481290d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@7bae379d, testMethod = testFindAll@OrderDaoTest, testException = [null]]]
[2017-10-14 22:36:56,908] INFO  8167[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (1): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@598b619b]; rollback [true]
[2017-10-14 22:36:56,908]DEBUG  8167[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,909]DEBUG  8168[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 22:36:56,909]DEBUG  8168[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,909]DEBUG  8168[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,909]DEBUG  8168[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 22:36:56,909]DEBUG  8168[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,910]DEBUG  8169[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,910]DEBUG  8169[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 22:36:56,910]DEBUG  8169[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,910]DEBUG  8169[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,910]DEBUG  8169[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 22:36:56,911]DEBUG  8170[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,911]DEBUG  8170[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,911]DEBUG  8170[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 22:36:56,911]DEBUG  8170[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,911]DEBUG  8170[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,911]DEBUG  8170[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 22:36:56,912]DEBUG  8171[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,912]DEBUG  8171[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,912]DEBUG  8171[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 22:36:56,912]DEBUG  8171[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,912]DEBUG  8171[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,912]DEBUG  8171[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 22:36:56,913]DEBUG  8172[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,913]DEBUG  8172[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,913]DEBUG  8172[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 22:36:56,913]DEBUG  8172[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,913]DEBUG  8172[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:56,914]DEBUG  8173[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,914]DEBUG  8173[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName) values (?)
[2017-10-14 22:36:56,915]DEBUG  8174[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 1
[2017-10-14 22:36:56,915]DEBUG  8174[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,915]DEBUG  8174[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:56,915]DEBUG  8174[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,915]DEBUG  8174[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 22:36:56,916]DEBUG  8175[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 73
[2017-10-14 22:36:56,916]DEBUG  8175[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,916]DEBUG  8175[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:56,918]DEBUG  8177[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,918]DEBUG  8177[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Users (IsUserActive, Balance, CustomerTypeRef, Email, FirstName, LastName, Login, Password, RegionRef, RoleRef) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 22:36:56,919]DEBUG  8178[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 1
[2017-10-14 22:36:56,920]DEBUG  8179[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,920]DEBUG  8179[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:56,922]DEBUG  8181[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,922]DEBUG  8181[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 22:36:56,927]DEBUG  8186[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 1
[2017-10-14 22:36:56,928]DEBUG  8187[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,928]DEBUG  8187[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:56,928]DEBUG  8187[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,928]DEBUG  8187[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 22:36:56,929]DEBUG  8188[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 2
[2017-10-14 22:36:56,929]DEBUG  8188[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,929]DEBUG  8188[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:56,929]DEBUG  8188[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,930]DEBUG  8189[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 22:36:56,930]DEBUG  8189[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 3
[2017-10-14 22:36:56,930]DEBUG  8189[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,931]DEBUG  8190[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:56,931]DEBUG  8190[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:56,932]DEBUG  8191[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:56,932]DEBUG  8191[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:56,932]DEBUG  8191[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:56,932]DEBUG  8191[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=73, roleName=Administrator}
[2017-10-14 22:36:56,932]DEBUG  8191[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#1, id=3, orderDate=Sat Oct 14 22:36:56 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:56 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#1, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#1, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:56,933]DEBUG  8192[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#1, id=2, orderDate=Sat Oct 14 22:36:56 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:56 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#1, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#1, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:56,933]DEBUG  8192[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=1, orderStatusName=Pending}
[2017-10-14 22:36:56,933]DEBUG  8192[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#1, id=1, orderDate=Sat Oct 14 22:36:56 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:56 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#1, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#1, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:56,933]DEBUG  8192[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=1, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#73, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:56,933]DEBUG  8192[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,933]DEBUG  8192[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID5_6_, this_.Assigne as Assigne5_6_, this_.Customer as Customer5_6_, this_.DeliveryDate as Delivery2_5_6_, this_.IsGift as IsGift5_6_, this_.MaxDiscount as MaxDisco4_5_6_, this_.OrderDate as OrderDate5_6_, this_.OrderName as OrderName5_6_, this_.OrderNumber as OrderNum7_5_6_, this_.OrderStatusRef as OrderSt12_5_6_, this_.PreferableDeliveryDate as Preferab8_5_6_, this_.TotalPrice as TotalPrice5_6_, user2_.ID as ID3_0_, user2_.IsUserActive as IsUserAc2_3_0_, user2_.Balance as Balance3_0_, user2_.CustomerTypeRef as Customer9_3_0_, user2_.Email as Email3_0_, user2_.FirstName as FirstName3_0_, user2_.LastName as LastName3_0_, user2_.Login as Login3_0_, user2_.Password as Password3_0_, user2_.RegionRef as RegionRef3_0_, user2_.RoleRef as RoleRef3_0_, customerty3_.ID as ID2_1_, customerty3_.Discount as Discount2_1_, customerty3_.MaxRange as MaxRange2_1_, customerty3_.MinRange as MinRange2_1_, customerty3_.TypeName as TypeName2_1_, region4_.ID as ID1_2_, region4_.RegionName as RegionName1_2_, role5_.ID as ID0_3_, role5_.RoleName as RoleName0_3_, user6_.ID as ID3_4_, user6_.IsUserActive as IsUserAc2_3_4_, user6_.Balance as Balance3_4_, user6_.CustomerTypeRef as Customer9_3_4_, user6_.Email as Email3_4_, user6_.FirstName as FirstName3_4_, user6_.LastName as LastName3_4_, user6_.Login as Login3_4_, user6_.Password as Password3_4_, user6_.RegionRef as RegionRef3_4_, user6_.RoleRef as RoleRef3_4_, orderstatu7_.ID as ID4_5_, orderstatu7_.OrederStatusName as OrederSt2_4_5_ from Orders this_ left outer join Users user2_ on this_.Assigne=user2_.ID left outer join CustomerTypes customerty3_ on user2_.CustomerTypeRef=customerty3_.ID left outer join Regions region4_ on user2_.RegionRef=region4_.ID left outer join Roles role5_ on user2_.RoleRef=role5_.ID left outer join Users user6_ on this_.Customer=user6_.ID left outer join OrderStatuses orderstatu7_ on this_.OrderStatusRef=orderstatu7_.ID
[2017-10-14 22:36:56,935]DEBUG  8194[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:56,937]DEBUG  8196[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#1], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#73], EntityKey[com.softserveinc.edu.oms.domain.entities.User#1], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#1], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#1]
[2017-10-14 22:36:56,937]DEBUG  8196[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#1], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#73], EntityKey[com.softserveinc.edu.oms.domain.entities.User#1], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#1], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#2]
[2017-10-14 22:36:56,938]DEBUG  8197[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#1], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#73], EntityKey[com.softserveinc.edu.oms.domain.entities.User#1], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#1], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#3]
[2017-10-14 22:36:56,938]DEBUG  8197[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:56,938]DEBUG  8197[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,938]DEBUG  8197[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:56,938]DEBUG  8197[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:56,938]DEBUG  8197[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:56,939]DEBUG  8198[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:56,939]DEBUG  8198[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:56,939]DEBUG  8198[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:56,939]DEBUG  8198[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=73, roleName=Administrator}
[2017-10-14 22:36:56,939]DEBUG  8198[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#1, id=3, orderDate=Sat Oct 14 22:36:56 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:56 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#1, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#1, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:56,939]DEBUG  8198[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#1, id=2, orderDate=Sat Oct 14 22:36:56 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:56 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#1, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#1, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:56,939]DEBUG  8198[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=1, orderStatusName=Pending}
[2017-10-14 22:36:56,940]DEBUG  8199[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#1, id=1, orderDate=Sat Oct 14 22:36:56 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:56 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#1, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#1, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:56,940]DEBUG  8199[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=1, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#73, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:56,940]DEBUG  8199[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,940]DEBUG  8199[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 22:36:56,941]DEBUG  8200[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,941]DEBUG  8200[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:56,941]DEBUG  8200[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:56,943]DEBUG  8202[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:56,943]DEBUG  8202[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:56,943]DEBUG  8202[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:56,943]DEBUG  8202[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=73, roleName=Administrator}
[2017-10-14 22:36:56,944]DEBUG  8203[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#1, id=3, orderDate=Sat Oct 14 22:36:56 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:56 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#1, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#1, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:56,944]DEBUG  8203[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#1, id=2, orderDate=Sat Oct 14 22:36:56 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:56 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#1, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#1, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:56,944]DEBUG  8203[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=1, orderStatusName=Pending}
[2017-10-14 22:36:56,944]DEBUG  8203[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#1, id=1, orderDate=Sat Oct 14 22:36:56 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:56 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#1, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#1, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:56,944]DEBUG  8203[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=1, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#73, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:56,944]DEBUG  8203[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,945]DEBUG  8204[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 22:36:56,945]DEBUG  8204[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,946]DEBUG  8205[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:56,946]DEBUG  8205[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:56,946]DEBUG  8205[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:56,946]DEBUG  8205[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:56,946]DEBUG  8205[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:56,946]DEBUG  8205[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=73, roleName=Administrator}
[2017-10-14 22:36:56,946]DEBUG  8205[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#1, id=3, orderDate=Sat Oct 14 22:36:56 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:56 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#1, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#1, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:56,947]DEBUG  8206[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#1, id=2, orderDate=Sat Oct 14 22:36:56 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:56 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#1, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#1, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:56,947]DEBUG  8206[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=1, orderStatusName=Pending}
[2017-10-14 22:36:56,947]DEBUG  8206[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#1, id=1, orderDate=Sat Oct 14 22:36:56 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:56 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#1, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#1, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:56,947]DEBUG  8206[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=1, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#73, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:56,947]DEBUG  8206[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,947]DEBUG  8206[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 22:36:56,948]DEBUG  8207[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,948]DEBUG  8207[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:56,948]DEBUG  8207[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:56,948]DEBUG  8207[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:56,949]DEBUG  8208[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:56,949]DEBUG  8208[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:56,949]DEBUG  8208[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=73, roleName=Administrator}
[2017-10-14 22:36:56,949]DEBUG  8208[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#1, id=3, orderDate=Sat Oct 14 22:36:56 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:56 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#1, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#1, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:56,949]DEBUG  8208[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#1, id=2, orderDate=Sat Oct 14 22:36:56 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:56 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#1, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#1, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:56,949]DEBUG  8208[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=1, orderStatusName=Pending}
[2017-10-14 22:36:56,949]DEBUG  8208[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#1, id=1, orderDate=Sat Oct 14 22:36:56 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:56 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#1, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#1, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:56,949]DEBUG  8208[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=1, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#73, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:56,950]DEBUG  8209[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,950]DEBUG  8209[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 22:36:56,950]DEBUG  8209[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,950]DEBUG  8209[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:56,950]DEBUG  8209[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:56,951]DEBUG  8210[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:56,951]DEBUG  8210[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:56,951]DEBUG  8210[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:56,951]DEBUG  8210[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=73, roleName=Administrator}
[2017-10-14 22:36:56,952]DEBUG  8211[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#1, id=3, orderDate=Sat Oct 14 22:36:56 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:56 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#1, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#1, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:56,952]DEBUG  8211[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#1, id=2, orderDate=Sat Oct 14 22:36:56 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:56 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#1, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#1, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:56,952]DEBUG  8211[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=1, orderStatusName=Pending}
[2017-10-14 22:36:56,952]DEBUG  8211[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#1, id=1, orderDate=Sat Oct 14 22:36:56 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:56 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#1, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#1, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:56,952]DEBUG  8211[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=1, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#73, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:56,952]DEBUG  8211[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,953]DEBUG  8212[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 22:36:56,953]DEBUG  8212[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,953]DEBUG  8212[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:56,953]DEBUG  8212[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:56,954]DEBUG  8213[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:56,954]DEBUG  8213[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:56,954]DEBUG  8213[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:56,954]DEBUG  8213[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=73, roleName=Administrator}
[2017-10-14 22:36:56,954]DEBUG  8213[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#1, id=3, orderDate=Sat Oct 14 22:36:56 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:56 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#1, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#1, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:56,954]DEBUG  8213[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#1, id=2, orderDate=Sat Oct 14 22:36:56 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:56 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#1, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#1, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:56,955]DEBUG  8214[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=1, orderStatusName=Pending}
[2017-10-14 22:36:56,955]DEBUG  8214[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#1, id=1, orderDate=Sat Oct 14 22:36:56 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:56 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#1, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#1, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:56,955]DEBUG  8214[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=1, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#73, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:56,955]DEBUG  8214[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,955]DEBUG  8214[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 22:36:56,956]DEBUG  8215[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,956]DEBUG  8215[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:56,956]DEBUG  8215[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:56,958]DEBUG  8217[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:56,958]DEBUG  8217[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:56,958]DEBUG  8217[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:56,958]DEBUG  8217[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=73, roleName=Administrator}
[2017-10-14 22:36:56,959]DEBUG  8218[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#1, id=3, orderDate=Sat Oct 14 22:36:56 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:56 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#1, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#1, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:56,959]DEBUG  8218[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#1, id=2, orderDate=Sat Oct 14 22:36:56 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:56 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#1, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#1, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:56,959]DEBUG  8218[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=1, orderStatusName=Pending}
[2017-10-14 22:36:56,959]DEBUG  8218[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#1, id=1, orderDate=Sat Oct 14 22:36:56 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:56 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#1, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#1, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:56,959]DEBUG  8218[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=1, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#73, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:56,959]DEBUG  8218[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,959]DEBUG  8218[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 22:36:56,960]DEBUG  8219[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,960]DEBUG  8219[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:56,960]DEBUG  8219[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:56,960]DEBUG  8219[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:56,961]DEBUG  8220[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:56,961]DEBUG  8220[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:56,961]DEBUG  8220[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=73, roleName=Administrator}
[2017-10-14 22:36:56,961]DEBUG  8220[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#1, id=3, orderDate=Sat Oct 14 22:36:56 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:56 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#1, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#1, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:56,961]DEBUG  8220[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#1, id=2, orderDate=Sat Oct 14 22:36:56 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:56 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#1, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#1, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:56,961]DEBUG  8220[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=1, orderStatusName=Pending}
[2017-10-14 22:36:56,961]DEBUG  8220[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#1, id=1, orderDate=Sat Oct 14 22:36:56 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:56 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#1, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#1, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:56,961]DEBUG  8220[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=1, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#73, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:56,962]DEBUG  8221[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,962]DEBUG  8221[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 22:36:56,962]DEBUG  8221[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,962]DEBUG  8221[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:56,962]DEBUG  8221[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:56,962]DEBUG  8221[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:56,963]DEBUG  8222[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:56,963]DEBUG  8222[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:56,963]DEBUG  8222[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=73, roleName=Administrator}
[2017-10-14 22:36:56,963]DEBUG  8222[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#1, id=3, orderDate=Sat Oct 14 22:36:56 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:56 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#1, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#1, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:56,963]DEBUG  8222[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#1, id=2, orderDate=Sat Oct 14 22:36:56 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:56 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#1, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#1, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:56,963]DEBUG  8222[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=1, orderStatusName=Pending}
[2017-10-14 22:36:56,963]DEBUG  8222[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#1, id=1, orderDate=Sat Oct 14 22:36:56 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:56 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#1, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#1, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:56,964]DEBUG  8223[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=1, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#73, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:56,964]DEBUG  8223[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:56,964]DEBUG  8223[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 22:36:56,964]DEBUG  8223[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:56,964]DEBUG  8223[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@4481290d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@7bae379d, testMethod = testFindAll@OrderDaoTest, testException = [null]]]
[2017-10-14 22:36:56,964]DEBUG  8223[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 22:36:56,964]DEBUG  8223[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@2e35f110]
[2017-10-14 22:36:56,965]DEBUG  8224[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 22:36:57,021]DEBUG  8280[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 22:36:57,021]DEBUG  8280[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:57,022]DEBUG  8281[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@2e35f110] after transaction
[2017-10-14 22:36:57,022]DEBUG  8281[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 22:36:57,022]DEBUG  8281[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 22:36:57,022]DEBUG  8281[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:57,023] INFO  8282[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@4481290d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@7bae379d, testMethod = testFindAll@OrderDaoTest, testException = [null]]]
[2017-10-14 22:36:57,024]DEBUG  8283[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@4481290d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@7bae379d, testMethod = testFindAll@OrderDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 22:36:57,025]DEBUG  8284[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2017-10-14 22:36:57,025]DEBUG  8284[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2017-10-14 22:36:57,026]DEBUG  8285[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@4481290d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@7f6b70cb, testMethod = [null], testException = [null]]].
[2017-10-14 22:36:57,026]DEBUG  8285[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 22:36:57,026]DEBUG  8285[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 22:36:57,027]DEBUG  8286[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 22:36:57,027]DEBUG  8286[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 22:36:57,027]DEBUG  8286[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 22:36:57,027]DEBUG  8286[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 22:36:57,027]DEBUG  8286[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 22:36:57,028]DEBUG  8287[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 22:36:57,028]DEBUG  8287[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 22:36:57,028]DEBUG  8287[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 22:36:57,028]DEBUG  8287[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 22:36:57,028]DEBUG  8287[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 22:36:57,029]DEBUG  8288[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 22:36:57,029]DEBUG  8288[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 22:36:57,029]DEBUG  8288[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 22:36:57,029]DEBUG  8288[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 22:36:57,029]DEBUG  8288[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 22:36:57,030]DEBUG  8289[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 22:36:57,030]DEBUG  8289[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 22:36:57,030]DEBUG  8289[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 22:36:57,030]DEBUG  8289[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 22:36:57,031]DEBUG  8290[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 22:36:57,031]DEBUG  8290[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@7f6b70cb]
[2017-10-14 22:36:57,032]DEBUG  8291[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testInsertOrUpdate' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:57,032]DEBUG  8291[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@4481290d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@7f6b70cb, testMethod = testInsertOrUpdate@OrderDaoTest, testException = [null]]]
[2017-10-14 22:36:57,032]DEBUG  8291[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 22:36:57,035]DEBUG  8294[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testInsertOrUpdate]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:57,035]DEBUG  8294[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15080098170
[2017-10-14 22:36:57,035]DEBUG  8294[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@28badd53] for Hibernate transaction
[2017-10-14 22:36:57,035]DEBUG  8294[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@28badd53]
[2017-10-14 22:36:57,036]DEBUG  8295[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 22:36:57,036]DEBUG  8295[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 22:36:57,036]DEBUG  8295[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 22:36:57,036]DEBUG  8295[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@4481290d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@7f6b70cb, testMethod = testInsertOrUpdate@OrderDaoTest, testException = [null]]]
[2017-10-14 22:36:57,036] INFO  8295[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (2): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@598b619b]; rollback [true]
[2017-10-14 22:36:57,037]DEBUG  8296[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,037]DEBUG  8296[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 22:36:57,038]DEBUG  8297[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,038]DEBUG  8297[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,038]DEBUG  8297[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 22:36:57,039]DEBUG  8298[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,039]DEBUG  8298[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,040]DEBUG  8299[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 22:36:57,041]DEBUG  8300[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,041]DEBUG  8300[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,042]DEBUG  8301[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 22:36:57,042]DEBUG  8301[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,043]DEBUG  8302[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,043]DEBUG  8302[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 22:36:57,044]DEBUG  8303[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,044]DEBUG  8303[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,044]DEBUG  8303[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 22:36:57,045]DEBUG  8304[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,045]DEBUG  8304[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,045]DEBUG  8304[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 22:36:57,046]DEBUG  8305[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,046]DEBUG  8305[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,047]DEBUG  8306[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 22:36:57,047]DEBUG  8306[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,048]DEBUG  8307[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,048]DEBUG  8307[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 22:36:57,048]DEBUG  8307[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,049]DEBUG  8308[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:57,049]DEBUG  8308[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,049]DEBUG  8308[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName) values (?)
[2017-10-14 22:36:57,049]DEBUG  8308[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 2
[2017-10-14 22:36:57,050]DEBUG  8309[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,050]DEBUG  8309[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:57,050]DEBUG  8309[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,050]DEBUG  8309[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 22:36:57,050]DEBUG  8309[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 74
[2017-10-14 22:36:57,051]DEBUG  8310[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,051]DEBUG  8310[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:57,051]DEBUG  8310[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,051]DEBUG  8310[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Users (IsUserActive, Balance, CustomerTypeRef, Email, FirstName, LastName, Login, Password, RegionRef, RoleRef) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 22:36:57,052]DEBUG  8311[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 2
[2017-10-14 22:36:57,052]DEBUG  8311[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,052]DEBUG  8311[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:57,052]DEBUG  8311[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,052]DEBUG  8311[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 22:36:57,053]DEBUG  8312[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 4
[2017-10-14 22:36:57,053]DEBUG  8312[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,053]DEBUG  8312[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:57,054]DEBUG  8313[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,054]DEBUG  8313[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 22:36:57,054]DEBUG  8313[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 5
[2017-10-14 22:36:57,055]DEBUG  8314[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,055]DEBUG  8314[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:57,055]DEBUG  8314[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,055]DEBUG  8314[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 22:36:57,056]DEBUG  8315[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 6
[2017-10-14 22:36:57,056]DEBUG  8315[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,056]DEBUG  8315[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:57,056]DEBUG  8315[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,056]DEBUG  8315[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 22:36:57,057]DEBUG  8316[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 7
[2017-10-14 22:36:57,057]DEBUG  8316[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,058]DEBUG  8317[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,058]DEBUG  8317[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,059]DEBUG  8318[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 7 objects
[2017-10-14 22:36:57,059]DEBUG  8318[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,059]DEBUG  8318[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,059]DEBUG  8318[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=2, orderStatusName=Pending}
[2017-10-14 22:36:57,059]DEBUG  8318[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=7, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,059]DEBUG  8318[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=6, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,060]DEBUG  8319[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=5, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,060]DEBUG  8319[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=4, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,060]DEBUG  8319[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=74, roleName=Administrator}
[2017-10-14 22:36:57,060]DEBUG  8319[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=2, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#74, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,060]DEBUG  8319[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,060]DEBUG  8319[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID5_6_, this_.Assigne as Assigne5_6_, this_.Customer as Customer5_6_, this_.DeliveryDate as Delivery2_5_6_, this_.IsGift as IsGift5_6_, this_.MaxDiscount as MaxDisco4_5_6_, this_.OrderDate as OrderDate5_6_, this_.OrderName as OrderName5_6_, this_.OrderNumber as OrderNum7_5_6_, this_.OrderStatusRef as OrderSt12_5_6_, this_.PreferableDeliveryDate as Preferab8_5_6_, this_.TotalPrice as TotalPrice5_6_, user2_.ID as ID3_0_, user2_.IsUserActive as IsUserAc2_3_0_, user2_.Balance as Balance3_0_, user2_.CustomerTypeRef as Customer9_3_0_, user2_.Email as Email3_0_, user2_.FirstName as FirstName3_0_, user2_.LastName as LastName3_0_, user2_.Login as Login3_0_, user2_.Password as Password3_0_, user2_.RegionRef as RegionRef3_0_, user2_.RoleRef as RoleRef3_0_, customerty3_.ID as ID2_1_, customerty3_.Discount as Discount2_1_, customerty3_.MaxRange as MaxRange2_1_, customerty3_.MinRange as MinRange2_1_, customerty3_.TypeName as TypeName2_1_, region4_.ID as ID1_2_, region4_.RegionName as RegionName1_2_, role5_.ID as ID0_3_, role5_.RoleName as RoleName0_3_, user6_.ID as ID3_4_, user6_.IsUserActive as IsUserAc2_3_4_, user6_.Balance as Balance3_4_, user6_.CustomerTypeRef as Customer9_3_4_, user6_.Email as Email3_4_, user6_.FirstName as FirstName3_4_, user6_.LastName as LastName3_4_, user6_.Login as Login3_4_, user6_.Password as Password3_4_, user6_.RegionRef as RegionRef3_4_, user6_.RoleRef as RoleRef3_4_, orderstatu7_.ID as ID4_5_, orderstatu7_.OrederStatusName as OrederSt2_4_5_ from Orders this_ left outer join Users user2_ on this_.Assigne=user2_.ID left outer join CustomerTypes customerty3_ on user2_.CustomerTypeRef=customerty3_.ID left outer join Regions region4_ on user2_.RegionRef=region4_.ID left outer join Roles role5_ on user2_.RoleRef=role5_.ID left outer join Users user6_ on this_.Customer=user6_.ID left outer join OrderStatuses orderstatu7_ on this_.OrderStatusRef=orderstatu7_.ID
[2017-10-14 22:36:57,062]DEBUG  8321[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:57,064]DEBUG  8323[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#2], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#74], EntityKey[com.softserveinc.edu.oms.domain.entities.User#2], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#2], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#4]
[2017-10-14 22:36:57,064]DEBUG  8323[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#2], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#74], EntityKey[com.softserveinc.edu.oms.domain.entities.User#2], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#2], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#5]
[2017-10-14 22:36:57,064]DEBUG  8323[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#2], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#74], EntityKey[com.softserveinc.edu.oms.domain.entities.User#2], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#2], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#6]
[2017-10-14 22:36:57,064]DEBUG  8323[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#2], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#74], EntityKey[com.softserveinc.edu.oms.domain.entities.User#2], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#2], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#7]
[2017-10-14 22:36:57,065]DEBUG  8324[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:57,065]DEBUG  8324[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,065]DEBUG  8324[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:57,065]DEBUG  8324[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,065]DEBUG  8324[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,066]DEBUG  8325[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 7 objects
[2017-10-14 22:36:57,066]DEBUG  8325[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,066]DEBUG  8325[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,066]DEBUG  8325[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=2, orderStatusName=Pending}
[2017-10-14 22:36:57,066]DEBUG  8325[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=7, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,066]DEBUG  8325[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=6, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,066]DEBUG  8325[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=5, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,067]DEBUG  8326[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=4, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,067]DEBUG  8326[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=74, roleName=Administrator}
[2017-10-14 22:36:57,067]DEBUG  8326[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=2, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#74, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,067]DEBUG  8326[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,067]DEBUG  8326[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 22:36:57,068]DEBUG  8327[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,068]DEBUG  8327[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,068]DEBUG  8327[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,068]DEBUG  8327[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 7 objects
[2017-10-14 22:36:57,068]DEBUG  8327[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,068]DEBUG  8327[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,069]DEBUG  8328[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=2, orderStatusName=Pending}
[2017-10-14 22:36:57,069]DEBUG  8328[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=7, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,069]DEBUG  8328[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=6, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,069]DEBUG  8328[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=5, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,069]DEBUG  8328[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=4, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,069]DEBUG  8328[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=74, roleName=Administrator}
[2017-10-14 22:36:57,069]DEBUG  8328[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=2, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#74, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,070]DEBUG  8329[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,070]DEBUG  8329[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 22:36:57,070]DEBUG  8329[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,070]DEBUG  8329[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,070]DEBUG  8329[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,071]DEBUG  8330[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 7 objects
[2017-10-14 22:36:57,071]DEBUG  8330[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,071]DEBUG  8330[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,071]DEBUG  8330[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=2, orderStatusName=Pending}
[2017-10-14 22:36:57,071]DEBUG  8330[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=7, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,071]DEBUG  8330[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=6, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,072]DEBUG  8331[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=5, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,072]DEBUG  8331[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=4, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,072]DEBUG  8331[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=74, roleName=Administrator}
[2017-10-14 22:36:57,072]DEBUG  8331[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=2, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#74, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,072]DEBUG  8331[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,072]DEBUG  8331[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 22:36:57,072]DEBUG  8331[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,073]DEBUG  8332[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,073]DEBUG  8332[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,073]DEBUG  8332[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 7 objects
[2017-10-14 22:36:57,073]DEBUG  8332[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,073]DEBUG  8332[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,073]DEBUG  8332[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=2, orderStatusName=Pending}
[2017-10-14 22:36:57,074]DEBUG  8333[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=7, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,074]DEBUG  8333[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=6, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,074]DEBUG  8333[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=5, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,074]DEBUG  8333[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=4, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,074]DEBUG  8333[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=74, roleName=Administrator}
[2017-10-14 22:36:57,074]DEBUG  8333[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=2, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#74, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,074]DEBUG  8333[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,075]DEBUG  8334[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 22:36:57,075]DEBUG  8334[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,075]DEBUG  8334[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,075]DEBUG  8334[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,076]DEBUG  8335[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 7 objects
[2017-10-14 22:36:57,076]DEBUG  8335[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,076]DEBUG  8335[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,076]DEBUG  8335[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=2, orderStatusName=Pending}
[2017-10-14 22:36:57,076]DEBUG  8335[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=7, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,076]DEBUG  8335[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=6, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,076]DEBUG  8335[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=5, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,077]DEBUG  8336[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=4, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,077]DEBUG  8336[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=74, roleName=Administrator}
[2017-10-14 22:36:57,077]DEBUG  8336[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=2, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#74, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,077]DEBUG  8336[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,077]DEBUG  8336[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 22:36:57,077]DEBUG  8336[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,078]DEBUG  8337[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,078]DEBUG  8337[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,078]DEBUG  8337[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 7 objects
[2017-10-14 22:36:57,078]DEBUG  8337[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,078]DEBUG  8337[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,078]DEBUG  8337[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=2, orderStatusName=Pending}
[2017-10-14 22:36:57,079]DEBUG  8338[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=7, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,079]DEBUG  8338[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=6, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,079]DEBUG  8338[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=5, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,079]DEBUG  8338[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=4, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,079]DEBUG  8338[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=74, roleName=Administrator}
[2017-10-14 22:36:57,079]DEBUG  8338[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=2, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#74, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,079]DEBUG  8338[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,079]DEBUG  8338[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 22:36:57,080]DEBUG  8339[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,080]DEBUG  8339[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,080]DEBUG  8339[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,080]DEBUG  8339[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 7 objects
[2017-10-14 22:36:57,081]DEBUG  8340[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,081]DEBUG  8340[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,081]DEBUG  8340[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=2, orderStatusName=Pending}
[2017-10-14 22:36:57,081]DEBUG  8340[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=7, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,081]DEBUG  8340[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=6, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,081]DEBUG  8340[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=5, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,082]DEBUG  8341[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=4, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,082]DEBUG  8341[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=74, roleName=Administrator}
[2017-10-14 22:36:57,082]DEBUG  8341[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=2, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#74, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,082]DEBUG  8341[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,082]DEBUG  8341[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 22:36:57,082]DEBUG  8341[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,083]DEBUG  8342[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,083]DEBUG  8342[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,083]DEBUG  8342[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 7 objects
[2017-10-14 22:36:57,083]DEBUG  8342[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,083]DEBUG  8342[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,083]DEBUG  8342[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=2, orderStatusName=Pending}
[2017-10-14 22:36:57,084]DEBUG  8343[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=7, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,084]DEBUG  8343[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=6, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,084]DEBUG  8343[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=5, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,084]DEBUG  8343[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=4, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,084]DEBUG  8343[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=74, roleName=Administrator}
[2017-10-14 22:36:57,084]DEBUG  8343[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=2, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#74, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,085]DEBUG  8344[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,085]DEBUG  8344[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 22:36:57,085]DEBUG  8344[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,085]DEBUG  8344[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,085]DEBUG  8344[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,086]DEBUG  8345[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 7 objects
[2017-10-14 22:36:57,086]DEBUG  8345[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,086]DEBUG  8345[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,086]DEBUG  8345[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=2, orderStatusName=Pending}
[2017-10-14 22:36:57,086]DEBUG  8345[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=7, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,086]DEBUG  8345[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=6, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,087]DEBUG  8346[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=5, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,087]DEBUG  8346[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#2, id=4, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#2, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#2, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,087]DEBUG  8346[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=74, roleName=Administrator}
[2017-10-14 22:36:57,087]DEBUG  8346[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=2, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#74, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,087]DEBUG  8346[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,087]DEBUG  8346[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 22:36:57,088]DEBUG  8347[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,088]DEBUG  8347[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@4481290d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@7f6b70cb, testMethod = testInsertOrUpdate@OrderDaoTest, testException = [null]]]
[2017-10-14 22:36:57,088]DEBUG  8347[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 22:36:57,088]DEBUG  8347[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@28badd53]
[2017-10-14 22:36:57,088]DEBUG  8347[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 22:36:57,129]DEBUG  8388[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 22:36:57,129]DEBUG  8388[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:57,130]DEBUG  8389[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@28badd53] after transaction
[2017-10-14 22:36:57,130]DEBUG  8389[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 22:36:57,130]DEBUG  8389[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 22:36:57,130]DEBUG  8389[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:57,131] INFO  8390[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@4481290d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@7f6b70cb, testMethod = testInsertOrUpdate@OrderDaoTest, testException = [null]]]
[2017-10-14 22:36:57,132]DEBUG  8391[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@4481290d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@7f6b70cb, testMethod = testInsertOrUpdate@OrderDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 22:36:57,133]DEBUG  8392[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2017-10-14 22:36:57,133]DEBUG  8392[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2017-10-14 22:36:57,133]DEBUG  8392[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@4481290d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@7f71ac12, testMethod = [null], testException = [null]]].
[2017-10-14 22:36:57,134]DEBUG  8393[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 22:36:57,134]DEBUG  8393[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 22:36:57,134]DEBUG  8393[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 22:36:57,134]DEBUG  8393[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 22:36:57,134]DEBUG  8393[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 22:36:57,135]DEBUG  8394[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 22:36:57,135]DEBUG  8394[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 22:36:57,135]DEBUG  8394[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 22:36:57,136]DEBUG  8395[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 22:36:57,137]DEBUG  8396[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 22:36:57,137]DEBUG  8396[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 22:36:57,137]DEBUG  8396[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 22:36:57,137]DEBUG  8396[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 22:36:57,137]DEBUG  8396[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 22:36:57,138]DEBUG  8397[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 22:36:57,138]DEBUG  8397[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 22:36:57,138]DEBUG  8397[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 22:36:57,138]DEBUG  8397[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 22:36:57,138]DEBUG  8397[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 22:36:57,139]DEBUG  8398[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 22:36:57,139]DEBUG  8398[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 22:36:57,139]DEBUG  8398[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 22:36:57,139]DEBUG  8398[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@7f71ac12]
[2017-10-14 22:36:57,140]DEBUG  8399[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testDelete' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:57,140]DEBUG  8399[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@4481290d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@7f71ac12, testMethod = testDelete@OrderDaoTest, testException = [null]]]
[2017-10-14 22:36:57,141]DEBUG  8400[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 22:36:57,142]DEBUG  8401[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testDelete]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:57,142]DEBUG  8401[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15080098171
[2017-10-14 22:36:57,142]DEBUG  8401[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@1384b2f9] for Hibernate transaction
[2017-10-14 22:36:57,143]DEBUG  8402[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@1384b2f9]
[2017-10-14 22:36:57,143]DEBUG  8402[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 22:36:57,143]DEBUG  8402[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 22:36:57,143]DEBUG  8402[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 22:36:57,143]DEBUG  8402[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@4481290d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@7f71ac12, testMethod = testDelete@OrderDaoTest, testException = [null]]]
[2017-10-14 22:36:57,144] INFO  8403[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (3): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@598b619b]; rollback [true]
[2017-10-14 22:36:57,144]DEBUG  8403[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,144]DEBUG  8403[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 22:36:57,145]DEBUG  8404[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,145]DEBUG  8404[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,146]DEBUG  8405[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 22:36:57,147]DEBUG  8406[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,147]DEBUG  8406[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,147]DEBUG  8406[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 22:36:57,148]DEBUG  8407[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,148]DEBUG  8407[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,148]DEBUG  8407[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 22:36:57,149]DEBUG  8408[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,149]DEBUG  8408[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,149]DEBUG  8408[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 22:36:57,149]DEBUG  8408[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,149]DEBUG  8408[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,150]DEBUG  8409[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 22:36:57,150]DEBUG  8409[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,150]DEBUG  8409[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,151]DEBUG  8410[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 22:36:57,151]DEBUG  8410[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,151]DEBUG  8410[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,151]DEBUG  8410[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 22:36:57,151]DEBUG  8410[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,152]DEBUG  8411[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,152]DEBUG  8411[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 22:36:57,152]DEBUG  8411[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,152]DEBUG  8411[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:57,152]DEBUG  8411[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,152]DEBUG  8411[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName) values (?)
[2017-10-14 22:36:57,153]DEBUG  8412[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 3
[2017-10-14 22:36:57,153]DEBUG  8412[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,153]DEBUG  8412[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:57,153]DEBUG  8412[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,153]DEBUG  8412[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 22:36:57,154]DEBUG  8413[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 75
[2017-10-14 22:36:57,154]DEBUG  8413[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,154]DEBUG  8413[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:57,154]DEBUG  8413[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,154]DEBUG  8413[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Users (IsUserActive, Balance, CustomerTypeRef, Email, FirstName, LastName, Login, Password, RegionRef, RoleRef) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 22:36:57,155]DEBUG  8414[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 3
[2017-10-14 22:36:57,155]DEBUG  8414[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,155]DEBUG  8414[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:57,155]DEBUG  8414[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,156]DEBUG  8415[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 22:36:57,156]DEBUG  8415[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 8
[2017-10-14 22:36:57,156]DEBUG  8415[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,157]DEBUG  8416[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:57,157]DEBUG  8416[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,157]DEBUG  8416[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 22:36:57,158]DEBUG  8417[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 9
[2017-10-14 22:36:57,158]DEBUG  8417[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,158]DEBUG  8417[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:57,158]DEBUG  8417[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,158]DEBUG  8417[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 22:36:57,159]DEBUG  8418[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 10
[2017-10-14 22:36:57,159]DEBUG  8418[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,160]DEBUG  8419[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,160]DEBUG  8419[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,160]DEBUG  8419[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:57,160]DEBUG  8419[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,161]DEBUG  8420[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,161]DEBUG  8420[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#3, id=10, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#3, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#3, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,161]DEBUG  8420[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=75, roleName=Administrator}
[2017-10-14 22:36:57,161]DEBUG  8420[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#3, id=9, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#3, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#3, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,161]DEBUG  8420[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#3, id=8, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#3, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#3, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,161]DEBUG  8420[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=3, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#75, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,161]DEBUG  8420[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=3, orderStatusName=Pending}
[2017-10-14 22:36:57,162]DEBUG  8421[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,162]DEBUG  8421[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID5_6_, this_.Assigne as Assigne5_6_, this_.Customer as Customer5_6_, this_.DeliveryDate as Delivery2_5_6_, this_.IsGift as IsGift5_6_, this_.MaxDiscount as MaxDisco4_5_6_, this_.OrderDate as OrderDate5_6_, this_.OrderName as OrderName5_6_, this_.OrderNumber as OrderNum7_5_6_, this_.OrderStatusRef as OrderSt12_5_6_, this_.PreferableDeliveryDate as Preferab8_5_6_, this_.TotalPrice as TotalPrice5_6_, user2_.ID as ID3_0_, user2_.IsUserActive as IsUserAc2_3_0_, user2_.Balance as Balance3_0_, user2_.CustomerTypeRef as Customer9_3_0_, user2_.Email as Email3_0_, user2_.FirstName as FirstName3_0_, user2_.LastName as LastName3_0_, user2_.Login as Login3_0_, user2_.Password as Password3_0_, user2_.RegionRef as RegionRef3_0_, user2_.RoleRef as RoleRef3_0_, customerty3_.ID as ID2_1_, customerty3_.Discount as Discount2_1_, customerty3_.MaxRange as MaxRange2_1_, customerty3_.MinRange as MinRange2_1_, customerty3_.TypeName as TypeName2_1_, region4_.ID as ID1_2_, region4_.RegionName as RegionName1_2_, role5_.ID as ID0_3_, role5_.RoleName as RoleName0_3_, user6_.ID as ID3_4_, user6_.IsUserActive as IsUserAc2_3_4_, user6_.Balance as Balance3_4_, user6_.CustomerTypeRef as Customer9_3_4_, user6_.Email as Email3_4_, user6_.FirstName as FirstName3_4_, user6_.LastName as LastName3_4_, user6_.Login as Login3_4_, user6_.Password as Password3_4_, user6_.RegionRef as RegionRef3_4_, user6_.RoleRef as RoleRef3_4_, orderstatu7_.ID as ID4_5_, orderstatu7_.OrederStatusName as OrederSt2_4_5_ from Orders this_ left outer join Users user2_ on this_.Assigne=user2_.ID left outer join CustomerTypes customerty3_ on user2_.CustomerTypeRef=customerty3_.ID left outer join Regions region4_ on user2_.RegionRef=region4_.ID left outer join Roles role5_ on user2_.RoleRef=role5_.ID left outer join Users user6_ on this_.Customer=user6_.ID left outer join OrderStatuses orderstatu7_ on this_.OrderStatusRef=orderstatu7_.ID
[2017-10-14 22:36:57,163]DEBUG  8422[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:57,164]DEBUG  8423[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#3], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#75], EntityKey[com.softserveinc.edu.oms.domain.entities.User#3], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#3], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#8]
[2017-10-14 22:36:57,165]DEBUG  8424[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#3], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#75], EntityKey[com.softserveinc.edu.oms.domain.entities.User#3], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#3], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#9]
[2017-10-14 22:36:57,165]DEBUG  8424[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#3], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#75], EntityKey[com.softserveinc.edu.oms.domain.entities.User#3], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#3], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#10]
[2017-10-14 22:36:57,165]DEBUG  8424[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:57,165]DEBUG  8424[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,165]DEBUG  8424[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:57,166]DEBUG  8425[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,166]DEBUG  8425[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,167]DEBUG  8426[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 6 objects
[2017-10-14 22:36:57,167]DEBUG  8426[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,167]DEBUG  8426[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,167]DEBUG  8426[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#3, id=10, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#3, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#3, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,167]DEBUG  8426[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=75, roleName=Administrator}
[2017-10-14 22:36:57,167]DEBUG  8426[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#3, id=9, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#3, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#3, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,168]DEBUG  8427[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#3, id=8, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#3, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#3, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,168]DEBUG  8427[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=3, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#75, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,168]DEBUG  8427[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=3, orderStatusName=Pending}
[2017-10-14 22:36:57,168]DEBUG  8427[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Orders
[2017-10-14 22:36:57,168]DEBUG  8427[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,168]DEBUG  8427[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders where ID=?
[2017-10-14 22:36:57,168]DEBUG  8427[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
[2017-10-14 22:36:57,169]DEBUG  8428[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,169]DEBUG  8428[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,169]DEBUG  8428[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID5_6_, this_.Assigne as Assigne5_6_, this_.Customer as Customer5_6_, this_.DeliveryDate as Delivery2_5_6_, this_.IsGift as IsGift5_6_, this_.MaxDiscount as MaxDisco4_5_6_, this_.OrderDate as OrderDate5_6_, this_.OrderName as OrderName5_6_, this_.OrderNumber as OrderNum7_5_6_, this_.OrderStatusRef as OrderSt12_5_6_, this_.PreferableDeliveryDate as Preferab8_5_6_, this_.TotalPrice as TotalPrice5_6_, user2_.ID as ID3_0_, user2_.IsUserActive as IsUserAc2_3_0_, user2_.Balance as Balance3_0_, user2_.CustomerTypeRef as Customer9_3_0_, user2_.Email as Email3_0_, user2_.FirstName as FirstName3_0_, user2_.LastName as LastName3_0_, user2_.Login as Login3_0_, user2_.Password as Password3_0_, user2_.RegionRef as RegionRef3_0_, user2_.RoleRef as RoleRef3_0_, customerty3_.ID as ID2_1_, customerty3_.Discount as Discount2_1_, customerty3_.MaxRange as MaxRange2_1_, customerty3_.MinRange as MinRange2_1_, customerty3_.TypeName as TypeName2_1_, region4_.ID as ID1_2_, region4_.RegionName as RegionName1_2_, role5_.ID as ID0_3_, role5_.RoleName as RoleName0_3_, user6_.ID as ID3_4_, user6_.IsUserActive as IsUserAc2_3_4_, user6_.Balance as Balance3_4_, user6_.CustomerTypeRef as Customer9_3_4_, user6_.Email as Email3_4_, user6_.FirstName as FirstName3_4_, user6_.LastName as LastName3_4_, user6_.Login as Login3_4_, user6_.Password as Password3_4_, user6_.RegionRef as RegionRef3_4_, user6_.RoleRef as RoleRef3_4_, orderstatu7_.ID as ID4_5_, orderstatu7_.OrederStatusName as OrederSt2_4_5_ from Orders this_ left outer join Users user2_ on this_.Assigne=user2_.ID left outer join CustomerTypes customerty3_ on user2_.CustomerTypeRef=customerty3_.ID left outer join Regions region4_ on user2_.RegionRef=region4_.ID left outer join Roles role5_ on user2_.RoleRef=role5_.ID left outer join Users user6_ on this_.Customer=user6_.ID left outer join OrderStatuses orderstatu7_ on this_.OrderStatusRef=orderstatu7_.ID
[2017-10-14 22:36:57,171]DEBUG  8430[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:57,172]DEBUG  8431[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#3], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#75], EntityKey[com.softserveinc.edu.oms.domain.entities.User#3], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#3], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#9]
[2017-10-14 22:36:57,172]DEBUG  8431[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#3], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#75], EntityKey[com.softserveinc.edu.oms.domain.entities.User#3], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#3], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#10]
[2017-10-14 22:36:57,172]DEBUG  8431[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:57,173]DEBUG  8432[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,173]DEBUG  8432[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:57,173]DEBUG  8432[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,173]DEBUG  8432[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,173]DEBUG  8432[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2017-10-14 22:36:57,173]DEBUG  8432[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,173]DEBUG  8432[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,174]DEBUG  8433[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#3, id=10, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#3, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#3, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,174]DEBUG  8433[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=75, roleName=Administrator}
[2017-10-14 22:36:57,174]DEBUG  8433[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#3, id=9, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#3, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#3, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,174]DEBUG  8433[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=3, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#75, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,174]DEBUG  8433[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=3, orderStatusName=Pending}
[2017-10-14 22:36:57,174]DEBUG  8433[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,174]DEBUG  8433[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 22:36:57,175]DEBUG  8434[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,175]DEBUG  8434[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,175]DEBUG  8434[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,175]DEBUG  8434[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2017-10-14 22:36:57,175]DEBUG  8434[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,176]DEBUG  8435[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,176]DEBUG  8435[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#3, id=10, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#3, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#3, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,176]DEBUG  8435[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=75, roleName=Administrator}
[2017-10-14 22:36:57,176]DEBUG  8435[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#3, id=9, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#3, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#3, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,176]DEBUG  8435[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=3, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#75, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,176]DEBUG  8435[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=3, orderStatusName=Pending}
[2017-10-14 22:36:57,176]DEBUG  8435[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,176]DEBUG  8435[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 22:36:57,177]DEBUG  8436[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,177]DEBUG  8436[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,177]DEBUG  8436[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,177]DEBUG  8436[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2017-10-14 22:36:57,177]DEBUG  8436[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,178]DEBUG  8437[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,178]DEBUG  8437[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#3, id=10, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#3, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#3, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,178]DEBUG  8437[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=75, roleName=Administrator}
[2017-10-14 22:36:57,178]DEBUG  8437[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#3, id=9, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#3, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#3, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,178]DEBUG  8437[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=3, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#75, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,178]DEBUG  8437[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=3, orderStatusName=Pending}
[2017-10-14 22:36:57,178]DEBUG  8437[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,178]DEBUG  8437[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 22:36:57,179]DEBUG  8438[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,179]DEBUG  8438[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,179]DEBUG  8438[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,179]DEBUG  8438[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2017-10-14 22:36:57,179]DEBUG  8438[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,180]DEBUG  8439[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,180]DEBUG  8439[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#3, id=10, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#3, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#3, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,180]DEBUG  8439[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=75, roleName=Administrator}
[2017-10-14 22:36:57,180]DEBUG  8439[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#3, id=9, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#3, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#3, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,180]DEBUG  8439[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=3, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#75, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,180]DEBUG  8439[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=3, orderStatusName=Pending}
[2017-10-14 22:36:57,180]DEBUG  8439[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,180]DEBUG  8439[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 22:36:57,181]DEBUG  8440[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,181]DEBUG  8440[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,181]DEBUG  8440[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,181]DEBUG  8440[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2017-10-14 22:36:57,182]DEBUG  8441[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,182]DEBUG  8441[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,182]DEBUG  8441[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#3, id=10, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#3, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#3, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,182]DEBUG  8441[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=75, roleName=Administrator}
[2017-10-14 22:36:57,182]DEBUG  8441[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#3, id=9, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#3, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#3, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,182]DEBUG  8441[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=3, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#75, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,182]DEBUG  8441[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=3, orderStatusName=Pending}
[2017-10-14 22:36:57,183]DEBUG  8442[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,183]DEBUG  8442[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 22:36:57,183]DEBUG  8442[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,183]DEBUG  8442[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,183]DEBUG  8442[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,184]DEBUG  8443[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2017-10-14 22:36:57,184]DEBUG  8443[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,184]DEBUG  8443[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,184]DEBUG  8443[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#3, id=10, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#3, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#3, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,184]DEBUG  8443[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=75, roleName=Administrator}
[2017-10-14 22:36:57,184]DEBUG  8443[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#3, id=9, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#3, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#3, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,184]DEBUG  8443[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=3, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#75, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,185]DEBUG  8444[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=3, orderStatusName=Pending}
[2017-10-14 22:36:57,185]DEBUG  8444[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,185]DEBUG  8444[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 22:36:57,185]DEBUG  8444[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,185]DEBUG  8444[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,186]DEBUG  8445[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,186]DEBUG  8445[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2017-10-14 22:36:57,186]DEBUG  8445[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,186]DEBUG  8445[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,186]DEBUG  8445[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#3, id=10, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#3, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#3, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,186]DEBUG  8445[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=75, roleName=Administrator}
[2017-10-14 22:36:57,187]DEBUG  8446[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#3, id=9, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#3, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#3, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,187]DEBUG  8446[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=3, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#75, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,187]DEBUG  8446[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=3, orderStatusName=Pending}
[2017-10-14 22:36:57,187]DEBUG  8446[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,187]DEBUG  8446[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 22:36:57,187]DEBUG  8446[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,188]DEBUG  8447[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,188]DEBUG  8447[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,188]DEBUG  8447[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2017-10-14 22:36:57,188]DEBUG  8447[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,188]DEBUG  8447[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,188]DEBUG  8447[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#3, id=10, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#3, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#3, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,189]DEBUG  8448[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=75, roleName=Administrator}
[2017-10-14 22:36:57,189]DEBUG  8448[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#3, id=9, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#3, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#3, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,189]DEBUG  8448[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=3, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#75, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,189]DEBUG  8448[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=3, orderStatusName=Pending}
[2017-10-14 22:36:57,189]DEBUG  8448[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,189]DEBUG  8448[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 22:36:57,190]DEBUG  8449[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,190]DEBUG  8449[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,190]DEBUG  8449[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,190]DEBUG  8449[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2017-10-14 22:36:57,190]DEBUG  8449[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,190]DEBUG  8449[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,191]DEBUG  8450[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#3, id=10, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#3, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#3, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,191]DEBUG  8450[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=75, roleName=Administrator}
[2017-10-14 22:36:57,191]DEBUG  8450[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#3, id=9, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#3, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#3, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,191]DEBUG  8450[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=3, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#75, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,191]DEBUG  8450[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=3, orderStatusName=Pending}
[2017-10-14 22:36:57,191]DEBUG  8450[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,191]DEBUG  8450[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 22:36:57,192]DEBUG  8451[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,192]DEBUG  8451[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@4481290d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@7f71ac12, testMethod = testDelete@OrderDaoTest, testException = [null]]]
[2017-10-14 22:36:57,192]DEBUG  8451[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 22:36:57,192]DEBUG  8451[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@1384b2f9]
[2017-10-14 22:36:57,192]DEBUG  8451[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 22:36:57,246]DEBUG  8505[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 22:36:57,246]DEBUG  8505[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:57,246]DEBUG  8505[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@1384b2f9] after transaction
[2017-10-14 22:36:57,247]DEBUG  8506[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 22:36:57,247]DEBUG  8506[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 22:36:57,247]DEBUG  8506[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:57,247] INFO  8506[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@4481290d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@7f71ac12, testMethod = testDelete@OrderDaoTest, testException = [null]]]
[2017-10-14 22:36:57,249]DEBUG  8508[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@4481290d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@7f71ac12, testMethod = testDelete@OrderDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 22:36:57,249]DEBUG  8508[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2017-10-14 22:36:57,250]DEBUG  8509[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2017-10-14 22:36:57,250]DEBUG  8509[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@4481290d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@301f8194, testMethod = [null], testException = [null]]].
[2017-10-14 22:36:57,250]DEBUG  8509[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 22:36:57,251]DEBUG  8510[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 22:36:57,251]DEBUG  8510[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 22:36:57,251]DEBUG  8510[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 22:36:57,251]DEBUG  8510[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 22:36:57,251]DEBUG  8510[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 22:36:57,252]DEBUG  8511[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 22:36:57,252]DEBUG  8511[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 22:36:57,252]DEBUG  8511[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 22:36:57,252]DEBUG  8511[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 22:36:57,252]DEBUG  8511[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 22:36:57,253]DEBUG  8512[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 22:36:57,253]DEBUG  8512[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 22:36:57,253]DEBUG  8512[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 22:36:57,253]DEBUG  8512[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 22:36:57,253]DEBUG  8512[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 22:36:57,254]DEBUG  8513[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 22:36:57,254]DEBUG  8513[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 22:36:57,254]DEBUG  8513[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 22:36:57,254]DEBUG  8513[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 22:36:57,254]DEBUG  8513[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 22:36:57,255]DEBUG  8514[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 22:36:57,255]DEBUG  8514[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@301f8194]
[2017-10-14 22:36:57,256]DEBUG  8515[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByTotalPriceEquals' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:57,256]DEBUG  8515[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@4481290d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@301f8194, testMethod = testFindByTotalPriceEquals@OrderDaoTest, testException = [null]]]
[2017-10-14 22:36:57,256]DEBUG  8515[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 22:36:57,258]DEBUG  8517[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByTotalPriceEquals]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:57,258]DEBUG  8517[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15080098172
[2017-10-14 22:36:57,258]DEBUG  8517[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@336dddb0] for Hibernate transaction
[2017-10-14 22:36:57,259]DEBUG  8518[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@336dddb0]
[2017-10-14 22:36:57,259]DEBUG  8518[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 22:36:57,259]DEBUG  8518[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 22:36:57,259]DEBUG  8518[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 22:36:57,259]DEBUG  8518[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@4481290d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@301f8194, testMethod = testFindByTotalPriceEquals@OrderDaoTest, testException = [null]]]
[2017-10-14 22:36:57,260] INFO  8519[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (4): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@598b619b]; rollback [true]
[2017-10-14 22:36:57,260]DEBUG  8519[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,260]DEBUG  8519[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 22:36:57,261]DEBUG  8520[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,261]DEBUG  8520[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,262]DEBUG  8521[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 22:36:57,262]DEBUG  8521[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,262]DEBUG  8521[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,263]DEBUG  8522[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 22:36:57,263]DEBUG  8522[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,264]DEBUG  8523[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,264]DEBUG  8523[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 22:36:57,264]DEBUG  8523[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,265]DEBUG  8524[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,265]DEBUG  8524[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 22:36:57,265]DEBUG  8524[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,266]DEBUG  8525[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,266]DEBUG  8525[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 22:36:57,266]DEBUG  8525[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,267]DEBUG  8526[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,267]DEBUG  8526[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 22:36:57,267]DEBUG  8526[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,268]DEBUG  8527[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,268]DEBUG  8527[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 22:36:57,269]DEBUG  8528[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,269]DEBUG  8528[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,269]DEBUG  8528[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 22:36:57,269]DEBUG  8528[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,269]DEBUG  8528[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:57,269]DEBUG  8528[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,270]DEBUG  8529[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName) values (?)
[2017-10-14 22:36:57,270]DEBUG  8529[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 4
[2017-10-14 22:36:57,270]DEBUG  8529[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,270]DEBUG  8529[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:57,271]DEBUG  8530[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,271]DEBUG  8530[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 22:36:57,271]DEBUG  8530[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 76
[2017-10-14 22:36:57,271]DEBUG  8530[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,271]DEBUG  8530[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:57,272]DEBUG  8531[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,272]DEBUG  8531[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Users (IsUserActive, Balance, CustomerTypeRef, Email, FirstName, LastName, Login, Password, RegionRef, RoleRef) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 22:36:57,272]DEBUG  8531[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 4
[2017-10-14 22:36:57,272]DEBUG  8531[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,272]DEBUG  8531[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:57,273]DEBUG  8532[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,273]DEBUG  8532[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 22:36:57,273]DEBUG  8532[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 11
[2017-10-14 22:36:57,273]DEBUG  8532[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,274]DEBUG  8533[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:57,274]DEBUG  8533[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,274]DEBUG  8533[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 22:36:57,274]DEBUG  8533[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 12
[2017-10-14 22:36:57,275]DEBUG  8534[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,275]DEBUG  8534[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:57,275]DEBUG  8534[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,275]DEBUG  8534[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 22:36:57,276]DEBUG  8535[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 13
[2017-10-14 22:36:57,276]DEBUG  8535[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,277]DEBUG  8536[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,277]DEBUG  8536[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,278]DEBUG  8537[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:57,278]DEBUG  8537[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,278]DEBUG  8537[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,278]DEBUG  8537[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#4, id=12, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#4, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#4, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,278]DEBUG  8537[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#4, id=11, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#4, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#4, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,278]DEBUG  8537[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=4, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#76, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,279]DEBUG  8538[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=76, roleName=Administrator}
[2017-10-14 22:36:57,279]DEBUG  8538[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#4, id=13, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#4, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#4, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,279]DEBUG  8538[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=4, orderStatusName=Pending}
[2017-10-14 22:36:57,279]DEBUG  8538[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,279]DEBUG  8538[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID5_6_, this_.Assigne as Assigne5_6_, this_.Customer as Customer5_6_, this_.DeliveryDate as Delivery2_5_6_, this_.IsGift as IsGift5_6_, this_.MaxDiscount as MaxDisco4_5_6_, this_.OrderDate as OrderDate5_6_, this_.OrderName as OrderName5_6_, this_.OrderNumber as OrderNum7_5_6_, this_.OrderStatusRef as OrderSt12_5_6_, this_.PreferableDeliveryDate as Preferab8_5_6_, this_.TotalPrice as TotalPrice5_6_, user2_.ID as ID3_0_, user2_.IsUserActive as IsUserAc2_3_0_, user2_.Balance as Balance3_0_, user2_.CustomerTypeRef as Customer9_3_0_, user2_.Email as Email3_0_, user2_.FirstName as FirstName3_0_, user2_.LastName as LastName3_0_, user2_.Login as Login3_0_, user2_.Password as Password3_0_, user2_.RegionRef as RegionRef3_0_, user2_.RoleRef as RoleRef3_0_, customerty3_.ID as ID2_1_, customerty3_.Discount as Discount2_1_, customerty3_.MaxRange as MaxRange2_1_, customerty3_.MinRange as MinRange2_1_, customerty3_.TypeName as TypeName2_1_, region4_.ID as ID1_2_, region4_.RegionName as RegionName1_2_, role5_.ID as ID0_3_, role5_.RoleName as RoleName0_3_, user6_.ID as ID3_4_, user6_.IsUserActive as IsUserAc2_3_4_, user6_.Balance as Balance3_4_, user6_.CustomerTypeRef as Customer9_3_4_, user6_.Email as Email3_4_, user6_.FirstName as FirstName3_4_, user6_.LastName as LastName3_4_, user6_.Login as Login3_4_, user6_.Password as Password3_4_, user6_.RegionRef as RegionRef3_4_, user6_.RoleRef as RoleRef3_4_, orderstatu7_.ID as ID4_5_, orderstatu7_.OrederStatusName as OrederSt2_4_5_ from Orders this_ left outer join Users user2_ on this_.Assigne=user2_.ID left outer join CustomerTypes customerty3_ on user2_.CustomerTypeRef=customerty3_.ID left outer join Regions region4_ on user2_.RegionRef=region4_.ID left outer join Roles role5_ on user2_.RoleRef=role5_.ID left outer join Users user6_ on this_.Customer=user6_.ID left outer join OrderStatuses orderstatu7_ on this_.OrderStatusRef=orderstatu7_.ID where this_.TotalPrice=?
[2017-10-14 22:36:57,280]DEBUG  8539[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:57,281]DEBUG  8540[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#4], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#76], EntityKey[com.softserveinc.edu.oms.domain.entities.User#4], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#4], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#11]
[2017-10-14 22:36:57,282]DEBUG  8541[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#4], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#76], EntityKey[com.softserveinc.edu.oms.domain.entities.User#4], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#4], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#12]
[2017-10-14 22:36:57,282]DEBUG  8541[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#4], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#76], EntityKey[com.softserveinc.edu.oms.domain.entities.User#4], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#4], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#13]
[2017-10-14 22:36:57,282]DEBUG  8541[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:57,282]DEBUG  8541[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,282]DEBUG  8541[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:57,282]DEBUG  8541[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,283]DEBUG  8542[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,283]DEBUG  8542[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:57,283]DEBUG  8542[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,283]DEBUG  8542[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,283]DEBUG  8542[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#4, id=12, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#4, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#4, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,283]DEBUG  8542[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#4, id=11, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#4, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#4, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,283]DEBUG  8542[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=4, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#76, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,284]DEBUG  8543[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=76, roleName=Administrator}
[2017-10-14 22:36:57,284]DEBUG  8543[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#4, id=13, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#4, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#4, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,284]DEBUG  8543[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=4, orderStatusName=Pending}
[2017-10-14 22:36:57,284]DEBUG  8543[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,284]DEBUG  8543[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 22:36:57,284]DEBUG  8543[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,285]DEBUG  8544[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,285]DEBUG  8544[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,285]DEBUG  8544[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:57,285]DEBUG  8544[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,285]DEBUG  8544[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,285]DEBUG  8544[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#4, id=12, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#4, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#4, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,285]DEBUG  8544[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#4, id=11, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#4, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#4, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,286]DEBUG  8545[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=4, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#76, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,286]DEBUG  8545[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=76, roleName=Administrator}
[2017-10-14 22:36:57,286]DEBUG  8545[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#4, id=13, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#4, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#4, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,286]DEBUG  8545[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=4, orderStatusName=Pending}
[2017-10-14 22:36:57,286]DEBUG  8545[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,286]DEBUG  8545[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 22:36:57,286]DEBUG  8545[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,286]DEBUG  8545[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,287]DEBUG  8546[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,287]DEBUG  8546[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:57,287]DEBUG  8546[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,287]DEBUG  8546[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,287]DEBUG  8546[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#4, id=12, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#4, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#4, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,287]DEBUG  8546[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#4, id=11, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#4, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#4, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,287]DEBUG  8546[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=4, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#76, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,288]DEBUG  8547[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=76, roleName=Administrator}
[2017-10-14 22:36:57,288]DEBUG  8547[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#4, id=13, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#4, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#4, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,288]DEBUG  8547[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=4, orderStatusName=Pending}
[2017-10-14 22:36:57,288]DEBUG  8547[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,288]DEBUG  8547[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 22:36:57,288]DEBUG  8547[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,288]DEBUG  8547[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,288]DEBUG  8547[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,289]DEBUG  8548[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:57,289]DEBUG  8548[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,289]DEBUG  8548[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,289]DEBUG  8548[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#4, id=12, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#4, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#4, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,289]DEBUG  8548[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#4, id=11, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#4, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#4, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,289]DEBUG  8548[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=4, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#76, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,289]DEBUG  8548[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=76, roleName=Administrator}
[2017-10-14 22:36:57,290]DEBUG  8549[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#4, id=13, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#4, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#4, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,290]DEBUG  8549[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=4, orderStatusName=Pending}
[2017-10-14 22:36:57,290]DEBUG  8549[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,290]DEBUG  8549[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 22:36:57,290]DEBUG  8549[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,290]DEBUG  8549[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,290]DEBUG  8549[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,291]DEBUG  8550[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:57,291]DEBUG  8550[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,291]DEBUG  8550[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,291]DEBUG  8550[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#4, id=12, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#4, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#4, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,291]DEBUG  8550[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#4, id=11, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#4, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#4, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,291]DEBUG  8550[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=4, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#76, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,291]DEBUG  8550[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=76, roleName=Administrator}
[2017-10-14 22:36:57,292]DEBUG  8551[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#4, id=13, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#4, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#4, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,292]DEBUG  8551[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=4, orderStatusName=Pending}
[2017-10-14 22:36:57,292]DEBUG  8551[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,292]DEBUG  8551[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 22:36:57,292]DEBUG  8551[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,292]DEBUG  8551[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,292]DEBUG  8551[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,293]DEBUG  8552[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:57,293]DEBUG  8552[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,293]DEBUG  8552[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,293]DEBUG  8552[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#4, id=12, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#4, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#4, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,293]DEBUG  8552[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#4, id=11, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#4, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#4, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,293]DEBUG  8552[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=4, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#76, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,293]DEBUG  8552[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=76, roleName=Administrator}
[2017-10-14 22:36:57,294]DEBUG  8553[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#4, id=13, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#4, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#4, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,294]DEBUG  8553[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=4, orderStatusName=Pending}
[2017-10-14 22:36:57,294]DEBUG  8553[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,294]DEBUG  8553[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 22:36:57,294]DEBUG  8553[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,294]DEBUG  8553[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,295]DEBUG  8554[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,295]DEBUG  8554[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:57,295]DEBUG  8554[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,295]DEBUG  8554[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,295]DEBUG  8554[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#4, id=12, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#4, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#4, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,295]DEBUG  8554[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#4, id=11, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#4, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#4, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,295]DEBUG  8554[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=4, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#76, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,295]DEBUG  8554[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=76, roleName=Administrator}
[2017-10-14 22:36:57,296]DEBUG  8555[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#4, id=13, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#4, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#4, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,296]DEBUG  8555[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=4, orderStatusName=Pending}
[2017-10-14 22:36:57,296]DEBUG  8555[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,296]DEBUG  8555[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 22:36:57,296]DEBUG  8555[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,296]DEBUG  8555[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,296]DEBUG  8555[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,297]DEBUG  8556[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:57,297]DEBUG  8556[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,297]DEBUG  8556[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,297]DEBUG  8556[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#4, id=12, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#4, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#4, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,297]DEBUG  8556[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#4, id=11, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#4, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#4, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,297]DEBUG  8556[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=4, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#76, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,297]DEBUG  8556[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=76, roleName=Administrator}
[2017-10-14 22:36:57,298]DEBUG  8557[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#4, id=13, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#4, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#4, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,298]DEBUG  8557[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=4, orderStatusName=Pending}
[2017-10-14 22:36:57,298]DEBUG  8557[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,298]DEBUG  8557[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 22:36:57,298]DEBUG  8557[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,298]DEBUG  8557[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,298]DEBUG  8557[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,299]DEBUG  8558[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:57,299]DEBUG  8558[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,299]DEBUG  8558[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,299]DEBUG  8558[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#4, id=12, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#4, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#4, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,299]DEBUG  8558[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#4, id=11, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#4, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#4, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,299]DEBUG  8558[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=4, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#76, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,299]DEBUG  8558[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=76, roleName=Administrator}
[2017-10-14 22:36:57,300]DEBUG  8559[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#4, id=13, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#4, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#4, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,300]DEBUG  8559[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=4, orderStatusName=Pending}
[2017-10-14 22:36:57,300]DEBUG  8559[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,300]DEBUG  8559[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 22:36:57,300]DEBUG  8559[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,300]DEBUG  8559[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@4481290d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@301f8194, testMethod = testFindByTotalPriceEquals@OrderDaoTest, testException = [null]]]
[2017-10-14 22:36:57,300]DEBUG  8559[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 22:36:57,300]DEBUG  8559[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@336dddb0]
[2017-10-14 22:36:57,300]DEBUG  8559[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 22:36:57,329]DEBUG  8588[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 22:36:57,329]DEBUG  8588[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:57,330]DEBUG  8589[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@336dddb0] after transaction
[2017-10-14 22:36:57,330]DEBUG  8589[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 22:36:57,330]DEBUG  8589[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 22:36:57,330]DEBUG  8589[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:57,331] INFO  8590[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@4481290d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@301f8194, testMethod = testFindByTotalPriceEquals@OrderDaoTest, testException = [null]]]
[2017-10-14 22:36:57,332]DEBUG  8591[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@4481290d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@301f8194, testMethod = testFindByTotalPriceEquals@OrderDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 22:36:57,333]DEBUG  8592[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2017-10-14 22:36:57,333]DEBUG  8592[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2017-10-14 22:36:57,333]DEBUG  8592[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@4481290d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@2693e03b, testMethod = [null], testException = [null]]].
[2017-10-14 22:36:57,334]DEBUG  8593[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 22:36:57,334]DEBUG  8593[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 22:36:57,334]DEBUG  8593[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 22:36:57,334]DEBUG  8593[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 22:36:57,335]DEBUG  8594[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 22:36:57,335]DEBUG  8594[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 22:36:57,335]DEBUG  8594[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 22:36:57,335]DEBUG  8594[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 22:36:57,335]DEBUG  8594[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 22:36:57,335]DEBUG  8594[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 22:36:57,336]DEBUG  8595[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 22:36:57,336]DEBUG  8595[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 22:36:57,336]DEBUG  8595[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 22:36:57,336]DEBUG  8595[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 22:36:57,336]DEBUG  8595[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 22:36:57,337]DEBUG  8596[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 22:36:57,337]DEBUG  8596[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 22:36:57,337]DEBUG  8596[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 22:36:57,337]DEBUG  8596[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 22:36:57,337]DEBUG  8596[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 22:36:57,338]DEBUG  8597[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 22:36:57,338]DEBUG  8597[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 22:36:57,338]DEBUG  8597[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@2693e03b]
[2017-10-14 22:36:57,339]DEBUG  8598[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByTotalPriceLess' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:57,339]DEBUG  8598[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@4481290d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@2693e03b, testMethod = testFindByTotalPriceLess@OrderDaoTest, testException = [null]]]
[2017-10-14 22:36:57,339]DEBUG  8598[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 22:36:57,341]DEBUG  8600[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByTotalPriceLess]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:57,341]DEBUG  8600[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15080098173
[2017-10-14 22:36:57,341]DEBUG  8600[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@2fbd4671] for Hibernate transaction
[2017-10-14 22:36:57,341]DEBUG  8600[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@2fbd4671]
[2017-10-14 22:36:57,342]DEBUG  8601[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 22:36:57,342]DEBUG  8601[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 22:36:57,342]DEBUG  8601[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 22:36:57,342]DEBUG  8601[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@4481290d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@2693e03b, testMethod = testFindByTotalPriceLess@OrderDaoTest, testException = [null]]]
[2017-10-14 22:36:57,342] INFO  8601[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (5): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@598b619b]; rollback [true]
[2017-10-14 22:36:57,343]DEBUG  8602[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,343]DEBUG  8602[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 22:36:57,344]DEBUG  8603[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,344]DEBUG  8603[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,344]DEBUG  8603[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 22:36:57,345]DEBUG  8604[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,345]DEBUG  8604[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,345]DEBUG  8604[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 22:36:57,346]DEBUG  8605[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,346]DEBUG  8605[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,348]DEBUG  8607[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 22:36:57,348]DEBUG  8607[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,349]DEBUG  8608[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,349]DEBUG  8608[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 22:36:57,349]DEBUG  8608[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,349]DEBUG  8608[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,349]DEBUG  8608[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 22:36:57,349]DEBUG  8608[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,350]DEBUG  8609[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,350]DEBUG  8609[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 22:36:57,350]DEBUG  8609[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,350]DEBUG  8609[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,350]DEBUG  8609[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 22:36:57,350]DEBUG  8609[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,350]DEBUG  8609[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,351]DEBUG  8610[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 22:36:57,351]DEBUG  8610[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,351]DEBUG  8610[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:57,351]DEBUG  8610[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,351]DEBUG  8610[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName) values (?)
[2017-10-14 22:36:57,352]DEBUG  8611[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 5
[2017-10-14 22:36:57,352]DEBUG  8611[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,352]DEBUG  8611[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:57,352]DEBUG  8611[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,352]DEBUG  8611[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 22:36:57,352]DEBUG  8611[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 77
[2017-10-14 22:36:57,353]DEBUG  8612[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,353]DEBUG  8612[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:57,353]DEBUG  8612[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,353]DEBUG  8612[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Users (IsUserActive, Balance, CustomerTypeRef, Email, FirstName, LastName, Login, Password, RegionRef, RoleRef) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 22:36:57,353]DEBUG  8612[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 5
[2017-10-14 22:36:57,354]DEBUG  8613[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,354]DEBUG  8613[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:57,354]DEBUG  8613[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,354]DEBUG  8613[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 22:36:57,355]DEBUG  8614[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 14
[2017-10-14 22:36:57,355]DEBUG  8614[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,355]DEBUG  8614[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:57,355]DEBUG  8614[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,355]DEBUG  8614[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 22:36:57,356]DEBUG  8615[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 15
[2017-10-14 22:36:57,356]DEBUG  8615[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,356]DEBUG  8615[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:57,356]DEBUG  8615[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,356]DEBUG  8615[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 22:36:57,357]DEBUG  8616[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 16
[2017-10-14 22:36:57,357]DEBUG  8616[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,358]DEBUG  8617[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,358]DEBUG  8617[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,359]DEBUG  8618[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:57,359]DEBUG  8618[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,359]DEBUG  8618[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,359]DEBUG  8618[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=5, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#77, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,359]DEBUG  8618[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#5, id=15, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#5, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#5, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,359]DEBUG  8618[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#5, id=16, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#5, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#5, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,359]DEBUG  8618[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=77, roleName=Administrator}
[2017-10-14 22:36:57,360]DEBUG  8619[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=5, orderStatusName=Pending}
[2017-10-14 22:36:57,360]DEBUG  8619[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#5, id=14, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#5, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#5, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,360]DEBUG  8619[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,360]DEBUG  8619[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID5_6_, this_.Assigne as Assigne5_6_, this_.Customer as Customer5_6_, this_.DeliveryDate as Delivery2_5_6_, this_.IsGift as IsGift5_6_, this_.MaxDiscount as MaxDisco4_5_6_, this_.OrderDate as OrderDate5_6_, this_.OrderName as OrderName5_6_, this_.OrderNumber as OrderNum7_5_6_, this_.OrderStatusRef as OrderSt12_5_6_, this_.PreferableDeliveryDate as Preferab8_5_6_, this_.TotalPrice as TotalPrice5_6_, user2_.ID as ID3_0_, user2_.IsUserActive as IsUserAc2_3_0_, user2_.Balance as Balance3_0_, user2_.CustomerTypeRef as Customer9_3_0_, user2_.Email as Email3_0_, user2_.FirstName as FirstName3_0_, user2_.LastName as LastName3_0_, user2_.Login as Login3_0_, user2_.Password as Password3_0_, user2_.RegionRef as RegionRef3_0_, user2_.RoleRef as RoleRef3_0_, customerty3_.ID as ID2_1_, customerty3_.Discount as Discount2_1_, customerty3_.MaxRange as MaxRange2_1_, customerty3_.MinRange as MinRange2_1_, customerty3_.TypeName as TypeName2_1_, region4_.ID as ID1_2_, region4_.RegionName as RegionName1_2_, role5_.ID as ID0_3_, role5_.RoleName as RoleName0_3_, user6_.ID as ID3_4_, user6_.IsUserActive as IsUserAc2_3_4_, user6_.Balance as Balance3_4_, user6_.CustomerTypeRef as Customer9_3_4_, user6_.Email as Email3_4_, user6_.FirstName as FirstName3_4_, user6_.LastName as LastName3_4_, user6_.Login as Login3_4_, user6_.Password as Password3_4_, user6_.RegionRef as RegionRef3_4_, user6_.RoleRef as RoleRef3_4_, orderstatu7_.ID as ID4_5_, orderstatu7_.OrederStatusName as OrederSt2_4_5_ from Orders this_ left outer join Users user2_ on this_.Assigne=user2_.ID left outer join CustomerTypes customerty3_ on user2_.CustomerTypeRef=customerty3_.ID left outer join Regions region4_ on user2_.RegionRef=region4_.ID left outer join Roles role5_ on user2_.RoleRef=role5_.ID left outer join Users user6_ on this_.Customer=user6_.ID left outer join OrderStatuses orderstatu7_ on this_.OrderStatusRef=orderstatu7_.ID where this_.TotalPrice<?
[2017-10-14 22:36:57,361]DEBUG  8620[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:57,362]DEBUG  8621[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#5], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#77], EntityKey[com.softserveinc.edu.oms.domain.entities.User#5], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#5], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#14]
[2017-10-14 22:36:57,362]DEBUG  8621[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#5], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#77], EntityKey[com.softserveinc.edu.oms.domain.entities.User#5], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#5], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#15]
[2017-10-14 22:36:57,363]DEBUG  8622[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#5], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#77], EntityKey[com.softserveinc.edu.oms.domain.entities.User#5], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#5], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#16]
[2017-10-14 22:36:57,363]DEBUG  8622[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:57,363]DEBUG  8622[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,363]DEBUG  8622[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:57,363]DEBUG  8622[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,363]DEBUG  8622[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,364]DEBUG  8623[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:57,364]DEBUG  8623[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,364]DEBUG  8623[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,364]DEBUG  8623[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=5, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#77, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,364]DEBUG  8623[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#5, id=15, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#5, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#5, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,364]DEBUG  8623[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#5, id=16, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#5, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#5, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,364]DEBUG  8623[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=77, roleName=Administrator}
[2017-10-14 22:36:57,364]DEBUG  8623[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=5, orderStatusName=Pending}
[2017-10-14 22:36:57,365]DEBUG  8624[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#5, id=14, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#5, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#5, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,365]DEBUG  8624[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,365]DEBUG  8624[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 22:36:57,365]DEBUG  8624[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,365]DEBUG  8624[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,366]DEBUG  8625[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,366]DEBUG  8625[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:57,366]DEBUG  8625[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,366]DEBUG  8625[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,366]DEBUG  8625[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=5, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#77, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,366]DEBUG  8625[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#5, id=15, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#5, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#5, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,366]DEBUG  8625[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#5, id=16, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#5, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#5, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,367]DEBUG  8626[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=77, roleName=Administrator}
[2017-10-14 22:36:57,367]DEBUG  8626[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=5, orderStatusName=Pending}
[2017-10-14 22:36:57,367]DEBUG  8626[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#5, id=14, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#5, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#5, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,367]DEBUG  8626[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,367]DEBUG  8626[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 22:36:57,367]DEBUG  8626[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,368]DEBUG  8627[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,368]DEBUG  8627[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,368]DEBUG  8627[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:57,368]DEBUG  8627[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,368]DEBUG  8627[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,368]DEBUG  8627[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=5, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#77, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,368]DEBUG  8627[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#5, id=15, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#5, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#5, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,369]DEBUG  8628[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#5, id=16, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#5, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#5, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,369]DEBUG  8628[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=77, roleName=Administrator}
[2017-10-14 22:36:57,369]DEBUG  8628[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=5, orderStatusName=Pending}
[2017-10-14 22:36:57,369]DEBUG  8628[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#5, id=14, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#5, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#5, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,369]DEBUG  8628[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,369]DEBUG  8628[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 22:36:57,369]DEBUG  8628[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,370]DEBUG  8629[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,370]DEBUG  8629[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,370]DEBUG  8629[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:57,370]DEBUG  8629[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,370]DEBUG  8629[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,370]DEBUG  8629[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=5, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#77, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,370]DEBUG  8629[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#5, id=15, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#5, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#5, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,371]DEBUG  8630[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#5, id=16, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#5, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#5, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,371]DEBUG  8630[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=77, roleName=Administrator}
[2017-10-14 22:36:57,371]DEBUG  8630[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=5, orderStatusName=Pending}
[2017-10-14 22:36:57,371]DEBUG  8630[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#5, id=14, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#5, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#5, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,371]DEBUG  8630[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,371]DEBUG  8630[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 22:36:57,371]DEBUG  8630[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,372]DEBUG  8631[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,372]DEBUG  8631[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,372]DEBUG  8631[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:57,372]DEBUG  8631[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,372]DEBUG  8631[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,372]DEBUG  8631[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=5, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#77, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,372]DEBUG  8631[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#5, id=15, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#5, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#5, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,373]DEBUG  8632[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#5, id=16, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#5, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#5, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,373]DEBUG  8632[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=77, roleName=Administrator}
[2017-10-14 22:36:57,373]DEBUG  8632[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=5, orderStatusName=Pending}
[2017-10-14 22:36:57,373]DEBUG  8632[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#5, id=14, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#5, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#5, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,373]DEBUG  8632[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,373]DEBUG  8632[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 22:36:57,373]DEBUG  8632[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,374]DEBUG  8633[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,374]DEBUG  8633[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,374]DEBUG  8633[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:57,374]DEBUG  8633[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,374]DEBUG  8633[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,374]DEBUG  8633[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=5, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#77, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,374]DEBUG  8633[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#5, id=15, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#5, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#5, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,375]DEBUG  8634[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#5, id=16, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#5, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#5, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,375]DEBUG  8634[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=77, roleName=Administrator}
[2017-10-14 22:36:57,375]DEBUG  8634[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=5, orderStatusName=Pending}
[2017-10-14 22:36:57,375]DEBUG  8634[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#5, id=14, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#5, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#5, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,375]DEBUG  8634[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,375]DEBUG  8634[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 22:36:57,375]DEBUG  8634[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,376]DEBUG  8635[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,376]DEBUG  8635[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,376]DEBUG  8635[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:57,376]DEBUG  8635[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,376]DEBUG  8635[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,376]DEBUG  8635[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=5, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#77, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,377]DEBUG  8636[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#5, id=15, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#5, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#5, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,377]DEBUG  8636[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#5, id=16, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#5, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#5, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,377]DEBUG  8636[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=77, roleName=Administrator}
[2017-10-14 22:36:57,377]DEBUG  8636[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=5, orderStatusName=Pending}
[2017-10-14 22:36:57,377]DEBUG  8636[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#5, id=14, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#5, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#5, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,377]DEBUG  8636[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,377]DEBUG  8636[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 22:36:57,377]DEBUG  8636[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,378]DEBUG  8637[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,378]DEBUG  8637[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,378]DEBUG  8637[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:57,378]DEBUG  8637[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,378]DEBUG  8637[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,378]DEBUG  8637[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=5, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#77, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,378]DEBUG  8637[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#5, id=15, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#5, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#5, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,379]DEBUG  8638[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#5, id=16, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#5, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#5, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,379]DEBUG  8638[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=77, roleName=Administrator}
[2017-10-14 22:36:57,379]DEBUG  8638[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=5, orderStatusName=Pending}
[2017-10-14 22:36:57,379]DEBUG  8638[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#5, id=14, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#5, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#5, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,379]DEBUG  8638[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,379]DEBUG  8638[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 22:36:57,379]DEBUG  8638[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,380]DEBUG  8639[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,380]DEBUG  8639[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,380]DEBUG  8639[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:57,380]DEBUG  8639[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,380]DEBUG  8639[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,380]DEBUG  8639[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=5, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#77, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,380]DEBUG  8639[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#5, id=15, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#5, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#5, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,381]DEBUG  8640[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#5, id=16, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#5, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#5, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,381]DEBUG  8640[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=77, roleName=Administrator}
[2017-10-14 22:36:57,381]DEBUG  8640[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=5, orderStatusName=Pending}
[2017-10-14 22:36:57,381]DEBUG  8640[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#5, id=14, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#5, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#5, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,381]DEBUG  8640[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,381]DEBUG  8640[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 22:36:57,382]DEBUG  8641[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,382]DEBUG  8641[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@4481290d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@2693e03b, testMethod = testFindByTotalPriceLess@OrderDaoTest, testException = [null]]]
[2017-10-14 22:36:57,382]DEBUG  8641[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 22:36:57,382]DEBUG  8641[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@2fbd4671]
[2017-10-14 22:36:57,382]DEBUG  8641[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 22:36:57,421]DEBUG  8680[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 22:36:57,421]DEBUG  8680[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:57,422]DEBUG  8681[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@2fbd4671] after transaction
[2017-10-14 22:36:57,422]DEBUG  8681[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 22:36:57,422]DEBUG  8681[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 22:36:57,422]DEBUG  8681[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:57,423] INFO  8682[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@4481290d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@2693e03b, testMethod = testFindByTotalPriceLess@OrderDaoTest, testException = [null]]]
[2017-10-14 22:36:57,424]DEBUG  8683[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@4481290d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@2693e03b, testMethod = testFindByTotalPriceLess@OrderDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 22:36:57,425]DEBUG  8684[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2017-10-14 22:36:57,425]DEBUG  8684[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2017-10-14 22:36:57,425]DEBUG  8684[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@4481290d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@331b7b16, testMethod = [null], testException = [null]]].
[2017-10-14 22:36:57,426]DEBUG  8685[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 22:36:57,426]DEBUG  8685[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 22:36:57,426]DEBUG  8685[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 22:36:57,426]DEBUG  8685[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 22:36:57,426]DEBUG  8685[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 22:36:57,427]DEBUG  8686[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 22:36:57,427]DEBUG  8686[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 22:36:57,427]DEBUG  8686[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 22:36:57,427]DEBUG  8686[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 22:36:57,427]DEBUG  8686[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 22:36:57,428]DEBUG  8687[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 22:36:57,428]DEBUG  8687[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 22:36:57,428]DEBUG  8687[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 22:36:57,428]DEBUG  8687[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 22:36:57,428]DEBUG  8687[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 22:36:57,429]DEBUG  8688[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 22:36:57,429]DEBUG  8688[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 22:36:57,429]DEBUG  8688[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 22:36:57,429]DEBUG  8688[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 22:36:57,429]DEBUG  8688[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 22:36:57,430]DEBUG  8689[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 22:36:57,430]DEBUG  8689[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 22:36:57,430]DEBUG  8689[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@331b7b16]
[2017-10-14 22:36:57,431]DEBUG  8690[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByTotalPriceMore' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:57,431]DEBUG  8690[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@4481290d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@331b7b16, testMethod = testFindByTotalPriceMore@OrderDaoTest, testException = [null]]]
[2017-10-14 22:36:57,431]DEBUG  8690[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 22:36:57,433]DEBUG  8692[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByTotalPriceMore]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:57,433]DEBUG  8692[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15080098174
[2017-10-14 22:36:57,433]DEBUG  8692[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@6075526a] for Hibernate transaction
[2017-10-14 22:36:57,433]DEBUG  8692[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@6075526a]
[2017-10-14 22:36:57,433]DEBUG  8692[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 22:36:57,434]DEBUG  8693[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 22:36:57,434]DEBUG  8693[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 22:36:57,434]DEBUG  8693[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@4481290d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@331b7b16, testMethod = testFindByTotalPriceMore@OrderDaoTest, testException = [null]]]
[2017-10-14 22:36:57,434] INFO  8693[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (6): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@598b619b]; rollback [true]
[2017-10-14 22:36:57,435]DEBUG  8694[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,435]DEBUG  8694[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 22:36:57,436]DEBUG  8695[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,436]DEBUG  8695[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,436]DEBUG  8695[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 22:36:57,437]DEBUG  8696[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,437]DEBUG  8696[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,437]DEBUG  8696[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 22:36:57,438]DEBUG  8697[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,438]DEBUG  8697[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,438]DEBUG  8697[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 22:36:57,439]DEBUG  8698[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,439]DEBUG  8698[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,439]DEBUG  8698[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 22:36:57,440]DEBUG  8699[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,440]DEBUG  8699[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,441]DEBUG  8700[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 22:36:57,441]DEBUG  8700[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,441]DEBUG  8700[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,442]DEBUG  8701[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 22:36:57,442]DEBUG  8701[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,442]DEBUG  8701[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,443]DEBUG  8702[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 22:36:57,443]DEBUG  8702[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,444]DEBUG  8703[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,444]DEBUG  8703[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 22:36:57,444]DEBUG  8703[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,445]DEBUG  8704[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:57,445]DEBUG  8704[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,445]DEBUG  8704[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName) values (?)
[2017-10-14 22:36:57,446]DEBUG  8705[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 6
[2017-10-14 22:36:57,446]DEBUG  8705[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,447]DEBUG  8706[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:57,447]DEBUG  8706[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,447]DEBUG  8706[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 22:36:57,448]DEBUG  8707[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 78
[2017-10-14 22:36:57,448]DEBUG  8707[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,449]DEBUG  8708[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:57,449]DEBUG  8708[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,449]DEBUG  8708[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Users (IsUserActive, Balance, CustomerTypeRef, Email, FirstName, LastName, Login, Password, RegionRef, RoleRef) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 22:36:57,449]DEBUG  8708[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 6
[2017-10-14 22:36:57,449]DEBUG  8708[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,450]DEBUG  8709[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:57,450]DEBUG  8709[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,450]DEBUG  8709[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 22:36:57,451]DEBUG  8710[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 17
[2017-10-14 22:36:57,451]DEBUG  8710[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,451]DEBUG  8710[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:57,451]DEBUG  8710[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,451]DEBUG  8710[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 22:36:57,452]DEBUG  8711[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 18
[2017-10-14 22:36:57,453]DEBUG  8712[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,453]DEBUG  8712[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:57,453]DEBUG  8712[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,453]DEBUG  8712[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 22:36:57,454]DEBUG  8713[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 19
[2017-10-14 22:36:57,454]DEBUG  8713[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,455]DEBUG  8714[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,455]DEBUG  8714[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,456]DEBUG  8715[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:57,456]DEBUG  8715[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,456]DEBUG  8715[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,456]DEBUG  8715[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#6, id=19, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#6, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#6, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,456]DEBUG  8715[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=6, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#78, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,456]DEBUG  8715[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#6, id=17, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#6, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#6, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,457]DEBUG  8716[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#6, id=18, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#6, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#6, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,457]DEBUG  8716[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=78, roleName=Administrator}
[2017-10-14 22:36:57,457]DEBUG  8716[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=6, orderStatusName=Pending}
[2017-10-14 22:36:57,457]DEBUG  8716[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,457]DEBUG  8716[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID5_6_, this_.Assigne as Assigne5_6_, this_.Customer as Customer5_6_, this_.DeliveryDate as Delivery2_5_6_, this_.IsGift as IsGift5_6_, this_.MaxDiscount as MaxDisco4_5_6_, this_.OrderDate as OrderDate5_6_, this_.OrderName as OrderName5_6_, this_.OrderNumber as OrderNum7_5_6_, this_.OrderStatusRef as OrderSt12_5_6_, this_.PreferableDeliveryDate as Preferab8_5_6_, this_.TotalPrice as TotalPrice5_6_, user2_.ID as ID3_0_, user2_.IsUserActive as IsUserAc2_3_0_, user2_.Balance as Balance3_0_, user2_.CustomerTypeRef as Customer9_3_0_, user2_.Email as Email3_0_, user2_.FirstName as FirstName3_0_, user2_.LastName as LastName3_0_, user2_.Login as Login3_0_, user2_.Password as Password3_0_, user2_.RegionRef as RegionRef3_0_, user2_.RoleRef as RoleRef3_0_, customerty3_.ID as ID2_1_, customerty3_.Discount as Discount2_1_, customerty3_.MaxRange as MaxRange2_1_, customerty3_.MinRange as MinRange2_1_, customerty3_.TypeName as TypeName2_1_, region4_.ID as ID1_2_, region4_.RegionName as RegionName1_2_, role5_.ID as ID0_3_, role5_.RoleName as RoleName0_3_, user6_.ID as ID3_4_, user6_.IsUserActive as IsUserAc2_3_4_, user6_.Balance as Balance3_4_, user6_.CustomerTypeRef as Customer9_3_4_, user6_.Email as Email3_4_, user6_.FirstName as FirstName3_4_, user6_.LastName as LastName3_4_, user6_.Login as Login3_4_, user6_.Password as Password3_4_, user6_.RegionRef as RegionRef3_4_, user6_.RoleRef as RoleRef3_4_, orderstatu7_.ID as ID4_5_, orderstatu7_.OrederStatusName as OrederSt2_4_5_ from Orders this_ left outer join Users user2_ on this_.Assigne=user2_.ID left outer join CustomerTypes customerty3_ on user2_.CustomerTypeRef=customerty3_.ID left outer join Regions region4_ on user2_.RegionRef=region4_.ID left outer join Roles role5_ on user2_.RoleRef=role5_.ID left outer join Users user6_ on this_.Customer=user6_.ID left outer join OrderStatuses orderstatu7_ on this_.OrderStatusRef=orderstatu7_.ID where this_.TotalPrice>?
[2017-10-14 22:36:57,458]DEBUG  8717[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:57,460]DEBUG  8719[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#6], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#78], EntityKey[com.softserveinc.edu.oms.domain.entities.User#6], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#6], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#17]
[2017-10-14 22:36:57,460]DEBUG  8719[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#6], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#78], EntityKey[com.softserveinc.edu.oms.domain.entities.User#6], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#6], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#18]
[2017-10-14 22:36:57,461]DEBUG  8720[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#6], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#78], EntityKey[com.softserveinc.edu.oms.domain.entities.User#6], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#6], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#19]
[2017-10-14 22:36:57,461]DEBUG  8720[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:57,461]DEBUG  8720[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,461]DEBUG  8720[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:57,462]DEBUG  8721[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,462]DEBUG  8721[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,463]DEBUG  8722[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:57,463]DEBUG  8722[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,463]DEBUG  8722[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,463]DEBUG  8722[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#6, id=19, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#6, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#6, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,464]DEBUG  8723[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=6, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#78, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,464]DEBUG  8723[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#6, id=17, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#6, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#6, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,464]DEBUG  8723[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#6, id=18, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#6, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#6, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,465]DEBUG  8724[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=78, roleName=Administrator}
[2017-10-14 22:36:57,465]DEBUG  8724[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=6, orderStatusName=Pending}
[2017-10-14 22:36:57,465]DEBUG  8724[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,465]DEBUG  8724[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 22:36:57,466]DEBUG  8725[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,466]DEBUG  8725[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,466]DEBUG  8725[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,467]DEBUG  8726[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:57,467]DEBUG  8726[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,467]DEBUG  8726[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,468]DEBUG  8727[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#6, id=19, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#6, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#6, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,468]DEBUG  8727[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=6, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#78, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,468]DEBUG  8727[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#6, id=17, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#6, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#6, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,469]DEBUG  8728[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#6, id=18, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#6, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#6, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,469]DEBUG  8728[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=78, roleName=Administrator}
[2017-10-14 22:36:57,469]DEBUG  8728[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=6, orderStatusName=Pending}
[2017-10-14 22:36:57,469]DEBUG  8728[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,469]DEBUG  8728[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 22:36:57,469]DEBUG  8728[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,469]DEBUG  8728[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,470]DEBUG  8729[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,470]DEBUG  8729[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:57,470]DEBUG  8729[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,470]DEBUG  8729[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,470]DEBUG  8729[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#6, id=19, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#6, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#6, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,470]DEBUG  8729[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=6, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#78, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,470]DEBUG  8729[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#6, id=17, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#6, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#6, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,471]DEBUG  8730[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#6, id=18, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#6, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#6, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,471]DEBUG  8730[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=78, roleName=Administrator}
[2017-10-14 22:36:57,471]DEBUG  8730[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=6, orderStatusName=Pending}
[2017-10-14 22:36:57,471]DEBUG  8730[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,471]DEBUG  8730[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 22:36:57,471]DEBUG  8730[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,471]DEBUG  8730[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,471]DEBUG  8730[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,472]DEBUG  8731[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:57,472]DEBUG  8731[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,472]DEBUG  8731[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,472]DEBUG  8731[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#6, id=19, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#6, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#6, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,472]DEBUG  8731[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=6, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#78, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,472]DEBUG  8731[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#6, id=17, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#6, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#6, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,472]DEBUG  8731[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#6, id=18, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#6, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#6, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,472]DEBUG  8731[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=78, roleName=Administrator}
[2017-10-14 22:36:57,473]DEBUG  8732[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=6, orderStatusName=Pending}
[2017-10-14 22:36:57,473]DEBUG  8732[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,473]DEBUG  8732[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 22:36:57,473]DEBUG  8732[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,473]DEBUG  8732[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,473]DEBUG  8732[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,474]DEBUG  8733[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:57,474]DEBUG  8733[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,474]DEBUG  8733[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,474]DEBUG  8733[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#6, id=19, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#6, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#6, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,474]DEBUG  8733[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=6, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#78, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,474]DEBUG  8733[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#6, id=17, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#6, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#6, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,474]DEBUG  8733[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#6, id=18, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#6, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#6, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,474]DEBUG  8733[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=78, roleName=Administrator}
[2017-10-14 22:36:57,474]DEBUG  8733[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=6, orderStatusName=Pending}
[2017-10-14 22:36:57,475]DEBUG  8734[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,475]DEBUG  8734[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 22:36:57,475]DEBUG  8734[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,475]DEBUG  8734[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,475]DEBUG  8734[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,475]DEBUG  8734[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:57,476]DEBUG  8735[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,476]DEBUG  8735[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,476]DEBUG  8735[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#6, id=19, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#6, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#6, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,476]DEBUG  8735[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=6, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#78, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,476]DEBUG  8735[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#6, id=17, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#6, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#6, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,476]DEBUG  8735[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#6, id=18, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#6, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#6, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,476]DEBUG  8735[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=78, roleName=Administrator}
[2017-10-14 22:36:57,476]DEBUG  8735[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=6, orderStatusName=Pending}
[2017-10-14 22:36:57,476]DEBUG  8735[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,477]DEBUG  8736[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 22:36:57,477]DEBUG  8736[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,477]DEBUG  8736[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,477]DEBUG  8736[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,477]DEBUG  8736[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:57,477]DEBUG  8736[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,477]DEBUG  8736[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,478]DEBUG  8737[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#6, id=19, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#6, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#6, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,478]DEBUG  8737[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=6, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#78, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,478]DEBUG  8737[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#6, id=17, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#6, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#6, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,478]DEBUG  8737[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#6, id=18, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#6, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#6, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,478]DEBUG  8737[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=78, roleName=Administrator}
[2017-10-14 22:36:57,478]DEBUG  8737[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=6, orderStatusName=Pending}
[2017-10-14 22:36:57,478]DEBUG  8737[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,478]DEBUG  8737[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 22:36:57,479]DEBUG  8738[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,479]DEBUG  8738[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,479]DEBUG  8738[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,479]DEBUG  8738[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:57,479]DEBUG  8738[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,479]DEBUG  8738[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,479]DEBUG  8738[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#6, id=19, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#6, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#6, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,480]DEBUG  8739[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=6, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#78, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,480]DEBUG  8739[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#6, id=17, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#6, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#6, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,480]DEBUG  8739[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#6, id=18, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#6, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#6, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,480]DEBUG  8739[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=78, roleName=Administrator}
[2017-10-14 22:36:57,480]DEBUG  8739[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=6, orderStatusName=Pending}
[2017-10-14 22:36:57,480]DEBUG  8739[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,480]DEBUG  8739[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 22:36:57,481]DEBUG  8740[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,481]DEBUG  8740[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,481]DEBUG  8740[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,481]DEBUG  8740[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:57,481]DEBUG  8740[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,481]DEBUG  8740[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,481]DEBUG  8740[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#6, id=19, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#6, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#6, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,482]DEBUG  8741[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=6, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#78, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,482]DEBUG  8741[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#6, id=17, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#6, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#6, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,482]DEBUG  8741[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#6, id=18, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#6, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#6, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,482]DEBUG  8741[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=78, roleName=Administrator}
[2017-10-14 22:36:57,482]DEBUG  8741[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=6, orderStatusName=Pending}
[2017-10-14 22:36:57,482]DEBUG  8741[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,482]DEBUG  8741[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 22:36:57,483]DEBUG  8742[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,483]DEBUG  8742[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@4481290d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@331b7b16, testMethod = testFindByTotalPriceMore@OrderDaoTest, testException = [null]]]
[2017-10-14 22:36:57,483]DEBUG  8742[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 22:36:57,483]DEBUG  8742[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@6075526a]
[2017-10-14 22:36:57,483]DEBUG  8742[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 22:36:57,513]DEBUG  8772[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 22:36:57,513]DEBUG  8772[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:57,514]DEBUG  8773[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@6075526a] after transaction
[2017-10-14 22:36:57,514]DEBUG  8773[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 22:36:57,514]DEBUG  8773[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 22:36:57,514]DEBUG  8773[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:57,514] INFO  8773[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@4481290d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@331b7b16, testMethod = testFindByTotalPriceMore@OrderDaoTest, testException = [null]]]
[2017-10-14 22:36:57,516]DEBUG  8775[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@4481290d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@331b7b16, testMethod = testFindByTotalPriceMore@OrderDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 22:36:57,516]DEBUG  8775[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2017-10-14 22:36:57,517]DEBUG  8776[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2017-10-14 22:36:57,517]DEBUG  8776[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@4481290d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@17938ac, testMethod = [null], testException = [null]]].
[2017-10-14 22:36:57,517]DEBUG  8776[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 22:36:57,518]DEBUG  8777[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 22:36:57,518]DEBUG  8777[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 22:36:57,518]DEBUG  8777[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 22:36:57,518]DEBUG  8777[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 22:36:57,518]DEBUG  8777[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 22:36:57,519]DEBUG  8778[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 22:36:57,519]DEBUG  8778[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 22:36:57,519]DEBUG  8778[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 22:36:57,519]DEBUG  8778[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 22:36:57,520]DEBUG  8779[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 22:36:57,520]DEBUG  8779[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 22:36:57,520]DEBUG  8779[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 22:36:57,520]DEBUG  8779[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 22:36:57,520]DEBUG  8779[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 22:36:57,521]DEBUG  8780[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 22:36:57,521]DEBUG  8780[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 22:36:57,521]DEBUG  8780[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 22:36:57,521]DEBUG  8780[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 22:36:57,521]DEBUG  8780[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 22:36:57,522]DEBUG  8781[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 22:36:57,522]DEBUG  8781[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 22:36:57,522]DEBUG  8781[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@17938ac]
[2017-10-14 22:36:57,523]DEBUG  8782[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByDeliveryDateEquals' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:57,523]DEBUG  8782[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@4481290d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@17938ac, testMethod = testFindByDeliveryDateEquals@OrderDaoTest, testException = [null]]]
[2017-10-14 22:36:57,523]DEBUG  8782[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 22:36:57,525]DEBUG  8784[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByDeliveryDateEquals]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:57,525]DEBUG  8784[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15080098175
[2017-10-14 22:36:57,525]DEBUG  8784[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@1e497345] for Hibernate transaction
[2017-10-14 22:36:57,525]DEBUG  8784[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@1e497345]
[2017-10-14 22:36:57,526]DEBUG  8785[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 22:36:57,526]DEBUG  8785[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 22:36:57,526]DEBUG  8785[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 22:36:57,526]DEBUG  8785[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@4481290d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@17938ac, testMethod = testFindByDeliveryDateEquals@OrderDaoTest, testException = [null]]]
[2017-10-14 22:36:57,526] INFO  8785[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (7): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@598b619b]; rollback [true]
[2017-10-14 22:36:57,527]DEBUG  8786[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,527]DEBUG  8786[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 22:36:57,528]DEBUG  8787[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,529]DEBUG  8788[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,529]DEBUG  8788[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 22:36:57,529]DEBUG  8788[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,529]DEBUG  8788[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,529]DEBUG  8788[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 22:36:57,530]DEBUG  8789[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,530]DEBUG  8789[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,530]DEBUG  8789[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 22:36:57,530]DEBUG  8789[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,530]DEBUG  8789[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,530]DEBUG  8789[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 22:36:57,531]DEBUG  8790[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,531]DEBUG  8790[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,531]DEBUG  8790[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 22:36:57,531]DEBUG  8790[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,531]DEBUG  8790[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,531]DEBUG  8790[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 22:36:57,532]DEBUG  8791[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,532]DEBUG  8791[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,532]DEBUG  8791[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 22:36:57,532]DEBUG  8791[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,532]DEBUG  8791[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,532]DEBUG  8791[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 22:36:57,533]DEBUG  8792[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,533]DEBUG  8792[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:57,533]DEBUG  8792[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,533]DEBUG  8792[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName) values (?)
[2017-10-14 22:36:57,533]DEBUG  8792[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 7
[2017-10-14 22:36:57,534]DEBUG  8793[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,534]DEBUG  8793[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:57,534]DEBUG  8793[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,534]DEBUG  8793[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 22:36:57,534]DEBUG  8793[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 79
[2017-10-14 22:36:57,534]DEBUG  8793[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,535]DEBUG  8794[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:57,535]DEBUG  8794[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,535]DEBUG  8794[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Users (IsUserActive, Balance, CustomerTypeRef, Email, FirstName, LastName, Login, Password, RegionRef, RoleRef) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 22:36:57,535]DEBUG  8794[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 7
[2017-10-14 22:36:57,536]DEBUG  8795[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,536]DEBUG  8795[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:57,536]DEBUG  8795[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,536]DEBUG  8795[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 22:36:57,537]DEBUG  8796[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 20
[2017-10-14 22:36:57,537]DEBUG  8796[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,537]DEBUG  8796[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:57,537]DEBUG  8796[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,537]DEBUG  8796[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 22:36:57,538]DEBUG  8797[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 21
[2017-10-14 22:36:57,538]DEBUG  8797[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,538]DEBUG  8797[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:57,538]DEBUG  8797[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,538]DEBUG  8797[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 22:36:57,539]DEBUG  8798[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 22
[2017-10-14 22:36:57,539]DEBUG  8798[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,540]DEBUG  8799[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,540]DEBUG  8799[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,540]DEBUG  8799[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:57,540]DEBUG  8799[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,541]DEBUG  8800[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,541]DEBUG  8800[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#7, id=20, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#7, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#7, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,541]DEBUG  8800[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=7, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#79, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,541]DEBUG  8800[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=7, orderStatusName=Pending}
[2017-10-14 22:36:57,541]DEBUG  8800[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#7, id=21, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#7, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#7, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,541]DEBUG  8800[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#7, id=22, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#7, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#7, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,541]DEBUG  8800[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=79, roleName=Administrator}
[2017-10-14 22:36:57,542]DEBUG  8801[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,542]DEBUG  8801[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID5_6_, this_.Assigne as Assigne5_6_, this_.Customer as Customer5_6_, this_.DeliveryDate as Delivery2_5_6_, this_.IsGift as IsGift5_6_, this_.MaxDiscount as MaxDisco4_5_6_, this_.OrderDate as OrderDate5_6_, this_.OrderName as OrderName5_6_, this_.OrderNumber as OrderNum7_5_6_, this_.OrderStatusRef as OrderSt12_5_6_, this_.PreferableDeliveryDate as Preferab8_5_6_, this_.TotalPrice as TotalPrice5_6_, user2_.ID as ID3_0_, user2_.IsUserActive as IsUserAc2_3_0_, user2_.Balance as Balance3_0_, user2_.CustomerTypeRef as Customer9_3_0_, user2_.Email as Email3_0_, user2_.FirstName as FirstName3_0_, user2_.LastName as LastName3_0_, user2_.Login as Login3_0_, user2_.Password as Password3_0_, user2_.RegionRef as RegionRef3_0_, user2_.RoleRef as RoleRef3_0_, customerty3_.ID as ID2_1_, customerty3_.Discount as Discount2_1_, customerty3_.MaxRange as MaxRange2_1_, customerty3_.MinRange as MinRange2_1_, customerty3_.TypeName as TypeName2_1_, region4_.ID as ID1_2_, region4_.RegionName as RegionName1_2_, role5_.ID as ID0_3_, role5_.RoleName as RoleName0_3_, user6_.ID as ID3_4_, user6_.IsUserActive as IsUserAc2_3_4_, user6_.Balance as Balance3_4_, user6_.CustomerTypeRef as Customer9_3_4_, user6_.Email as Email3_4_, user6_.FirstName as FirstName3_4_, user6_.LastName as LastName3_4_, user6_.Login as Login3_4_, user6_.Password as Password3_4_, user6_.RegionRef as RegionRef3_4_, user6_.RoleRef as RoleRef3_4_, orderstatu7_.ID as ID4_5_, orderstatu7_.OrederStatusName as OrederSt2_4_5_ from Orders this_ left outer join Users user2_ on this_.Assigne=user2_.ID left outer join CustomerTypes customerty3_ on user2_.CustomerTypeRef=customerty3_.ID left outer join Regions region4_ on user2_.RegionRef=region4_.ID left outer join Roles role5_ on user2_.RoleRef=role5_.ID left outer join Users user6_ on this_.Customer=user6_.ID left outer join OrderStatuses orderstatu7_ on this_.OrderStatusRef=orderstatu7_.ID where this_.DeliveryDate=?
[2017-10-14 22:36:57,543]DEBUG  8802[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:57,544]DEBUG  8803[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#7], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#79], EntityKey[com.softserveinc.edu.oms.domain.entities.User#7], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#7], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#20]
[2017-10-14 22:36:57,544]DEBUG  8803[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#7], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#79], EntityKey[com.softserveinc.edu.oms.domain.entities.User#7], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#7], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#21]
[2017-10-14 22:36:57,544]DEBUG  8803[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#7], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#79], EntityKey[com.softserveinc.edu.oms.domain.entities.User#7], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#7], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#22]
[2017-10-14 22:36:57,544]DEBUG  8803[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:57,544]DEBUG  8803[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,544]DEBUG  8803[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:57,544]DEBUG  8803[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,545]DEBUG  8804[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,545]DEBUG  8804[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:57,545]DEBUG  8804[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,545]DEBUG  8804[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,545]DEBUG  8804[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#7, id=20, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#7, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#7, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,545]DEBUG  8804[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=7, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#79, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,545]DEBUG  8804[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=7, orderStatusName=Pending}
[2017-10-14 22:36:57,546]DEBUG  8805[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#7, id=21, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#7, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#7, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,546]DEBUG  8805[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#7, id=22, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#7, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#7, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,546]DEBUG  8805[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=79, roleName=Administrator}
[2017-10-14 22:36:57,546]DEBUG  8805[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,546]DEBUG  8805[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 22:36:57,546]DEBUG  8805[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,546]DEBUG  8805[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,547]DEBUG  8806[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,547]DEBUG  8806[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:57,547]DEBUG  8806[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,547]DEBUG  8806[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,547]DEBUG  8806[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#7, id=20, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#7, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#7, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,547]DEBUG  8806[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=7, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#79, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,547]DEBUG  8806[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=7, orderStatusName=Pending}
[2017-10-14 22:36:57,547]DEBUG  8806[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#7, id=21, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#7, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#7, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,548]DEBUG  8807[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#7, id=22, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#7, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#7, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,548]DEBUG  8807[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=79, roleName=Administrator}
[2017-10-14 22:36:57,548]DEBUG  8807[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,548]DEBUG  8807[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 22:36:57,548]DEBUG  8807[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,548]DEBUG  8807[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,548]DEBUG  8807[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,549]DEBUG  8808[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:57,549]DEBUG  8808[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,549]DEBUG  8808[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,549]DEBUG  8808[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#7, id=20, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#7, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#7, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,549]DEBUG  8808[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=7, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#79, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,549]DEBUG  8808[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=7, orderStatusName=Pending}
[2017-10-14 22:36:57,549]DEBUG  8808[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#7, id=21, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#7, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#7, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,550]DEBUG  8809[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#7, id=22, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#7, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#7, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,550]DEBUG  8809[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=79, roleName=Administrator}
[2017-10-14 22:36:57,550]DEBUG  8809[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,550]DEBUG  8809[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 22:36:57,550]DEBUG  8809[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,550]DEBUG  8809[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,550]DEBUG  8809[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,551]DEBUG  8810[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:57,551]DEBUG  8810[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,551]DEBUG  8810[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,551]DEBUG  8810[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#7, id=20, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#7, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#7, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,551]DEBUG  8810[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=7, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#79, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,551]DEBUG  8810[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=7, orderStatusName=Pending}
[2017-10-14 22:36:57,551]DEBUG  8810[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#7, id=21, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#7, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#7, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,552]DEBUG  8811[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#7, id=22, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#7, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#7, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,552]DEBUG  8811[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=79, roleName=Administrator}
[2017-10-14 22:36:57,552]DEBUG  8811[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,552]DEBUG  8811[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 22:36:57,552]DEBUG  8811[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,552]DEBUG  8811[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,553]DEBUG  8812[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,553]DEBUG  8812[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:57,553]DEBUG  8812[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,553]DEBUG  8812[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,553]DEBUG  8812[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#7, id=20, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#7, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#7, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,553]DEBUG  8812[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=7, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#79, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,553]DEBUG  8812[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=7, orderStatusName=Pending}
[2017-10-14 22:36:57,554]DEBUG  8813[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#7, id=21, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#7, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#7, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,554]DEBUG  8813[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#7, id=22, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#7, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#7, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,554]DEBUG  8813[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=79, roleName=Administrator}
[2017-10-14 22:36:57,554]DEBUG  8813[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,554]DEBUG  8813[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 22:36:57,554]DEBUG  8813[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,555]DEBUG  8814[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,555]DEBUG  8814[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,555]DEBUG  8814[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:57,555]DEBUG  8814[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,555]DEBUG  8814[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,555]DEBUG  8814[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#7, id=20, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#7, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#7, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,555]DEBUG  8814[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=7, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#79, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,555]DEBUG  8814[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=7, orderStatusName=Pending}
[2017-10-14 22:36:57,556]DEBUG  8815[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#7, id=21, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#7, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#7, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,556]DEBUG  8815[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#7, id=22, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#7, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#7, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,556]DEBUG  8815[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=79, roleName=Administrator}
[2017-10-14 22:36:57,556]DEBUG  8815[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,556]DEBUG  8815[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 22:36:57,556]DEBUG  8815[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,556]DEBUG  8815[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,557]DEBUG  8816[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,557]DEBUG  8816[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:57,557]DEBUG  8816[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,557]DEBUG  8816[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,557]DEBUG  8816[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#7, id=20, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#7, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#7, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,557]DEBUG  8816[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=7, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#79, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,557]DEBUG  8816[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=7, orderStatusName=Pending}
[2017-10-14 22:36:57,557]DEBUG  8816[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#7, id=21, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#7, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#7, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,558]DEBUG  8817[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#7, id=22, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#7, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#7, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,558]DEBUG  8817[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=79, roleName=Administrator}
[2017-10-14 22:36:57,558]DEBUG  8817[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,558]DEBUG  8817[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 22:36:57,558]DEBUG  8817[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,558]DEBUG  8817[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,558]DEBUG  8817[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,559]DEBUG  8818[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:57,559]DEBUG  8818[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,559]DEBUG  8818[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,559]DEBUG  8818[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#7, id=20, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#7, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#7, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,559]DEBUG  8818[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=7, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#79, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,559]DEBUG  8818[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=7, orderStatusName=Pending}
[2017-10-14 22:36:57,559]DEBUG  8818[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#7, id=21, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#7, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#7, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,560]DEBUG  8819[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#7, id=22, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#7, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#7, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,560]DEBUG  8819[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=79, roleName=Administrator}
[2017-10-14 22:36:57,560]DEBUG  8819[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,560]DEBUG  8819[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 22:36:57,560]DEBUG  8819[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,560]DEBUG  8819[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,560]DEBUG  8819[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,561]DEBUG  8820[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:57,561]DEBUG  8820[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,561]DEBUG  8820[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,561]DEBUG  8820[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#7, id=20, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#7, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#7, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,561]DEBUG  8820[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=7, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#79, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,561]DEBUG  8820[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=7, orderStatusName=Pending}
[2017-10-14 22:36:57,561]DEBUG  8820[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#7, id=21, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#7, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#7, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,561]DEBUG  8820[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#7, id=22, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#7, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#7, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,561]DEBUG  8820[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=79, roleName=Administrator}
[2017-10-14 22:36:57,562]DEBUG  8821[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,562]DEBUG  8821[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 22:36:57,562]DEBUG  8821[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,562]DEBUG  8821[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@4481290d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@17938ac, testMethod = testFindByDeliveryDateEquals@OrderDaoTest, testException = [null]]]
[2017-10-14 22:36:57,562]DEBUG  8821[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 22:36:57,562]DEBUG  8821[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@1e497345]
[2017-10-14 22:36:57,562]DEBUG  8821[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 22:36:57,596]DEBUG  8855[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 22:36:57,596]DEBUG  8855[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:57,597]DEBUG  8856[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@1e497345] after transaction
[2017-10-14 22:36:57,597]DEBUG  8856[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 22:36:57,597]DEBUG  8856[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 22:36:57,597]DEBUG  8856[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:57,598] INFO  8857[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@4481290d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@17938ac, testMethod = testFindByDeliveryDateEquals@OrderDaoTest, testException = [null]]]
[2017-10-14 22:36:57,599]DEBUG  8858[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@4481290d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@17938ac, testMethod = testFindByDeliveryDateEquals@OrderDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 22:36:57,600]DEBUG  8859[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2017-10-14 22:36:57,600]DEBUG  8859[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2017-10-14 22:36:57,600]DEBUG  8859[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@4481290d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@11bde071, testMethod = [null], testException = [null]]].
[2017-10-14 22:36:57,600]DEBUG  8859[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 22:36:57,601]DEBUG  8860[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 22:36:57,601]DEBUG  8860[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 22:36:57,601]DEBUG  8860[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 22:36:57,601]DEBUG  8860[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 22:36:57,601]DEBUG  8860[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 22:36:57,602]DEBUG  8861[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 22:36:57,602]DEBUG  8861[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 22:36:57,602]DEBUG  8861[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 22:36:57,602]DEBUG  8861[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 22:36:57,602]DEBUG  8861[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 22:36:57,603]DEBUG  8862[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 22:36:57,603]DEBUG  8862[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 22:36:57,603]DEBUG  8862[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 22:36:57,603]DEBUG  8862[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 22:36:57,603]DEBUG  8862[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 22:36:57,604]DEBUG  8863[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 22:36:57,604]DEBUG  8863[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 22:36:57,604]DEBUG  8863[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 22:36:57,604]DEBUG  8863[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 22:36:57,604]DEBUG  8863[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 22:36:57,605]DEBUG  8864[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 22:36:57,605]DEBUG  8864[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@11bde071]
[2017-10-14 22:36:57,606]DEBUG  8865[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByDeliveryDateMore' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:57,606]DEBUG  8865[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@4481290d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@11bde071, testMethod = testFindByDeliveryDateMore@OrderDaoTest, testException = [null]]]
[2017-10-14 22:36:57,607]DEBUG  8866[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 22:36:57,608]DEBUG  8867[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByDeliveryDateMore]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:57,608]DEBUG  8867[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15080098176
[2017-10-14 22:36:57,608]DEBUG  8867[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@764dc63d] for Hibernate transaction
[2017-10-14 22:36:57,609]DEBUG  8868[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@764dc63d]
[2017-10-14 22:36:57,609]DEBUG  8868[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 22:36:57,609]DEBUG  8868[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 22:36:57,609]DEBUG  8868[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 22:36:57,609]DEBUG  8868[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@4481290d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@11bde071, testMethod = testFindByDeliveryDateMore@OrderDaoTest, testException = [null]]]
[2017-10-14 22:36:57,609] INFO  8868[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (8): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@598b619b]; rollback [true]
[2017-10-14 22:36:57,609]DEBUG  8868[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,609]DEBUG  8868[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 22:36:57,610]DEBUG  8869[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,610]DEBUG  8869[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,610]DEBUG  8869[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 22:36:57,610]DEBUG  8869[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,610]DEBUG  8869[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,611]DEBUG  8870[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 22:36:57,611]DEBUG  8870[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,611]DEBUG  8870[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,611]DEBUG  8870[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 22:36:57,611]DEBUG  8870[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,611]DEBUG  8870[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,612]DEBUG  8871[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 22:36:57,612]DEBUG  8871[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,612]DEBUG  8871[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,612]DEBUG  8871[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 22:36:57,612]DEBUG  8871[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,612]DEBUG  8871[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,613]DEBUG  8872[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 22:36:57,613]DEBUG  8872[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,613]DEBUG  8872[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,613]DEBUG  8872[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 22:36:57,613]DEBUG  8872[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,613]DEBUG  8872[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,614]DEBUG  8873[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 22:36:57,614]DEBUG  8873[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,614]DEBUG  8873[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:57,614]DEBUG  8873[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,614]DEBUG  8873[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName) values (?)
[2017-10-14 22:36:57,615]DEBUG  8874[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 8
[2017-10-14 22:36:57,615]DEBUG  8874[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,615]DEBUG  8874[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:57,615]DEBUG  8874[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,615]DEBUG  8874[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 22:36:57,616]DEBUG  8875[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 80
[2017-10-14 22:36:57,616]DEBUG  8875[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,616]DEBUG  8875[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:57,616]DEBUG  8875[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,616]DEBUG  8875[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Users (IsUserActive, Balance, CustomerTypeRef, Email, FirstName, LastName, Login, Password, RegionRef, RoleRef) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 22:36:57,617]DEBUG  8876[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 8
[2017-10-14 22:36:57,617]DEBUG  8876[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,617]DEBUG  8876[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:57,617]DEBUG  8876[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,617]DEBUG  8876[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 22:36:57,618]DEBUG  8877[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 23
[2017-10-14 22:36:57,618]DEBUG  8877[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,618]DEBUG  8877[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:57,618]DEBUG  8877[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,618]DEBUG  8877[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 22:36:57,619]DEBUG  8878[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 24
[2017-10-14 22:36:57,619]DEBUG  8878[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,619]DEBUG  8878[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:57,619]DEBUG  8878[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,620]DEBUG  8879[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 22:36:57,620]DEBUG  8879[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 25
[2017-10-14 22:36:57,620]DEBUG  8879[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,621]DEBUG  8880[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,621]DEBUG  8880[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,622]DEBUG  8881[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:57,622]DEBUG  8881[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,622]DEBUG  8881[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,622]DEBUG  8881[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#8, id=25, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#8, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#8, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,622]DEBUG  8881[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=8, orderStatusName=Pending}
[2017-10-14 22:36:57,622]DEBUG  8881[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#8, id=23, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#8, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#8, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,622]DEBUG  8881[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#8, id=24, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#8, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#8, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,622]DEBUG  8881[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=8, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#80, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,623]DEBUG  8882[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=80, roleName=Administrator}
[2017-10-14 22:36:57,623]DEBUG  8882[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,623]DEBUG  8882[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID5_6_, this_.Assigne as Assigne5_6_, this_.Customer as Customer5_6_, this_.DeliveryDate as Delivery2_5_6_, this_.IsGift as IsGift5_6_, this_.MaxDiscount as MaxDisco4_5_6_, this_.OrderDate as OrderDate5_6_, this_.OrderName as OrderName5_6_, this_.OrderNumber as OrderNum7_5_6_, this_.OrderStatusRef as OrderSt12_5_6_, this_.PreferableDeliveryDate as Preferab8_5_6_, this_.TotalPrice as TotalPrice5_6_, user2_.ID as ID3_0_, user2_.IsUserActive as IsUserAc2_3_0_, user2_.Balance as Balance3_0_, user2_.CustomerTypeRef as Customer9_3_0_, user2_.Email as Email3_0_, user2_.FirstName as FirstName3_0_, user2_.LastName as LastName3_0_, user2_.Login as Login3_0_, user2_.Password as Password3_0_, user2_.RegionRef as RegionRef3_0_, user2_.RoleRef as RoleRef3_0_, customerty3_.ID as ID2_1_, customerty3_.Discount as Discount2_1_, customerty3_.MaxRange as MaxRange2_1_, customerty3_.MinRange as MinRange2_1_, customerty3_.TypeName as TypeName2_1_, region4_.ID as ID1_2_, region4_.RegionName as RegionName1_2_, role5_.ID as ID0_3_, role5_.RoleName as RoleName0_3_, user6_.ID as ID3_4_, user6_.IsUserActive as IsUserAc2_3_4_, user6_.Balance as Balance3_4_, user6_.CustomerTypeRef as Customer9_3_4_, user6_.Email as Email3_4_, user6_.FirstName as FirstName3_4_, user6_.LastName as LastName3_4_, user6_.Login as Login3_4_, user6_.Password as Password3_4_, user6_.RegionRef as RegionRef3_4_, user6_.RoleRef as RoleRef3_4_, orderstatu7_.ID as ID4_5_, orderstatu7_.OrederStatusName as OrederSt2_4_5_ from Orders this_ left outer join Users user2_ on this_.Assigne=user2_.ID left outer join CustomerTypes customerty3_ on user2_.CustomerTypeRef=customerty3_.ID left outer join Regions region4_ on user2_.RegionRef=region4_.ID left outer join Roles role5_ on user2_.RoleRef=role5_.ID left outer join Users user6_ on this_.Customer=user6_.ID left outer join OrderStatuses orderstatu7_ on this_.OrderStatusRef=orderstatu7_.ID where this_.DeliveryDate>?
[2017-10-14 22:36:57,624]DEBUG  8883[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:57,624]DEBUG  8883[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:57,624]DEBUG  8883[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,624]DEBUG  8883[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:57,625]DEBUG  8884[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,625]DEBUG  8884[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,625]DEBUG  8884[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:57,625]DEBUG  8884[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,625]DEBUG  8884[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,625]DEBUG  8884[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#8, id=25, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#8, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#8, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,626]DEBUG  8885[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=8, orderStatusName=Pending}
[2017-10-14 22:36:57,626]DEBUG  8885[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#8, id=23, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#8, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#8, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,626]DEBUG  8885[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#8, id=24, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#8, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#8, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,626]DEBUG  8885[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=8, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#80, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,626]DEBUG  8885[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=80, roleName=Administrator}
[2017-10-14 22:36:57,626]DEBUG  8885[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,626]DEBUG  8885[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 22:36:57,627]DEBUG  8886[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,627]DEBUG  8886[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,627]DEBUG  8886[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,627]DEBUG  8886[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:57,627]DEBUG  8886[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,627]DEBUG  8886[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,628]DEBUG  8887[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#8, id=25, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#8, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#8, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,628]DEBUG  8887[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=8, orderStatusName=Pending}
[2017-10-14 22:36:57,628]DEBUG  8887[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#8, id=23, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#8, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#8, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,628]DEBUG  8887[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#8, id=24, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#8, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#8, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,628]DEBUG  8887[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=8, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#80, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,628]DEBUG  8887[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=80, roleName=Administrator}
[2017-10-14 22:36:57,628]DEBUG  8887[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,628]DEBUG  8887[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 22:36:57,629]DEBUG  8888[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,629]DEBUG  8888[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,629]DEBUG  8888[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,629]DEBUG  8888[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:57,629]DEBUG  8888[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,629]DEBUG  8888[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,629]DEBUG  8888[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#8, id=25, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#8, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#8, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,630]DEBUG  8889[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=8, orderStatusName=Pending}
[2017-10-14 22:36:57,630]DEBUG  8889[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#8, id=23, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#8, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#8, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,630]DEBUG  8889[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#8, id=24, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#8, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#8, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,630]DEBUG  8889[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=8, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#80, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,630]DEBUG  8889[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=80, roleName=Administrator}
[2017-10-14 22:36:57,630]DEBUG  8889[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,630]DEBUG  8889[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 22:36:57,630]DEBUG  8889[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,631]DEBUG  8890[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,631]DEBUG  8890[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,631]DEBUG  8890[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:57,631]DEBUG  8890[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,631]DEBUG  8890[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,631]DEBUG  8890[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#8, id=25, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#8, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#8, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,635]DEBUG  8894[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=8, orderStatusName=Pending}
[2017-10-14 22:36:57,636]DEBUG  8895[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#8, id=23, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#8, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#8, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,636]DEBUG  8895[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#8, id=24, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#8, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#8, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,636]DEBUG  8895[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=8, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#80, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,636]DEBUG  8895[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=80, roleName=Administrator}
[2017-10-14 22:36:57,636]DEBUG  8895[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,636]DEBUG  8895[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 22:36:57,637]DEBUG  8896[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,637]DEBUG  8896[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,637]DEBUG  8896[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,638]DEBUG  8897[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:57,638]DEBUG  8897[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,638]DEBUG  8897[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,638]DEBUG  8897[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#8, id=25, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#8, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#8, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,638]DEBUG  8897[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=8, orderStatusName=Pending}
[2017-10-14 22:36:57,638]DEBUG  8897[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#8, id=23, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#8, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#8, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,638]DEBUG  8897[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#8, id=24, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#8, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#8, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,639]DEBUG  8898[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=8, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#80, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,639]DEBUG  8898[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=80, roleName=Administrator}
[2017-10-14 22:36:57,639]DEBUG  8898[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,639]DEBUG  8898[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 22:36:57,639]DEBUG  8898[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,639]DEBUG  8898[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,640]DEBUG  8899[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,640]DEBUG  8899[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:57,640]DEBUG  8899[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,640]DEBUG  8899[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,640]DEBUG  8899[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#8, id=25, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#8, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#8, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,640]DEBUG  8899[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=8, orderStatusName=Pending}
[2017-10-14 22:36:57,640]DEBUG  8899[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#8, id=23, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#8, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#8, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,640]DEBUG  8899[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#8, id=24, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#8, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#8, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,641]DEBUG  8900[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=8, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#80, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,641]DEBUG  8900[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=80, roleName=Administrator}
[2017-10-14 22:36:57,641]DEBUG  8900[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,641]DEBUG  8900[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 22:36:57,641]DEBUG  8900[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,641]DEBUG  8900[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,641]DEBUG  8900[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,642]DEBUG  8901[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:57,642]DEBUG  8901[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,642]DEBUG  8901[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,642]DEBUG  8901[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#8, id=25, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#8, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#8, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,642]DEBUG  8901[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=8, orderStatusName=Pending}
[2017-10-14 22:36:57,642]DEBUG  8901[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#8, id=23, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#8, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#8, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,642]DEBUG  8901[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#8, id=24, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#8, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#8, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,643]DEBUG  8902[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=8, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#80, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,643]DEBUG  8902[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=80, roleName=Administrator}
[2017-10-14 22:36:57,643]DEBUG  8902[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,643]DEBUG  8902[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 22:36:57,643]DEBUG  8902[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,643]DEBUG  8902[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,643]DEBUG  8902[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,644]DEBUG  8903[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:57,644]DEBUG  8903[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,644]DEBUG  8903[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,644]DEBUG  8903[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#8, id=25, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#8, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#8, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,644]DEBUG  8903[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=8, orderStatusName=Pending}
[2017-10-14 22:36:57,644]DEBUG  8903[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#8, id=23, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#8, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#8, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,644]DEBUG  8903[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#8, id=24, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#8, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#8, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,644]DEBUG  8903[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=8, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#80, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,645]DEBUG  8904[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=80, roleName=Administrator}
[2017-10-14 22:36:57,645]DEBUG  8904[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,645]DEBUG  8904[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 22:36:57,645]DEBUG  8904[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,645]DEBUG  8904[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,645]DEBUG  8904[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,645]DEBUG  8904[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:57,646]DEBUG  8905[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,646]DEBUG  8905[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,646]DEBUG  8905[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#8, id=25, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#8, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#8, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,646]DEBUG  8905[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=8, orderStatusName=Pending}
[2017-10-14 22:36:57,646]DEBUG  8905[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#8, id=23, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#8, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#8, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,646]DEBUG  8905[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#8, id=24, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#8, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#8, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,646]DEBUG  8905[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=8, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#80, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,646]DEBUG  8905[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=80, roleName=Administrator}
[2017-10-14 22:36:57,647]DEBUG  8906[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,647]DEBUG  8906[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 22:36:57,647]DEBUG  8906[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,647]DEBUG  8906[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@4481290d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@11bde071, testMethod = testFindByDeliveryDateMore@OrderDaoTest, testException = [null]]]
[2017-10-14 22:36:57,647]DEBUG  8906[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 22:36:57,647]DEBUG  8906[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@764dc63d]
[2017-10-14 22:36:57,647]DEBUG  8906[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 22:36:57,688]DEBUG  8947[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 22:36:57,688]DEBUG  8947[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:57,689]DEBUG  8948[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@764dc63d] after transaction
[2017-10-14 22:36:57,689]DEBUG  8948[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 22:36:57,689]DEBUG  8948[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 22:36:57,689]DEBUG  8948[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:57,690] INFO  8949[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@4481290d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@11bde071, testMethod = testFindByDeliveryDateMore@OrderDaoTest, testException = [null]]]
[2017-10-14 22:36:57,691]DEBUG  8950[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@4481290d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@11bde071, testMethod = testFindByDeliveryDateMore@OrderDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 22:36:57,691]DEBUG  8950[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2017-10-14 22:36:57,692]DEBUG  8951[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2017-10-14 22:36:57,692]DEBUG  8951[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@4481290d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@4249b103, testMethod = [null], testException = [null]]].
[2017-10-14 22:36:57,692]DEBUG  8951[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 22:36:57,693]DEBUG  8952[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 22:36:57,693]DEBUG  8952[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 22:36:57,693]DEBUG  8952[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 22:36:57,693]DEBUG  8952[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 22:36:57,693]DEBUG  8952[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 22:36:57,694]DEBUG  8953[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 22:36:57,694]DEBUG  8953[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 22:36:57,694]DEBUG  8953[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 22:36:57,694]DEBUG  8953[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 22:36:57,694]DEBUG  8953[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 22:36:57,695]DEBUG  8954[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 22:36:57,695]DEBUG  8954[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 22:36:57,695]DEBUG  8954[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 22:36:57,695]DEBUG  8954[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 22:36:57,695]DEBUG  8954[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 22:36:57,695]DEBUG  8954[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 22:36:57,696]DEBUG  8955[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 22:36:57,696]DEBUG  8955[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 22:36:57,696]DEBUG  8955[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 22:36:57,696]DEBUG  8955[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 22:36:57,697]DEBUG  8956[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 22:36:57,697]DEBUG  8956[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@4249b103]
[2017-10-14 22:36:57,698]DEBUG  8957[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByDeliveryDateLess' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:57,698]DEBUG  8957[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@4481290d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@4249b103, testMethod = testFindByDeliveryDateLess@OrderDaoTest, testException = [null]]]
[2017-10-14 22:36:57,698]DEBUG  8957[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 22:36:57,699]DEBUG  8958[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByDeliveryDateLess]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:57,700]DEBUG  8959[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15080098177
[2017-10-14 22:36:57,700]DEBUG  8959[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@7616d3e0] for Hibernate transaction
[2017-10-14 22:36:57,700]DEBUG  8959[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7616d3e0]
[2017-10-14 22:36:57,700]DEBUG  8959[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 22:36:57,700]DEBUG  8959[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 22:36:57,701]DEBUG  8960[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 22:36:57,701]DEBUG  8960[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@4481290d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@4249b103, testMethod = testFindByDeliveryDateLess@OrderDaoTest, testException = [null]]]
[2017-10-14 22:36:57,701] INFO  8960[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (9): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@598b619b]; rollback [true]
[2017-10-14 22:36:57,701]DEBUG  8960[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,702]DEBUG  8961[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 22:36:57,702]DEBUG  8961[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,703]DEBUG  8962[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,703]DEBUG  8962[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 22:36:57,703]DEBUG  8962[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,704]DEBUG  8963[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,704]DEBUG  8963[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 22:36:57,704]DEBUG  8963[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,705]DEBUG  8964[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,705]DEBUG  8964[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 22:36:57,706]DEBUG  8965[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,706]DEBUG  8965[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,706]DEBUG  8965[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 22:36:57,707]DEBUG  8966[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,707]DEBUG  8966[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,707]DEBUG  8966[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 22:36:57,708]DEBUG  8967[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,708]DEBUG  8967[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,708]DEBUG  8967[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 22:36:57,709]DEBUG  8968[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,709]DEBUG  8968[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,709]DEBUG  8968[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 22:36:57,709]DEBUG  8968[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,709]DEBUG  8968[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,709]DEBUG  8968[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 22:36:57,710]DEBUG  8969[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,710]DEBUG  8969[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:57,710]DEBUG  8969[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,710]DEBUG  8969[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName) values (?)
[2017-10-14 22:36:57,710]DEBUG  8969[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 9
[2017-10-14 22:36:57,711]DEBUG  8970[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,711]DEBUG  8970[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:57,711]DEBUG  8970[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,711]DEBUG  8970[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 22:36:57,711]DEBUG  8970[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 81
[2017-10-14 22:36:57,712]DEBUG  8971[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,712]DEBUG  8971[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:57,712]DEBUG  8971[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,712]DEBUG  8971[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Users (IsUserActive, Balance, CustomerTypeRef, Email, FirstName, LastName, Login, Password, RegionRef, RoleRef) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 22:36:57,712]DEBUG  8971[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 9
[2017-10-14 22:36:57,713]DEBUG  8972[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,713]DEBUG  8972[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:57,713]DEBUG  8972[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,713]DEBUG  8972[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 22:36:57,714]DEBUG  8973[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 26
[2017-10-14 22:36:57,714]DEBUG  8973[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,714]DEBUG  8973[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:57,714]DEBUG  8973[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,714]DEBUG  8973[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 22:36:57,715]DEBUG  8974[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 27
[2017-10-14 22:36:57,715]DEBUG  8974[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,715]DEBUG  8974[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:57,715]DEBUG  8974[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,715]DEBUG  8974[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 22:36:57,716]DEBUG  8975[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 28
[2017-10-14 22:36:57,716]DEBUG  8975[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,717]DEBUG  8976[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,717]DEBUG  8976[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,717]DEBUG  8976[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:57,717]DEBUG  8976[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,717]DEBUG  8976[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,718]DEBUG  8977[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#9, id=27, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#9, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#9, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,718]DEBUG  8977[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#9, id=28, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#9, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#9, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,718]DEBUG  8977[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=81, roleName=Administrator}
[2017-10-14 22:36:57,718]DEBUG  8977[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=9, orderStatusName=Pending}
[2017-10-14 22:36:57,718]DEBUG  8977[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#9, id=26, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#9, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#9, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,718]DEBUG  8977[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=9, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#81, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,718]DEBUG  8977[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,718]DEBUG  8977[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID5_6_, this_.Assigne as Assigne5_6_, this_.Customer as Customer5_6_, this_.DeliveryDate as Delivery2_5_6_, this_.IsGift as IsGift5_6_, this_.MaxDiscount as MaxDisco4_5_6_, this_.OrderDate as OrderDate5_6_, this_.OrderName as OrderName5_6_, this_.OrderNumber as OrderNum7_5_6_, this_.OrderStatusRef as OrderSt12_5_6_, this_.PreferableDeliveryDate as Preferab8_5_6_, this_.TotalPrice as TotalPrice5_6_, user2_.ID as ID3_0_, user2_.IsUserActive as IsUserAc2_3_0_, user2_.Balance as Balance3_0_, user2_.CustomerTypeRef as Customer9_3_0_, user2_.Email as Email3_0_, user2_.FirstName as FirstName3_0_, user2_.LastName as LastName3_0_, user2_.Login as Login3_0_, user2_.Password as Password3_0_, user2_.RegionRef as RegionRef3_0_, user2_.RoleRef as RoleRef3_0_, customerty3_.ID as ID2_1_, customerty3_.Discount as Discount2_1_, customerty3_.MaxRange as MaxRange2_1_, customerty3_.MinRange as MinRange2_1_, customerty3_.TypeName as TypeName2_1_, region4_.ID as ID1_2_, region4_.RegionName as RegionName1_2_, role5_.ID as ID0_3_, role5_.RoleName as RoleName0_3_, user6_.ID as ID3_4_, user6_.IsUserActive as IsUserAc2_3_4_, user6_.Balance as Balance3_4_, user6_.CustomerTypeRef as Customer9_3_4_, user6_.Email as Email3_4_, user6_.FirstName as FirstName3_4_, user6_.LastName as LastName3_4_, user6_.Login as Login3_4_, user6_.Password as Password3_4_, user6_.RegionRef as RegionRef3_4_, user6_.RoleRef as RoleRef3_4_, orderstatu7_.ID as ID4_5_, orderstatu7_.OrederStatusName as OrederSt2_4_5_ from Orders this_ left outer join Users user2_ on this_.Assigne=user2_.ID left outer join CustomerTypes customerty3_ on user2_.CustomerTypeRef=customerty3_.ID left outer join Regions region4_ on user2_.RegionRef=region4_.ID left outer join Roles role5_ on user2_.RoleRef=role5_.ID left outer join Users user6_ on this_.Customer=user6_.ID left outer join OrderStatuses orderstatu7_ on this_.OrderStatusRef=orderstatu7_.ID where this_.DeliveryDate<?
[2017-10-14 22:36:57,720]DEBUG  8979[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:57,720]DEBUG  8979[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#9], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#81], EntityKey[com.softserveinc.edu.oms.domain.entities.User#9], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#9], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#26]
[2017-10-14 22:36:57,720]DEBUG  8979[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#9], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#81], EntityKey[com.softserveinc.edu.oms.domain.entities.User#9], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#9], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#27]
[2017-10-14 22:36:57,721]DEBUG  8980[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#9], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#81], EntityKey[com.softserveinc.edu.oms.domain.entities.User#9], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#9], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#28]
[2017-10-14 22:36:57,721]DEBUG  8980[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:57,721]DEBUG  8980[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,721]DEBUG  8980[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:57,721]DEBUG  8980[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,721]DEBUG  8980[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,722]DEBUG  8981[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:57,722]DEBUG  8981[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,722]DEBUG  8981[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,722]DEBUG  8981[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#9, id=27, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#9, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#9, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,722]DEBUG  8981[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#9, id=28, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#9, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#9, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,722]DEBUG  8981[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=81, roleName=Administrator}
[2017-10-14 22:36:57,722]DEBUG  8981[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=9, orderStatusName=Pending}
[2017-10-14 22:36:57,722]DEBUG  8981[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#9, id=26, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#9, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#9, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,722]DEBUG  8981[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=9, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#81, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,723]DEBUG  8982[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,723]DEBUG  8982[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 22:36:57,723]DEBUG  8982[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,723]DEBUG  8982[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,723]DEBUG  8982[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,723]DEBUG  8982[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:57,723]DEBUG  8982[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,724]DEBUG  8983[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,724]DEBUG  8983[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#9, id=27, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#9, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#9, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,724]DEBUG  8983[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#9, id=28, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#9, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#9, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,724]DEBUG  8983[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=81, roleName=Administrator}
[2017-10-14 22:36:57,724]DEBUG  8983[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=9, orderStatusName=Pending}
[2017-10-14 22:36:57,724]DEBUG  8983[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#9, id=26, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#9, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#9, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,724]DEBUG  8983[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=9, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#81, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,724]DEBUG  8983[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,724]DEBUG  8983[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 22:36:57,725]DEBUG  8984[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,725]DEBUG  8984[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,725]DEBUG  8984[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,725]DEBUG  8984[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:57,725]DEBUG  8984[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,725]DEBUG  8984[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,725]DEBUG  8984[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#9, id=27, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#9, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#9, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,726]DEBUG  8985[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#9, id=28, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#9, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#9, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,726]DEBUG  8985[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=81, roleName=Administrator}
[2017-10-14 22:36:57,726]DEBUG  8985[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=9, orderStatusName=Pending}
[2017-10-14 22:36:57,726]DEBUG  8985[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#9, id=26, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#9, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#9, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,726]DEBUG  8985[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=9, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#81, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,726]DEBUG  8985[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,726]DEBUG  8985[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 22:36:57,726]DEBUG  8985[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,727]DEBUG  8986[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,727]DEBUG  8986[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,727]DEBUG  8986[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:57,727]DEBUG  8986[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,727]DEBUG  8986[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,727]DEBUG  8986[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#9, id=27, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#9, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#9, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,727]DEBUG  8986[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#9, id=28, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#9, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#9, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,728]DEBUG  8987[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=81, roleName=Administrator}
[2017-10-14 22:36:57,728]DEBUG  8987[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=9, orderStatusName=Pending}
[2017-10-14 22:36:57,728]DEBUG  8987[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#9, id=26, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#9, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#9, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,728]DEBUG  8987[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=9, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#81, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,728]DEBUG  8987[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,728]DEBUG  8987[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 22:36:57,728]DEBUG  8987[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,728]DEBUG  8987[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,729]DEBUG  8988[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,729]DEBUG  8988[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:57,729]DEBUG  8988[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,729]DEBUG  8988[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,729]DEBUG  8988[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#9, id=27, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#9, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#9, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,729]DEBUG  8988[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#9, id=28, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#9, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#9, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,729]DEBUG  8988[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=81, roleName=Administrator}
[2017-10-14 22:36:57,729]DEBUG  8988[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=9, orderStatusName=Pending}
[2017-10-14 22:36:57,730]DEBUG  8989[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#9, id=26, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#9, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#9, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,730]DEBUG  8989[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=9, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#81, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,730]DEBUG  8989[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,730]DEBUG  8989[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 22:36:57,730]DEBUG  8989[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,731]DEBUG  8990[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,731]DEBUG  8990[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,731]DEBUG  8990[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:57,731]DEBUG  8990[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,731]DEBUG  8990[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,731]DEBUG  8990[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#9, id=27, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#9, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#9, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,731]DEBUG  8990[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#9, id=28, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#9, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#9, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,731]DEBUG  8990[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=81, roleName=Administrator}
[2017-10-14 22:36:57,732]DEBUG  8991[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=9, orderStatusName=Pending}
[2017-10-14 22:36:57,732]DEBUG  8991[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#9, id=26, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#9, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#9, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,732]DEBUG  8991[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=9, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#81, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,732]DEBUG  8991[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,732]DEBUG  8991[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 22:36:57,732]DEBUG  8991[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,733]DEBUG  8992[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,733]DEBUG  8992[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,733]DEBUG  8992[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:57,733]DEBUG  8992[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,733]DEBUG  8992[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,733]DEBUG  8992[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#9, id=27, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#9, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#9, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,733]DEBUG  8992[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#9, id=28, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#9, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#9, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,734]DEBUG  8993[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=81, roleName=Administrator}
[2017-10-14 22:36:57,734]DEBUG  8993[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=9, orderStatusName=Pending}
[2017-10-14 22:36:57,734]DEBUG  8993[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#9, id=26, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#9, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#9, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,734]DEBUG  8993[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=9, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#81, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,734]DEBUG  8993[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,734]DEBUG  8993[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 22:36:57,734]DEBUG  8993[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,735]DEBUG  8994[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,735]DEBUG  8994[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,735]DEBUG  8994[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:57,735]DEBUG  8994[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,735]DEBUG  8994[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,735]DEBUG  8994[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#9, id=27, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#9, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#9, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,735]DEBUG  8994[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#9, id=28, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#9, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#9, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,735]DEBUG  8994[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=81, roleName=Administrator}
[2017-10-14 22:36:57,736]DEBUG  8995[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=9, orderStatusName=Pending}
[2017-10-14 22:36:57,736]DEBUG  8995[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#9, id=26, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#9, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#9, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,736]DEBUG  8995[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=9, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#81, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,736]DEBUG  8995[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,736]DEBUG  8995[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 22:36:57,736]DEBUG  8995[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,736]DEBUG  8995[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,737]DEBUG  8996[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,737]DEBUG  8996[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:57,737]DEBUG  8996[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,737]DEBUG  8996[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,737]DEBUG  8996[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#9, id=27, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#9, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#9, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,737]DEBUG  8996[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#9, id=28, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#9, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#9, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,737]DEBUG  8996[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=81, roleName=Administrator}
[2017-10-14 22:36:57,737]DEBUG  8996[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=9, orderStatusName=Pending}
[2017-10-14 22:36:57,738]DEBUG  8997[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#9, id=26, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#9, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#9, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,738]DEBUG  8997[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=9, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#81, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,738]DEBUG  8997[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,738]DEBUG  8997[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 22:36:57,738]DEBUG  8997[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,738]DEBUG  8997[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@4481290d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@4249b103, testMethod = testFindByDeliveryDateLess@OrderDaoTest, testException = [null]]]
[2017-10-14 22:36:57,739]DEBUG  8998[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 22:36:57,739]DEBUG  8998[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7616d3e0]
[2017-10-14 22:36:57,739]DEBUG  8998[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 22:36:57,780]DEBUG  9039[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 22:36:57,780]DEBUG  9039[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:57,780]DEBUG  9039[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@7616d3e0] after transaction
[2017-10-14 22:36:57,781]DEBUG  9040[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 22:36:57,781]DEBUG  9040[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 22:36:57,781]DEBUG  9040[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:57,781] INFO  9040[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@4481290d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@4249b103, testMethod = testFindByDeliveryDateLess@OrderDaoTest, testException = [null]]]
[2017-10-14 22:36:57,783]DEBUG  9042[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@4481290d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@4249b103, testMethod = testFindByDeliveryDateLess@OrderDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 22:36:57,783]DEBUG  9042[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2017-10-14 22:36:57,784]DEBUG  9043[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2017-10-14 22:36:57,784]DEBUG  9043[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@4481290d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@6bd5365e, testMethod = [null], testException = [null]]].
[2017-10-14 22:36:57,784]DEBUG  9043[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 22:36:57,784]DEBUG  9043[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 22:36:57,785]DEBUG  9044[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 22:36:57,785]DEBUG  9044[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 22:36:57,785]DEBUG  9044[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 22:36:57,785]DEBUG  9044[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 22:36:57,785]DEBUG  9044[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 22:36:57,786]DEBUG  9045[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 22:36:57,786]DEBUG  9045[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 22:36:57,786]DEBUG  9045[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 22:36:57,786]DEBUG  9045[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 22:36:57,786]DEBUG  9045[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 22:36:57,787]DEBUG  9046[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 22:36:57,787]DEBUG  9046[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 22:36:57,787]DEBUG  9046[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 22:36:57,787]DEBUG  9046[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 22:36:57,787]DEBUG  9046[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 22:36:57,787]DEBUG  9046[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 22:36:57,788]DEBUG  9047[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 22:36:57,788]DEBUG  9047[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 22:36:57,788]DEBUG  9047[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 22:36:57,788]DEBUG  9047[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 22:36:57,789]DEBUG  9048[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@6bd5365e]
[2017-10-14 22:36:57,789]DEBUG  9048[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByOrderDateEquals' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:57,789]DEBUG  9048[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@4481290d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@6bd5365e, testMethod = testFindByOrderDateEquals@OrderDaoTest, testException = [null]]]
[2017-10-14 22:36:57,789]DEBUG  9048[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 22:36:57,790]DEBUG  9049[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByOrderDateEquals]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:57,790]DEBUG  9049[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15080098177
[2017-10-14 22:36:57,790]DEBUG  9049[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@74a9cfbd] for Hibernate transaction
[2017-10-14 22:36:57,790]DEBUG  9049[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@74a9cfbd]
[2017-10-14 22:36:57,790]DEBUG  9049[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 22:36:57,790]DEBUG  9049[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 22:36:57,790]DEBUG  9049[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 22:36:57,790]DEBUG  9049[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@4481290d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@6bd5365e, testMethod = testFindByOrderDateEquals@OrderDaoTest, testException = [null]]]
[2017-10-14 22:36:57,791] INFO  9050[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (10): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@598b619b]; rollback [true]
[2017-10-14 22:36:57,791]DEBUG  9050[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,791]DEBUG  9050[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 22:36:57,791]DEBUG  9050[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,791]DEBUG  9050[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,791]DEBUG  9050[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 22:36:57,792]DEBUG  9051[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,792]DEBUG  9051[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,792]DEBUG  9051[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 22:36:57,792]DEBUG  9051[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,792]DEBUG  9051[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,792]DEBUG  9051[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 22:36:57,793]DEBUG  9052[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,793]DEBUG  9052[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,793]DEBUG  9052[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 22:36:57,793]DEBUG  9052[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,793]DEBUG  9052[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,793]DEBUG  9052[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 22:36:57,794]DEBUG  9053[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,794]DEBUG  9053[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,794]DEBUG  9053[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 22:36:57,794]DEBUG  9053[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,794]DEBUG  9053[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,794]DEBUG  9053[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 22:36:57,795]DEBUG  9054[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,795]DEBUG  9054[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,795]DEBUG  9054[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 22:36:57,796]DEBUG  9055[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,796]DEBUG  9055[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:57,796]DEBUG  9055[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,796]DEBUG  9055[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName) values (?)
[2017-10-14 22:36:57,796]DEBUG  9055[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 10
[2017-10-14 22:36:57,797]DEBUG  9056[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,797]DEBUG  9056[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:57,797]DEBUG  9056[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,797]DEBUG  9056[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 22:36:57,797]DEBUG  9056[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 82
[2017-10-14 22:36:57,797]DEBUG  9056[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,798]DEBUG  9057[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:57,798]DEBUG  9057[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,798]DEBUG  9057[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Users (IsUserActive, Balance, CustomerTypeRef, Email, FirstName, LastName, Login, Password, RegionRef, RoleRef) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 22:36:57,798]DEBUG  9057[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 10
[2017-10-14 22:36:57,798]DEBUG  9057[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,799]DEBUG  9058[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:57,799]DEBUG  9058[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,799]DEBUG  9058[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 22:36:57,799]DEBUG  9058[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 29
[2017-10-14 22:36:57,800]DEBUG  9059[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,800]DEBUG  9059[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:57,800]DEBUG  9059[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,800]DEBUG  9059[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 22:36:57,801]DEBUG  9060[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 30
[2017-10-14 22:36:57,801]DEBUG  9060[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,801]DEBUG  9060[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:57,801]DEBUG  9060[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,801]DEBUG  9060[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 22:36:57,802]DEBUG  9061[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 31
[2017-10-14 22:36:57,802]DEBUG  9061[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,803]DEBUG  9062[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,803]DEBUG  9062[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,803]DEBUG  9062[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:57,803]DEBUG  9062[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,803]DEBUG  9062[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,803]DEBUG  9062[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=82, roleName=Administrator}
[2017-10-14 22:36:57,804]DEBUG  9063[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=10, orderStatusName=Pending}
[2017-10-14 22:36:57,804]DEBUG  9063[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#10, id=30, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#10, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#10, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,804]DEBUG  9063[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=10, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#82, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,804]DEBUG  9063[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#10, id=29, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#10, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#10, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,804]DEBUG  9063[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#10, id=31, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#10, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#10, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,804]DEBUG  9063[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,804]DEBUG  9063[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID5_6_, this_.Assigne as Assigne5_6_, this_.Customer as Customer5_6_, this_.DeliveryDate as Delivery2_5_6_, this_.IsGift as IsGift5_6_, this_.MaxDiscount as MaxDisco4_5_6_, this_.OrderDate as OrderDate5_6_, this_.OrderName as OrderName5_6_, this_.OrderNumber as OrderNum7_5_6_, this_.OrderStatusRef as OrderSt12_5_6_, this_.PreferableDeliveryDate as Preferab8_5_6_, this_.TotalPrice as TotalPrice5_6_, user2_.ID as ID3_0_, user2_.IsUserActive as IsUserAc2_3_0_, user2_.Balance as Balance3_0_, user2_.CustomerTypeRef as Customer9_3_0_, user2_.Email as Email3_0_, user2_.FirstName as FirstName3_0_, user2_.LastName as LastName3_0_, user2_.Login as Login3_0_, user2_.Password as Password3_0_, user2_.RegionRef as RegionRef3_0_, user2_.RoleRef as RoleRef3_0_, customerty3_.ID as ID2_1_, customerty3_.Discount as Discount2_1_, customerty3_.MaxRange as MaxRange2_1_, customerty3_.MinRange as MinRange2_1_, customerty3_.TypeName as TypeName2_1_, region4_.ID as ID1_2_, region4_.RegionName as RegionName1_2_, role5_.ID as ID0_3_, role5_.RoleName as RoleName0_3_, user6_.ID as ID3_4_, user6_.IsUserActive as IsUserAc2_3_4_, user6_.Balance as Balance3_4_, user6_.CustomerTypeRef as Customer9_3_4_, user6_.Email as Email3_4_, user6_.FirstName as FirstName3_4_, user6_.LastName as LastName3_4_, user6_.Login as Login3_4_, user6_.Password as Password3_4_, user6_.RegionRef as RegionRef3_4_, user6_.RoleRef as RoleRef3_4_, orderstatu7_.ID as ID4_5_, orderstatu7_.OrederStatusName as OrederSt2_4_5_ from Orders this_ left outer join Users user2_ on this_.Assigne=user2_.ID left outer join CustomerTypes customerty3_ on user2_.CustomerTypeRef=customerty3_.ID left outer join Regions region4_ on user2_.RegionRef=region4_.ID left outer join Roles role5_ on user2_.RoleRef=role5_.ID left outer join Users user6_ on this_.Customer=user6_.ID left outer join OrderStatuses orderstatu7_ on this_.OrderStatusRef=orderstatu7_.ID where this_.OrderDate=?
[2017-10-14 22:36:57,806]DEBUG  9065[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:57,806]DEBUG  9065[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#10], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#82], EntityKey[com.softserveinc.edu.oms.domain.entities.User#10], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#10], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#29]
[2017-10-14 22:36:57,806]DEBUG  9065[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#10], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#82], EntityKey[com.softserveinc.edu.oms.domain.entities.User#10], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#10], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#30]
[2017-10-14 22:36:57,807]DEBUG  9066[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#10], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#82], EntityKey[com.softserveinc.edu.oms.domain.entities.User#10], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#10], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#31]
[2017-10-14 22:36:57,807]DEBUG  9066[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:57,807]DEBUG  9066[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,807]DEBUG  9066[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:57,807]DEBUG  9066[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,807]DEBUG  9066[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,808]DEBUG  9067[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:57,808]DEBUG  9067[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,808]DEBUG  9067[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,808]DEBUG  9067[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=82, roleName=Administrator}
[2017-10-14 22:36:57,808]DEBUG  9067[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=10, orderStatusName=Pending}
[2017-10-14 22:36:57,808]DEBUG  9067[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#10, id=30, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#10, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#10, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,808]DEBUG  9067[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=10, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#82, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,808]DEBUG  9067[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#10, id=29, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#10, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#10, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,808]DEBUG  9067[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#10, id=31, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#10, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#10, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,809]DEBUG  9068[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,809]DEBUG  9068[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 22:36:57,809]DEBUG  9068[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,809]DEBUG  9068[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,809]DEBUG  9068[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,809]DEBUG  9068[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:57,810]DEBUG  9069[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,810]DEBUG  9069[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,810]DEBUG  9069[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=82, roleName=Administrator}
[2017-10-14 22:36:57,810]DEBUG  9069[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=10, orderStatusName=Pending}
[2017-10-14 22:36:57,810]DEBUG  9069[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#10, id=30, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#10, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#10, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,810]DEBUG  9069[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=10, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#82, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,810]DEBUG  9069[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#10, id=29, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#10, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#10, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,810]DEBUG  9069[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#10, id=31, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#10, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#10, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,810]DEBUG  9069[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,811]DEBUG  9070[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 22:36:57,811]DEBUG  9070[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,811]DEBUG  9070[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,811]DEBUG  9070[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,811]DEBUG  9070[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:57,811]DEBUG  9070[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,811]DEBUG  9070[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,812]DEBUG  9071[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=82, roleName=Administrator}
[2017-10-14 22:36:57,812]DEBUG  9071[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=10, orderStatusName=Pending}
[2017-10-14 22:36:57,812]DEBUG  9071[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#10, id=30, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#10, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#10, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,812]DEBUG  9071[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=10, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#82, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,812]DEBUG  9071[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#10, id=29, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#10, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#10, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,812]DEBUG  9071[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#10, id=31, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#10, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#10, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,812]DEBUG  9071[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,812]DEBUG  9071[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 22:36:57,813]DEBUG  9072[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,813]DEBUG  9072[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,813]DEBUG  9072[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,813]DEBUG  9072[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:57,813]DEBUG  9072[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,813]DEBUG  9072[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,813]DEBUG  9072[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=82, roleName=Administrator}
[2017-10-14 22:36:57,813]DEBUG  9072[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=10, orderStatusName=Pending}
[2017-10-14 22:36:57,814]DEBUG  9073[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#10, id=30, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#10, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#10, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,814]DEBUG  9073[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=10, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#82, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,814]DEBUG  9073[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#10, id=29, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#10, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#10, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,814]DEBUG  9073[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#10, id=31, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#10, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#10, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,814]DEBUG  9073[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,814]DEBUG  9073[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 22:36:57,815]DEBUG  9074[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,815]DEBUG  9074[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,815]DEBUG  9074[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,815]DEBUG  9074[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:57,815]DEBUG  9074[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,815]DEBUG  9074[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,815]DEBUG  9074[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=82, roleName=Administrator}
[2017-10-14 22:36:57,815]DEBUG  9074[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=10, orderStatusName=Pending}
[2017-10-14 22:36:57,816]DEBUG  9075[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#10, id=30, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#10, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#10, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,816]DEBUG  9075[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=10, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#82, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,816]DEBUG  9075[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#10, id=29, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#10, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#10, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,816]DEBUG  9075[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#10, id=31, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#10, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#10, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,816]DEBUG  9075[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,816]DEBUG  9075[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 22:36:57,816]DEBUG  9075[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,817]DEBUG  9076[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,817]DEBUG  9076[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,817]DEBUG  9076[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:57,817]DEBUG  9076[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,817]DEBUG  9076[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,817]DEBUG  9076[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=82, roleName=Administrator}
[2017-10-14 22:36:57,817]DEBUG  9076[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=10, orderStatusName=Pending}
[2017-10-14 22:36:57,817]DEBUG  9076[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#10, id=30, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#10, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#10, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,818]DEBUG  9077[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=10, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#82, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,818]DEBUG  9077[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#10, id=29, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#10, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#10, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,818]DEBUG  9077[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#10, id=31, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#10, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#10, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,818]DEBUG  9077[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,818]DEBUG  9077[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 22:36:57,818]DEBUG  9077[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,818]DEBUG  9077[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,819]DEBUG  9078[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,819]DEBUG  9078[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:57,819]DEBUG  9078[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,819]DEBUG  9078[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,819]DEBUG  9078[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=82, roleName=Administrator}
[2017-10-14 22:36:57,819]DEBUG  9078[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=10, orderStatusName=Pending}
[2017-10-14 22:36:57,819]DEBUG  9078[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#10, id=30, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#10, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#10, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,819]DEBUG  9078[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=10, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#82, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,820]DEBUG  9079[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#10, id=29, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#10, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#10, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,820]DEBUG  9079[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#10, id=31, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#10, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#10, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,820]DEBUG  9079[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,820]DEBUG  9079[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 22:36:57,820]DEBUG  9079[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,820]DEBUG  9079[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,820]DEBUG  9079[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,821]DEBUG  9080[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:57,821]DEBUG  9080[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,821]DEBUG  9080[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,821]DEBUG  9080[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=82, roleName=Administrator}
[2017-10-14 22:36:57,821]DEBUG  9080[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=10, orderStatusName=Pending}
[2017-10-14 22:36:57,821]DEBUG  9080[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#10, id=30, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#10, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#10, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,821]DEBUG  9080[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=10, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#82, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,821]DEBUG  9080[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#10, id=29, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#10, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#10, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,821]DEBUG  9080[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#10, id=31, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#10, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#10, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,822]DEBUG  9081[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,822]DEBUG  9081[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 22:36:57,822]DEBUG  9081[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,822]DEBUG  9081[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,822]DEBUG  9081[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,822]DEBUG  9081[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:57,822]DEBUG  9081[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,823]DEBUG  9082[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,823]DEBUG  9082[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=82, roleName=Administrator}
[2017-10-14 22:36:57,823]DEBUG  9082[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=10, orderStatusName=Pending}
[2017-10-14 22:36:57,823]DEBUG  9082[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#10, id=30, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#10, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#10, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,823]DEBUG  9082[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=10, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#82, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,823]DEBUG  9082[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#10, id=29, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#10, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#10, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,823]DEBUG  9082[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#10, id=31, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#10, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#10, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,823]DEBUG  9082[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,823]DEBUG  9082[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 22:36:57,824]DEBUG  9083[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,824]DEBUG  9083[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@4481290d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@6bd5365e, testMethod = testFindByOrderDateEquals@OrderDaoTest, testException = [null]]]
[2017-10-14 22:36:57,824]DEBUG  9083[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 22:36:57,824]DEBUG  9083[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@74a9cfbd]
[2017-10-14 22:36:57,824]DEBUG  9083[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 22:36:57,855]DEBUG  9114[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 22:36:57,855]DEBUG  9114[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:57,856]DEBUG  9115[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@74a9cfbd] after transaction
[2017-10-14 22:36:57,856]DEBUG  9115[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 22:36:57,856]DEBUG  9115[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 22:36:57,856]DEBUG  9115[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:57,856] INFO  9115[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@4481290d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@6bd5365e, testMethod = testFindByOrderDateEquals@OrderDaoTest, testException = [null]]]
[2017-10-14 22:36:57,858]DEBUG  9117[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@4481290d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@6bd5365e, testMethod = testFindByOrderDateEquals@OrderDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 22:36:57,858]DEBUG  9117[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2017-10-14 22:36:57,858]DEBUG  9117[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2017-10-14 22:36:57,859]DEBUG  9118[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@4481290d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@2c9115ac, testMethod = [null], testException = [null]]].
[2017-10-14 22:36:57,859]DEBUG  9118[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 22:36:57,859]DEBUG  9118[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 22:36:57,859]DEBUG  9118[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 22:36:57,860]DEBUG  9119[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 22:36:57,860]DEBUG  9119[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 22:36:57,860]DEBUG  9119[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 22:36:57,860]DEBUG  9119[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 22:36:57,860]DEBUG  9119[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 22:36:57,861]DEBUG  9120[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 22:36:57,861]DEBUG  9120[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 22:36:57,861]DEBUG  9120[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 22:36:57,861]DEBUG  9120[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 22:36:57,861]DEBUG  9120[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 22:36:57,862]DEBUG  9121[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 22:36:57,862]DEBUG  9121[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 22:36:57,862]DEBUG  9121[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 22:36:57,862]DEBUG  9121[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 22:36:57,862]DEBUG  9121[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 22:36:57,863]DEBUG  9122[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 22:36:57,863]DEBUG  9122[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 22:36:57,863]DEBUG  9122[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 22:36:57,863]DEBUG  9122[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 22:36:57,864]DEBUG  9123[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@2c9115ac]
[2017-10-14 22:36:57,864]DEBUG  9123[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByOrderDateMore' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:57,864]DEBUG  9123[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@4481290d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@2c9115ac, testMethod = testFindByOrderDateMore@OrderDaoTest, testException = [null]]]
[2017-10-14 22:36:57,865]DEBUG  9124[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 22:36:57,866]DEBUG  9125[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByOrderDateMore]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:57,866]DEBUG  9125[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15080098178
[2017-10-14 22:36:57,866]DEBUG  9125[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@2a1b1137] for Hibernate transaction
[2017-10-14 22:36:57,867]DEBUG  9126[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@2a1b1137]
[2017-10-14 22:36:57,867]DEBUG  9126[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 22:36:57,867]DEBUG  9126[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 22:36:57,867]DEBUG  9126[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 22:36:57,868]DEBUG  9127[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@4481290d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@2c9115ac, testMethod = testFindByOrderDateMore@OrderDaoTest, testException = [null]]]
[2017-10-14 22:36:57,868] INFO  9127[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (11): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@598b619b]; rollback [true]
[2017-10-14 22:36:57,868]DEBUG  9127[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,868]DEBUG  9127[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 22:36:57,869]DEBUG  9128[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,869]DEBUG  9128[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,869]DEBUG  9128[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 22:36:57,869]DEBUG  9128[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,869]DEBUG  9128[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,869]DEBUG  9128[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 22:36:57,870]DEBUG  9129[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,870]DEBUG  9129[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,870]DEBUG  9129[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 22:36:57,870]DEBUG  9129[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,870]DEBUG  9129[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,870]DEBUG  9129[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 22:36:57,871]DEBUG  9130[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,871]DEBUG  9130[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,871]DEBUG  9130[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 22:36:57,871]DEBUG  9130[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,871]DEBUG  9130[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,871]DEBUG  9130[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 22:36:57,872]DEBUG  9131[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,872]DEBUG  9131[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,872]DEBUG  9131[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 22:36:57,872]DEBUG  9131[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,872]DEBUG  9131[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,872]DEBUG  9131[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 22:36:57,873]DEBUG  9132[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,873]DEBUG  9132[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:57,873]DEBUG  9132[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,873]DEBUG  9132[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName) values (?)
[2017-10-14 22:36:57,873]DEBUG  9132[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 11
[2017-10-14 22:36:57,873]DEBUG  9132[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,874]DEBUG  9133[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:57,874]DEBUG  9133[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,874]DEBUG  9133[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 22:36:57,874]DEBUG  9133[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 83
[2017-10-14 22:36:57,874]DEBUG  9133[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,875]DEBUG  9134[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:57,875]DEBUG  9134[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,875]DEBUG  9134[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Users (IsUserActive, Balance, CustomerTypeRef, Email, FirstName, LastName, Login, Password, RegionRef, RoleRef) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 22:36:57,875]DEBUG  9134[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 11
[2017-10-14 22:36:57,875]DEBUG  9134[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,875]DEBUG  9134[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:57,876]DEBUG  9135[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,876]DEBUG  9135[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 22:36:57,876]DEBUG  9135[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 32
[2017-10-14 22:36:57,876]DEBUG  9135[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,877]DEBUG  9136[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:57,877]DEBUG  9136[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,877]DEBUG  9136[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 22:36:57,877]DEBUG  9136[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 33
[2017-10-14 22:36:57,878]DEBUG  9137[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,878]DEBUG  9137[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:57,878]DEBUG  9137[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,878]DEBUG  9137[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 22:36:57,878]DEBUG  9137[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 34
[2017-10-14 22:36:57,879]DEBUG  9138[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,879]DEBUG  9138[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,880]DEBUG  9139[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,880]DEBUG  9139[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:57,880]DEBUG  9139[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,880]DEBUG  9139[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,880]DEBUG  9139[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#11, id=34, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#11, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#11, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,880]DEBUG  9139[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#11, id=33, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#11, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#11, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,881]DEBUG  9140[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=83, roleName=Administrator}
[2017-10-14 22:36:57,881]DEBUG  9140[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=11, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#83, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,881]DEBUG  9140[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#11, id=32, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#11, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#11, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,881]DEBUG  9140[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=11, orderStatusName=Pending}
[2017-10-14 22:36:57,881]DEBUG  9140[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,881]DEBUG  9140[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID5_6_, this_.Assigne as Assigne5_6_, this_.Customer as Customer5_6_, this_.DeliveryDate as Delivery2_5_6_, this_.IsGift as IsGift5_6_, this_.MaxDiscount as MaxDisco4_5_6_, this_.OrderDate as OrderDate5_6_, this_.OrderName as OrderName5_6_, this_.OrderNumber as OrderNum7_5_6_, this_.OrderStatusRef as OrderSt12_5_6_, this_.PreferableDeliveryDate as Preferab8_5_6_, this_.TotalPrice as TotalPrice5_6_, user2_.ID as ID3_0_, user2_.IsUserActive as IsUserAc2_3_0_, user2_.Balance as Balance3_0_, user2_.CustomerTypeRef as Customer9_3_0_, user2_.Email as Email3_0_, user2_.FirstName as FirstName3_0_, user2_.LastName as LastName3_0_, user2_.Login as Login3_0_, user2_.Password as Password3_0_, user2_.RegionRef as RegionRef3_0_, user2_.RoleRef as RoleRef3_0_, customerty3_.ID as ID2_1_, customerty3_.Discount as Discount2_1_, customerty3_.MaxRange as MaxRange2_1_, customerty3_.MinRange as MinRange2_1_, customerty3_.TypeName as TypeName2_1_, region4_.ID as ID1_2_, region4_.RegionName as RegionName1_2_, role5_.ID as ID0_3_, role5_.RoleName as RoleName0_3_, user6_.ID as ID3_4_, user6_.IsUserActive as IsUserAc2_3_4_, user6_.Balance as Balance3_4_, user6_.CustomerTypeRef as Customer9_3_4_, user6_.Email as Email3_4_, user6_.FirstName as FirstName3_4_, user6_.LastName as LastName3_4_, user6_.Login as Login3_4_, user6_.Password as Password3_4_, user6_.RegionRef as RegionRef3_4_, user6_.RoleRef as RoleRef3_4_, orderstatu7_.ID as ID4_5_, orderstatu7_.OrederStatusName as OrederSt2_4_5_ from Orders this_ left outer join Users user2_ on this_.Assigne=user2_.ID left outer join CustomerTypes customerty3_ on user2_.CustomerTypeRef=customerty3_.ID left outer join Regions region4_ on user2_.RegionRef=region4_.ID left outer join Roles role5_ on user2_.RoleRef=role5_.ID left outer join Users user6_ on this_.Customer=user6_.ID left outer join OrderStatuses orderstatu7_ on this_.OrderStatusRef=orderstatu7_.ID where this_.OrderDate>?
[2017-10-14 22:36:57,882]DEBUG  9141[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:57,882]DEBUG  9141[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:57,882]DEBUG  9141[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,883]DEBUG  9142[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:57,883]DEBUG  9142[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,883]DEBUG  9142[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,883]DEBUG  9142[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:57,883]DEBUG  9142[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,883]DEBUG  9142[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,883]DEBUG  9142[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#11, id=34, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#11, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#11, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,884]DEBUG  9143[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#11, id=33, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#11, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#11, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,884]DEBUG  9143[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=83, roleName=Administrator}
[2017-10-14 22:36:57,884]DEBUG  9143[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=11, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#83, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,884]DEBUG  9143[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#11, id=32, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#11, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#11, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,884]DEBUG  9143[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=11, orderStatusName=Pending}
[2017-10-14 22:36:57,884]DEBUG  9143[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,884]DEBUG  9143[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 22:36:57,885]DEBUG  9144[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,885]DEBUG  9144[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,885]DEBUG  9144[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,885]DEBUG  9144[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:57,885]DEBUG  9144[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,885]DEBUG  9144[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,885]DEBUG  9144[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#11, id=34, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#11, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#11, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,886]DEBUG  9145[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#11, id=33, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#11, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#11, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,886]DEBUG  9145[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=83, roleName=Administrator}
[2017-10-14 22:36:57,886]DEBUG  9145[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=11, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#83, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,886]DEBUG  9145[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#11, id=32, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#11, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#11, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,886]DEBUG  9145[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=11, orderStatusName=Pending}
[2017-10-14 22:36:57,886]DEBUG  9145[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,886]DEBUG  9145[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 22:36:57,886]DEBUG  9145[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,887]DEBUG  9146[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,887]DEBUG  9146[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,887]DEBUG  9146[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:57,887]DEBUG  9146[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,887]DEBUG  9146[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,887]DEBUG  9146[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#11, id=34, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#11, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#11, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,887]DEBUG  9146[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#11, id=33, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#11, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#11, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,887]DEBUG  9146[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=83, roleName=Administrator}
[2017-10-14 22:36:57,888]DEBUG  9147[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=11, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#83, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,888]DEBUG  9147[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#11, id=32, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#11, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#11, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,888]DEBUG  9147[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=11, orderStatusName=Pending}
[2017-10-14 22:36:57,888]DEBUG  9147[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,888]DEBUG  9147[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 22:36:57,888]DEBUG  9147[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,888]DEBUG  9147[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,889]DEBUG  9148[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,889]DEBUG  9148[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:57,889]DEBUG  9148[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,889]DEBUG  9148[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,889]DEBUG  9148[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#11, id=34, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#11, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#11, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,889]DEBUG  9148[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#11, id=33, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#11, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#11, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,889]DEBUG  9148[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=83, roleName=Administrator}
[2017-10-14 22:36:57,889]DEBUG  9148[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=11, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#83, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,890]DEBUG  9149[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#11, id=32, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#11, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#11, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,890]DEBUG  9149[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=11, orderStatusName=Pending}
[2017-10-14 22:36:57,890]DEBUG  9149[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,890]DEBUG  9149[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 22:36:57,890]DEBUG  9149[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,890]DEBUG  9149[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,890]DEBUG  9149[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,891]DEBUG  9150[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:57,891]DEBUG  9150[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,891]DEBUG  9150[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,891]DEBUG  9150[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#11, id=34, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#11, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#11, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,891]DEBUG  9150[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#11, id=33, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#11, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#11, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,891]DEBUG  9150[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=83, roleName=Administrator}
[2017-10-14 22:36:57,891]DEBUG  9150[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=11, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#83, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,891]DEBUG  9150[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#11, id=32, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#11, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#11, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,891]DEBUG  9150[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=11, orderStatusName=Pending}
[2017-10-14 22:36:57,892]DEBUG  9151[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,892]DEBUG  9151[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 22:36:57,892]DEBUG  9151[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,892]DEBUG  9151[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,892]DEBUG  9151[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,892]DEBUG  9151[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:57,893]DEBUG  9152[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,893]DEBUG  9152[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,893]DEBUG  9152[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#11, id=34, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#11, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#11, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,893]DEBUG  9152[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#11, id=33, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#11, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#11, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,893]DEBUG  9152[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=83, roleName=Administrator}
[2017-10-14 22:36:57,893]DEBUG  9152[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=11, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#83, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,893]DEBUG  9152[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#11, id=32, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#11, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#11, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,893]DEBUG  9152[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=11, orderStatusName=Pending}
[2017-10-14 22:36:57,893]DEBUG  9152[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,894]DEBUG  9153[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 22:36:57,894]DEBUG  9153[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,894]DEBUG  9153[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,894]DEBUG  9153[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,894]DEBUG  9153[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:57,894]DEBUG  9153[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,894]DEBUG  9153[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,895]DEBUG  9154[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#11, id=34, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#11, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#11, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,895]DEBUG  9154[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#11, id=33, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#11, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#11, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,895]DEBUG  9154[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=83, roleName=Administrator}
[2017-10-14 22:36:57,895]DEBUG  9154[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=11, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#83, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,895]DEBUG  9154[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#11, id=32, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#11, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#11, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,895]DEBUG  9154[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=11, orderStatusName=Pending}
[2017-10-14 22:36:57,895]DEBUG  9154[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,895]DEBUG  9154[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 22:36:57,896]DEBUG  9155[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,896]DEBUG  9155[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,896]DEBUG  9155[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,896]DEBUG  9155[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:57,896]DEBUG  9155[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,896]DEBUG  9155[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,896]DEBUG  9155[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#11, id=34, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#11, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#11, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,897]DEBUG  9156[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#11, id=33, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#11, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#11, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,897]DEBUG  9156[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=83, roleName=Administrator}
[2017-10-14 22:36:57,897]DEBUG  9156[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=11, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#83, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,897]DEBUG  9156[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#11, id=32, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#11, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#11, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,897]DEBUG  9156[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=11, orderStatusName=Pending}
[2017-10-14 22:36:57,897]DEBUG  9156[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,897]DEBUG  9156[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 22:36:57,897]DEBUG  9156[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,898]DEBUG  9157[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,898]DEBUG  9157[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,898]DEBUG  9157[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:57,898]DEBUG  9157[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,898]DEBUG  9157[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,898]DEBUG  9157[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#11, id=34, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#11, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#11, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,898]DEBUG  9157[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#11, id=33, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#11, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#11, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,899]DEBUG  9158[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=83, roleName=Administrator}
[2017-10-14 22:36:57,899]DEBUG  9158[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=11, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#83, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,899]DEBUG  9158[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#11, id=32, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#11, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#11, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,899]DEBUG  9158[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=11, orderStatusName=Pending}
[2017-10-14 22:36:57,899]DEBUG  9158[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,899]DEBUG  9158[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 22:36:57,899]DEBUG  9158[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,900]DEBUG  9159[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@4481290d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@2c9115ac, testMethod = testFindByOrderDateMore@OrderDaoTest, testException = [null]]]
[2017-10-14 22:36:57,900]DEBUG  9159[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 22:36:57,900]DEBUG  9159[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@2a1b1137]
[2017-10-14 22:36:57,900]DEBUG  9159[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 22:36:57,930]DEBUG  9189[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 22:36:57,930]DEBUG  9189[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:57,931]DEBUG  9190[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@2a1b1137] after transaction
[2017-10-14 22:36:57,931]DEBUG  9190[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 22:36:57,931]DEBUG  9190[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 22:36:57,931]DEBUG  9190[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:57,931] INFO  9190[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@4481290d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@2c9115ac, testMethod = testFindByOrderDateMore@OrderDaoTest, testException = [null]]]
[2017-10-14 22:36:57,933]DEBUG  9192[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@4481290d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@2c9115ac, testMethod = testFindByOrderDateMore@OrderDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 22:36:57,933]DEBUG  9192[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2017-10-14 22:36:57,933]DEBUG  9192[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2017-10-14 22:36:57,934]DEBUG  9193[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@4481290d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@3cfa608d, testMethod = [null], testException = [null]]].
[2017-10-14 22:36:57,934]DEBUG  9193[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 22:36:57,934]DEBUG  9193[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 22:36:57,935]DEBUG  9194[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 22:36:57,935]DEBUG  9194[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 22:36:57,935]DEBUG  9194[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 22:36:57,935]DEBUG  9194[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 22:36:57,935]DEBUG  9194[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 22:36:57,935]DEBUG  9194[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 22:36:57,936]DEBUG  9195[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 22:36:57,936]DEBUG  9195[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 22:36:57,936]DEBUG  9195[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 22:36:57,936]DEBUG  9195[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 22:36:57,936]DEBUG  9195[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 22:36:57,937]DEBUG  9196[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 22:36:57,937]DEBUG  9196[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 22:36:57,937]DEBUG  9196[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 22:36:57,937]DEBUG  9196[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 22:36:57,937]DEBUG  9196[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 22:36:57,938]DEBUG  9197[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 22:36:57,938]DEBUG  9197[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 22:36:57,938]DEBUG  9197[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 22:36:57,938]DEBUG  9197[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 22:36:57,939]DEBUG  9198[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@3cfa608d]
[2017-10-14 22:36:57,939]DEBUG  9198[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByOrderDateLess' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:57,940]DEBUG  9199[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@4481290d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@3cfa608d, testMethod = testFindByOrderDateLess@OrderDaoTest, testException = [null]]]
[2017-10-14 22:36:57,940]DEBUG  9199[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 22:36:57,941]DEBUG  9200[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByOrderDateLess]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:57,941]DEBUG  9200[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15080098179
[2017-10-14 22:36:57,942]DEBUG  9201[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@41e3bda] for Hibernate transaction
[2017-10-14 22:36:57,942]DEBUG  9201[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@41e3bda]
[2017-10-14 22:36:57,942]DEBUG  9201[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 22:36:57,942]DEBUG  9201[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 22:36:57,942]DEBUG  9201[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 22:36:57,943]DEBUG  9202[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@4481290d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@3cfa608d, testMethod = testFindByOrderDateLess@OrderDaoTest, testException = [null]]]
[2017-10-14 22:36:57,943] INFO  9202[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (12): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@598b619b]; rollback [true]
[2017-10-14 22:36:57,943]DEBUG  9202[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,943]DEBUG  9202[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 22:36:57,944]DEBUG  9203[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,944]DEBUG  9203[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,945]DEBUG  9204[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 22:36:57,945]DEBUG  9204[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,945]DEBUG  9204[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,946]DEBUG  9205[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 22:36:57,946]DEBUG  9205[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,946]DEBUG  9205[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,947]DEBUG  9206[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 22:36:57,947]DEBUG  9206[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,948]DEBUG  9207[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,948]DEBUG  9207[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 22:36:57,948]DEBUG  9207[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,949]DEBUG  9208[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,949]DEBUG  9208[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 22:36:57,949]DEBUG  9208[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,949]DEBUG  9208[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,949]DEBUG  9208[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 22:36:57,949]DEBUG  9208[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,950]DEBUG  9209[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,950]DEBUG  9209[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 22:36:57,950]DEBUG  9209[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,950]DEBUG  9209[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,950]DEBUG  9209[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 22:36:57,950]DEBUG  9209[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,951]DEBUG  9210[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:57,951]DEBUG  9210[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,951]DEBUG  9210[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName) values (?)
[2017-10-14 22:36:57,951]DEBUG  9210[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 12
[2017-10-14 22:36:57,951]DEBUG  9210[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,952]DEBUG  9211[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:57,952]DEBUG  9211[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,952]DEBUG  9211[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 22:36:57,952]DEBUG  9211[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 84
[2017-10-14 22:36:57,952]DEBUG  9211[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,952]DEBUG  9211[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:57,953]DEBUG  9212[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,953]DEBUG  9212[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Users (IsUserActive, Balance, CustomerTypeRef, Email, FirstName, LastName, Login, Password, RegionRef, RoleRef) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 22:36:57,953]DEBUG  9212[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 12
[2017-10-14 22:36:57,953]DEBUG  9212[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,953]DEBUG  9212[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:57,954]DEBUG  9213[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,954]DEBUG  9213[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 22:36:57,954]DEBUG  9213[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 35
[2017-10-14 22:36:57,955]DEBUG  9214[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,955]DEBUG  9214[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:57,955]DEBUG  9214[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,955]DEBUG  9214[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 22:36:57,956]DEBUG  9215[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 36
[2017-10-14 22:36:57,956]DEBUG  9215[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,956]DEBUG  9215[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:57,956]DEBUG  9215[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,956]DEBUG  9215[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 22:36:57,957]DEBUG  9216[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 37
[2017-10-14 22:36:57,957]DEBUG  9216[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,958]DEBUG  9217[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,958]DEBUG  9217[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,958]DEBUG  9217[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:57,958]DEBUG  9217[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,958]DEBUG  9217[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,959]DEBUG  9218[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#12, id=36, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#12, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#12, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,959]DEBUG  9218[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=12, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#84, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,959]DEBUG  9218[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=84, roleName=Administrator}
[2017-10-14 22:36:57,959]DEBUG  9218[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#12, id=35, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#12, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#12, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,959]DEBUG  9218[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#12, id=37, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#12, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#12, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,959]DEBUG  9218[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=12, orderStatusName=Pending}
[2017-10-14 22:36:57,959]DEBUG  9218[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,959]DEBUG  9218[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID5_6_, this_.Assigne as Assigne5_6_, this_.Customer as Customer5_6_, this_.DeliveryDate as Delivery2_5_6_, this_.IsGift as IsGift5_6_, this_.MaxDiscount as MaxDisco4_5_6_, this_.OrderDate as OrderDate5_6_, this_.OrderName as OrderName5_6_, this_.OrderNumber as OrderNum7_5_6_, this_.OrderStatusRef as OrderSt12_5_6_, this_.PreferableDeliveryDate as Preferab8_5_6_, this_.TotalPrice as TotalPrice5_6_, user2_.ID as ID3_0_, user2_.IsUserActive as IsUserAc2_3_0_, user2_.Balance as Balance3_0_, user2_.CustomerTypeRef as Customer9_3_0_, user2_.Email as Email3_0_, user2_.FirstName as FirstName3_0_, user2_.LastName as LastName3_0_, user2_.Login as Login3_0_, user2_.Password as Password3_0_, user2_.RegionRef as RegionRef3_0_, user2_.RoleRef as RoleRef3_0_, customerty3_.ID as ID2_1_, customerty3_.Discount as Discount2_1_, customerty3_.MaxRange as MaxRange2_1_, customerty3_.MinRange as MinRange2_1_, customerty3_.TypeName as TypeName2_1_, region4_.ID as ID1_2_, region4_.RegionName as RegionName1_2_, role5_.ID as ID0_3_, role5_.RoleName as RoleName0_3_, user6_.ID as ID3_4_, user6_.IsUserActive as IsUserAc2_3_4_, user6_.Balance as Balance3_4_, user6_.CustomerTypeRef as Customer9_3_4_, user6_.Email as Email3_4_, user6_.FirstName as FirstName3_4_, user6_.LastName as LastName3_4_, user6_.Login as Login3_4_, user6_.Password as Password3_4_, user6_.RegionRef as RegionRef3_4_, user6_.RoleRef as RoleRef3_4_, orderstatu7_.ID as ID4_5_, orderstatu7_.OrederStatusName as OrederSt2_4_5_ from Orders this_ left outer join Users user2_ on this_.Assigne=user2_.ID left outer join CustomerTypes customerty3_ on user2_.CustomerTypeRef=customerty3_.ID left outer join Regions region4_ on user2_.RegionRef=region4_.ID left outer join Roles role5_ on user2_.RoleRef=role5_.ID left outer join Users user6_ on this_.Customer=user6_.ID left outer join OrderStatuses orderstatu7_ on this_.OrderStatusRef=orderstatu7_.ID where this_.OrderDate<?
[2017-10-14 22:36:57,961]DEBUG  9220[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:57,961]DEBUG  9220[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#12], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#84], EntityKey[com.softserveinc.edu.oms.domain.entities.User#12], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#12], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#35]
[2017-10-14 22:36:57,962]DEBUG  9221[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#12], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#84], EntityKey[com.softserveinc.edu.oms.domain.entities.User#12], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#12], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#36]
[2017-10-14 22:36:57,962]DEBUG  9221[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#12], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#84], EntityKey[com.softserveinc.edu.oms.domain.entities.User#12], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#12], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#37]
[2017-10-14 22:36:57,962]DEBUG  9221[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:57,962]DEBUG  9221[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,962]DEBUG  9221[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:57,962]DEBUG  9221[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,962]DEBUG  9221[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,963]DEBUG  9222[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:57,963]DEBUG  9222[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,963]DEBUG  9222[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,963]DEBUG  9222[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#12, id=36, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#12, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#12, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,963]DEBUG  9222[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=12, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#84, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,963]DEBUG  9222[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=84, roleName=Administrator}
[2017-10-14 22:36:57,963]DEBUG  9222[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#12, id=35, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#12, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#12, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,964]DEBUG  9223[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#12, id=37, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#12, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#12, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,964]DEBUG  9223[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=12, orderStatusName=Pending}
[2017-10-14 22:36:57,964]DEBUG  9223[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,964]DEBUG  9223[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 22:36:57,964]DEBUG  9223[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,964]DEBUG  9223[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,964]DEBUG  9223[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,965]DEBUG  9224[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:57,965]DEBUG  9224[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,965]DEBUG  9224[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,965]DEBUG  9224[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#12, id=36, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#12, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#12, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,965]DEBUG  9224[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=12, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#84, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,965]DEBUG  9224[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=84, roleName=Administrator}
[2017-10-14 22:36:57,965]DEBUG  9224[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#12, id=35, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#12, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#12, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,965]DEBUG  9224[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#12, id=37, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#12, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#12, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,966]DEBUG  9225[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=12, orderStatusName=Pending}
[2017-10-14 22:36:57,966]DEBUG  9225[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,966]DEBUG  9225[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 22:36:57,966]DEBUG  9225[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,966]DEBUG  9225[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,966]DEBUG  9225[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,966]DEBUG  9225[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:57,967]DEBUG  9226[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,967]DEBUG  9226[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,967]DEBUG  9226[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#12, id=36, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#12, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#12, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,967]DEBUG  9226[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=12, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#84, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,967]DEBUG  9226[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=84, roleName=Administrator}
[2017-10-14 22:36:57,967]DEBUG  9226[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#12, id=35, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#12, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#12, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,967]DEBUG  9226[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#12, id=37, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#12, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#12, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,967]DEBUG  9226[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=12, orderStatusName=Pending}
[2017-10-14 22:36:57,967]DEBUG  9226[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,968]DEBUG  9227[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 22:36:57,968]DEBUG  9227[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,968]DEBUG  9227[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,968]DEBUG  9227[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,968]DEBUG  9227[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:57,968]DEBUG  9227[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,968]DEBUG  9227[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,969]DEBUG  9228[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#12, id=36, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#12, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#12, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,969]DEBUG  9228[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=12, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#84, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,969]DEBUG  9228[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=84, roleName=Administrator}
[2017-10-14 22:36:57,969]DEBUG  9228[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#12, id=35, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#12, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#12, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,969]DEBUG  9228[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#12, id=37, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#12, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#12, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,969]DEBUG  9228[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=12, orderStatusName=Pending}
[2017-10-14 22:36:57,969]DEBUG  9228[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,969]DEBUG  9228[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 22:36:57,970]DEBUG  9229[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,970]DEBUG  9229[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,970]DEBUG  9229[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,970]DEBUG  9229[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:57,970]DEBUG  9229[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,970]DEBUG  9229[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,970]DEBUG  9229[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#12, id=36, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#12, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#12, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,971]DEBUG  9230[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=12, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#84, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,971]DEBUG  9230[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=84, roleName=Administrator}
[2017-10-14 22:36:57,971]DEBUG  9230[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#12, id=35, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#12, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#12, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,971]DEBUG  9230[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#12, id=37, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#12, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#12, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,971]DEBUG  9230[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=12, orderStatusName=Pending}
[2017-10-14 22:36:57,971]DEBUG  9230[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,971]DEBUG  9230[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 22:36:57,972]DEBUG  9231[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,972]DEBUG  9231[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,972]DEBUG  9231[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,972]DEBUG  9231[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:57,972]DEBUG  9231[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,972]DEBUG  9231[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,972]DEBUG  9231[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#12, id=36, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#12, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#12, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,973]DEBUG  9232[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=12, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#84, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,973]DEBUG  9232[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=84, roleName=Administrator}
[2017-10-14 22:36:57,973]DEBUG  9232[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#12, id=35, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#12, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#12, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,973]DEBUG  9232[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#12, id=37, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#12, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#12, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,973]DEBUG  9232[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=12, orderStatusName=Pending}
[2017-10-14 22:36:57,973]DEBUG  9232[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,973]DEBUG  9232[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 22:36:57,973]DEBUG  9232[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,974]DEBUG  9233[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,974]DEBUG  9233[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,974]DEBUG  9233[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:57,974]DEBUG  9233[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,974]DEBUG  9233[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,974]DEBUG  9233[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#12, id=36, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#12, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#12, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,974]DEBUG  9233[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=12, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#84, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,974]DEBUG  9233[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=84, roleName=Administrator}
[2017-10-14 22:36:57,975]DEBUG  9234[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#12, id=35, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#12, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#12, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,975]DEBUG  9234[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#12, id=37, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#12, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#12, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,975]DEBUG  9234[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=12, orderStatusName=Pending}
[2017-10-14 22:36:57,975]DEBUG  9234[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,975]DEBUG  9234[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 22:36:57,975]DEBUG  9234[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,975]DEBUG  9234[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,976]DEBUG  9235[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,976]DEBUG  9235[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:57,976]DEBUG  9235[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,976]DEBUG  9235[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,976]DEBUG  9235[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#12, id=36, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#12, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#12, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,976]DEBUG  9235[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=12, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#84, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,976]DEBUG  9235[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=84, roleName=Administrator}
[2017-10-14 22:36:57,976]DEBUG  9235[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#12, id=35, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#12, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#12, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,977]DEBUG  9236[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#12, id=37, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#12, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#12, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,977]DEBUG  9236[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=12, orderStatusName=Pending}
[2017-10-14 22:36:57,977]DEBUG  9236[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,977]DEBUG  9236[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 22:36:57,977]DEBUG  9236[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,977]DEBUG  9236[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:57,977]DEBUG  9236[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:57,977]DEBUG  9236[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:57,978]DEBUG  9237[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:57,978]DEBUG  9237[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:57,978]DEBUG  9237[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#12, id=36, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#12, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#12, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,978]DEBUG  9237[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=12, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#84, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:57,978]DEBUG  9237[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=84, roleName=Administrator}
[2017-10-14 22:36:57,978]DEBUG  9237[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#12, id=35, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#12, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#12, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,978]DEBUG  9237[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#12, id=37, orderDate=Sat Oct 14 22:36:57 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:57 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#12, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#12, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:57,978]DEBUG  9237[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=12, orderStatusName=Pending}
[2017-10-14 22:36:57,978]DEBUG  9237[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:57,979]DEBUG  9238[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 22:36:57,979]DEBUG  9238[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:57,979]DEBUG  9238[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@4481290d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@3cfa608d, testMethod = testFindByOrderDateLess@OrderDaoTest, testException = [null]]]
[2017-10-14 22:36:57,979]DEBUG  9238[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 22:36:57,979]DEBUG  9238[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@41e3bda]
[2017-10-14 22:36:57,979]DEBUG  9238[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 22:36:58,013]DEBUG  9272[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 22:36:58,014]DEBUG  9273[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:58,014]DEBUG  9273[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@41e3bda] after transaction
[2017-10-14 22:36:58,014]DEBUG  9273[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 22:36:58,014]DEBUG  9273[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 22:36:58,015]DEBUG  9274[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:58,015] INFO  9274[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@4481290d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@3cfa608d, testMethod = testFindByOrderDateLess@OrderDaoTest, testException = [null]]]
[2017-10-14 22:36:58,016]DEBUG  9275[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@4481290d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@3cfa608d, testMethod = testFindByOrderDateLess@OrderDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 22:36:58,017]DEBUG  9276[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2017-10-14 22:36:58,017]DEBUG  9276[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2017-10-14 22:36:58,017]DEBUG  9276[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@4481290d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@1869be91, testMethod = [null], testException = [null]]].
[2017-10-14 22:36:58,018]DEBUG  9277[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 22:36:58,018]DEBUG  9277[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 22:36:58,018]DEBUG  9277[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 22:36:58,018]DEBUG  9277[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 22:36:58,018]DEBUG  9277[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 22:36:58,019]DEBUG  9278[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 22:36:58,019]DEBUG  9278[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 22:36:58,019]DEBUG  9278[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 22:36:58,019]DEBUG  9278[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 22:36:58,019]DEBUG  9278[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 22:36:58,020]DEBUG  9279[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 22:36:58,020]DEBUG  9279[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 22:36:58,020]DEBUG  9279[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 22:36:58,020]DEBUG  9279[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 22:36:58,020]DEBUG  9279[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 22:36:58,021]DEBUG  9280[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 22:36:58,021]DEBUG  9280[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 22:36:58,021]DEBUG  9280[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 22:36:58,021]DEBUG  9280[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 22:36:58,021]DEBUG  9280[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 22:36:58,022]DEBUG  9281[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 22:36:58,022]DEBUG  9281[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 22:36:58,022]DEBUG  9281[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@1869be91]
[2017-10-14 22:36:58,023]DEBUG  9282[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByOrderStatus' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:58,023]DEBUG  9282[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@4481290d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@1869be91, testMethod = testFindByOrderStatus@OrderDaoTest, testException = [null]]]
[2017-10-14 22:36:58,023]DEBUG  9282[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 22:36:58,025]DEBUG  9284[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByOrderStatus]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:58,025]DEBUG  9284[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15080098180
[2017-10-14 22:36:58,025]DEBUG  9284[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@3131ce6c] for Hibernate transaction
[2017-10-14 22:36:58,025]DEBUG  9284[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@3131ce6c]
[2017-10-14 22:36:58,026]DEBUG  9285[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 22:36:58,026]DEBUG  9285[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 22:36:58,026]DEBUG  9285[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 22:36:58,026]DEBUG  9285[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@4481290d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@1869be91, testMethod = testFindByOrderStatus@OrderDaoTest, testException = [null]]]
[2017-10-14 22:36:58,026] INFO  9285[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (13): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@598b619b]; rollback [true]
[2017-10-14 22:36:58,027]DEBUG  9286[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,027]DEBUG  9286[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 22:36:58,028]DEBUG  9287[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,028]DEBUG  9287[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,028]DEBUG  9287[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 22:36:58,029]DEBUG  9288[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,029]DEBUG  9288[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,029]DEBUG  9288[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 22:36:58,030]DEBUG  9289[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,030]DEBUG  9289[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,030]DEBUG  9289[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 22:36:58,031]DEBUG  9290[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,031]DEBUG  9290[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,032]DEBUG  9291[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 22:36:58,032]DEBUG  9291[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,032]DEBUG  9291[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,033]DEBUG  9292[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 22:36:58,033]DEBUG  9292[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,034]DEBUG  9293[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,034]DEBUG  9293[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 22:36:58,034]DEBUG  9293[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,035]DEBUG  9294[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,035]DEBUG  9294[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 22:36:58,035]DEBUG  9294[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,036]DEBUG  9295[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,036]DEBUG  9295[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 22:36:58,036]DEBUG  9295[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,037]DEBUG  9296[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:58,037]DEBUG  9296[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,037]DEBUG  9296[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName) values (?)
[2017-10-14 22:36:58,038]DEBUG  9297[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 13
[2017-10-14 22:36:58,039]DEBUG  9298[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,039]DEBUG  9298[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:58,039]DEBUG  9298[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,040]DEBUG  9299[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 22:36:58,040]DEBUG  9299[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 85
[2017-10-14 22:36:58,041]DEBUG  9300[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,041]DEBUG  9300[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:58,041]DEBUG  9300[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,042]DEBUG  9301[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Users (IsUserActive, Balance, CustomerTypeRef, Email, FirstName, LastName, Login, Password, RegionRef, RoleRef) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 22:36:58,043]DEBUG  9302[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 13
[2017-10-14 22:36:58,043]DEBUG  9302[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,043]DEBUG  9302[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:58,044]DEBUG  9303[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,044]DEBUG  9303[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 22:36:58,045]DEBUG  9304[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 38
[2017-10-14 22:36:58,045]DEBUG  9304[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,046]DEBUG  9305[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:58,046]DEBUG  9305[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,047]DEBUG  9306[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 22:36:58,048]DEBUG  9307[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 39
[2017-10-14 22:36:58,048]DEBUG  9307[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,049]DEBUG  9308[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:58,049]DEBUG  9308[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,049]DEBUG  9308[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 22:36:58,049]DEBUG  9308[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 40
[2017-10-14 22:36:58,050]DEBUG  9309[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,051]DEBUG  9310[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:58,051]DEBUG  9310[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:58,051]DEBUG  9310[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:58,051]DEBUG  9310[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:58,051]DEBUG  9310[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:58,051]DEBUG  9310[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=13, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#85, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:58,052]DEBUG  9311[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#13, id=38, orderDate=Sat Oct 14 22:36:58 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:58 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#13, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#13, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:58,052]DEBUG  9311[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=85, roleName=Administrator}
[2017-10-14 22:36:58,052]DEBUG  9311[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=13, orderStatusName=Pending}
[2017-10-14 22:36:58,052]DEBUG  9311[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#13, id=40, orderDate=Sat Oct 14 22:36:58 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:58 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#13, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#13, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:58,052]DEBUG  9311[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#13, id=39, orderDate=Sat Oct 14 22:36:58 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:58 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#13, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#13, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:58,052]DEBUG  9311[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,052]DEBUG  9311[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID5_6_, this_.Assigne as Assigne5_6_, this_.Customer as Customer5_6_, this_.DeliveryDate as Delivery2_5_6_, this_.IsGift as IsGift5_6_, this_.MaxDiscount as MaxDisco4_5_6_, this_.OrderDate as OrderDate5_6_, this_.OrderName as OrderName5_6_, this_.OrderNumber as OrderNum7_5_6_, this_.OrderStatusRef as OrderSt12_5_6_, this_.PreferableDeliveryDate as Preferab8_5_6_, this_.TotalPrice as TotalPrice5_6_, user2_.ID as ID3_0_, user2_.IsUserActive as IsUserAc2_3_0_, user2_.Balance as Balance3_0_, user2_.CustomerTypeRef as Customer9_3_0_, user2_.Email as Email3_0_, user2_.FirstName as FirstName3_0_, user2_.LastName as LastName3_0_, user2_.Login as Login3_0_, user2_.Password as Password3_0_, user2_.RegionRef as RegionRef3_0_, user2_.RoleRef as RoleRef3_0_, customerty3_.ID as ID2_1_, customerty3_.Discount as Discount2_1_, customerty3_.MaxRange as MaxRange2_1_, customerty3_.MinRange as MinRange2_1_, customerty3_.TypeName as TypeName2_1_, region4_.ID as ID1_2_, region4_.RegionName as RegionName1_2_, role5_.ID as ID0_3_, role5_.RoleName as RoleName0_3_, user6_.ID as ID3_4_, user6_.IsUserActive as IsUserAc2_3_4_, user6_.Balance as Balance3_4_, user6_.CustomerTypeRef as Customer9_3_4_, user6_.Email as Email3_4_, user6_.FirstName as FirstName3_4_, user6_.LastName as LastName3_4_, user6_.Login as Login3_4_, user6_.Password as Password3_4_, user6_.RegionRef as RegionRef3_4_, user6_.RoleRef as RoleRef3_4_, orderstatu7_.ID as ID4_5_, orderstatu7_.OrederStatusName as OrederSt2_4_5_ from Orders this_ left outer join Users user2_ on this_.Assigne=user2_.ID left outer join CustomerTypes customerty3_ on user2_.CustomerTypeRef=customerty3_.ID left outer join Regions region4_ on user2_.RegionRef=region4_.ID left outer join Roles role5_ on user2_.RoleRef=role5_.ID left outer join Users user6_ on this_.Customer=user6_.ID left outer join OrderStatuses orderstatu7_ on this_.OrderStatusRef=orderstatu7_.ID where this_.OrderStatusRef=?
[2017-10-14 22:36:58,054]DEBUG  9313[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:58,055]DEBUG  9314[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#13], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#85], EntityKey[com.softserveinc.edu.oms.domain.entities.User#13], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#13], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#38]
[2017-10-14 22:36:58,055]DEBUG  9314[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#13], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#85], EntityKey[com.softserveinc.edu.oms.domain.entities.User#13], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#13], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#39]
[2017-10-14 22:36:58,055]DEBUG  9314[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#13], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#85], EntityKey[com.softserveinc.edu.oms.domain.entities.User#13], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#13], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#40]
[2017-10-14 22:36:58,055]DEBUG  9314[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:58,056]DEBUG  9315[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,056]DEBUG  9315[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:58,056]DEBUG  9315[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:58,056]DEBUG  9315[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:58,056]DEBUG  9315[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:58,057]DEBUG  9316[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:58,057]DEBUG  9316[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:58,057]DEBUG  9316[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=13, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#85, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:58,057]DEBUG  9316[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#13, id=38, orderDate=Sat Oct 14 22:36:58 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:58 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#13, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#13, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:58,057]DEBUG  9316[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=85, roleName=Administrator}
[2017-10-14 22:36:58,057]DEBUG  9316[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=13, orderStatusName=Pending}
[2017-10-14 22:36:58,057]DEBUG  9316[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#13, id=40, orderDate=Sat Oct 14 22:36:58 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:58 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#13, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#13, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:58,057]DEBUG  9316[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#13, id=39, orderDate=Sat Oct 14 22:36:58 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:58 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#13, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#13, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:58,058]DEBUG  9317[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,058]DEBUG  9317[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 22:36:58,058]DEBUG  9317[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,058]DEBUG  9317[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:58,058]DEBUG  9317[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:58,059]DEBUG  9318[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:58,059]DEBUG  9318[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:58,059]DEBUG  9318[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:58,059]DEBUG  9318[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=13, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#85, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:58,059]DEBUG  9318[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#13, id=38, orderDate=Sat Oct 14 22:36:58 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:58 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#13, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#13, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:58,059]DEBUG  9318[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=85, roleName=Administrator}
[2017-10-14 22:36:58,059]DEBUG  9318[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=13, orderStatusName=Pending}
[2017-10-14 22:36:58,060]DEBUG  9319[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#13, id=40, orderDate=Sat Oct 14 22:36:58 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:58 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#13, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#13, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:58,060]DEBUG  9319[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#13, id=39, orderDate=Sat Oct 14 22:36:58 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:58 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#13, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#13, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:58,060]DEBUG  9319[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,060]DEBUG  9319[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 22:36:58,063]DEBUG  9322[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,064]DEBUG  9323[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:58,064]DEBUG  9323[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:58,064]DEBUG  9323[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:58,064]DEBUG  9323[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:58,064]DEBUG  9323[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:58,064]DEBUG  9323[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=13, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#85, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:58,065]DEBUG  9324[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#13, id=38, orderDate=Sat Oct 14 22:36:58 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:58 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#13, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#13, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:58,065]DEBUG  9324[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=85, roleName=Administrator}
[2017-10-14 22:36:58,065]DEBUG  9324[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=13, orderStatusName=Pending}
[2017-10-14 22:36:58,065]DEBUG  9324[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#13, id=40, orderDate=Sat Oct 14 22:36:58 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:58 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#13, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#13, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:58,065]DEBUG  9324[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#13, id=39, orderDate=Sat Oct 14 22:36:58 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:58 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#13, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#13, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:58,065]DEBUG  9324[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,065]DEBUG  9324[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 22:36:58,066]DEBUG  9325[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,066]DEBUG  9325[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:58,066]DEBUG  9325[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:58,066]DEBUG  9325[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:58,066]DEBUG  9325[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:58,067]DEBUG  9326[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:58,067]DEBUG  9326[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=13, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#85, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:58,067]DEBUG  9326[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#13, id=38, orderDate=Sat Oct 14 22:36:58 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:58 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#13, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#13, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:58,067]DEBUG  9326[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=85, roleName=Administrator}
[2017-10-14 22:36:58,067]DEBUG  9326[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=13, orderStatusName=Pending}
[2017-10-14 22:36:58,067]DEBUG  9326[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#13, id=40, orderDate=Sat Oct 14 22:36:58 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:58 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#13, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#13, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:58,067]DEBUG  9326[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#13, id=39, orderDate=Sat Oct 14 22:36:58 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:58 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#13, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#13, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:58,067]DEBUG  9326[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,068]DEBUG  9327[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 22:36:58,068]DEBUG  9327[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,068]DEBUG  9327[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:58,068]DEBUG  9327[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:58,069]DEBUG  9328[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:58,069]DEBUG  9328[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:58,069]DEBUG  9328[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:58,069]DEBUG  9328[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=13, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#85, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:58,069]DEBUG  9328[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#13, id=38, orderDate=Sat Oct 14 22:36:58 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:58 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#13, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#13, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:58,069]DEBUG  9328[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=85, roleName=Administrator}
[2017-10-14 22:36:58,069]DEBUG  9328[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=13, orderStatusName=Pending}
[2017-10-14 22:36:58,069]DEBUG  9328[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#13, id=40, orderDate=Sat Oct 14 22:36:58 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:58 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#13, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#13, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:58,069]DEBUG  9328[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#13, id=39, orderDate=Sat Oct 14 22:36:58 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:58 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#13, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#13, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:58,070]DEBUG  9329[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,070]DEBUG  9329[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 22:36:58,070]DEBUG  9329[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,070]DEBUG  9329[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:58,070]DEBUG  9329[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:58,071]DEBUG  9330[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:58,071]DEBUG  9330[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:58,071]DEBUG  9330[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:58,071]DEBUG  9330[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=13, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#85, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:58,071]DEBUG  9330[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#13, id=38, orderDate=Sat Oct 14 22:36:58 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:58 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#13, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#13, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:58,071]DEBUG  9330[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=85, roleName=Administrator}
[2017-10-14 22:36:58,071]DEBUG  9330[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=13, orderStatusName=Pending}
[2017-10-14 22:36:58,071]DEBUG  9330[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#13, id=40, orderDate=Sat Oct 14 22:36:58 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:58 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#13, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#13, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:58,071]DEBUG  9330[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#13, id=39, orderDate=Sat Oct 14 22:36:58 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:58 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#13, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#13, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:58,072]DEBUG  9331[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,072]DEBUG  9331[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 22:36:58,072]DEBUG  9331[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,072]DEBUG  9331[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:58,072]DEBUG  9331[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:58,072]DEBUG  9331[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:58,073]DEBUG  9332[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:58,073]DEBUG  9332[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:58,073]DEBUG  9332[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=13, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#85, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:58,073]DEBUG  9332[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#13, id=38, orderDate=Sat Oct 14 22:36:58 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:58 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#13, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#13, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:58,073]DEBUG  9332[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=85, roleName=Administrator}
[2017-10-14 22:36:58,073]DEBUG  9332[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=13, orderStatusName=Pending}
[2017-10-14 22:36:58,073]DEBUG  9332[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#13, id=40, orderDate=Sat Oct 14 22:36:58 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:58 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#13, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#13, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:58,073]DEBUG  9332[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#13, id=39, orderDate=Sat Oct 14 22:36:58 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:58 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#13, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#13, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:58,074]DEBUG  9333[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,074]DEBUG  9333[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 22:36:58,074]DEBUG  9333[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,074]DEBUG  9333[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:58,074]DEBUG  9333[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:58,074]DEBUG  9333[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:58,075]DEBUG  9334[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:58,075]DEBUG  9334[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:58,075]DEBUG  9334[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=13, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#85, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:58,075]DEBUG  9334[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#13, id=38, orderDate=Sat Oct 14 22:36:58 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:58 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#13, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#13, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:58,075]DEBUG  9334[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=85, roleName=Administrator}
[2017-10-14 22:36:58,075]DEBUG  9334[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=13, orderStatusName=Pending}
[2017-10-14 22:36:58,075]DEBUG  9334[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#13, id=40, orderDate=Sat Oct 14 22:36:58 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:58 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#13, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#13, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:58,075]DEBUG  9334[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#13, id=39, orderDate=Sat Oct 14 22:36:58 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:58 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#13, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#13, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:58,075]DEBUG  9334[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,076]DEBUG  9335[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 22:36:58,076]DEBUG  9335[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,076]DEBUG  9335[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:58,076]DEBUG  9335[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:58,076]DEBUG  9335[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:58,076]DEBUG  9335[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:58,077]DEBUG  9336[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:58,077]DEBUG  9336[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=13, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#85, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:58,077]DEBUG  9336[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#13, id=38, orderDate=Sat Oct 14 22:36:58 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:58 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#13, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#13, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:58,077]DEBUG  9336[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=85, roleName=Administrator}
[2017-10-14 22:36:58,077]DEBUG  9336[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=13, orderStatusName=Pending}
[2017-10-14 22:36:58,077]DEBUG  9336[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#13, id=40, orderDate=Sat Oct 14 22:36:58 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:58 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#13, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#13, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:58,077]DEBUG  9336[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#13, id=39, orderDate=Sat Oct 14 22:36:58 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:58 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#13, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#13, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:58,077]DEBUG  9336[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,078]DEBUG  9337[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 22:36:58,078]DEBUG  9337[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,078]DEBUG  9337[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@4481290d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@1869be91, testMethod = testFindByOrderStatus@OrderDaoTest, testException = [null]]]
[2017-10-14 22:36:58,078]DEBUG  9337[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 22:36:58,078]DEBUG  9337[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@3131ce6c]
[2017-10-14 22:36:58,078]DEBUG  9337[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 22:36:58,113]DEBUG  9372[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 22:36:58,114]DEBUG  9373[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:58,114]DEBUG  9373[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@3131ce6c] after transaction
[2017-10-14 22:36:58,114]DEBUG  9373[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 22:36:58,114]DEBUG  9373[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 22:36:58,115]DEBUG  9374[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:58,115] INFO  9374[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@4481290d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@1869be91, testMethod = testFindByOrderStatus@OrderDaoTest, testException = [null]]]
[2017-10-14 22:36:58,116]DEBUG  9375[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@4481290d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@1869be91, testMethod = testFindByOrderStatus@OrderDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 22:36:58,117]DEBUG  9376[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2017-10-14 22:36:58,117]DEBUG  9376[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2017-10-14 22:36:58,117]DEBUG  9376[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@4481290d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@3957edeb, testMethod = [null], testException = [null]]].
[2017-10-14 22:36:58,118]DEBUG  9377[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 22:36:58,118]DEBUG  9377[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 22:36:58,118]DEBUG  9377[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 22:36:58,118]DEBUG  9377[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 22:36:58,118]DEBUG  9377[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 22:36:58,119]DEBUG  9378[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 22:36:58,119]DEBUG  9378[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 22:36:58,119]DEBUG  9378[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 22:36:58,119]DEBUG  9378[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 22:36:58,119]DEBUG  9378[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 22:36:58,120]DEBUG  9379[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 22:36:58,120]DEBUG  9379[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 22:36:58,120]DEBUG  9379[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 22:36:58,120]DEBUG  9379[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 22:36:58,120]DEBUG  9379[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 22:36:58,121]DEBUG  9380[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 22:36:58,121]DEBUG  9380[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 22:36:58,121]DEBUG  9380[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 22:36:58,121]DEBUG  9380[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 22:36:58,121]DEBUG  9380[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 22:36:58,122]DEBUG  9381[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 22:36:58,122]DEBUG  9381[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 22:36:58,122]DEBUG  9381[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@3957edeb]
[2017-10-14 22:36:58,123]DEBUG  9382[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindFindById' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:58,123]DEBUG  9382[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@4481290d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@3957edeb, testMethod = testFindFindById@OrderDaoTest, testException = [null]]]
[2017-10-14 22:36:58,123]DEBUG  9382[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 22:36:58,125]DEBUG  9384[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindFindById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:58,125]DEBUG  9384[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15080098181
[2017-10-14 22:36:58,125]DEBUG  9384[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@69c76f7e] for Hibernate transaction
[2017-10-14 22:36:58,125]DEBUG  9384[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@69c76f7e]
[2017-10-14 22:36:58,126]DEBUG  9385[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 22:36:58,126]DEBUG  9385[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 22:36:58,126]DEBUG  9385[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 22:36:58,126]DEBUG  9385[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@4481290d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@3957edeb, testMethod = testFindFindById@OrderDaoTest, testException = [null]]]
[2017-10-14 22:36:58,126] INFO  9385[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (14): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@598b619b]; rollback [true]
[2017-10-14 22:36:58,127]DEBUG  9386[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,127]DEBUG  9386[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 22:36:58,128]DEBUG  9387[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,128]DEBUG  9387[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,128]DEBUG  9387[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 22:36:58,129]DEBUG  9388[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,129]DEBUG  9388[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,129]DEBUG  9388[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 22:36:58,129]DEBUG  9388[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,129]DEBUG  9388[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,129]DEBUG  9388[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 22:36:58,130]DEBUG  9389[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,130]DEBUG  9389[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,130]DEBUG  9389[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 22:36:58,130]DEBUG  9389[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,130]DEBUG  9389[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,130]DEBUG  9389[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 22:36:58,131]DEBUG  9390[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,131]DEBUG  9390[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,131]DEBUG  9390[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 22:36:58,131]DEBUG  9390[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,131]DEBUG  9390[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,131]DEBUG  9390[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 22:36:58,131]DEBUG  9390[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,132]DEBUG  9391[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,132]DEBUG  9391[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 22:36:58,132]DEBUG  9391[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,132]DEBUG  9391[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:58,132]DEBUG  9391[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,132]DEBUG  9391[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName) values (?)
[2017-10-14 22:36:58,133]DEBUG  9392[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 14
[2017-10-14 22:36:58,133]DEBUG  9392[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,133]DEBUG  9392[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:58,133]DEBUG  9392[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,133]DEBUG  9392[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 22:36:58,134]DEBUG  9393[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 86
[2017-10-14 22:36:58,134]DEBUG  9393[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,134]DEBUG  9393[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:58,134]DEBUG  9393[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,134]DEBUG  9393[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Users (IsUserActive, Balance, CustomerTypeRef, Email, FirstName, LastName, Login, Password, RegionRef, RoleRef) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 22:36:58,135]DEBUG  9394[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 14
[2017-10-14 22:36:58,135]DEBUG  9394[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,135]DEBUG  9394[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:58,135]DEBUG  9394[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,135]DEBUG  9394[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 22:36:58,136]DEBUG  9395[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 41
[2017-10-14 22:36:58,136]DEBUG  9395[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,136]DEBUG  9395[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:58,136]DEBUG  9395[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,136]DEBUG  9395[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 22:36:58,137]DEBUG  9396[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 42
[2017-10-14 22:36:58,137]DEBUG  9396[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,137]DEBUG  9396[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:58,137]DEBUG  9396[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,137]DEBUG  9396[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 22:36:58,138]DEBUG  9397[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 43
[2017-10-14 22:36:58,138]DEBUG  9397[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,139]DEBUG  9398[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:58,139]DEBUG  9398[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:58,139]DEBUG  9398[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:58,139]DEBUG  9398[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:58,139]DEBUG  9398[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:58,140]DEBUG  9399[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#14, id=42, orderDate=Sat Oct 14 22:36:58 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:58 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#14, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#14, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:58,140]DEBUG  9399[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=14, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#86, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:58,140]DEBUG  9399[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#14, id=41, orderDate=Sat Oct 14 22:36:58 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:58 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#14, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#14, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:58,140]DEBUG  9399[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#14, id=43, orderDate=Sat Oct 14 22:36:58 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:58 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#14, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#14, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:58,140]DEBUG  9399[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=86, roleName=Administrator}
[2017-10-14 22:36:58,140]DEBUG  9399[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=14, orderStatusName=Pending}
[2017-10-14 22:36:58,140]DEBUG  9399[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,140]DEBUG  9399[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID5_6_, this_.Assigne as Assigne5_6_, this_.Customer as Customer5_6_, this_.DeliveryDate as Delivery2_5_6_, this_.IsGift as IsGift5_6_, this_.MaxDiscount as MaxDisco4_5_6_, this_.OrderDate as OrderDate5_6_, this_.OrderName as OrderName5_6_, this_.OrderNumber as OrderNum7_5_6_, this_.OrderStatusRef as OrderSt12_5_6_, this_.PreferableDeliveryDate as Preferab8_5_6_, this_.TotalPrice as TotalPrice5_6_, user2_.ID as ID3_0_, user2_.IsUserActive as IsUserAc2_3_0_, user2_.Balance as Balance3_0_, user2_.CustomerTypeRef as Customer9_3_0_, user2_.Email as Email3_0_, user2_.FirstName as FirstName3_0_, user2_.LastName as LastName3_0_, user2_.Login as Login3_0_, user2_.Password as Password3_0_, user2_.RegionRef as RegionRef3_0_, user2_.RoleRef as RoleRef3_0_, customerty3_.ID as ID2_1_, customerty3_.Discount as Discount2_1_, customerty3_.MaxRange as MaxRange2_1_, customerty3_.MinRange as MinRange2_1_, customerty3_.TypeName as TypeName2_1_, region4_.ID as ID1_2_, region4_.RegionName as RegionName1_2_, role5_.ID as ID0_3_, role5_.RoleName as RoleName0_3_, user6_.ID as ID3_4_, user6_.IsUserActive as IsUserAc2_3_4_, user6_.Balance as Balance3_4_, user6_.CustomerTypeRef as Customer9_3_4_, user6_.Email as Email3_4_, user6_.FirstName as FirstName3_4_, user6_.LastName as LastName3_4_, user6_.Login as Login3_4_, user6_.Password as Password3_4_, user6_.RegionRef as RegionRef3_4_, user6_.RoleRef as RoleRef3_4_, orderstatu7_.ID as ID4_5_, orderstatu7_.OrederStatusName as OrederSt2_4_5_ from Orders this_ left outer join Users user2_ on this_.Assigne=user2_.ID left outer join CustomerTypes customerty3_ on user2_.CustomerTypeRef=customerty3_.ID left outer join Regions region4_ on user2_.RegionRef=region4_.ID left outer join Roles role5_ on user2_.RoleRef=role5_.ID left outer join Users user6_ on this_.Customer=user6_.ID left outer join OrderStatuses orderstatu7_ on this_.OrderStatusRef=orderstatu7_.ID
[2017-10-14 22:36:58,141]DEBUG  9400[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:58,142]DEBUG  9401[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#14], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#86], EntityKey[com.softserveinc.edu.oms.domain.entities.User#14], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#14], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#41]
[2017-10-14 22:36:58,142]DEBUG  9401[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#14], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#86], EntityKey[com.softserveinc.edu.oms.domain.entities.User#14], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#14], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#42]
[2017-10-14 22:36:58,142]DEBUG  9401[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.User#14], null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Role#86], EntityKey[com.softserveinc.edu.oms.domain.entities.User#14], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#14], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#43]
[2017-10-14 22:36:58,143]DEBUG  9402[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:58,143]DEBUG  9402[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,143]DEBUG  9402[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:58,143]DEBUG  9402[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:58,143]DEBUG  9402[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:58,143]DEBUG  9402[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:58,143]DEBUG  9402[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:58,143]DEBUG  9402[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:58,144]DEBUG  9403[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#14, id=42, orderDate=Sat Oct 14 22:36:58 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:58 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#14, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#14, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:58,144]DEBUG  9403[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=14, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#86, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:58,144]DEBUG  9403[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#14, id=41, orderDate=Sat Oct 14 22:36:58 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:58 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#14, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#14, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:58,144]DEBUG  9403[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#14, id=43, orderDate=Sat Oct 14 22:36:58 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:58 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#14, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#14, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:58,144]DEBUG  9403[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=86, roleName=Administrator}
[2017-10-14 22:36:58,144]DEBUG  9403[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=14, orderStatusName=Pending}
[2017-10-14 22:36:58,144]DEBUG  9403[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,144]DEBUG  9403[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 22:36:58,145]DEBUG  9404[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,145]DEBUG  9404[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:58,145]DEBUG  9404[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:58,145]DEBUG  9404[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:58,145]DEBUG  9404[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:58,145]DEBUG  9404[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:58,145]DEBUG  9404[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#14, id=42, orderDate=Sat Oct 14 22:36:58 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:58 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#14, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#14, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:58,146]DEBUG  9405[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=14, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#86, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:58,146]DEBUG  9405[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#14, id=41, orderDate=Sat Oct 14 22:36:58 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:58 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#14, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#14, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:58,146]DEBUG  9405[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#14, id=43, orderDate=Sat Oct 14 22:36:58 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:58 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#14, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#14, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:58,146]DEBUG  9405[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=86, roleName=Administrator}
[2017-10-14 22:36:58,146]DEBUG  9405[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=14, orderStatusName=Pending}
[2017-10-14 22:36:58,146]DEBUG  9405[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,146]DEBUG  9405[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 22:36:58,146]DEBUG  9405[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,147]DEBUG  9406[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:58,147]DEBUG  9406[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:58,147]DEBUG  9406[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:58,147]DEBUG  9406[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:58,147]DEBUG  9406[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:58,147]DEBUG  9406[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#14, id=42, orderDate=Sat Oct 14 22:36:58 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:58 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#14, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#14, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:58,147]DEBUG  9406[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=14, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#86, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:58,147]DEBUG  9406[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#14, id=41, orderDate=Sat Oct 14 22:36:58 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:58 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#14, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#14, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:58,148]DEBUG  9407[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#14, id=43, orderDate=Sat Oct 14 22:36:58 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:58 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#14, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#14, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:58,148]DEBUG  9407[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=86, roleName=Administrator}
[2017-10-14 22:36:58,148]DEBUG  9407[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=14, orderStatusName=Pending}
[2017-10-14 22:36:58,148]DEBUG  9407[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,148]DEBUG  9407[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 22:36:58,148]DEBUG  9407[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,148]DEBUG  9407[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:58,149]DEBUG  9408[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:58,149]DEBUG  9408[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:58,149]DEBUG  9408[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:58,149]DEBUG  9408[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:58,149]DEBUG  9408[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#14, id=42, orderDate=Sat Oct 14 22:36:58 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:58 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#14, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#14, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:58,149]DEBUG  9408[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=14, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#86, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:58,149]DEBUG  9408[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#14, id=41, orderDate=Sat Oct 14 22:36:58 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:58 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#14, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#14, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:58,149]DEBUG  9408[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#14, id=43, orderDate=Sat Oct 14 22:36:58 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:58 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#14, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#14, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:58,150]DEBUG  9409[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=86, roleName=Administrator}
[2017-10-14 22:36:58,150]DEBUG  9409[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=14, orderStatusName=Pending}
[2017-10-14 22:36:58,150]DEBUG  9409[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,150]DEBUG  9409[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 22:36:58,150]DEBUG  9409[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,150]DEBUG  9409[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:58,150]DEBUG  9409[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:58,151]DEBUG  9410[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:58,151]DEBUG  9410[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:58,151]DEBUG  9410[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:58,151]DEBUG  9410[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#14, id=42, orderDate=Sat Oct 14 22:36:58 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:58 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#14, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#14, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:58,151]DEBUG  9410[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=14, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#86, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:58,151]DEBUG  9410[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#14, id=41, orderDate=Sat Oct 14 22:36:58 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:58 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#14, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#14, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:58,151]DEBUG  9410[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#14, id=43, orderDate=Sat Oct 14 22:36:58 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:58 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#14, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#14, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:58,152]DEBUG  9411[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=86, roleName=Administrator}
[2017-10-14 22:36:58,152]DEBUG  9411[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=14, orderStatusName=Pending}
[2017-10-14 22:36:58,152]DEBUG  9411[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,152]DEBUG  9411[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 22:36:58,152]DEBUG  9411[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,153]DEBUG  9412[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:58,153]DEBUG  9412[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:58,153]DEBUG  9412[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:58,153]DEBUG  9412[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:58,153]DEBUG  9412[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:58,153]DEBUG  9412[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#14, id=42, orderDate=Sat Oct 14 22:36:58 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:58 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#14, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#14, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:58,153]DEBUG  9412[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=14, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#86, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:58,154]DEBUG  9413[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#14, id=41, orderDate=Sat Oct 14 22:36:58 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:58 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#14, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#14, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:58,154]DEBUG  9413[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#14, id=43, orderDate=Sat Oct 14 22:36:58 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:58 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#14, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#14, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:58,154]DEBUG  9413[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=86, roleName=Administrator}
[2017-10-14 22:36:58,154]DEBUG  9413[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=14, orderStatusName=Pending}
[2017-10-14 22:36:58,154]DEBUG  9413[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,154]DEBUG  9413[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 22:36:58,154]DEBUG  9413[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,155]DEBUG  9414[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:58,155]DEBUG  9414[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:58,155]DEBUG  9414[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:58,155]DEBUG  9414[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:58,155]DEBUG  9414[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:58,155]DEBUG  9414[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#14, id=42, orderDate=Sat Oct 14 22:36:58 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:58 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#14, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#14, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:58,155]DEBUG  9414[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=14, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#86, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:58,156]DEBUG  9415[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#14, id=41, orderDate=Sat Oct 14 22:36:58 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:58 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#14, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#14, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:58,156]DEBUG  9415[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#14, id=43, orderDate=Sat Oct 14 22:36:58 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:58 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#14, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#14, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:58,156]DEBUG  9415[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=86, roleName=Administrator}
[2017-10-14 22:36:58,156]DEBUG  9415[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=14, orderStatusName=Pending}
[2017-10-14 22:36:58,156]DEBUG  9415[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,156]DEBUG  9415[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 22:36:58,156]DEBUG  9415[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,157]DEBUG  9416[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:58,157]DEBUG  9416[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:58,157]DEBUG  9416[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:58,157]DEBUG  9416[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:58,157]DEBUG  9416[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:58,158]DEBUG  9417[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#14, id=42, orderDate=Sat Oct 14 22:36:58 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:58 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#14, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#14, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:58,158]DEBUG  9417[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=14, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#86, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:58,158]DEBUG  9417[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#14, id=41, orderDate=Sat Oct 14 22:36:58 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:58 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#14, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#14, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:58,159]DEBUG  9418[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#14, id=43, orderDate=Sat Oct 14 22:36:58 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:58 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#14, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#14, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:58,159]DEBUG  9418[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=86, roleName=Administrator}
[2017-10-14 22:36:58,159]DEBUG  9418[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=14, orderStatusName=Pending}
[2017-10-14 22:36:58,159]DEBUG  9418[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,159]DEBUG  9418[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 22:36:58,160]DEBUG  9419[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,160]DEBUG  9419[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:58,161]DEBUG  9420[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:58,161]DEBUG  9420[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:58,161]DEBUG  9420[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:58,161]DEBUG  9420[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:58,162]DEBUG  9421[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#14, id=42, orderDate=Sat Oct 14 22:36:58 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:58 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#14, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#14, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:58,162]DEBUG  9421[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=14, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#86, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:58,162]DEBUG  9421[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#14, id=41, orderDate=Sat Oct 14 22:36:58 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:58 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#14, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#14, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:58,163]DEBUG  9422[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#14, id=43, orderDate=Sat Oct 14 22:36:58 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:58 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#14, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#14, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:58,163]DEBUG  9422[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=86, roleName=Administrator}
[2017-10-14 22:36:58,163]DEBUG  9422[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=14, orderStatusName=Pending}
[2017-10-14 22:36:58,163]DEBUG  9422[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,164]DEBUG  9423[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 22:36:58,164]DEBUG  9423[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,164]DEBUG  9423[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@4481290d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@3957edeb, testMethod = testFindFindById@OrderDaoTest, testException = [null]]]
[2017-10-14 22:36:58,165]DEBUG  9424[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 22:36:58,165]DEBUG  9424[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@69c76f7e]
[2017-10-14 22:36:58,165]DEBUG  9424[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 22:36:58,197]DEBUG  9456[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 22:36:58,197]DEBUG  9456[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:58,197]DEBUG  9456[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@69c76f7e] after transaction
[2017-10-14 22:36:58,197]DEBUG  9456[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 22:36:58,197]DEBUG  9456[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 22:36:58,197]DEBUG  9456[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:58,198] INFO  9457[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@4481290d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@3957edeb, testMethod = testFindFindById@OrderDaoTest, testException = [null]]]
[2017-10-14 22:36:58,198]DEBUG  9457[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@4481290d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@3957edeb, testMethod = testFindFindById@OrderDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 22:36:58,199]DEBUG  9458[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2017-10-14 22:36:58,199]DEBUG  9458[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest]
[2017-10-14 22:36:58,199]DEBUG  9458[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@4481290d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@1f3a0500, testMethod = [null], testException = [null]]].
[2017-10-14 22:36:58,199]DEBUG  9458[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 22:36:58,199]DEBUG  9458[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 22:36:58,199]DEBUG  9458[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 22:36:58,199]DEBUG  9458[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 22:36:58,199]DEBUG  9458[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 22:36:58,200]DEBUG  9459[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 22:36:58,200]DEBUG  9459[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 22:36:58,200]DEBUG  9459[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 22:36:58,200]DEBUG  9459[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 22:36:58,200]DEBUG  9459[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 22:36:58,200]DEBUG  9459[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 22:36:58,200]DEBUG  9459[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 22:36:58,200]DEBUG  9459[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 22:36:58,200]DEBUG  9459[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 22:36:58,200]DEBUG  9459[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 22:36:58,201]DEBUG  9460[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 22:36:58,201]DEBUG  9460[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 22:36:58,201]DEBUG  9460[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 22:36:58,201]DEBUG  9460[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 22:36:58,201]DEBUG  9460[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 22:36:58,201]DEBUG  9460[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 22:36:58,201]DEBUG  9460[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 22:36:58,201]DEBUG  9460[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@1f3a0500]
[2017-10-14 22:36:58,202]DEBUG  9461[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testContextFile' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:58,202]DEBUG  9461[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@4481290d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@1f3a0500, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2017-10-14 22:36:58,202]DEBUG  9461[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 22:36:58,204]DEBUG  9463[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testContextFile]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:58,204]DEBUG  9463[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15080098182
[2017-10-14 22:36:58,204]DEBUG  9463[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@90e1c5c] for Hibernate transaction
[2017-10-14 22:36:58,204]DEBUG  9463[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@90e1c5c]
[2017-10-14 22:36:58,204]DEBUG  9463[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 22:36:58,205]DEBUG  9464[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 22:36:58,205]DEBUG  9464[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 22:36:58,205]DEBUG  9464[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@4481290d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@1f3a0500, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2017-10-14 22:36:58,205] INFO  9464[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (15): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@598b619b]; rollback [true]
[2017-10-14 22:36:58,206]DEBUG  9465[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,206]DEBUG  9465[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 22:36:58,207]DEBUG  9466[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,207]DEBUG  9466[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,207]DEBUG  9466[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 22:36:58,208]DEBUG  9467[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,208]DEBUG  9467[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,208]DEBUG  9467[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 22:36:58,209]DEBUG  9468[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,209]DEBUG  9468[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,209]DEBUG  9468[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 22:36:58,209]DEBUG  9468[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,209]DEBUG  9468[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,209]DEBUG  9468[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 22:36:58,210]DEBUG  9469[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,210]DEBUG  9469[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,210]DEBUG  9469[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 22:36:58,210]DEBUG  9469[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,210]DEBUG  9469[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,210]DEBUG  9469[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 22:36:58,211]DEBUG  9470[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,211]DEBUG  9470[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,211]DEBUG  9470[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 22:36:58,211]DEBUG  9470[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,211]DEBUG  9470[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,211]DEBUG  9470[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 22:36:58,212]DEBUG  9471[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,212]DEBUG  9471[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:58,212]DEBUG  9471[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,212]DEBUG  9471[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName) values (?)
[2017-10-14 22:36:58,212]DEBUG  9471[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 15
[2017-10-14 22:36:58,213]DEBUG  9472[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,213]DEBUG  9472[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:58,213]DEBUG  9472[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,213]DEBUG  9472[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2017-10-14 22:36:58,213]DEBUG  9472[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 87
[2017-10-14 22:36:58,214]DEBUG  9473[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,214]DEBUG  9473[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:58,214]DEBUG  9473[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,214]DEBUG  9473[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Users (IsUserActive, Balance, CustomerTypeRef, Email, FirstName, LastName, Login, Password, RegionRef, RoleRef) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 22:36:58,215]DEBUG  9474[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 15
[2017-10-14 22:36:58,215]DEBUG  9474[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,215]DEBUG  9474[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:58,215]DEBUG  9474[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,215]DEBUG  9474[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 22:36:58,216]DEBUG  9475[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 44
[2017-10-14 22:36:58,216]DEBUG  9475[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,216]DEBUG  9475[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:58,216]DEBUG  9475[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,217]DEBUG  9476[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 22:36:58,217]DEBUG  9476[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 45
[2017-10-14 22:36:58,217]DEBUG  9476[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,217]DEBUG  9476[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:58,217]DEBUG  9476[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,218]DEBUG  9477[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 22:36:58,218]DEBUG  9477[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 46
[2017-10-14 22:36:58,218]DEBUG  9477[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,218]DEBUG  9477[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:58,219]DEBUG  9478[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:58,219]DEBUG  9478[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:58,219]DEBUG  9478[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:58,219]DEBUG  9478[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:58,219]DEBUG  9478[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=15, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#87, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:58,219]DEBUG  9478[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#15, id=44, orderDate=Sat Oct 14 22:36:58 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:58 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#15, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#15, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:58,219]DEBUG  9478[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=15, orderStatusName=Pending}
[2017-10-14 22:36:58,220]DEBUG  9479[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#15, id=45, orderDate=Sat Oct 14 22:36:58 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:58 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#15, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#15, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:58,220]DEBUG  9479[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#15, id=46, orderDate=Sat Oct 14 22:36:58 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:58 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#15, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#15, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:58,220]DEBUG  9479[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=87, roleName=Administrator}
[2017-10-14 22:36:58,220]DEBUG  9479[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,220]DEBUG  9479[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 22:36:58,220]DEBUG  9479[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,220]DEBUG  9479[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:58,221]DEBUG  9480[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:58,221]DEBUG  9480[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:58,221]DEBUG  9480[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:58,221]DEBUG  9480[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:58,221]DEBUG  9480[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=15, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#87, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:58,221]DEBUG  9480[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#15, id=44, orderDate=Sat Oct 14 22:36:58 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:58 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#15, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#15, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:58,221]DEBUG  9480[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=15, orderStatusName=Pending}
[2017-10-14 22:36:58,222]DEBUG  9481[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#15, id=45, orderDate=Sat Oct 14 22:36:58 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:58 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#15, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#15, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:58,222]DEBUG  9481[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#15, id=46, orderDate=Sat Oct 14 22:36:58 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:58 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#15, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#15, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:58,222]DEBUG  9481[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=87, roleName=Administrator}
[2017-10-14 22:36:58,222]DEBUG  9481[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,222]DEBUG  9481[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 22:36:58,222]DEBUG  9481[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,223]DEBUG  9482[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:58,223]DEBUG  9482[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:58,223]DEBUG  9482[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:58,223]DEBUG  9482[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:58,223]DEBUG  9482[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:58,223]DEBUG  9482[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=15, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#87, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:58,223]DEBUG  9482[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#15, id=44, orderDate=Sat Oct 14 22:36:58 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:58 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#15, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#15, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:58,223]DEBUG  9482[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=15, orderStatusName=Pending}
[2017-10-14 22:36:58,224]DEBUG  9483[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#15, id=45, orderDate=Sat Oct 14 22:36:58 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:58 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#15, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#15, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:58,224]DEBUG  9483[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#15, id=46, orderDate=Sat Oct 14 22:36:58 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:58 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#15, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#15, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:58,224]DEBUG  9483[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=87, roleName=Administrator}
[2017-10-14 22:36:58,224]DEBUG  9483[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,224]DEBUG  9483[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 22:36:58,224]DEBUG  9483[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,224]DEBUG  9483[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:58,225]DEBUG  9484[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:58,225]DEBUG  9484[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:58,225]DEBUG  9484[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:58,225]DEBUG  9484[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:58,225]DEBUG  9484[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=15, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#87, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:58,225]DEBUG  9484[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#15, id=44, orderDate=Sat Oct 14 22:36:58 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:58 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#15, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#15, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:58,225]DEBUG  9484[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=15, orderStatusName=Pending}
[2017-10-14 22:36:58,226]DEBUG  9485[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#15, id=45, orderDate=Sat Oct 14 22:36:58 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:58 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#15, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#15, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:58,226]DEBUG  9485[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#15, id=46, orderDate=Sat Oct 14 22:36:58 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:58 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#15, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#15, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:58,226]DEBUG  9485[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=87, roleName=Administrator}
[2017-10-14 22:36:58,226]DEBUG  9485[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,226]DEBUG  9485[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 22:36:58,226]DEBUG  9485[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,227]DEBUG  9486[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:58,227]DEBUG  9486[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:58,227]DEBUG  9486[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:58,227]DEBUG  9486[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:58,227]DEBUG  9486[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:58,227]DEBUG  9486[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=15, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#87, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:58,227]DEBUG  9486[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#15, id=44, orderDate=Sat Oct 14 22:36:58 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:58 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#15, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#15, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:58,227]DEBUG  9486[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=15, orderStatusName=Pending}
[2017-10-14 22:36:58,228]DEBUG  9487[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#15, id=45, orderDate=Sat Oct 14 22:36:58 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:58 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#15, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#15, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:58,228]DEBUG  9487[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#15, id=46, orderDate=Sat Oct 14 22:36:58 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:58 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#15, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#15, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:58,228]DEBUG  9487[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=87, roleName=Administrator}
[2017-10-14 22:36:58,228]DEBUG  9487[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,228]DEBUG  9487[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 22:36:58,228]DEBUG  9487[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,229]DEBUG  9488[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:58,229]DEBUG  9488[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:58,229]DEBUG  9488[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:58,229]DEBUG  9488[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:58,229]DEBUG  9488[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:58,229]DEBUG  9488[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=15, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#87, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:58,229]DEBUG  9488[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#15, id=44, orderDate=Sat Oct 14 22:36:58 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:58 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#15, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#15, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:58,229]DEBUG  9488[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=15, orderStatusName=Pending}
[2017-10-14 22:36:58,230]DEBUG  9489[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#15, id=45, orderDate=Sat Oct 14 22:36:58 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:58 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#15, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#15, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:58,230]DEBUG  9489[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#15, id=46, orderDate=Sat Oct 14 22:36:58 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:58 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#15, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#15, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:58,230]DEBUG  9489[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=87, roleName=Administrator}
[2017-10-14 22:36:58,230]DEBUG  9489[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,230]DEBUG  9489[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 22:36:58,230]DEBUG  9489[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,230]DEBUG  9489[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:58,231]DEBUG  9490[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:58,231]DEBUG  9490[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:58,231]DEBUG  9490[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:58,231]DEBUG  9490[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:58,231]DEBUG  9490[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=15, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#87, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:58,231]DEBUG  9490[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#15, id=44, orderDate=Sat Oct 14 22:36:58 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:58 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#15, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#15, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:58,231]DEBUG  9490[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=15, orderStatusName=Pending}
[2017-10-14 22:36:58,231]DEBUG  9490[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#15, id=45, orderDate=Sat Oct 14 22:36:58 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:58 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#15, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#15, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:58,232]DEBUG  9491[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#15, id=46, orderDate=Sat Oct 14 22:36:58 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:58 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#15, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#15, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:58,232]DEBUG  9491[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=87, roleName=Administrator}
[2017-10-14 22:36:58,232]DEBUG  9491[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,232]DEBUG  9491[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 22:36:58,232]DEBUG  9491[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,232]DEBUG  9491[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:58,233]DEBUG  9492[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:58,233]DEBUG  9492[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:58,233]DEBUG  9492[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:58,233]DEBUG  9492[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:58,233]DEBUG  9492[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=15, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#87, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:58,233]DEBUG  9492[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#15, id=44, orderDate=Sat Oct 14 22:36:58 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:58 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#15, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#15, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:58,233]DEBUG  9492[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=15, orderStatusName=Pending}
[2017-10-14 22:36:58,233]DEBUG  9492[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#15, id=45, orderDate=Sat Oct 14 22:36:58 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:58 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#15, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#15, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:58,234]DEBUG  9493[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#15, id=46, orderDate=Sat Oct 14 22:36:58 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:58 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#15, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#15, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:58,234]DEBUG  9493[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=87, roleName=Administrator}
[2017-10-14 22:36:58,234]DEBUG  9493[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,234]DEBUG  9493[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 22:36:58,234]DEBUG  9493[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,234]DEBUG  9493[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:58,234]DEBUG  9493[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:58,235]DEBUG  9494[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:58,235]DEBUG  9494[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:58,235]DEBUG  9494[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:58,235]DEBUG  9494[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.User{region=null, id=15, lastName=test, balance=null, customerType=null, email=email@gmail.com, role=com.softserveinc.edu.oms.domain.entities.Role#87, active=true, login=test, firstName=test, password=test}
[2017-10-14 22:36:58,235]DEBUG  9494[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#15, id=44, orderDate=Sat Oct 14 22:36:58 EEST 2017, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:58 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#15, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#15, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:58,235]DEBUG  9494[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=15, orderStatusName=Pending}
[2017-10-14 22:36:58,235]DEBUG  9494[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#15, id=45, orderDate=Sat Oct 14 22:36:58 EEST 2017, orderNumber=100003, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:58 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#15, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#15, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:58,235]DEBUG  9494[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=com.softserveinc.edu.oms.domain.entities.User#15, id=46, orderDate=Sat Oct 14 22:36:58 EEST 2017, orderNumber=100004, orderName=null, maxDiscount=0, deliveryDate=Sat Oct 14 22:36:58 EEST 2017, customer=com.softserveinc.edu.oms.domain.entities.User#15, orderStatus=com.softserveinc.edu.oms.domain.entities.OrderStatus#15, totalPrice=100.0, preferableDeliveryDate=null}
[2017-10-14 22:36:58,235]DEBUG  9494[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=87, roleName=Administrator}
[2017-10-14 22:36:58,236]DEBUG  9495[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,236]DEBUG  9495[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 22:36:58,236]DEBUG  9495[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,236]DEBUG  9495[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@4481290d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@1f3a0500, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2017-10-14 22:36:58,236]DEBUG  9495[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 22:36:58,236]DEBUG  9495[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@90e1c5c]
[2017-10-14 22:36:58,236]DEBUG  9495[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 22:36:58,297]DEBUG  9556[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 22:36:58,297]DEBUG  9556[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:58,297]DEBUG  9556[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@90e1c5c] after transaction
[2017-10-14 22:36:58,297]DEBUG  9556[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 22:36:58,297]DEBUG  9556[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 22:36:58,298]DEBUG  9557[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:58,298] INFO  9557[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@4481290d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@1f3a0500, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2017-10-14 22:36:58,298]DEBUG  9557[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@4481290d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderDaoTest@1f3a0500, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 22:36:58,299]DEBUG  9558[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestClass(DirtiesContextTestExecutionListener.java:113) - After test class: context [[TestContext@4481290d testClass = OrderDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = [null], testMethod = [null], testException = [null]]], dirtiesContext [false].
[2017-10-14 22:36:58,299]DEBUG  9558[main] - org.springframework.test.context.junit4.SpringJUnit4ClassRunner.<init>(SpringJUnit4ClassRunner.java:106) - SpringJUnit4ClassRunner constructor called with [class com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase].
[2017-10-14 22:36:58,300] INFO  9559[main] - org.springframework.test.context.TestContextManager.retrieveTestExecutionListeners(TestContextManager.java:185) - @TestExecutionListeners is not present for class [class com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase]: using defaults.
[2017-10-14 22:36:58,300]DEBUG  9559[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase]
[2017-10-14 22:36:58,300]DEBUG  9559[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase]
[2017-10-14 22:36:58,300]DEBUG  9559[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase]
[2017-10-14 22:36:58,300]DEBUG  9559[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase]
[2017-10-14 22:36:58,300]DEBUG  9559[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase]
[2017-10-14 22:36:58,300]DEBUG  9559[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase]
[2017-10-14 22:36:58,300]DEBUG  9559[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase]
[2017-10-14 22:36:58,300]DEBUG  9559[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase]
[2017-10-14 22:36:58,301]DEBUG  9560[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@570f6a4e testClass = CleanUpDBTestCase, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase@350c5389, testMethod = [null], testException = [null]]].
[2017-10-14 22:36:58,304]DEBUG  9563[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 22:36:58,305]DEBUG  9564[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 22:36:58,305]DEBUG  9564[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 22:36:58,305]DEBUG  9564[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 22:36:58,305]DEBUG  9564[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 22:36:58,305]DEBUG  9564[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 22:36:58,305]DEBUG  9564[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 22:36:58,305]DEBUG  9564[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 22:36:58,305]DEBUG  9564[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 22:36:58,305]DEBUG  9564[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase]: AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 22:36:58,306]DEBUG  9565[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 22:36:58,306]DEBUG  9565[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 22:36:58,306]DEBUG  9565[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase' to bean named 'customerTypeDao'
[2017-10-14 22:36:58,306]DEBUG  9565[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 22:36:58,306]DEBUG  9565[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 22:36:58,307]DEBUG  9566[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase' to bean named 'dimensionDao'
[2017-10-14 22:36:58,307]DEBUG  9566[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 22:36:58,307]DEBUG  9566[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 22:36:58,307]DEBUG  9566[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase' to bean named 'orderDao'
[2017-10-14 22:36:58,307]DEBUG  9566[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 22:36:58,308]DEBUG  9567[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 22:36:58,308]DEBUG  9567[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase' to bean named 'orderItemDao'
[2017-10-14 22:36:58,308]DEBUG  9567[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 22:36:58,308]DEBUG  9567[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 22:36:58,308]DEBUG  9567[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase' to bean named 'orderStatusDao'
[2017-10-14 22:36:58,308]DEBUG  9567[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 22:36:58,309]DEBUG  9568[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 22:36:58,309]DEBUG  9568[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase' to bean named 'productDao'
[2017-10-14 22:36:58,309]DEBUG  9568[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 22:36:58,309]DEBUG  9568[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 22:36:58,309]DEBUG  9568[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase' to bean named 'regionDao'
[2017-10-14 22:36:58,309]DEBUG  9568[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 22:36:58,310]DEBUG  9569[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 22:36:58,310]DEBUG  9569[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase' to bean named 'roleDao'
[2017-10-14 22:36:58,310]DEBUG  9569[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 22:36:58,310]DEBUG  9569[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 22:36:58,310]DEBUG  9569[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase' to bean named 'userDao'
[2017-10-14 22:36:58,310]DEBUG  9569[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 22:36:58,311]DEBUG  9570[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 22:36:58,311]DEBUG  9570[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase' to bean named 'sessionFactory'
[2017-10-14 22:36:58,311]DEBUG  9570[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 22:36:58,311]DEBUG  9570[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testContextFile' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:58,311]DEBUG  9570[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase' with 0 common interceptors and 1 specific interceptors
[2017-10-14 22:36:58,311]DEBUG  9570[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase@350c5389]
[2017-10-14 22:36:58,312]DEBUG  9571[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanDB()
[2017-10-14 22:36:58,312]DEBUG  9571[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanCustomerType()
[2017-10-14 22:36:58,312]DEBUG  9571[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.testContextFile()
[2017-10-14 22:36:58,312]DEBUG  9571[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanUser()
[2017-10-14 22:36:58,313]DEBUG  9572[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanRole()
[2017-10-14 22:36:58,313]DEBUG  9572[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanRegion()
[2017-10-14 22:36:58,313]DEBUG  9572[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanProduct()
[2017-10-14 22:36:58,313]DEBUG  9572[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrderStatus()
[2017-10-14 22:36:58,313]DEBUG  9572[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrderItem()
[2017-10-14 22:36:58,313]DEBUG  9572[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrder()
[2017-10-14 22:36:58,313]DEBUG  9572[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanDimension()
[2017-10-14 22:36:58,313]DEBUG  9572[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:749) - Found finalize() method - using NO_OVERRIDE
[2017-10-14 22:36:58,313]DEBUG  9572[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:761) - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
[2017-10-14 22:36:58,314]DEBUG  9573[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
[2017-10-14 22:36:58,314]DEBUG  9573[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:766) - Found 'hashCode' method: public native int java.lang.Object.hashCode()
[2017-10-14 22:36:58,314]DEBUG  9573[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
[2017-10-14 22:36:58,314]DEBUG  9573[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
[2017-10-14 22:36:58,314]DEBUG  9573[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
[2017-10-14 22:36:58,314]DEBUG  9573[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
[2017-10-14 22:36:58,314]DEBUG  9573[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
[2017-10-14 22:36:58,314]DEBUG  9573[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2017-10-14 22:36:58,314]DEBUG  9573[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2017-10-14 22:36:58,314]DEBUG  9573[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
[2017-10-14 22:36:58,315]DEBUG  9574[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
[2017-10-14 22:36:58,315]DEBUG  9574[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
[2017-10-14 22:36:58,315]DEBUG  9574[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
[2017-10-14 22:36:58,315]DEBUG  9574[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
[2017-10-14 22:36:58,315]DEBUG  9574[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
[2017-10-14 22:36:58,315]DEBUG  9574[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
[2017-10-14 22:36:58,315]DEBUG  9574[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
[2017-10-14 22:36:58,315]DEBUG  9574[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
[2017-10-14 22:36:58,315]DEBUG  9574[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
[2017-10-14 22:36:58,316]DEBUG  9575[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
[2017-10-14 22:36:58,316]DEBUG  9575[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
[2017-10-14 22:36:58,316]DEBUG  9575[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2017-10-14 22:36:58,316]DEBUG  9575[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
[2017-10-14 22:36:58,316]DEBUG  9575[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
[2017-10-14 22:36:58,316]DEBUG  9575[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
[2017-10-14 22:36:58,316]DEBUG  9575[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
[2017-10-14 22:36:58,333]DEBUG  9592[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testContextFile' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:58,333]DEBUG  9592[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@570f6a4e testClass = CleanUpDBTestCase, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase@350c5389, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2017-10-14 22:36:58,333]DEBUG  9592[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.retrieveConfigurationAttributes(TransactionalTestExecutionListener.java:466) - Retrieved @TransactionConfiguration [@org.springframework.test.context.transaction.TransactionConfiguration(transactionManager=transactionManager, defaultRollback=true)] for test class [class com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase]
[2017-10-14 22:36:58,333]DEBUG  9592[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.retrieveConfigurationAttributes(TransactionalTestExecutionListener.java:483) - Retrieved TransactionConfigurationAttributes [[TransactionConfigurationAttributes@2774ab51 transactionManagerName = 'transactionManager', defaultRollback = true]] for class [class com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase]
[2017-10-14 22:36:58,333]DEBUG  9592[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 22:36:58,334]DEBUG  9593[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testContextFile]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:58,334]DEBUG  9593[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15080098183
[2017-10-14 22:36:58,334]DEBUG  9593[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@533c345f] for Hibernate transaction
[2017-10-14 22:36:58,334]DEBUG  9593[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@533c345f]
[2017-10-14 22:36:58,334]DEBUG  9593[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 22:36:58,334]DEBUG  9593[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 22:36:58,334]DEBUG  9593[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 22:36:58,334]DEBUG  9593[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@570f6a4e testClass = CleanUpDBTestCase, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase@350c5389, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2017-10-14 22:36:58,334] INFO  9593[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (1): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@598b619b]; rollback [true]
[2017-10-14 22:36:58,334]DEBUG  9593[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@570f6a4e testClass = CleanUpDBTestCase, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase@350c5389, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2017-10-14 22:36:58,335]DEBUG  9594[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 22:36:58,335]DEBUG  9594[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@533c345f]
[2017-10-14 22:36:58,335]DEBUG  9594[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 22:36:58,347]DEBUG  9606[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 22:36:58,347]DEBUG  9606[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:58,347]DEBUG  9606[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@533c345f] after transaction
[2017-10-14 22:36:58,347]DEBUG  9606[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 22:36:58,347]DEBUG  9606[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 22:36:58,347]DEBUG  9606[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:58,347] INFO  9606[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@570f6a4e testClass = CleanUpDBTestCase, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase@350c5389, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2017-10-14 22:36:58,348]DEBUG  9607[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@570f6a4e testClass = CleanUpDBTestCase, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase@350c5389, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 22:36:58,348]DEBUG  9607[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestClass(DirtiesContextTestExecutionListener.java:113) - After test class: context [[TestContext@570f6a4e testClass = CleanUpDBTestCase, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = [null], testMethod = [null], testException = [null]]], dirtiesContext [false].
[2017-10-14 22:36:58,349]DEBUG  9608[main] - org.springframework.test.context.junit4.SpringJUnit4ClassRunner.<init>(SpringJUnit4ClassRunner.java:106) - SpringJUnit4ClassRunner constructor called with [class com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest].
[2017-10-14 22:36:58,349] INFO  9608[main] - org.springframework.test.context.TestContextManager.retrieveTestExecutionListeners(TestContextManager.java:185) - @TestExecutionListeners is not present for class [class com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]: using defaults.
[2017-10-14 22:36:58,350]DEBUG  9609[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2017-10-14 22:36:58,350]DEBUG  9609[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2017-10-14 22:36:58,350]DEBUG  9609[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2017-10-14 22:36:58,350]DEBUG  9609[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2017-10-14 22:36:58,350]DEBUG  9609[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2017-10-14 22:36:58,351]DEBUG  9610[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2017-10-14 22:36:58,352]DEBUG  9611[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2017-10-14 22:36:58,352]DEBUG  9611[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2017-10-14 22:36:58,352]DEBUG  9611[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@4caabc8c testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@5d40b2a6, testMethod = [null], testException = [null]]].
[2017-10-14 22:36:58,357]DEBUG  9616[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 22:36:58,357]DEBUG  9616[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 22:36:58,357]DEBUG  9616[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 22:36:58,357]DEBUG  9616[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 22:36:58,357]DEBUG  9616[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 22:36:58,358]DEBUG  9617[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 22:36:58,358]DEBUG  9617[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 22:36:58,358]DEBUG  9617[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 22:36:58,358]DEBUG  9617[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 22:36:58,358]DEBUG  9617[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]: AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 22:36:58,358]DEBUG  9617[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 22:36:58,358]DEBUG  9617[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 22:36:58,358]DEBUG  9617[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest' to bean named 'customerTypeDao'
[2017-10-14 22:36:58,359]DEBUG  9618[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 22:36:58,359]DEBUG  9618[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 22:36:58,359]DEBUG  9618[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest' to bean named 'dimensionDao'
[2017-10-14 22:36:58,359]DEBUG  9618[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 22:36:58,359]DEBUG  9618[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 22:36:58,359]DEBUG  9618[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest' to bean named 'orderDao'
[2017-10-14 22:36:58,359]DEBUG  9618[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 22:36:58,360]DEBUG  9619[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 22:36:58,360]DEBUG  9619[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest' to bean named 'orderItemDao'
[2017-10-14 22:36:58,360]DEBUG  9619[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 22:36:58,360]DEBUG  9619[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 22:36:58,360]DEBUG  9619[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest' to bean named 'orderStatusDao'
[2017-10-14 22:36:58,360]DEBUG  9619[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 22:36:58,361]DEBUG  9620[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 22:36:58,361]DEBUG  9620[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest' to bean named 'productDao'
[2017-10-14 22:36:58,361]DEBUG  9620[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 22:36:58,361]DEBUG  9620[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 22:36:58,361]DEBUG  9620[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest' to bean named 'regionDao'
[2017-10-14 22:36:58,361]DEBUG  9620[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 22:36:58,361]DEBUG  9620[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 22:36:58,361]DEBUG  9620[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest' to bean named 'roleDao'
[2017-10-14 22:36:58,362]DEBUG  9621[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 22:36:58,362]DEBUG  9621[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 22:36:58,362]DEBUG  9621[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest' to bean named 'userDao'
[2017-10-14 22:36:58,362]DEBUG  9621[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 22:36:58,362]DEBUG  9621[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 22:36:58,362]DEBUG  9621[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest' to bean named 'sessionFactory'
[2017-10-14 22:36:58,363]DEBUG  9622[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 22:36:58,363]DEBUG  9622[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'setUp' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:58,363]DEBUG  9622[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 22:36:58,363]DEBUG  9622[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@5d40b2a6]
[2017-10-14 22:36:58,364]DEBUG  9623[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest.setUp()
[2017-10-14 22:36:58,364]DEBUG  9623[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'tearDown' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:58,364]DEBUG  9623[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest.tearDown() throws java.lang.Exception
[2017-10-14 22:36:58,364]DEBUG  9623[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindAll' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:58,365]DEBUG  9624[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest.testFindAll()
[2017-10-14 22:36:58,365]DEBUG  9624[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindAllWithSorting' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:58,365]DEBUG  9624[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest.testFindAllWithSorting()
[2017-10-14 22:36:58,365]DEBUG  9624[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testRowCountWithCriterions' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:58,365]DEBUG  9624[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest.testRowCountWithCriterions()
[2017-10-14 22:36:58,366]DEBUG  9625[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testPaging' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:58,366]DEBUG  9625[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest.testPaging()
[2017-10-14 22:36:58,366]DEBUG  9625[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByOrder' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:58,366]DEBUG  9625[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest.testFindByOrder()
[2017-10-14 22:36:58,366]DEBUG  9625[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindById' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:58,366]DEBUG  9625[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest.testFindById()
[2017-10-14 22:36:58,366]DEBUG  9625[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanDB()
[2017-10-14 22:36:58,366]DEBUG  9625[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanCustomerType()
[2017-10-14 22:36:58,367]DEBUG  9626[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testContextFile' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:58,367]DEBUG  9626[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.testContextFile()
[2017-10-14 22:36:58,367]DEBUG  9626[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanUser()
[2017-10-14 22:36:58,367]DEBUG  9626[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanRole()
[2017-10-14 22:36:58,367]DEBUG  9626[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanRegion()
[2017-10-14 22:36:58,367]DEBUG  9626[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanProduct()
[2017-10-14 22:36:58,367]DEBUG  9626[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrderStatus()
[2017-10-14 22:36:58,368]DEBUG  9627[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrderItem()
[2017-10-14 22:36:58,368]DEBUG  9627[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrder()
[2017-10-14 22:36:58,368]DEBUG  9627[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanDimension()
[2017-10-14 22:36:58,368]DEBUG  9627[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:749) - Found finalize() method - using NO_OVERRIDE
[2017-10-14 22:36:58,368]DEBUG  9627[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:761) - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
[2017-10-14 22:36:58,368]DEBUG  9627[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
[2017-10-14 22:36:58,368]DEBUG  9627[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:766) - Found 'hashCode' method: public native int java.lang.Object.hashCode()
[2017-10-14 22:36:58,368]DEBUG  9627[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
[2017-10-14 22:36:58,368]DEBUG  9627[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
[2017-10-14 22:36:58,368]DEBUG  9627[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
[2017-10-14 22:36:58,369]DEBUG  9628[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
[2017-10-14 22:36:58,369]DEBUG  9628[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
[2017-10-14 22:36:58,369]DEBUG  9628[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2017-10-14 22:36:58,369]DEBUG  9628[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2017-10-14 22:36:58,369]DEBUG  9628[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
[2017-10-14 22:36:58,369]DEBUG  9628[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
[2017-10-14 22:36:58,369]DEBUG  9628[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
[2017-10-14 22:36:58,370]DEBUG  9629[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
[2017-10-14 22:36:58,370]DEBUG  9629[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
[2017-10-14 22:36:58,370]DEBUG  9629[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
[2017-10-14 22:36:58,370]DEBUG  9629[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
[2017-10-14 22:36:58,370]DEBUG  9629[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
[2017-10-14 22:36:58,371]DEBUG  9630[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
[2017-10-14 22:36:58,371]DEBUG  9630[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
[2017-10-14 22:36:58,371]DEBUG  9630[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
[2017-10-14 22:36:58,371]DEBUG  9630[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
[2017-10-14 22:36:58,371]DEBUG  9630[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2017-10-14 22:36:58,371]DEBUG  9630[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
[2017-10-14 22:36:58,371]DEBUG  9630[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
[2017-10-14 22:36:58,371]DEBUG  9630[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
[2017-10-14 22:36:58,371]DEBUG  9630[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
[2017-10-14 22:36:58,386]DEBUG  9645[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindAll' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:58,386]DEBUG  9645[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@4caabc8c testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@5d40b2a6, testMethod = testFindAll@OrderItemDaoTest, testException = [null]]]
[2017-10-14 22:36:58,386]DEBUG  9645[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.retrieveConfigurationAttributes(TransactionalTestExecutionListener.java:466) - Retrieved @TransactionConfiguration [@org.springframework.test.context.transaction.TransactionConfiguration(transactionManager=transactionManager, defaultRollback=true)] for test class [class com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2017-10-14 22:36:58,386]DEBUG  9645[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.retrieveConfigurationAttributes(TransactionalTestExecutionListener.java:483) - Retrieved TransactionConfigurationAttributes [[TransactionConfigurationAttributes@51b145f transactionManagerName = 'transactionManager', defaultRollback = true]] for class [class com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2017-10-14 22:36:58,386]DEBUG  9645[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 22:36:58,387]DEBUG  9646[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:58,387]DEBUG  9646[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15080098183
[2017-10-14 22:36:58,387]DEBUG  9646[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@18379fc0] for Hibernate transaction
[2017-10-14 22:36:58,387]DEBUG  9646[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@18379fc0]
[2017-10-14 22:36:58,387]DEBUG  9646[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 22:36:58,387]DEBUG  9646[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 22:36:58,387]DEBUG  9646[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 22:36:58,388]DEBUG  9647[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@4caabc8c testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@5d40b2a6, testMethod = testFindAll@OrderItemDaoTest, testException = [null]]]
[2017-10-14 22:36:58,388] INFO  9647[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (1): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@598b619b]; rollback [true]
[2017-10-14 22:36:58,388]DEBUG  9647[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,388]DEBUG  9647[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 22:36:58,388]DEBUG  9647[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,389]DEBUG  9648[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,389]DEBUG  9648[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 22:36:58,389]DEBUG  9648[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,389]DEBUG  9648[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,389]DEBUG  9648[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 22:36:58,390]DEBUG  9649[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,391]DEBUG  9650[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,391]DEBUG  9650[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 22:36:58,392]DEBUG  9651[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,393]DEBUG  9652[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,393]DEBUG  9652[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 22:36:58,393]DEBUG  9652[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,393]DEBUG  9652[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,394]DEBUG  9653[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 22:36:58,394]DEBUG  9653[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,394]DEBUG  9653[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,394]DEBUG  9653[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 22:36:58,394]DEBUG  9653[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,394]DEBUG  9653[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,395]DEBUG  9654[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 22:36:58,395]DEBUG  9654[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,395]DEBUG  9654[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,395]DEBUG  9654[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 22:36:58,395]DEBUG  9654[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,396]DEBUG  9655[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:58,396]DEBUG  9655[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,396]DEBUG  9655[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 22:36:58,396]DEBUG  9655[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 47
[2017-10-14 22:36:58,397]DEBUG  9656[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,397]DEBUG  9656[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:58,397]DEBUG  9656[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,404]DEBUG  9663[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 22:36:58,405]DEBUG  9664[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 48
[2017-10-14 22:36:58,405]DEBUG  9664[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,406]DEBUG  9665[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:58,407]DEBUG  9666[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,407]DEBUG  9666[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 22:36:58,407]DEBUG  9666[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 1
[2017-10-14 22:36:58,408]DEBUG  9667[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,408]DEBUG  9667[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:58,409]DEBUG  9668[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,409]DEBUG  9668[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Dimensions (DimensionName, NumberOfProducts) values (?, ?)
[2017-10-14 22:36:58,409]DEBUG  9668[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 1
[2017-10-14 22:36:58,409]DEBUG  9668[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,409]DEBUG  9668[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:58,411]DEBUG  9670[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,411]DEBUG  9670[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderItems (Cost, DimensionRef, ItemPrice, OrderRef, ProductRef, Quantity) values (?, ?, ?, ?, ?, ?)
[2017-10-14 22:36:58,411]DEBUG  9670[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 1
[2017-10-14 22:36:58,412]DEBUG  9671[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,412]DEBUG  9671[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:58,412]DEBUG  9671[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,412]DEBUG  9671[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderItems (Cost, DimensionRef, ItemPrice, OrderRef, ProductRef, Quantity) values (?, ?, ?, ?, ?, ?)
[2017-10-14 22:36:58,413]DEBUG  9672[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 2
[2017-10-14 22:36:58,413]DEBUG  9672[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,414]DEBUG  9673[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:58,414]DEBUG  9673[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:58,414]DEBUG  9673[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:58,414]DEBUG  9673[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:58,414]DEBUG  9673[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:58,414]DEBUG  9673[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#1, id=1, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#1, order=com.softserveinc.edu.oms.domain.entities.Order#47, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 22:36:58,415]DEBUG  9674[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#1, id=2, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#1, order=com.softserveinc.edu.oms.domain.entities.Order#48, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 22:36:58,415]DEBUG  9674[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=1, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 22:36:58,415]DEBUG  9674[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=1, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 22:36:58,415]DEBUG  9674[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=47, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,415]DEBUG  9674[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=48, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,415]DEBUG  9674[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,415]DEBUG  9674[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID8_6_, this_.Cost as Cost8_6_, this_.DimensionRef as Dimensio5_8_6_, this_.ItemPrice as ItemPrice8_6_, this_.OrderRef as OrderRef8_6_, this_.ProductRef as ProductRef8_6_, this_.Quantity as Quantity8_6_, dimension2_.ID as ID7_0_, dimension2_.DimensionName as Dimensio2_7_0_, dimension2_.NumberOfProducts as NumberOf3_7_0_, order3_.ID as ID5_1_, order3_.Assigne as Assigne5_1_, order3_.Customer as Customer5_1_, order3_.DeliveryDate as Delivery2_5_1_, order3_.IsGift as IsGift5_1_, order3_.MaxDiscount as MaxDisco4_5_1_, order3_.OrderDate as OrderDate5_1_, order3_.OrderName as OrderName5_1_, order3_.OrderNumber as OrderNum7_5_1_, order3_.OrderStatusRef as OrderSt12_5_1_, order3_.PreferableDeliveryDate as Preferab8_5_1_, order3_.TotalPrice as TotalPrice5_1_, user4_.ID as ID3_2_, user4_.IsUserActive as IsUserAc2_3_2_, user4_.Balance as Balance3_2_, user4_.CustomerTypeRef as Customer9_3_2_, user4_.Email as Email3_2_, user4_.FirstName as FirstName3_2_, user4_.LastName as LastName3_2_, user4_.Login as Login3_2_, user4_.Password as Password3_2_, user4_.RegionRef as RegionRef3_2_, user4_.RoleRef as RoleRef3_2_, user5_.ID as ID3_3_, user5_.IsUserActive as IsUserAc2_3_3_, user5_.Balance as Balance3_3_, user5_.CustomerTypeRef as Customer9_3_3_, user5_.Email as Email3_3_, user5_.FirstName as FirstName3_3_, user5_.LastName as LastName3_3_, user5_.Login as Login3_3_, user5_.Password as Password3_3_, user5_.RegionRef as RegionRef3_3_, user5_.RoleRef as RoleRef3_3_, orderstatu6_.ID as ID4_4_, orderstatu6_.OrederStatusName as OrederSt2_4_4_, product7_.ID as ID6_5_, product7_.IsProductActive as IsProduc2_6_5_, product7_.ProductDescription as ProductD3_6_5_, product7_.ProductName as ProductN4_6_5_, product7_.ProductPrice as ProductP5_6_5_ from OrderItems this_ left outer join Dimensions dimension2_ on this_.DimensionRef=dimension2_.ID left outer join Orders order3_ on this_.OrderRef=order3_.ID left outer join Users user4_ on order3_.Assigne=user4_.ID left outer join Users user5_ on order3_.Customer=user5_.ID left outer join OrderStatuses orderstatu6_ on order3_.OrderStatusRef=orderstatu6_.ID left outer join Products product7_ on this_.ProductRef=product7_.ID
[2017-10-14 22:36:58,416]DEBUG  9675[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:58,417]DEBUG  9676[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Dimension#1], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#47], null, null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Product#1], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderItem#1]
[2017-10-14 22:36:58,417]DEBUG  9676[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Dimension#1], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#48], null, null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Product#1], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderItem#2]
[2017-10-14 22:36:58,417]DEBUG  9676[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:58,418]DEBUG  9677[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,418]DEBUG  9677[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:58,418]DEBUG  9677[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:58,418]DEBUG  9677[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:58,418]DEBUG  9677[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:58,418]DEBUG  9677[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:58,418]DEBUG  9677[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:58,418]DEBUG  9677[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#1, id=1, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#1, order=com.softserveinc.edu.oms.domain.entities.Order#47, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 22:36:58,419]DEBUG  9678[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#1, id=2, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#1, order=com.softserveinc.edu.oms.domain.entities.Order#48, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 22:36:58,419]DEBUG  9678[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=1, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 22:36:58,419]DEBUG  9678[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=1, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 22:36:58,419]DEBUG  9678[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=47, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,419]DEBUG  9678[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=48, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,419]DEBUG  9678[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,419]DEBUG  9678[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 22:36:58,420]DEBUG  9679[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,420]DEBUG  9679[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:58,420]DEBUG  9679[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:58,420]DEBUG  9679[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:58,420]DEBUG  9679[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:58,420]DEBUG  9679[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:58,420]DEBUG  9679[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#1, id=1, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#1, order=com.softserveinc.edu.oms.domain.entities.Order#47, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 22:36:58,420]DEBUG  9679[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#1, id=2, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#1, order=com.softserveinc.edu.oms.domain.entities.Order#48, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 22:36:58,421]DEBUG  9680[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=1, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 22:36:58,421]DEBUG  9680[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=1, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 22:36:58,421]DEBUG  9680[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=47, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,421]DEBUG  9680[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=48, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,421]DEBUG  9680[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,421]DEBUG  9680[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 22:36:58,421]DEBUG  9680[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,421]DEBUG  9680[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:58,422]DEBUG  9681[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:58,423]DEBUG  9682[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:58,423]DEBUG  9682[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:58,423]DEBUG  9682[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:58,423]DEBUG  9682[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#1, id=1, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#1, order=com.softserveinc.edu.oms.domain.entities.Order#47, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 22:36:58,424]DEBUG  9683[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#1, id=2, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#1, order=com.softserveinc.edu.oms.domain.entities.Order#48, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 22:36:58,424]DEBUG  9683[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=1, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 22:36:58,424]DEBUG  9683[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=1, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 22:36:58,424]DEBUG  9683[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=47, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,424]DEBUG  9683[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=48, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,424]DEBUG  9683[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,424]DEBUG  9683[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 22:36:58,425]DEBUG  9684[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,425]DEBUG  9684[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:58,425]DEBUG  9684[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:58,425]DEBUG  9684[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:58,425]DEBUG  9684[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:58,426]DEBUG  9685[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:58,426]DEBUG  9685[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#1, id=1, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#1, order=com.softserveinc.edu.oms.domain.entities.Order#47, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 22:36:58,426]DEBUG  9685[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#1, id=2, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#1, order=com.softserveinc.edu.oms.domain.entities.Order#48, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 22:36:58,426]DEBUG  9685[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=1, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 22:36:58,426]DEBUG  9685[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=1, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 22:36:58,426]DEBUG  9685[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=47, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,426]DEBUG  9685[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=48, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,426]DEBUG  9685[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,426]DEBUG  9685[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 22:36:58,427]DEBUG  9686[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,427]DEBUG  9686[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:58,427]DEBUG  9686[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:58,427]DEBUG  9686[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:58,427]DEBUG  9686[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:58,427]DEBUG  9686[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:58,428]DEBUG  9687[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#1, id=1, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#1, order=com.softserveinc.edu.oms.domain.entities.Order#47, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 22:36:58,428]DEBUG  9687[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#1, id=2, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#1, order=com.softserveinc.edu.oms.domain.entities.Order#48, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 22:36:58,428]DEBUG  9687[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=1, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 22:36:58,428]DEBUG  9687[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=1, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 22:36:58,428]DEBUG  9687[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=47, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,428]DEBUG  9687[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=48, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,428]DEBUG  9687[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,428]DEBUG  9687[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 22:36:58,429]DEBUG  9688[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,429]DEBUG  9688[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:58,429]DEBUG  9688[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:58,429]DEBUG  9688[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:58,429]DEBUG  9688[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:58,429]DEBUG  9688[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:58,429]DEBUG  9688[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#1, id=1, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#1, order=com.softserveinc.edu.oms.domain.entities.Order#47, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 22:36:58,429]DEBUG  9688[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#1, id=2, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#1, order=com.softserveinc.edu.oms.domain.entities.Order#48, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 22:36:58,430]DEBUG  9689[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=1, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 22:36:58,430]DEBUG  9689[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=1, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 22:36:58,430]DEBUG  9689[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=47, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,430]DEBUG  9689[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=48, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,430]DEBUG  9689[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,430]DEBUG  9689[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 22:36:58,430]DEBUG  9689[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,430]DEBUG  9689[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:58,431]DEBUG  9690[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:58,432]DEBUG  9691[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:58,432]DEBUG  9691[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:58,432]DEBUG  9691[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:58,432]DEBUG  9691[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#1, id=1, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#1, order=com.softserveinc.edu.oms.domain.entities.Order#47, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 22:36:58,432]DEBUG  9691[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#1, id=2, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#1, order=com.softserveinc.edu.oms.domain.entities.Order#48, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 22:36:58,433]DEBUG  9692[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=1, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 22:36:58,433]DEBUG  9692[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=1, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 22:36:58,433]DEBUG  9692[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=47, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,433]DEBUG  9692[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=48, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,433]DEBUG  9692[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,433]DEBUG  9692[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 22:36:58,433]DEBUG  9692[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,434]DEBUG  9693[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:58,434]DEBUG  9693[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:58,434]DEBUG  9693[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:58,434]DEBUG  9693[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:58,434]DEBUG  9693[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:58,434]DEBUG  9693[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#1, id=1, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#1, order=com.softserveinc.edu.oms.domain.entities.Order#47, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 22:36:58,434]DEBUG  9693[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#1, id=2, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#1, order=com.softserveinc.edu.oms.domain.entities.Order#48, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 22:36:58,434]DEBUG  9693[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=1, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 22:36:58,435]DEBUG  9694[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=1, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 22:36:58,435]DEBUG  9694[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=47, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,435]DEBUG  9694[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=48, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,435]DEBUG  9694[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,435]DEBUG  9694[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 22:36:58,435]DEBUG  9694[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,435]DEBUG  9694[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:58,436]DEBUG  9695[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:58,436]DEBUG  9695[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:58,436]DEBUG  9695[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:58,436]DEBUG  9695[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:58,436]DEBUG  9695[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#1, id=1, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#1, order=com.softserveinc.edu.oms.domain.entities.Order#47, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 22:36:58,436]DEBUG  9695[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#1, id=2, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#1, order=com.softserveinc.edu.oms.domain.entities.Order#48, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 22:36:58,436]DEBUG  9695[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=1, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 22:36:58,436]DEBUG  9695[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=1, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 22:36:58,436]DEBUG  9695[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=47, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,437]DEBUG  9696[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=48, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,437]DEBUG  9696[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,437]DEBUG  9696[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 22:36:58,437]DEBUG  9696[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,437]DEBUG  9696[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@4caabc8c testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@5d40b2a6, testMethod = testFindAll@OrderItemDaoTest, testException = [null]]]
[2017-10-14 22:36:58,437]DEBUG  9696[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 22:36:58,437]DEBUG  9696[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@18379fc0]
[2017-10-14 22:36:58,437]DEBUG  9696[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 22:36:58,464]DEBUG  9723[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 22:36:58,464]DEBUG  9723[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:58,464]DEBUG  9723[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@18379fc0] after transaction
[2017-10-14 22:36:58,465]DEBUG  9724[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 22:36:58,465]DEBUG  9724[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 22:36:58,465]DEBUG  9724[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:58,465] INFO  9724[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@4caabc8c testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@5d40b2a6, testMethod = testFindAll@OrderItemDaoTest, testException = [null]]]
[2017-10-14 22:36:58,466]DEBUG  9725[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@4caabc8c testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@5d40b2a6, testMethod = testFindAll@OrderItemDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 22:36:58,466]DEBUG  9725[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2017-10-14 22:36:58,466]DEBUG  9725[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2017-10-14 22:36:58,467]DEBUG  9726[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@4caabc8c testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@48aca20b, testMethod = [null], testException = [null]]].
[2017-10-14 22:36:58,467]DEBUG  9726[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 22:36:58,467]DEBUG  9726[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 22:36:58,467]DEBUG  9726[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 22:36:58,467]DEBUG  9726[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 22:36:58,468]DEBUG  9727[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 22:36:58,468]DEBUG  9727[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 22:36:58,468]DEBUG  9727[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 22:36:58,468]DEBUG  9727[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 22:36:58,468]DEBUG  9727[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 22:36:58,468]DEBUG  9727[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 22:36:58,469]DEBUG  9728[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 22:36:58,469]DEBUG  9728[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 22:36:58,469]DEBUG  9728[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 22:36:58,469]DEBUG  9728[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 22:36:58,469]DEBUG  9728[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 22:36:58,469]DEBUG  9728[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 22:36:58,469]DEBUG  9728[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 22:36:58,469]DEBUG  9728[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 22:36:58,469]DEBUG  9728[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 22:36:58,469]DEBUG  9728[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 22:36:58,469]DEBUG  9728[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 22:36:58,470]DEBUG  9729[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 22:36:58,470]DEBUG  9729[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@48aca20b]
[2017-10-14 22:36:58,470]DEBUG  9729[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindAllWithSorting' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:58,471]DEBUG  9730[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@4caabc8c testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@48aca20b, testMethod = testFindAllWithSorting@OrderItemDaoTest, testException = [null]]]
[2017-10-14 22:36:58,471]DEBUG  9730[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 22:36:58,471]DEBUG  9730[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindAllWithSorting]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:58,472]DEBUG  9731[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15080098184
[2017-10-14 22:36:58,472]DEBUG  9731[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@4c5853eb] for Hibernate transaction
[2017-10-14 22:36:58,472]DEBUG  9731[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@4c5853eb]
[2017-10-14 22:36:58,472]DEBUG  9731[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 22:36:58,472]DEBUG  9731[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 22:36:58,472]DEBUG  9731[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 22:36:58,473]DEBUG  9732[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@4caabc8c testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@48aca20b, testMethod = testFindAllWithSorting@OrderItemDaoTest, testException = [null]]]
[2017-10-14 22:36:58,473] INFO  9732[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (2): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@598b619b]; rollback [true]
[2017-10-14 22:36:58,473]DEBUG  9732[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,473]DEBUG  9732[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 22:36:58,474]DEBUG  9733[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,474]DEBUG  9733[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,474]DEBUG  9733[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 22:36:58,475]DEBUG  9734[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,475]DEBUG  9734[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,475]DEBUG  9734[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 22:36:58,476]DEBUG  9735[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,476]DEBUG  9735[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,476]DEBUG  9735[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 22:36:58,477]DEBUG  9736[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,477]DEBUG  9736[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,477]DEBUG  9736[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 22:36:58,477]DEBUG  9736[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,478]DEBUG  9737[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,478]DEBUG  9737[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 22:36:58,478]DEBUG  9737[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,479]DEBUG  9738[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,479]DEBUG  9738[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 22:36:58,479]DEBUG  9738[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,480]DEBUG  9739[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,480]DEBUG  9739[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 22:36:58,480]DEBUG  9739[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,480]DEBUG  9739[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,481]DEBUG  9740[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 22:36:58,481]DEBUG  9740[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,481]DEBUG  9740[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:58,482]DEBUG  9741[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,482]DEBUG  9741[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 22:36:58,483]DEBUG  9742[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 49
[2017-10-14 22:36:58,483]DEBUG  9742[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,483]DEBUG  9742[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:58,483]DEBUG  9742[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,484]DEBUG  9743[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 22:36:58,484]DEBUG  9743[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 50
[2017-10-14 22:36:58,485]DEBUG  9744[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,485]DEBUG  9744[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:58,485]DEBUG  9744[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,485]DEBUG  9744[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 22:36:58,486]DEBUG  9745[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 2
[2017-10-14 22:36:58,486]DEBUG  9745[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,487]DEBUG  9746[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:58,487]DEBUG  9746[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,487]DEBUG  9746[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Dimensions (DimensionName, NumberOfProducts) values (?, ?)
[2017-10-14 22:36:58,488]DEBUG  9747[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 2
[2017-10-14 22:36:58,488]DEBUG  9747[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,488]DEBUG  9747[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:58,489]DEBUG  9748[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,489]DEBUG  9748[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderItems (Cost, DimensionRef, ItemPrice, OrderRef, ProductRef, Quantity) values (?, ?, ?, ?, ?, ?)
[2017-10-14 22:36:58,489]DEBUG  9748[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 3
[2017-10-14 22:36:58,489]DEBUG  9748[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,489]DEBUG  9748[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:58,489]DEBUG  9748[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,490]DEBUG  9749[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderItems (Cost, DimensionRef, ItemPrice, OrderRef, ProductRef, Quantity) values (?, ?, ?, ?, ?, ?)
[2017-10-14 22:36:58,490]DEBUG  9749[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 4
[2017-10-14 22:36:58,490]DEBUG  9749[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,491]DEBUG  9750[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:58,491]DEBUG  9750[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:58,491]DEBUG  9750[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:58,491]DEBUG  9750[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:58,491]DEBUG  9750[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:58,492]DEBUG  9751[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=49, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,492]DEBUG  9751[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=50, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,492]DEBUG  9751[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#2, id=3, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#2, order=com.softserveinc.edu.oms.domain.entities.Order#49, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 22:36:58,492]DEBUG  9751[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=2, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 22:36:58,492]DEBUG  9751[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=2, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 22:36:58,492]DEBUG  9751[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#2, id=4, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#2, order=com.softserveinc.edu.oms.domain.entities.Order#50, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 22:36:58,492]DEBUG  9751[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,492]DEBUG  9751[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID8_6_, this_.Cost as Cost8_6_, this_.DimensionRef as Dimensio5_8_6_, this_.ItemPrice as ItemPrice8_6_, this_.OrderRef as OrderRef8_6_, this_.ProductRef as ProductRef8_6_, this_.Quantity as Quantity8_6_, dimension2_.ID as ID7_0_, dimension2_.DimensionName as Dimensio2_7_0_, dimension2_.NumberOfProducts as NumberOf3_7_0_, order3_.ID as ID5_1_, order3_.Assigne as Assigne5_1_, order3_.Customer as Customer5_1_, order3_.DeliveryDate as Delivery2_5_1_, order3_.IsGift as IsGift5_1_, order3_.MaxDiscount as MaxDisco4_5_1_, order3_.OrderDate as OrderDate5_1_, order3_.OrderName as OrderName5_1_, order3_.OrderNumber as OrderNum7_5_1_, order3_.OrderStatusRef as OrderSt12_5_1_, order3_.PreferableDeliveryDate as Preferab8_5_1_, order3_.TotalPrice as TotalPrice5_1_, user4_.ID as ID3_2_, user4_.IsUserActive as IsUserAc2_3_2_, user4_.Balance as Balance3_2_, user4_.CustomerTypeRef as Customer9_3_2_, user4_.Email as Email3_2_, user4_.FirstName as FirstName3_2_, user4_.LastName as LastName3_2_, user4_.Login as Login3_2_, user4_.Password as Password3_2_, user4_.RegionRef as RegionRef3_2_, user4_.RoleRef as RoleRef3_2_, user5_.ID as ID3_3_, user5_.IsUserActive as IsUserAc2_3_3_, user5_.Balance as Balance3_3_, user5_.CustomerTypeRef as Customer9_3_3_, user5_.Email as Email3_3_, user5_.FirstName as FirstName3_3_, user5_.LastName as LastName3_3_, user5_.Login as Login3_3_, user5_.Password as Password3_3_, user5_.RegionRef as RegionRef3_3_, user5_.RoleRef as RoleRef3_3_, orderstatu6_.ID as ID4_4_, orderstatu6_.OrederStatusName as OrederSt2_4_4_, product7_.ID as ID6_5_, product7_.IsProductActive as IsProduc2_6_5_, product7_.ProductDescription as ProductD3_6_5_, product7_.ProductName as ProductN4_6_5_, product7_.ProductPrice as ProductP5_6_5_ from OrderItems this_ left outer join Dimensions dimension2_ on this_.DimensionRef=dimension2_.ID left outer join Orders order3_ on this_.OrderRef=order3_.ID left outer join Users user4_ on order3_.Assigne=user4_.ID left outer join Users user5_ on order3_.Customer=user5_.ID left outer join OrderStatuses orderstatu6_ on order3_.OrderStatusRef=orderstatu6_.ID left outer join Products product7_ on this_.ProductRef=product7_.ID order by this_.Cost desc
[2017-10-14 22:36:58,493]DEBUG  9752[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:58,494]DEBUG  9753[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Dimension#2], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#50], null, null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Product#2], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderItem#4]
[2017-10-14 22:36:58,494]DEBUG  9753[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Dimension#2], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#49], null, null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Product#2], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderItem#3]
[2017-10-14 22:36:58,494]DEBUG  9753[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:58,494]DEBUG  9753[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,495]DEBUG  9754[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:58,495]DEBUG  9754[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:58,495]DEBUG  9754[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:58,495]DEBUG  9754[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:58,495]DEBUG  9754[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:58,495]DEBUG  9754[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:58,495]DEBUG  9754[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=49, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,495]DEBUG  9754[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=50, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,496]DEBUG  9755[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#2, id=3, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#2, order=com.softserveinc.edu.oms.domain.entities.Order#49, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 22:36:58,496]DEBUG  9755[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=2, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 22:36:58,496]DEBUG  9755[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=2, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 22:36:58,496]DEBUG  9755[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#2, id=4, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#2, order=com.softserveinc.edu.oms.domain.entities.Order#50, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 22:36:58,496]DEBUG  9755[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,496]DEBUG  9755[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 22:36:58,496]DEBUG  9755[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,497]DEBUG  9756[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:58,497]DEBUG  9756[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:58,497]DEBUG  9756[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:58,497]DEBUG  9756[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:58,497]DEBUG  9756[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:58,497]DEBUG  9756[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=49, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,497]DEBUG  9756[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=50, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,497]DEBUG  9756[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#2, id=3, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#2, order=com.softserveinc.edu.oms.domain.entities.Order#49, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 22:36:58,497]DEBUG  9756[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=2, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 22:36:58,497]DEBUG  9756[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=2, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 22:36:58,498]DEBUG  9757[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#2, id=4, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#2, order=com.softserveinc.edu.oms.domain.entities.Order#50, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 22:36:58,498]DEBUG  9757[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,498]DEBUG  9757[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 22:36:58,498]DEBUG  9757[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,498]DEBUG  9757[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:58,498]DEBUG  9757[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:58,498]DEBUG  9757[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:58,499]DEBUG  9758[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:58,499]DEBUG  9758[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:58,499]DEBUG  9758[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=49, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,499]DEBUG  9758[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=50, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,499]DEBUG  9758[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#2, id=3, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#2, order=com.softserveinc.edu.oms.domain.entities.Order#49, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 22:36:58,499]DEBUG  9758[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=2, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 22:36:58,499]DEBUG  9758[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=2, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 22:36:58,499]DEBUG  9758[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#2, id=4, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#2, order=com.softserveinc.edu.oms.domain.entities.Order#50, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 22:36:58,499]DEBUG  9758[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,499]DEBUG  9758[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 22:36:58,500]DEBUG  9759[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,500]DEBUG  9759[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:58,500]DEBUG  9759[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:58,500]DEBUG  9759[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:58,500]DEBUG  9759[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:58,500]DEBUG  9759[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:58,500]DEBUG  9759[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=49, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,501]DEBUG  9760[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=50, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,501]DEBUG  9760[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#2, id=3, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#2, order=com.softserveinc.edu.oms.domain.entities.Order#49, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 22:36:58,501]DEBUG  9760[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=2, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 22:36:58,501]DEBUG  9760[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=2, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 22:36:58,501]DEBUG  9760[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#2, id=4, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#2, order=com.softserveinc.edu.oms.domain.entities.Order#50, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 22:36:58,501]DEBUG  9760[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,501]DEBUG  9760[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 22:36:58,501]DEBUG  9760[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,502]DEBUG  9761[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:58,502]DEBUG  9761[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:58,502]DEBUG  9761[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:58,502]DEBUG  9761[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:58,502]DEBUG  9761[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:58,502]DEBUG  9761[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=49, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,502]DEBUG  9761[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=50, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,502]DEBUG  9761[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#2, id=3, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#2, order=com.softserveinc.edu.oms.domain.entities.Order#49, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 22:36:58,502]DEBUG  9761[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=2, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 22:36:58,503]DEBUG  9762[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=2, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 22:36:58,503]DEBUG  9762[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#2, id=4, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#2, order=com.softserveinc.edu.oms.domain.entities.Order#50, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 22:36:58,503]DEBUG  9762[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,503]DEBUG  9762[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 22:36:58,503]DEBUG  9762[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,503]DEBUG  9762[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:58,503]DEBUG  9762[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:58,504]DEBUG  9763[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:58,504]DEBUG  9763[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:58,504]DEBUG  9763[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:58,504]DEBUG  9763[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=49, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,504]DEBUG  9763[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=50, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,504]DEBUG  9763[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#2, id=3, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#2, order=com.softserveinc.edu.oms.domain.entities.Order#49, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 22:36:58,504]DEBUG  9763[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=2, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 22:36:58,504]DEBUG  9763[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=2, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 22:36:58,504]DEBUG  9763[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#2, id=4, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#2, order=com.softserveinc.edu.oms.domain.entities.Order#50, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 22:36:58,504]DEBUG  9763[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,504]DEBUG  9763[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 22:36:58,505]DEBUG  9764[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,505]DEBUG  9764[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:58,505]DEBUG  9764[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:58,505]DEBUG  9764[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:58,505]DEBUG  9764[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:58,505]DEBUG  9764[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:58,505]DEBUG  9764[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=49, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,505]DEBUG  9764[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=50, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,506]DEBUG  9765[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#2, id=3, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#2, order=com.softserveinc.edu.oms.domain.entities.Order#49, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 22:36:58,506]DEBUG  9765[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=2, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 22:36:58,506]DEBUG  9765[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=2, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 22:36:58,506]DEBUG  9765[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#2, id=4, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#2, order=com.softserveinc.edu.oms.domain.entities.Order#50, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 22:36:58,506]DEBUG  9765[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,506]DEBUG  9765[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 22:36:58,506]DEBUG  9765[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,506]DEBUG  9765[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:58,507]DEBUG  9766[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:58,507]DEBUG  9766[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:58,507]DEBUG  9766[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:58,507]DEBUG  9766[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:58,507]DEBUG  9766[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=49, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,507]DEBUG  9766[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=50, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,507]DEBUG  9766[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#2, id=3, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#2, order=com.softserveinc.edu.oms.domain.entities.Order#49, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 22:36:58,507]DEBUG  9766[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=2, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 22:36:58,507]DEBUG  9766[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=2, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 22:36:58,508]DEBUG  9767[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#2, id=4, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#2, order=com.softserveinc.edu.oms.domain.entities.Order#50, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 22:36:58,508]DEBUG  9767[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,508]DEBUG  9767[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 22:36:58,508]DEBUG  9767[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,508]DEBUG  9767[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:58,508]DEBUG  9767[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:58,508]DEBUG  9767[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:58,509]DEBUG  9768[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:58,509]DEBUG  9768[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:58,509]DEBUG  9768[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=49, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,509]DEBUG  9768[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=50, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,509]DEBUG  9768[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#2, id=3, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#2, order=com.softserveinc.edu.oms.domain.entities.Order#49, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 22:36:58,509]DEBUG  9768[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=2, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 22:36:58,509]DEBUG  9768[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=2, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 22:36:58,509]DEBUG  9768[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#2, id=4, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#2, order=com.softserveinc.edu.oms.domain.entities.Order#50, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 22:36:58,509]DEBUG  9768[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,509]DEBUG  9768[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 22:36:58,510]DEBUG  9769[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,510]DEBUG  9769[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@4caabc8c testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@48aca20b, testMethod = testFindAllWithSorting@OrderItemDaoTest, testException = [null]]]
[2017-10-14 22:36:58,510]DEBUG  9769[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 22:36:58,510]DEBUG  9769[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@4c5853eb]
[2017-10-14 22:36:58,510]DEBUG  9769[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 22:36:58,539]DEBUG  9798[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 22:36:58,539]DEBUG  9798[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:58,539]DEBUG  9798[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@4c5853eb] after transaction
[2017-10-14 22:36:58,540]DEBUG  9799[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 22:36:58,540]DEBUG  9799[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 22:36:58,540]DEBUG  9799[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:58,540] INFO  9799[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@4caabc8c testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@48aca20b, testMethod = testFindAllWithSorting@OrderItemDaoTest, testException = [null]]]
[2017-10-14 22:36:58,541]DEBUG  9800[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@4caabc8c testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@48aca20b, testMethod = testFindAllWithSorting@OrderItemDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 22:36:58,542]DEBUG  9801[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2017-10-14 22:36:58,542]DEBUG  9801[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2017-10-14 22:36:58,542]DEBUG  9801[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@4caabc8c testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@76616ac1, testMethod = [null], testException = [null]]].
[2017-10-14 22:36:58,542]DEBUG  9801[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 22:36:58,543]DEBUG  9802[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 22:36:58,543]DEBUG  9802[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 22:36:58,543]DEBUG  9802[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 22:36:58,543]DEBUG  9802[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 22:36:58,543]DEBUG  9802[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 22:36:58,544]DEBUG  9803[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 22:36:58,544]DEBUG  9803[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 22:36:58,544]DEBUG  9803[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 22:36:58,544]DEBUG  9803[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 22:36:58,544]DEBUG  9803[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 22:36:58,544]DEBUG  9803[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 22:36:58,545]DEBUG  9804[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 22:36:58,545]DEBUG  9804[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 22:36:58,545]DEBUG  9804[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 22:36:58,545]DEBUG  9804[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 22:36:58,545]DEBUG  9804[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 22:36:58,546]DEBUG  9805[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 22:36:58,546]DEBUG  9805[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 22:36:58,546]DEBUG  9805[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 22:36:58,546]DEBUG  9805[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 22:36:58,547]DEBUG  9806[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 22:36:58,547]DEBUG  9806[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@76616ac1]
[2017-10-14 22:36:58,547]DEBUG  9806[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testRowCountWithCriterions' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:58,548]DEBUG  9807[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@4caabc8c testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@76616ac1, testMethod = testRowCountWithCriterions@OrderItemDaoTest, testException = [null]]]
[2017-10-14 22:36:58,548]DEBUG  9807[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 22:36:58,549]DEBUG  9808[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testRowCountWithCriterions]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:58,549]DEBUG  9808[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15080098185
[2017-10-14 22:36:58,549]DEBUG  9808[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@23f4d85b] for Hibernate transaction
[2017-10-14 22:36:58,549]DEBUG  9808[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@23f4d85b]
[2017-10-14 22:36:58,550]DEBUG  9809[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 22:36:58,550]DEBUG  9809[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 22:36:58,550]DEBUG  9809[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 22:36:58,550]DEBUG  9809[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@4caabc8c testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@76616ac1, testMethod = testRowCountWithCriterions@OrderItemDaoTest, testException = [null]]]
[2017-10-14 22:36:58,550] INFO  9809[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (3): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@598b619b]; rollback [true]
[2017-10-14 22:36:58,551]DEBUG  9810[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,551]DEBUG  9810[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 22:36:58,551]DEBUG  9810[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,552]DEBUG  9811[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,552]DEBUG  9811[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 22:36:58,553]DEBUG  9812[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,553]DEBUG  9812[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,553]DEBUG  9812[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 22:36:58,554]DEBUG  9813[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,554]DEBUG  9813[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,554]DEBUG  9813[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 22:36:58,555]DEBUG  9814[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,555]DEBUG  9814[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,555]DEBUG  9814[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 22:36:58,556]DEBUG  9815[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,556]DEBUG  9815[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,556]DEBUG  9815[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 22:36:58,557]DEBUG  9816[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,557]DEBUG  9816[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,557]DEBUG  9816[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 22:36:58,558]DEBUG  9817[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,558]DEBUG  9817[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,559]DEBUG  9818[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 22:36:58,559]DEBUG  9818[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,559]DEBUG  9818[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,560]DEBUG  9819[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 22:36:58,560]DEBUG  9819[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,560]DEBUG  9819[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:58,561]DEBUG  9820[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,561]DEBUG  9820[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 22:36:58,562]DEBUG  9821[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 51
[2017-10-14 22:36:58,562]DEBUG  9821[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,563]DEBUG  9822[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:58,563]DEBUG  9822[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,563]DEBUG  9822[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 22:36:58,564]DEBUG  9823[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 52
[2017-10-14 22:36:58,564]DEBUG  9823[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,565]DEBUG  9824[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:58,565]DEBUG  9824[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,565]DEBUG  9824[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 22:36:58,566]DEBUG  9825[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 3
[2017-10-14 22:36:58,566]DEBUG  9825[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,567]DEBUG  9826[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:58,567]DEBUG  9826[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,567]DEBUG  9826[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Dimensions (DimensionName, NumberOfProducts) values (?, ?)
[2017-10-14 22:36:58,568]DEBUG  9827[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 3
[2017-10-14 22:36:58,568]DEBUG  9827[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,569]DEBUG  9828[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:58,569]DEBUG  9828[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,569]DEBUG  9828[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderItems (Cost, DimensionRef, ItemPrice, OrderRef, ProductRef, Quantity) values (?, ?, ?, ?, ?, ?)
[2017-10-14 22:36:58,569]DEBUG  9828[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 5
[2017-10-14 22:36:58,570]DEBUG  9829[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,570]DEBUG  9829[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:58,570]DEBUG  9829[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,570]DEBUG  9829[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderItems (Cost, DimensionRef, ItemPrice, OrderRef, ProductRef, Quantity) values (?, ?, ?, ?, ?, ?)
[2017-10-14 22:36:58,570]DEBUG  9829[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 6
[2017-10-14 22:36:58,571]DEBUG  9830[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,573]DEBUG  9832[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:58,573]DEBUG  9832[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:58,573]DEBUG  9832[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:58,573]DEBUG  9832[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:58,574]DEBUG  9833[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:58,574]DEBUG  9833[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#3, id=6, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#3, order=com.softserveinc.edu.oms.domain.entities.Order#52, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 22:36:58,574]DEBUG  9833[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=51, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,574]DEBUG  9833[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=52, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,574]DEBUG  9833[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=3, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 22:36:58,574]DEBUG  9833[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=3, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 22:36:58,574]DEBUG  9833[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#3, id=5, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#3, order=com.softserveinc.edu.oms.domain.entities.Order#51, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 22:36:58,574]DEBUG  9833[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,574]DEBUG  9833[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select count(*) as y0_ from OrderItems this_
[2017-10-14 22:36:58,575]DEBUG  9834[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:58,575]DEBUG  9834[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: 
[2017-10-14 22:36:58,575]DEBUG  9834[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:58,576]DEBUG  9835[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,576]DEBUG  9835[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:58,576]DEBUG  9835[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:58,576]DEBUG  9835[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:58,577]DEBUG  9836[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:58,577]DEBUG  9836[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:58,577]DEBUG  9836[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:58,577]DEBUG  9836[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#3, id=6, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#3, order=com.softserveinc.edu.oms.domain.entities.Order#52, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 22:36:58,577]DEBUG  9836[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=51, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,577]DEBUG  9836[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=52, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,577]DEBUG  9836[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=3, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 22:36:58,577]DEBUG  9836[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=3, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 22:36:58,578]DEBUG  9837[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#3, id=5, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#3, order=com.softserveinc.edu.oms.domain.entities.Order#51, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 22:36:58,578]DEBUG  9837[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,578]DEBUG  9837[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select count(*) as y0_ from OrderItems this_ where this_.OrderRef=?
[2017-10-14 22:36:58,578]DEBUG  9837[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:58,578]DEBUG  9837[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: 
[2017-10-14 22:36:58,578]DEBUG  9837[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:58,579]DEBUG  9838[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,579]DEBUG  9838[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:58,579]DEBUG  9838[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:58,579]DEBUG  9838[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:58,579]DEBUG  9838[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:58,579]DEBUG  9838[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:58,579]DEBUG  9838[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:58,580]DEBUG  9839[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#3, id=6, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#3, order=com.softserveinc.edu.oms.domain.entities.Order#52, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 22:36:58,580]DEBUG  9839[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=51, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,580]DEBUG  9839[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=52, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,580]DEBUG  9839[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=3, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 22:36:58,580]DEBUG  9839[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=3, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 22:36:58,580]DEBUG  9839[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#3, id=5, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#3, order=com.softserveinc.edu.oms.domain.entities.Order#51, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 22:36:58,580]DEBUG  9839[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,580]DEBUG  9839[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 22:36:58,581]DEBUG  9840[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,581]DEBUG  9840[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:58,581]DEBUG  9840[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:58,581]DEBUG  9840[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:58,581]DEBUG  9840[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:58,582]DEBUG  9841[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:58,582]DEBUG  9841[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#3, id=6, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#3, order=com.softserveinc.edu.oms.domain.entities.Order#52, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 22:36:58,582]DEBUG  9841[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=51, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,582]DEBUG  9841[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=52, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,582]DEBUG  9841[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=3, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 22:36:58,582]DEBUG  9841[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=3, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 22:36:58,582]DEBUG  9841[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#3, id=5, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#3, order=com.softserveinc.edu.oms.domain.entities.Order#51, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 22:36:58,582]DEBUG  9841[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,582]DEBUG  9841[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 22:36:58,583]DEBUG  9842[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,583]DEBUG  9842[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:58,583]DEBUG  9842[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:58,583]DEBUG  9842[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:58,583]DEBUG  9842[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:58,583]DEBUG  9842[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:58,583]DEBUG  9842[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#3, id=6, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#3, order=com.softserveinc.edu.oms.domain.entities.Order#52, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 22:36:58,584]DEBUG  9843[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=51, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,584]DEBUG  9843[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=52, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,584]DEBUG  9843[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=3, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 22:36:58,584]DEBUG  9843[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=3, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 22:36:58,584]DEBUG  9843[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#3, id=5, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#3, order=com.softserveinc.edu.oms.domain.entities.Order#51, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 22:36:58,584]DEBUG  9843[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,584]DEBUG  9843[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 22:36:58,584]DEBUG  9843[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,585]DEBUG  9844[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:58,585]DEBUG  9844[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:58,585]DEBUG  9844[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:58,585]DEBUG  9844[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:58,585]DEBUG  9844[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:58,585]DEBUG  9844[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#3, id=6, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#3, order=com.softserveinc.edu.oms.domain.entities.Order#52, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 22:36:58,585]DEBUG  9844[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=51, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,585]DEBUG  9844[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=52, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,585]DEBUG  9844[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=3, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 22:36:58,586]DEBUG  9845[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=3, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 22:36:58,586]DEBUG  9845[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#3, id=5, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#3, order=com.softserveinc.edu.oms.domain.entities.Order#51, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 22:36:58,586]DEBUG  9845[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,586]DEBUG  9845[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 22:36:58,586]DEBUG  9845[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,586]DEBUG  9845[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:58,586]DEBUG  9845[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:58,587]DEBUG  9846[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:58,587]DEBUG  9846[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:58,587]DEBUG  9846[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:58,587]DEBUG  9846[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#3, id=6, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#3, order=com.softserveinc.edu.oms.domain.entities.Order#52, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 22:36:58,587]DEBUG  9846[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=51, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,587]DEBUG  9846[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=52, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,587]DEBUG  9846[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=3, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 22:36:58,587]DEBUG  9846[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=3, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 22:36:58,588]DEBUG  9847[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#3, id=5, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#3, order=com.softserveinc.edu.oms.domain.entities.Order#51, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 22:36:58,588]DEBUG  9847[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,588]DEBUG  9847[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 22:36:58,588]DEBUG  9847[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,588]DEBUG  9847[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:58,588]DEBUG  9847[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:58,588]DEBUG  9847[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:58,588]DEBUG  9847[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:58,589]DEBUG  9848[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:58,589]DEBUG  9848[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#3, id=6, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#3, order=com.softserveinc.edu.oms.domain.entities.Order#52, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 22:36:58,589]DEBUG  9848[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=51, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,589]DEBUG  9848[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=52, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,589]DEBUG  9848[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=3, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 22:36:58,589]DEBUG  9848[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=3, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 22:36:58,589]DEBUG  9848[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#3, id=5, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#3, order=com.softserveinc.edu.oms.domain.entities.Order#51, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 22:36:58,589]DEBUG  9848[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,589]DEBUG  9848[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 22:36:58,590]DEBUG  9849[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,590]DEBUG  9849[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:58,590]DEBUG  9849[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:58,590]DEBUG  9849[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:58,590]DEBUG  9849[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:58,590]DEBUG  9849[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:58,590]DEBUG  9849[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#3, id=6, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#3, order=com.softserveinc.edu.oms.domain.entities.Order#52, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 22:36:58,590]DEBUG  9849[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=51, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,590]DEBUG  9849[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=52, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,591]DEBUG  9850[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=3, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 22:36:58,591]DEBUG  9850[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=3, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 22:36:58,591]DEBUG  9850[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#3, id=5, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#3, order=com.softserveinc.edu.oms.domain.entities.Order#51, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 22:36:58,591]DEBUG  9850[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,591]DEBUG  9850[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 22:36:58,591]DEBUG  9850[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,591]DEBUG  9850[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:58,592]DEBUG  9851[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:58,592]DEBUG  9851[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:58,592]DEBUG  9851[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:58,592]DEBUG  9851[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:58,592]DEBUG  9851[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#3, id=6, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#3, order=com.softserveinc.edu.oms.domain.entities.Order#52, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 22:36:58,592]DEBUG  9851[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=51, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,592]DEBUG  9851[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=52, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,592]DEBUG  9851[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=3, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 22:36:58,592]DEBUG  9851[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=3, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 22:36:58,593]DEBUG  9852[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#3, id=5, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#3, order=com.softserveinc.edu.oms.domain.entities.Order#51, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 22:36:58,593]DEBUG  9852[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,593]DEBUG  9852[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 22:36:58,593]DEBUG  9852[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,593]DEBUG  9852[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:58,593]DEBUG  9852[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:58,593]DEBUG  9852[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:58,594]DEBUG  9853[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:58,594]DEBUG  9853[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:58,594]DEBUG  9853[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#3, id=6, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#3, order=com.softserveinc.edu.oms.domain.entities.Order#52, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 22:36:58,594]DEBUG  9853[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=51, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,594]DEBUG  9853[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=52, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,594]DEBUG  9853[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=3, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 22:36:58,594]DEBUG  9853[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=3, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 22:36:58,594]DEBUG  9853[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#3, id=5, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#3, order=com.softserveinc.edu.oms.domain.entities.Order#51, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 22:36:58,594]DEBUG  9853[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,594]DEBUG  9853[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 22:36:58,595]DEBUG  9854[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,595]DEBUG  9854[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@4caabc8c testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@76616ac1, testMethod = testRowCountWithCriterions@OrderItemDaoTest, testException = [null]]]
[2017-10-14 22:36:58,595]DEBUG  9854[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 22:36:58,595]DEBUG  9854[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@23f4d85b]
[2017-10-14 22:36:58,595]DEBUG  9854[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 22:36:58,631]DEBUG  9890[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 22:36:58,631]DEBUG  9890[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:58,631]DEBUG  9890[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@23f4d85b] after transaction
[2017-10-14 22:36:58,631]DEBUG  9890[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 22:36:58,632]DEBUG  9891[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 22:36:58,632]DEBUG  9891[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:58,632] INFO  9891[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@4caabc8c testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@76616ac1, testMethod = testRowCountWithCriterions@OrderItemDaoTest, testException = [null]]]
[2017-10-14 22:36:58,633]DEBUG  9892[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@4caabc8c testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@76616ac1, testMethod = testRowCountWithCriterions@OrderItemDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 22:36:58,633]DEBUG  9892[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2017-10-14 22:36:58,634]DEBUG  9893[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2017-10-14 22:36:58,634]DEBUG  9893[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@4caabc8c testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@6216fe6e, testMethod = [null], testException = [null]]].
[2017-10-14 22:36:58,634]DEBUG  9893[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 22:36:58,634]DEBUG  9893[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 22:36:58,635]DEBUG  9894[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 22:36:58,635]DEBUG  9894[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 22:36:58,635]DEBUG  9894[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 22:36:58,635]DEBUG  9894[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 22:36:58,635]DEBUG  9894[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 22:36:58,636]DEBUG  9895[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 22:36:58,636]DEBUG  9895[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 22:36:58,636]DEBUG  9895[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 22:36:58,636]DEBUG  9895[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 22:36:58,636]DEBUG  9895[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 22:36:58,636]DEBUG  9895[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 22:36:58,637]DEBUG  9896[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 22:36:58,637]DEBUG  9896[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 22:36:58,637]DEBUG  9896[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 22:36:58,637]DEBUG  9896[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 22:36:58,637]DEBUG  9896[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 22:36:58,638]DEBUG  9897[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 22:36:58,638]DEBUG  9897[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 22:36:58,638]DEBUG  9897[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 22:36:58,638]DEBUG  9897[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 22:36:58,639]DEBUG  9898[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@6216fe6e]
[2017-10-14 22:36:58,639]DEBUG  9898[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testPaging' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:58,639]DEBUG  9898[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@4caabc8c testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@6216fe6e, testMethod = testPaging@OrderItemDaoTest, testException = [null]]]
[2017-10-14 22:36:58,640]DEBUG  9899[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 22:36:58,640]DEBUG  9899[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testPaging]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:58,641]DEBUG  9900[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15080098186
[2017-10-14 22:36:58,641]DEBUG  9900[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@7b92174d] for Hibernate transaction
[2017-10-14 22:36:58,641]DEBUG  9900[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7b92174d]
[2017-10-14 22:36:58,641]DEBUG  9900[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 22:36:58,641]DEBUG  9900[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 22:36:58,642]DEBUG  9901[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 22:36:58,642]DEBUG  9901[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@4caabc8c testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@6216fe6e, testMethod = testPaging@OrderItemDaoTest, testException = [null]]]
[2017-10-14 22:36:58,642] INFO  9901[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (4): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@598b619b]; rollback [true]
[2017-10-14 22:36:58,642]DEBUG  9901[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,643]DEBUG  9902[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 22:36:58,643]DEBUG  9902[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,644]DEBUG  9903[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,644]DEBUG  9903[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 22:36:58,644]DEBUG  9903[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,645]DEBUG  9904[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,645]DEBUG  9904[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 22:36:58,645]DEBUG  9904[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,646]DEBUG  9905[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,646]DEBUG  9905[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 22:36:58,647]DEBUG  9906[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,647]DEBUG  9906[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,647]DEBUG  9906[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 22:36:58,648]DEBUG  9907[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,648]DEBUG  9907[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,648]DEBUG  9907[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 22:36:58,649]DEBUG  9908[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,649]DEBUG  9908[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,649]DEBUG  9908[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 22:36:58,649]DEBUG  9908[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,649]DEBUG  9908[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,649]DEBUG  9908[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 22:36:58,650]DEBUG  9909[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,650]DEBUG  9909[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,650]DEBUG  9909[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 22:36:58,650]DEBUG  9909[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,650]DEBUG  9909[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:58,650]DEBUG  9909[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,651]DEBUG  9910[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 22:36:58,651]DEBUG  9910[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 53
[2017-10-14 22:36:58,651]DEBUG  9910[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,651]DEBUG  9910[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:58,651]DEBUG  9910[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,652]DEBUG  9911[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 22:36:58,652]DEBUG  9911[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 54
[2017-10-14 22:36:58,652]DEBUG  9911[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,652]DEBUG  9911[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:58,652]DEBUG  9911[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,653]DEBUG  9912[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 22:36:58,653]DEBUG  9912[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 4
[2017-10-14 22:36:58,653]DEBUG  9912[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,653]DEBUG  9912[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:58,653]DEBUG  9912[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,653]DEBUG  9912[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Dimensions (DimensionName, NumberOfProducts) values (?, ?)
[2017-10-14 22:36:58,654]DEBUG  9913[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 4
[2017-10-14 22:36:58,654]DEBUG  9913[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,654]DEBUG  9913[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:58,654]DEBUG  9913[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,654]DEBUG  9913[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderItems (Cost, DimensionRef, ItemPrice, OrderRef, ProductRef, Quantity) values (?, ?, ?, ?, ?, ?)
[2017-10-14 22:36:58,655]DEBUG  9914[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 7
[2017-10-14 22:36:58,655]DEBUG  9914[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,655]DEBUG  9914[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:58,656]DEBUG  9915[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,656]DEBUG  9915[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderItems (Cost, DimensionRef, ItemPrice, OrderRef, ProductRef, Quantity) values (?, ?, ?, ?, ?, ?)
[2017-10-14 22:36:58,656]DEBUG  9915[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 8
[2017-10-14 22:36:58,656]DEBUG  9915[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,657]DEBUG  9916[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:58,657]DEBUG  9916[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:58,658]DEBUG  9917[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:58,658]DEBUG  9917[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:58,658]DEBUG  9917[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:58,658]DEBUG  9917[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#4, id=7, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#4, order=com.softserveinc.edu.oms.domain.entities.Order#53, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 22:36:58,658]DEBUG  9917[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#4, id=8, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#4, order=com.softserveinc.edu.oms.domain.entities.Order#54, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 22:36:58,658]DEBUG  9917[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=4, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 22:36:58,658]DEBUG  9917[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=53, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,659]DEBUG  9918[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=54, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,659]DEBUG  9918[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=4, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 22:36:58,659]DEBUG  9918[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,659]DEBUG  9918[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID8_6_, this_.Cost as Cost8_6_, this_.DimensionRef as Dimensio5_8_6_, this_.ItemPrice as ItemPrice8_6_, this_.OrderRef as OrderRef8_6_, this_.ProductRef as ProductRef8_6_, this_.Quantity as Quantity8_6_, dimension2_.ID as ID7_0_, dimension2_.DimensionName as Dimensio2_7_0_, dimension2_.NumberOfProducts as NumberOf3_7_0_, order3_.ID as ID5_1_, order3_.Assigne as Assigne5_1_, order3_.Customer as Customer5_1_, order3_.DeliveryDate as Delivery2_5_1_, order3_.IsGift as IsGift5_1_, order3_.MaxDiscount as MaxDisco4_5_1_, order3_.OrderDate as OrderDate5_1_, order3_.OrderName as OrderName5_1_, order3_.OrderNumber as OrderNum7_5_1_, order3_.OrderStatusRef as OrderSt12_5_1_, order3_.PreferableDeliveryDate as Preferab8_5_1_, order3_.TotalPrice as TotalPrice5_1_, user4_.ID as ID3_2_, user4_.IsUserActive as IsUserAc2_3_2_, user4_.Balance as Balance3_2_, user4_.CustomerTypeRef as Customer9_3_2_, user4_.Email as Email3_2_, user4_.FirstName as FirstName3_2_, user4_.LastName as LastName3_2_, user4_.Login as Login3_2_, user4_.Password as Password3_2_, user4_.RegionRef as RegionRef3_2_, user4_.RoleRef as RoleRef3_2_, user5_.ID as ID3_3_, user5_.IsUserActive as IsUserAc2_3_3_, user5_.Balance as Balance3_3_, user5_.CustomerTypeRef as Customer9_3_3_, user5_.Email as Email3_3_, user5_.FirstName as FirstName3_3_, user5_.LastName as LastName3_3_, user5_.Login as Login3_3_, user5_.Password as Password3_3_, user5_.RegionRef as RegionRef3_3_, user5_.RoleRef as RoleRef3_3_, orderstatu6_.ID as ID4_4_, orderstatu6_.OrederStatusName as OrederSt2_4_4_, product7_.ID as ID6_5_, product7_.IsProductActive as IsProduc2_6_5_, product7_.ProductDescription as ProductD3_6_5_, product7_.ProductName as ProductN4_6_5_, product7_.ProductPrice as ProductP5_6_5_ from OrderItems this_ left outer join Dimensions dimension2_ on this_.DimensionRef=dimension2_.ID left outer join Orders order3_ on this_.OrderRef=order3_.ID left outer join Users user4_ on order3_.Assigne=user4_.ID left outer join Users user5_ on order3_.Customer=user5_.ID left outer join OrderStatuses orderstatu6_ on order3_.OrderStatusRef=orderstatu6_.ID left outer join Products product7_ on this_.ProductRef=product7_.ID where this_.OrderRef=? limit ?
[2017-10-14 22:36:58,660]DEBUG  9919[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:58,661]DEBUG  9920[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Dimension#4], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#53], null, null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Product#4], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderItem#7]
[2017-10-14 22:36:58,661]DEBUG  9920[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:58,661]DEBUG  9920[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,661]DEBUG  9920[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:58,662]DEBUG  9921[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:58,662]DEBUG  9921[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:58,663]DEBUG  9922[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:58,663]DEBUG  9922[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:58,663]DEBUG  9922[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:58,663]DEBUG  9922[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#4, id=7, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#4, order=com.softserveinc.edu.oms.domain.entities.Order#53, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 22:36:58,663]DEBUG  9922[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#4, id=8, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#4, order=com.softserveinc.edu.oms.domain.entities.Order#54, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 22:36:58,663]DEBUG  9922[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=4, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 22:36:58,663]DEBUG  9922[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=53, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,663]DEBUG  9922[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=54, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,663]DEBUG  9922[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=4, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 22:36:58,664]DEBUG  9923[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,664]DEBUG  9923[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID8_6_, this_.Cost as Cost8_6_, this_.DimensionRef as Dimensio5_8_6_, this_.ItemPrice as ItemPrice8_6_, this_.OrderRef as OrderRef8_6_, this_.ProductRef as ProductRef8_6_, this_.Quantity as Quantity8_6_, dimension2_.ID as ID7_0_, dimension2_.DimensionName as Dimensio2_7_0_, dimension2_.NumberOfProducts as NumberOf3_7_0_, order3_.ID as ID5_1_, order3_.Assigne as Assigne5_1_, order3_.Customer as Customer5_1_, order3_.DeliveryDate as Delivery2_5_1_, order3_.IsGift as IsGift5_1_, order3_.MaxDiscount as MaxDisco4_5_1_, order3_.OrderDate as OrderDate5_1_, order3_.OrderName as OrderName5_1_, order3_.OrderNumber as OrderNum7_5_1_, order3_.OrderStatusRef as OrderSt12_5_1_, order3_.PreferableDeliveryDate as Preferab8_5_1_, order3_.TotalPrice as TotalPrice5_1_, user4_.ID as ID3_2_, user4_.IsUserActive as IsUserAc2_3_2_, user4_.Balance as Balance3_2_, user4_.CustomerTypeRef as Customer9_3_2_, user4_.Email as Email3_2_, user4_.FirstName as FirstName3_2_, user4_.LastName as LastName3_2_, user4_.Login as Login3_2_, user4_.Password as Password3_2_, user4_.RegionRef as RegionRef3_2_, user4_.RoleRef as RoleRef3_2_, user5_.ID as ID3_3_, user5_.IsUserActive as IsUserAc2_3_3_, user5_.Balance as Balance3_3_, user5_.CustomerTypeRef as Customer9_3_3_, user5_.Email as Email3_3_, user5_.FirstName as FirstName3_3_, user5_.LastName as LastName3_3_, user5_.Login as Login3_3_, user5_.Password as Password3_3_, user5_.RegionRef as RegionRef3_3_, user5_.RoleRef as RoleRef3_3_, orderstatu6_.ID as ID4_4_, orderstatu6_.OrederStatusName as OrederSt2_4_4_, product7_.ID as ID6_5_, product7_.IsProductActive as IsProduc2_6_5_, product7_.ProductDescription as ProductD3_6_5_, product7_.ProductName as ProductN4_6_5_, product7_.ProductPrice as ProductP5_6_5_ from OrderItems this_ left outer join Dimensions dimension2_ on this_.DimensionRef=dimension2_.ID left outer join Orders order3_ on this_.OrderRef=order3_.ID left outer join Users user4_ on order3_.Assigne=user4_.ID left outer join Users user5_ on order3_.Customer=user5_.ID left outer join OrderStatuses orderstatu6_ on order3_.OrderStatusRef=orderstatu6_.ID left outer join Products product7_ on this_.ProductRef=product7_.ID where this_.OrderRef=? limit ?, ?
[2017-10-14 22:36:58,665]DEBUG  9924[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:58,665]DEBUG  9924[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:58,665]DEBUG  9924[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,665]DEBUG  9924[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:58,665]DEBUG  9924[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:58,665]DEBUG  9924[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:58,666]DEBUG  9925[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:58,666]DEBUG  9925[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:58,666]DEBUG  9925[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:58,666]DEBUG  9925[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#4, id=7, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#4, order=com.softserveinc.edu.oms.domain.entities.Order#53, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 22:36:58,666]DEBUG  9925[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#4, id=8, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#4, order=com.softserveinc.edu.oms.domain.entities.Order#54, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 22:36:58,666]DEBUG  9925[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=4, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 22:36:58,666]DEBUG  9925[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=53, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,666]DEBUG  9925[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=54, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,666]DEBUG  9925[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=4, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 22:36:58,667]DEBUG  9926[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,667]DEBUG  9926[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 22:36:58,667]DEBUG  9926[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,667]DEBUG  9926[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:58,667]DEBUG  9926[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:58,667]DEBUG  9926[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:58,667]DEBUG  9926[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:58,667]DEBUG  9926[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:58,668]DEBUG  9927[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#4, id=7, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#4, order=com.softserveinc.edu.oms.domain.entities.Order#53, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 22:36:58,668]DEBUG  9927[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#4, id=8, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#4, order=com.softserveinc.edu.oms.domain.entities.Order#54, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 22:36:58,668]DEBUG  9927[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=4, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 22:36:58,668]DEBUG  9927[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=53, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,668]DEBUG  9927[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=54, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,668]DEBUG  9927[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=4, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 22:36:58,668]DEBUG  9927[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,668]DEBUG  9927[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 22:36:58,669]DEBUG  9928[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,669]DEBUG  9928[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:58,669]DEBUG  9928[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:58,669]DEBUG  9928[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:58,669]DEBUG  9928[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:58,669]DEBUG  9928[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:58,669]DEBUG  9928[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#4, id=7, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#4, order=com.softserveinc.edu.oms.domain.entities.Order#53, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 22:36:58,669]DEBUG  9928[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#4, id=8, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#4, order=com.softserveinc.edu.oms.domain.entities.Order#54, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 22:36:58,670]DEBUG  9929[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=4, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 22:36:58,670]DEBUG  9929[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=53, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,670]DEBUG  9929[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=54, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,670]DEBUG  9929[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=4, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 22:36:58,670]DEBUG  9929[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,670]DEBUG  9929[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 22:36:58,670]DEBUG  9929[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,670]DEBUG  9929[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:58,670]DEBUG  9929[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:58,671]DEBUG  9930[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:58,671]DEBUG  9930[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:58,671]DEBUG  9930[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:58,671]DEBUG  9930[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#4, id=7, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#4, order=com.softserveinc.edu.oms.domain.entities.Order#53, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 22:36:58,671]DEBUG  9930[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#4, id=8, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#4, order=com.softserveinc.edu.oms.domain.entities.Order#54, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 22:36:58,671]DEBUG  9930[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=4, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 22:36:58,671]DEBUG  9930[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=53, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,671]DEBUG  9930[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=54, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,671]DEBUG  9930[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=4, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 22:36:58,672]DEBUG  9931[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,672]DEBUG  9931[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 22:36:58,672]DEBUG  9931[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,672]DEBUG  9931[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:58,672]DEBUG  9931[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:58,672]DEBUG  9931[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:58,672]DEBUG  9931[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:58,673]DEBUG  9932[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:58,673]DEBUG  9932[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#4, id=7, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#4, order=com.softserveinc.edu.oms.domain.entities.Order#53, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 22:36:58,673]DEBUG  9932[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#4, id=8, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#4, order=com.softserveinc.edu.oms.domain.entities.Order#54, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 22:36:58,673]DEBUG  9932[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=4, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 22:36:58,673]DEBUG  9932[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=53, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,673]DEBUG  9932[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=54, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,673]DEBUG  9932[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=4, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 22:36:58,673]DEBUG  9932[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,673]DEBUG  9932[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 22:36:58,674]DEBUG  9933[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,674]DEBUG  9933[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:58,674]DEBUG  9933[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:58,674]DEBUG  9933[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:58,674]DEBUG  9933[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:58,674]DEBUG  9933[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:58,675]DEBUG  9934[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#4, id=7, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#4, order=com.softserveinc.edu.oms.domain.entities.Order#53, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 22:36:58,675]DEBUG  9934[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#4, id=8, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#4, order=com.softserveinc.edu.oms.domain.entities.Order#54, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 22:36:58,675]DEBUG  9934[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=4, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 22:36:58,675]DEBUG  9934[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=53, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,675]DEBUG  9934[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=54, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,675]DEBUG  9934[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=4, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 22:36:58,675]DEBUG  9934[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,675]DEBUG  9934[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 22:36:58,676]DEBUG  9935[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,676]DEBUG  9935[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:58,676]DEBUG  9935[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:58,676]DEBUG  9935[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:58,676]DEBUG  9935[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:58,676]DEBUG  9935[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:58,676]DEBUG  9935[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#4, id=7, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#4, order=com.softserveinc.edu.oms.domain.entities.Order#53, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 22:36:58,676]DEBUG  9935[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#4, id=8, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#4, order=com.softserveinc.edu.oms.domain.entities.Order#54, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 22:36:58,677]DEBUG  9936[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=4, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 22:36:58,677]DEBUG  9936[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=53, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,677]DEBUG  9936[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=54, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,677]DEBUG  9936[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=4, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 22:36:58,677]DEBUG  9936[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,677]DEBUG  9936[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 22:36:58,677]DEBUG  9936[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,677]DEBUG  9936[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:58,678]DEBUG  9937[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:58,678]DEBUG  9937[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:58,678]DEBUG  9937[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:58,678]DEBUG  9937[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:58,678]DEBUG  9937[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#4, id=7, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#4, order=com.softserveinc.edu.oms.domain.entities.Order#53, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 22:36:58,678]DEBUG  9937[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#4, id=8, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#4, order=com.softserveinc.edu.oms.domain.entities.Order#54, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 22:36:58,678]DEBUG  9937[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=4, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 22:36:58,678]DEBUG  9937[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=53, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,679]DEBUG  9938[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=54, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,679]DEBUG  9938[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=4, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 22:36:58,679]DEBUG  9938[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,679]DEBUG  9938[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 22:36:58,679]DEBUG  9938[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,679]DEBUG  9938[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:58,679]DEBUG  9938[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:58,680]DEBUG  9939[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:58,680]DEBUG  9939[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:58,680]DEBUG  9939[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:58,680]DEBUG  9939[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#4, id=7, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#4, order=com.softserveinc.edu.oms.domain.entities.Order#53, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 22:36:58,680]DEBUG  9939[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#4, id=8, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#4, order=com.softserveinc.edu.oms.domain.entities.Order#54, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 22:36:58,680]DEBUG  9939[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=4, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 22:36:58,680]DEBUG  9939[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=53, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,680]DEBUG  9939[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=54, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,680]DEBUG  9939[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=4, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 22:36:58,681]DEBUG  9940[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,681]DEBUG  9940[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 22:36:58,681]DEBUG  9940[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,681]DEBUG  9940[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@4caabc8c testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@6216fe6e, testMethod = testPaging@OrderItemDaoTest, testException = [null]]]
[2017-10-14 22:36:58,681]DEBUG  9940[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 22:36:58,681]DEBUG  9940[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7b92174d]
[2017-10-14 22:36:58,681]DEBUG  9940[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 22:36:58,714]DEBUG  9973[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 22:36:58,714]DEBUG  9973[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:58,715]DEBUG  9974[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@7b92174d] after transaction
[2017-10-14 22:36:58,715]DEBUG  9974[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 22:36:58,715]DEBUG  9974[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 22:36:58,715]DEBUG  9974[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:58,716] INFO  9975[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@4caabc8c testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@6216fe6e, testMethod = testPaging@OrderItemDaoTest, testException = [null]]]
[2017-10-14 22:36:58,716]DEBUG  9975[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@4caabc8c testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@6216fe6e, testMethod = testPaging@OrderItemDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 22:36:58,717]DEBUG  9976[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2017-10-14 22:36:58,717]DEBUG  9976[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2017-10-14 22:36:58,717]DEBUG  9976[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@4caabc8c testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@15bf357, testMethod = [null], testException = [null]]].
[2017-10-14 22:36:58,718]DEBUG  9977[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 22:36:58,718]DEBUG  9977[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 22:36:58,718]DEBUG  9977[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 22:36:58,718]DEBUG  9977[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 22:36:58,718]DEBUG  9977[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 22:36:58,719]DEBUG  9978[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 22:36:58,719]DEBUG  9978[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 22:36:58,719]DEBUG  9978[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 22:36:58,719]DEBUG  9978[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 22:36:58,719]DEBUG  9978[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 22:36:58,720]DEBUG  9979[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 22:36:58,720]DEBUG  9979[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 22:36:58,720]DEBUG  9979[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 22:36:58,720]DEBUG  9979[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 22:36:58,720]DEBUG  9979[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 22:36:58,720]DEBUG  9979[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 22:36:58,721]DEBUG  9980[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 22:36:58,721]DEBUG  9980[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 22:36:58,721]DEBUG  9980[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 22:36:58,721]DEBUG  9980[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 22:36:58,721]DEBUG  9980[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 22:36:58,722]DEBUG  9981[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 22:36:58,722]DEBUG  9981[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@15bf357]
[2017-10-14 22:36:58,723]DEBUG  9982[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByOrder' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:58,723]DEBUG  9982[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@4caabc8c testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@15bf357, testMethod = testFindByOrder@OrderItemDaoTest, testException = [null]]]
[2017-10-14 22:36:58,723]DEBUG  9982[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 22:36:58,724]DEBUG  9983[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByOrder]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:58,724]DEBUG  9983[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15080098187
[2017-10-14 22:36:58,724]DEBUG  9983[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@14722a22] for Hibernate transaction
[2017-10-14 22:36:58,725]DEBUG  9984[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@14722a22]
[2017-10-14 22:36:58,725]DEBUG  9984[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 22:36:58,725]DEBUG  9984[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 22:36:58,725]DEBUG  9984[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 22:36:58,725]DEBUG  9984[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@4caabc8c testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@15bf357, testMethod = testFindByOrder@OrderItemDaoTest, testException = [null]]]
[2017-10-14 22:36:58,726] INFO  9985[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (5): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@598b619b]; rollback [true]
[2017-10-14 22:36:58,726]DEBUG  9985[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,726]DEBUG  9985[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 22:36:58,727]DEBUG  9986[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,727]DEBUG  9986[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,727]DEBUG  9986[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 22:36:58,728]DEBUG  9987[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,728]DEBUG  9987[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,728]DEBUG  9987[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 22:36:58,729]DEBUG  9988[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,729]DEBUG  9988[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,729]DEBUG  9988[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 22:36:58,729]DEBUG  9988[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,729]DEBUG  9988[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,729]DEBUG  9988[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 22:36:58,730]DEBUG  9989[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,730]DEBUG  9989[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,730]DEBUG  9989[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 22:36:58,730]DEBUG  9989[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,730]DEBUG  9989[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,730]DEBUG  9989[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 22:36:58,731]DEBUG  9990[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,731]DEBUG  9990[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,731]DEBUG  9990[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 22:36:58,731]DEBUG  9990[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,731]DEBUG  9990[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,732]DEBUG  9991[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 22:36:58,732]DEBUG  9991[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,732]DEBUG  9991[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:58,732]DEBUG  9991[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,732]DEBUG  9991[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 22:36:58,733]DEBUG  9992[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 55
[2017-10-14 22:36:58,733]DEBUG  9992[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,733]DEBUG  9992[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:58,733]DEBUG  9992[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,733]DEBUG  9992[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 22:36:58,734]DEBUG  9993[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 56
[2017-10-14 22:36:58,734]DEBUG  9993[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,734]DEBUG  9993[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:58,734]DEBUG  9993[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,734]DEBUG  9993[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 22:36:58,735]DEBUG  9994[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 5
[2017-10-14 22:36:58,735]DEBUG  9994[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,735]DEBUG  9994[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:58,735]DEBUG  9994[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,735]DEBUG  9994[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Dimensions (DimensionName, NumberOfProducts) values (?, ?)
[2017-10-14 22:36:58,736]DEBUG  9995[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 5
[2017-10-14 22:36:58,736]DEBUG  9995[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,736]DEBUG  9995[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:58,736]DEBUG  9995[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,736]DEBUG  9995[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderItems (Cost, DimensionRef, ItemPrice, OrderRef, ProductRef, Quantity) values (?, ?, ?, ?, ?, ?)
[2017-10-14 22:36:58,737]DEBUG  9996[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 9
[2017-10-14 22:36:58,737]DEBUG  9996[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,737]DEBUG  9996[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:58,737]DEBUG  9996[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,737]DEBUG  9996[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderItems (Cost, DimensionRef, ItemPrice, OrderRef, ProductRef, Quantity) values (?, ?, ?, ?, ?, ?)
[2017-10-14 22:36:58,738]DEBUG  9997[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 10
[2017-10-14 22:36:58,738]DEBUG  9997[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,739]DEBUG  9998[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:58,739]DEBUG  9998[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:58,739]DEBUG  9998[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:58,739]DEBUG  9998[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:58,739]DEBUG  9998[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:58,739]DEBUG  9998[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=5, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 22:36:58,739]DEBUG  9998[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#5, id=9, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#5, order=com.softserveinc.edu.oms.domain.entities.Order#55, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 22:36:58,740]DEBUG  9999[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#5, id=10, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#5, order=com.softserveinc.edu.oms.domain.entities.Order#56, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 22:36:58,740]DEBUG  9999[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=5, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 22:36:58,740]DEBUG  9999[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=55, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,740]DEBUG  9999[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=56, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,740]DEBUG  9999[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,741]DEBUG 10000[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID8_6_, this_.Cost as Cost8_6_, this_.DimensionRef as Dimensio5_8_6_, this_.ItemPrice as ItemPrice8_6_, this_.OrderRef as OrderRef8_6_, this_.ProductRef as ProductRef8_6_, this_.Quantity as Quantity8_6_, dimension2_.ID as ID7_0_, dimension2_.DimensionName as Dimensio2_7_0_, dimension2_.NumberOfProducts as NumberOf3_7_0_, order3_.ID as ID5_1_, order3_.Assigne as Assigne5_1_, order3_.Customer as Customer5_1_, order3_.DeliveryDate as Delivery2_5_1_, order3_.IsGift as IsGift5_1_, order3_.MaxDiscount as MaxDisco4_5_1_, order3_.OrderDate as OrderDate5_1_, order3_.OrderName as OrderName5_1_, order3_.OrderNumber as OrderNum7_5_1_, order3_.OrderStatusRef as OrderSt12_5_1_, order3_.PreferableDeliveryDate as Preferab8_5_1_, order3_.TotalPrice as TotalPrice5_1_, user4_.ID as ID3_2_, user4_.IsUserActive as IsUserAc2_3_2_, user4_.Balance as Balance3_2_, user4_.CustomerTypeRef as Customer9_3_2_, user4_.Email as Email3_2_, user4_.FirstName as FirstName3_2_, user4_.LastName as LastName3_2_, user4_.Login as Login3_2_, user4_.Password as Password3_2_, user4_.RegionRef as RegionRef3_2_, user4_.RoleRef as RoleRef3_2_, user5_.ID as ID3_3_, user5_.IsUserActive as IsUserAc2_3_3_, user5_.Balance as Balance3_3_, user5_.CustomerTypeRef as Customer9_3_3_, user5_.Email as Email3_3_, user5_.FirstName as FirstName3_3_, user5_.LastName as LastName3_3_, user5_.Login as Login3_3_, user5_.Password as Password3_3_, user5_.RegionRef as RegionRef3_3_, user5_.RoleRef as RoleRef3_3_, orderstatu6_.ID as ID4_4_, orderstatu6_.OrederStatusName as OrederSt2_4_4_, product7_.ID as ID6_5_, product7_.IsProductActive as IsProduc2_6_5_, product7_.ProductDescription as ProductD3_6_5_, product7_.ProductName as ProductN4_6_5_, product7_.ProductPrice as ProductP5_6_5_ from OrderItems this_ left outer join Dimensions dimension2_ on this_.DimensionRef=dimension2_.ID left outer join Orders order3_ on this_.OrderRef=order3_.ID left outer join Users user4_ on order3_.Assigne=user4_.ID left outer join Users user5_ on order3_.Customer=user5_.ID left outer join OrderStatuses orderstatu6_ on order3_.OrderStatusRef=orderstatu6_.ID left outer join Products product7_ on this_.ProductRef=product7_.ID where this_.OrderRef=?
[2017-10-14 22:36:58,742]DEBUG 10001[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:58,743]DEBUG 10002[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Dimension#5], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#55], null, null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Product#5], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderItem#9]
[2017-10-14 22:36:58,743]DEBUG 10002[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:58,743]DEBUG 10002[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,743]DEBUG 10002[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:58,743]DEBUG 10002[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:58,743]DEBUG 10002[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:58,743]DEBUG 10002[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:58,744]DEBUG 10003[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:58,744]DEBUG 10003[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:58,744]DEBUG 10003[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=5, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 22:36:58,744]DEBUG 10003[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#5, id=9, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#5, order=com.softserveinc.edu.oms.domain.entities.Order#55, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 22:36:58,744]DEBUG 10003[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#5, id=10, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#5, order=com.softserveinc.edu.oms.domain.entities.Order#56, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 22:36:58,744]DEBUG 10003[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=5, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 22:36:58,744]DEBUG 10003[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=55, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,744]DEBUG 10003[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=56, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,744]DEBUG 10003[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,744]DEBUG 10003[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 22:36:58,745]DEBUG 10004[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,745]DEBUG 10004[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:58,745]DEBUG 10004[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:58,745]DEBUG 10004[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:58,745]DEBUG 10004[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:58,745]DEBUG 10004[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:58,746]DEBUG 10005[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=5, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 22:36:58,746]DEBUG 10005[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#5, id=9, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#5, order=com.softserveinc.edu.oms.domain.entities.Order#55, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 22:36:58,746]DEBUG 10005[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#5, id=10, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#5, order=com.softserveinc.edu.oms.domain.entities.Order#56, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 22:36:58,746]DEBUG 10005[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=5, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 22:36:58,746]DEBUG 10005[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=55, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,746]DEBUG 10005[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=56, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,746]DEBUG 10005[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,746]DEBUG 10005[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 22:36:58,746]DEBUG 10005[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,747]DEBUG 10006[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:58,747]DEBUG 10006[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:58,747]DEBUG 10006[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:58,747]DEBUG 10006[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:58,747]DEBUG 10006[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:58,747]DEBUG 10006[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=5, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 22:36:58,747]DEBUG 10006[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#5, id=9, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#5, order=com.softserveinc.edu.oms.domain.entities.Order#55, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 22:36:58,747]DEBUG 10006[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#5, id=10, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#5, order=com.softserveinc.edu.oms.domain.entities.Order#56, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 22:36:58,747]DEBUG 10006[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=5, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 22:36:58,748]DEBUG 10007[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=55, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,748]DEBUG 10007[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=56, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,748]DEBUG 10007[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,748]DEBUG 10007[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 22:36:58,748]DEBUG 10007[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,748]DEBUG 10007[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:58,748]DEBUG 10007[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:58,749]DEBUG 10008[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:58,749]DEBUG 10008[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:58,749]DEBUG 10008[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:58,749]DEBUG 10008[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=5, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 22:36:58,749]DEBUG 10008[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#5, id=9, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#5, order=com.softserveinc.edu.oms.domain.entities.Order#55, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 22:36:58,749]DEBUG 10008[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#5, id=10, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#5, order=com.softserveinc.edu.oms.domain.entities.Order#56, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 22:36:58,749]DEBUG 10008[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=5, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 22:36:58,749]DEBUG 10008[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=55, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,749]DEBUG 10008[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=56, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,750]DEBUG 10009[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,750]DEBUG 10009[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 22:36:58,750]DEBUG 10009[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,750]DEBUG 10009[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:58,750]DEBUG 10009[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:58,750]DEBUG 10009[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:58,750]DEBUG 10009[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:58,751]DEBUG 10010[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:58,751]DEBUG 10010[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=5, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 22:36:58,751]DEBUG 10010[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#5, id=9, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#5, order=com.softserveinc.edu.oms.domain.entities.Order#55, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 22:36:58,751]DEBUG 10010[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#5, id=10, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#5, order=com.softserveinc.edu.oms.domain.entities.Order#56, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 22:36:58,751]DEBUG 10010[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=5, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 22:36:58,751]DEBUG 10010[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=55, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,751]DEBUG 10010[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=56, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,751]DEBUG 10010[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,751]DEBUG 10010[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 22:36:58,752]DEBUG 10011[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,752]DEBUG 10011[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:58,752]DEBUG 10011[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:58,752]DEBUG 10011[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:58,752]DEBUG 10011[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:58,752]DEBUG 10011[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:58,752]DEBUG 10011[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=5, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 22:36:58,752]DEBUG 10011[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#5, id=9, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#5, order=com.softserveinc.edu.oms.domain.entities.Order#55, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 22:36:58,753]DEBUG 10012[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#5, id=10, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#5, order=com.softserveinc.edu.oms.domain.entities.Order#56, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 22:36:58,753]DEBUG 10012[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=5, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 22:36:58,753]DEBUG 10012[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=55, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,753]DEBUG 10012[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=56, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,753]DEBUG 10012[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,753]DEBUG 10012[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 22:36:58,753]DEBUG 10012[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,753]DEBUG 10012[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:58,754]DEBUG 10013[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:58,754]DEBUG 10013[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:58,754]DEBUG 10013[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:58,754]DEBUG 10013[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:58,754]DEBUG 10013[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=5, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 22:36:58,754]DEBUG 10013[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#5, id=9, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#5, order=com.softserveinc.edu.oms.domain.entities.Order#55, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 22:36:58,754]DEBUG 10013[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#5, id=10, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#5, order=com.softserveinc.edu.oms.domain.entities.Order#56, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 22:36:58,754]DEBUG 10013[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=5, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 22:36:58,754]DEBUG 10013[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=55, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,755]DEBUG 10014[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=56, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,755]DEBUG 10014[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,755]DEBUG 10014[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 22:36:58,755]DEBUG 10014[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,755]DEBUG 10014[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:58,755]DEBUG 10014[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:58,755]DEBUG 10014[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:58,756]DEBUG 10015[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:58,756]DEBUG 10015[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:58,756]DEBUG 10015[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=5, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 22:36:58,756]DEBUG 10015[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#5, id=9, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#5, order=com.softserveinc.edu.oms.domain.entities.Order#55, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 22:36:58,756]DEBUG 10015[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#5, id=10, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#5, order=com.softserveinc.edu.oms.domain.entities.Order#56, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 22:36:58,756]DEBUG 10015[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=5, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 22:36:58,756]DEBUG 10015[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=55, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,756]DEBUG 10015[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=56, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,756]DEBUG 10015[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,756]DEBUG 10015[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 22:36:58,757]DEBUG 10016[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,757]DEBUG 10016[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:58,757]DEBUG 10016[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:58,757]DEBUG 10016[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:58,757]DEBUG 10016[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:58,757]DEBUG 10016[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:58,757]DEBUG 10016[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=5, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 22:36:58,758]DEBUG 10017[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#5, id=9, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#5, order=com.softserveinc.edu.oms.domain.entities.Order#55, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 22:36:58,758]DEBUG 10017[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#5, id=10, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#5, order=com.softserveinc.edu.oms.domain.entities.Order#56, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 22:36:58,758]DEBUG 10017[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=5, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 22:36:58,758]DEBUG 10017[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=55, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,758]DEBUG 10017[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=56, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,758]DEBUG 10017[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,758]DEBUG 10017[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 22:36:58,758]DEBUG 10017[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,759]DEBUG 10018[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@4caabc8c testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@15bf357, testMethod = testFindByOrder@OrderItemDaoTest, testException = [null]]]
[2017-10-14 22:36:58,759]DEBUG 10018[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 22:36:58,759]DEBUG 10018[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@14722a22]
[2017-10-14 22:36:58,759]DEBUG 10018[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 22:36:58,789]DEBUG 10048[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 22:36:58,789]DEBUG 10048[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:58,790]DEBUG 10049[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@14722a22] after transaction
[2017-10-14 22:36:58,790]DEBUG 10049[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 22:36:58,790]DEBUG 10049[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 22:36:58,790]DEBUG 10049[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:58,791] INFO 10050[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@4caabc8c testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@15bf357, testMethod = testFindByOrder@OrderItemDaoTest, testException = [null]]]
[2017-10-14 22:36:58,791]DEBUG 10050[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@4caabc8c testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@15bf357, testMethod = testFindByOrder@OrderItemDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 22:36:58,792]DEBUG 10051[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2017-10-14 22:36:58,792]DEBUG 10051[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2017-10-14 22:36:58,792]DEBUG 10051[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@4caabc8c testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@7b237731, testMethod = [null], testException = [null]]].
[2017-10-14 22:36:58,793]DEBUG 10052[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 22:36:58,793]DEBUG 10052[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 22:36:58,793]DEBUG 10052[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 22:36:58,793]DEBUG 10052[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 22:36:58,793]DEBUG 10052[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 22:36:58,794]DEBUG 10053[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 22:36:58,794]DEBUG 10053[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 22:36:58,794]DEBUG 10053[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 22:36:58,794]DEBUG 10053[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 22:36:58,794]DEBUG 10053[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 22:36:58,795]DEBUG 10054[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 22:36:58,795]DEBUG 10054[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 22:36:58,795]DEBUG 10054[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 22:36:58,795]DEBUG 10054[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 22:36:58,795]DEBUG 10054[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 22:36:58,795]DEBUG 10054[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 22:36:58,796]DEBUG 10055[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 22:36:58,796]DEBUG 10055[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 22:36:58,796]DEBUG 10055[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 22:36:58,796]DEBUG 10055[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 22:36:58,796]DEBUG 10055[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 22:36:58,797]DEBUG 10056[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 22:36:58,797]DEBUG 10056[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@7b237731]
[2017-10-14 22:36:58,798]DEBUG 10057[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindById' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:58,798]DEBUG 10057[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@4caabc8c testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@7b237731, testMethod = testFindById@OrderItemDaoTest, testException = [null]]]
[2017-10-14 22:36:58,798]DEBUG 10057[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 22:36:58,799]DEBUG 10058[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:58,799]DEBUG 10058[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15080098187
[2017-10-14 22:36:58,799]DEBUG 10058[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@34ed7ef] for Hibernate transaction
[2017-10-14 22:36:58,800]DEBUG 10059[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@34ed7ef]
[2017-10-14 22:36:58,800]DEBUG 10059[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 22:36:58,800]DEBUG 10059[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 22:36:58,800]DEBUG 10059[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 22:36:58,800]DEBUG 10059[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@4caabc8c testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@7b237731, testMethod = testFindById@OrderItemDaoTest, testException = [null]]]
[2017-10-14 22:36:58,801] INFO 10060[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (6): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@598b619b]; rollback [true]
[2017-10-14 22:36:58,801]DEBUG 10060[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,801]DEBUG 10060[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 22:36:58,802]DEBUG 10061[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,802]DEBUG 10061[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,802]DEBUG 10061[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 22:36:58,803]DEBUG 10062[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,803]DEBUG 10062[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,803]DEBUG 10062[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 22:36:58,804]DEBUG 10063[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,804]DEBUG 10063[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,804]DEBUG 10063[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 22:36:58,805]DEBUG 10064[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,805]DEBUG 10064[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,806]DEBUG 10065[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 22:36:58,806]DEBUG 10065[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,806]DEBUG 10065[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,807]DEBUG 10066[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 22:36:58,807]DEBUG 10066[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,807]DEBUG 10066[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,808]DEBUG 10067[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 22:36:58,808]DEBUG 10067[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,809]DEBUG 10068[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,809]DEBUG 10068[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 22:36:58,809]DEBUG 10068[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,809]DEBUG 10068[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,809]DEBUG 10068[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 22:36:58,809]DEBUG 10068[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,809]DEBUG 10068[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:58,810]DEBUG 10069[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,810]DEBUG 10069[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 22:36:58,810]DEBUG 10069[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 57
[2017-10-14 22:36:58,810]DEBUG 10069[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,811]DEBUG 10070[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:58,811]DEBUG 10070[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,811]DEBUG 10070[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 22:36:58,811]DEBUG 10070[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 58
[2017-10-14 22:36:58,811]DEBUG 10070[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,811]DEBUG 10070[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:58,812]DEBUG 10071[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,812]DEBUG 10071[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 22:36:58,812]DEBUG 10071[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 6
[2017-10-14 22:36:58,812]DEBUG 10071[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,812]DEBUG 10071[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:58,813]DEBUG 10072[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,813]DEBUG 10072[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Dimensions (DimensionName, NumberOfProducts) values (?, ?)
[2017-10-14 22:36:58,813]DEBUG 10072[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 6
[2017-10-14 22:36:58,813]DEBUG 10072[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,813]DEBUG 10072[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:58,814]DEBUG 10073[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,814]DEBUG 10073[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderItems (Cost, DimensionRef, ItemPrice, OrderRef, ProductRef, Quantity) values (?, ?, ?, ?, ?, ?)
[2017-10-14 22:36:58,814]DEBUG 10073[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 11
[2017-10-14 22:36:58,814]DEBUG 10073[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,814]DEBUG 10073[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:58,814]DEBUG 10073[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,815]DEBUG 10074[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderItems (Cost, DimensionRef, ItemPrice, OrderRef, ProductRef, Quantity) values (?, ?, ?, ?, ?, ?)
[2017-10-14 22:36:58,815]DEBUG 10074[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 12
[2017-10-14 22:36:58,815]DEBUG 10074[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,816]DEBUG 10075[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:58,816]DEBUG 10075[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:58,816]DEBUG 10075[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:58,816]DEBUG 10075[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:58,816]DEBUG 10075[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:58,816]DEBUG 10075[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=57, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,816]DEBUG 10075[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=6, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 22:36:58,816]DEBUG 10075[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=58, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,816]DEBUG 10075[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#6, id=11, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#6, order=com.softserveinc.edu.oms.domain.entities.Order#57, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 22:36:58,817]DEBUG 10076[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=6, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 22:36:58,817]DEBUG 10076[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#6, id=12, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#6, order=com.softserveinc.edu.oms.domain.entities.Order#58, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 22:36:58,817]DEBUG 10076[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,817]DEBUG 10076[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 22:36:58,817]DEBUG 10076[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,817]DEBUG 10076[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:58,817]DEBUG 10076[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:58,818]DEBUG 10077[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:58,818]DEBUG 10077[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:58,818]DEBUG 10077[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:58,818]DEBUG 10077[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=57, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,818]DEBUG 10077[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=6, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 22:36:58,818]DEBUG 10077[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=58, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,818]DEBUG 10077[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#6, id=11, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#6, order=com.softserveinc.edu.oms.domain.entities.Order#57, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 22:36:58,818]DEBUG 10077[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=6, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 22:36:58,818]DEBUG 10077[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#6, id=12, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#6, order=com.softserveinc.edu.oms.domain.entities.Order#58, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 22:36:58,819]DEBUG 10078[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,819]DEBUG 10078[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 22:36:58,819]DEBUG 10078[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,819]DEBUG 10078[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:58,819]DEBUG 10078[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:58,819]DEBUG 10078[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:58,819]DEBUG 10078[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:58,820]DEBUG 10079[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:58,820]DEBUG 10079[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=57, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,820]DEBUG 10079[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=6, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 22:36:58,820]DEBUG 10079[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=58, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,820]DEBUG 10079[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#6, id=11, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#6, order=com.softserveinc.edu.oms.domain.entities.Order#57, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 22:36:58,820]DEBUG 10079[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=6, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 22:36:58,820]DEBUG 10079[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#6, id=12, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#6, order=com.softserveinc.edu.oms.domain.entities.Order#58, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 22:36:58,820]DEBUG 10079[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,820]DEBUG 10079[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 22:36:58,821]DEBUG 10080[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,821]DEBUG 10080[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:58,821]DEBUG 10080[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:58,821]DEBUG 10080[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:58,821]DEBUG 10080[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:58,821]DEBUG 10080[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:58,821]DEBUG 10080[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=57, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,821]DEBUG 10080[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=6, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 22:36:58,821]DEBUG 10080[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=58, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,822]DEBUG 10081[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#6, id=11, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#6, order=com.softserveinc.edu.oms.domain.entities.Order#57, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 22:36:58,822]DEBUG 10081[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=6, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 22:36:58,822]DEBUG 10081[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#6, id=12, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#6, order=com.softserveinc.edu.oms.domain.entities.Order#58, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 22:36:58,822]DEBUG 10081[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,822]DEBUG 10081[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 22:36:58,823]DEBUG 10082[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,823]DEBUG 10082[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:58,823]DEBUG 10082[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:58,823]DEBUG 10082[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:58,823]DEBUG 10082[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:58,823]DEBUG 10082[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:58,823]DEBUG 10082[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=57, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,823]DEBUG 10082[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=6, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 22:36:58,824]DEBUG 10083[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=58, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,824]DEBUG 10083[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#6, id=11, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#6, order=com.softserveinc.edu.oms.domain.entities.Order#57, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 22:36:58,824]DEBUG 10083[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=6, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 22:36:58,824]DEBUG 10083[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#6, id=12, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#6, order=com.softserveinc.edu.oms.domain.entities.Order#58, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 22:36:58,824]DEBUG 10083[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,824]DEBUG 10083[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 22:36:58,824]DEBUG 10083[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,824]DEBUG 10083[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:58,825]DEBUG 10084[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:58,825]DEBUG 10084[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:58,825]DEBUG 10084[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:58,825]DEBUG 10084[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:58,825]DEBUG 10084[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=57, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,825]DEBUG 10084[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=6, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 22:36:58,825]DEBUG 10084[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=58, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,825]DEBUG 10084[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#6, id=11, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#6, order=com.softserveinc.edu.oms.domain.entities.Order#57, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 22:36:58,825]DEBUG 10084[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=6, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 22:36:58,825]DEBUG 10084[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#6, id=12, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#6, order=com.softserveinc.edu.oms.domain.entities.Order#58, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 22:36:58,826]DEBUG 10085[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,826]DEBUG 10085[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 22:36:58,826]DEBUG 10085[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,826]DEBUG 10085[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:58,826]DEBUG 10085[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:58,826]DEBUG 10085[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:58,826]DEBUG 10085[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:58,826]DEBUG 10085[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:58,827]DEBUG 10086[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=57, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,827]DEBUG 10086[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=6, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 22:36:58,827]DEBUG 10086[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=58, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,827]DEBUG 10086[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#6, id=11, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#6, order=com.softserveinc.edu.oms.domain.entities.Order#57, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 22:36:58,827]DEBUG 10086[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=6, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 22:36:58,827]DEBUG 10086[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#6, id=12, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#6, order=com.softserveinc.edu.oms.domain.entities.Order#58, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 22:36:58,827]DEBUG 10086[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,827]DEBUG 10086[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 22:36:58,827]DEBUG 10086[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,828]DEBUG 10087[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:58,828]DEBUG 10087[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:58,828]DEBUG 10087[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:58,828]DEBUG 10087[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:58,828]DEBUG 10087[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:58,828]DEBUG 10087[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=57, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,828]DEBUG 10087[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=6, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 22:36:58,828]DEBUG 10087[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=58, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,829]DEBUG 10088[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#6, id=11, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#6, order=com.softserveinc.edu.oms.domain.entities.Order#57, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 22:36:58,829]DEBUG 10088[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=6, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 22:36:58,829]DEBUG 10088[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#6, id=12, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#6, order=com.softserveinc.edu.oms.domain.entities.Order#58, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 22:36:58,829]DEBUG 10088[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,829]DEBUG 10088[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 22:36:58,829]DEBUG 10088[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,829]DEBUG 10088[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:58,829]DEBUG 10088[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:58,830]DEBUG 10089[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:58,830]DEBUG 10089[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:58,830]DEBUG 10089[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:58,830]DEBUG 10089[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=57, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,830]DEBUG 10089[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=6, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 22:36:58,830]DEBUG 10089[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=58, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,830]DEBUG 10089[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#6, id=11, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#6, order=com.softserveinc.edu.oms.domain.entities.Order#57, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 22:36:58,830]DEBUG 10089[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=6, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 22:36:58,830]DEBUG 10089[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#6, id=12, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#6, order=com.softserveinc.edu.oms.domain.entities.Order#58, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 22:36:58,830]DEBUG 10089[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,831]DEBUG 10090[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 22:36:58,831]DEBUG 10090[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,831]DEBUG 10090[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@4caabc8c testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@7b237731, testMethod = testFindById@OrderItemDaoTest, testException = [null]]]
[2017-10-14 22:36:58,831]DEBUG 10090[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 22:36:58,831]DEBUG 10090[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@34ed7ef]
[2017-10-14 22:36:58,831]DEBUG 10090[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 22:36:58,864]DEBUG 10123[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 22:36:58,864]DEBUG 10123[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:58,865]DEBUG 10124[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@34ed7ef] after transaction
[2017-10-14 22:36:58,865]DEBUG 10124[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 22:36:58,865]DEBUG 10124[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 22:36:58,865]DEBUG 10124[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:58,866] INFO 10125[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@4caabc8c testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@7b237731, testMethod = testFindById@OrderItemDaoTest, testException = [null]]]
[2017-10-14 22:36:58,867]DEBUG 10126[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@4caabc8c testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@7b237731, testMethod = testFindById@OrderItemDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 22:36:58,867]DEBUG 10126[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2017-10-14 22:36:58,867]DEBUG 10126[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2017-10-14 22:36:58,867]DEBUG 10126[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@4caabc8c testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@3f2f567b, testMethod = [null], testException = [null]]].
[2017-10-14 22:36:58,868]DEBUG 10127[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 22:36:58,868]DEBUG 10127[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 22:36:58,868]DEBUG 10127[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 22:36:58,868]DEBUG 10127[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 22:36:58,869]DEBUG 10128[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 22:36:58,869]DEBUG 10128[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 22:36:58,869]DEBUG 10128[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 22:36:58,869]DEBUG 10128[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 22:36:58,869]DEBUG 10128[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 22:36:58,869]DEBUG 10128[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 22:36:58,870]DEBUG 10129[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 22:36:58,870]DEBUG 10129[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 22:36:58,870]DEBUG 10129[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 22:36:58,870]DEBUG 10129[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 22:36:58,870]DEBUG 10129[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 22:36:58,871]DEBUG 10130[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 22:36:58,871]DEBUG 10130[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 22:36:58,871]DEBUG 10130[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 22:36:58,871]DEBUG 10130[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 22:36:58,871]DEBUG 10130[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 22:36:58,872]DEBUG 10131[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 22:36:58,872]DEBUG 10131[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 22:36:58,872]DEBUG 10131[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@3f2f567b]
[2017-10-14 22:36:58,873]DEBUG 10132[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testContextFile' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:58,873]DEBUG 10132[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@4caabc8c testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@3f2f567b, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2017-10-14 22:36:58,873]DEBUG 10132[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 22:36:58,874]DEBUG 10133[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testContextFile]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:58,874]DEBUG 10133[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15080098188
[2017-10-14 22:36:58,875]DEBUG 10134[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@247e7abb] for Hibernate transaction
[2017-10-14 22:36:58,875]DEBUG 10134[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@247e7abb]
[2017-10-14 22:36:58,875]DEBUG 10134[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 22:36:58,875]DEBUG 10134[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 22:36:58,875]DEBUG 10134[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 22:36:58,876]DEBUG 10135[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@4caabc8c testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@3f2f567b, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2017-10-14 22:36:58,876] INFO 10135[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (7): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@598b619b]; rollback [true]
[2017-10-14 22:36:58,876]DEBUG 10135[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,876]DEBUG 10135[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 22:36:58,877]DEBUG 10136[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,877]DEBUG 10136[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,877]DEBUG 10136[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 22:36:58,878]DEBUG 10137[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,878]DEBUG 10137[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,879]DEBUG 10138[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 22:36:58,879]DEBUG 10138[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,879]DEBUG 10138[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,880]DEBUG 10139[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 22:36:58,880]DEBUG 10139[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,880]DEBUG 10139[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,881]DEBUG 10140[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 22:36:58,881]DEBUG 10140[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,881]DEBUG 10140[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,882]DEBUG 10141[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 22:36:58,882]DEBUG 10141[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,883]DEBUG 10142[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,883]DEBUG 10142[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 22:36:58,883]DEBUG 10142[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,884]DEBUG 10143[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,884]DEBUG 10143[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 22:36:58,884]DEBUG 10143[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,885]DEBUG 10144[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,885]DEBUG 10144[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 22:36:58,885]DEBUG 10144[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,886]DEBUG 10145[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:58,886]DEBUG 10145[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,886]DEBUG 10145[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 22:36:58,887]DEBUG 10146[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 59
[2017-10-14 22:36:58,888]DEBUG 10147[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,888]DEBUG 10147[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:58,888]DEBUG 10147[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,889]DEBUG 10148[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2017-10-14 22:36:58,889]DEBUG 10148[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 60
[2017-10-14 22:36:58,889]DEBUG 10148[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,889]DEBUG 10148[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:58,889]DEBUG 10148[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,889]DEBUG 10148[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 22:36:58,890]DEBUG 10149[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 7
[2017-10-14 22:36:58,890]DEBUG 10149[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,890]DEBUG 10149[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:58,890]DEBUG 10149[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,890]DEBUG 10149[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Dimensions (DimensionName, NumberOfProducts) values (?, ?)
[2017-10-14 22:36:58,891]DEBUG 10150[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 7
[2017-10-14 22:36:58,891]DEBUG 10150[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,891]DEBUG 10150[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:58,891]DEBUG 10150[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,891]DEBUG 10150[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderItems (Cost, DimensionRef, ItemPrice, OrderRef, ProductRef, Quantity) values (?, ?, ?, ?, ?, ?)
[2017-10-14 22:36:58,891]DEBUG 10150[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 13
[2017-10-14 22:36:58,892]DEBUG 10151[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,892]DEBUG 10151[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:58,892]DEBUG 10151[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,892]DEBUG 10151[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderItems (Cost, DimensionRef, ItemPrice, OrderRef, ProductRef, Quantity) values (?, ?, ?, ?, ?, ?)
[2017-10-14 22:36:58,892]DEBUG 10151[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 14
[2017-10-14 22:36:58,892]DEBUG 10151[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,893]DEBUG 10152[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:58,893]DEBUG 10152[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:58,893]DEBUG 10152[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:58,893]DEBUG 10152[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:58,893]DEBUG 10152[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:58,893]DEBUG 10152[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=7, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 22:36:58,893]DEBUG 10152[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#7, id=14, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#7, order=com.softserveinc.edu.oms.domain.entities.Order#60, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 22:36:58,893]DEBUG 10152[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=59, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,894]DEBUG 10153[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=60, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,894]DEBUG 10153[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=7, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 22:36:58,894]DEBUG 10153[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#7, id=13, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#7, order=com.softserveinc.edu.oms.domain.entities.Order#59, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 22:36:58,894]DEBUG 10153[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,894]DEBUG 10153[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2017-10-14 22:36:58,894]DEBUG 10153[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,894]DEBUG 10153[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:58,894]DEBUG 10153[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:58,895]DEBUG 10154[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:58,895]DEBUG 10154[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:58,895]DEBUG 10154[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:58,895]DEBUG 10154[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=7, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 22:36:58,895]DEBUG 10154[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#7, id=14, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#7, order=com.softserveinc.edu.oms.domain.entities.Order#60, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 22:36:58,895]DEBUG 10154[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=59, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,895]DEBUG 10154[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=60, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,895]DEBUG 10154[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=7, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 22:36:58,895]DEBUG 10154[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#7, id=13, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#7, order=com.softserveinc.edu.oms.domain.entities.Order#59, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 22:36:58,895]DEBUG 10154[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,895]DEBUG 10154[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2017-10-14 22:36:58,896]DEBUG 10155[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,896]DEBUG 10155[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:58,896]DEBUG 10155[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:58,896]DEBUG 10155[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:58,896]DEBUG 10155[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:58,896]DEBUG 10155[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:58,896]DEBUG 10155[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=7, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 22:36:58,896]DEBUG 10155[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#7, id=14, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#7, order=com.softserveinc.edu.oms.domain.entities.Order#60, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 22:36:58,897]DEBUG 10156[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=59, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,897]DEBUG 10156[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=60, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,897]DEBUG 10156[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=7, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 22:36:58,897]DEBUG 10156[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#7, id=13, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#7, order=com.softserveinc.edu.oms.domain.entities.Order#59, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 22:36:58,897]DEBUG 10156[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,897]DEBUG 10156[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 22:36:58,897]DEBUG 10156[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,898]DEBUG 10157[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:58,898]DEBUG 10157[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:58,898]DEBUG 10157[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:58,898]DEBUG 10157[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:58,898]DEBUG 10157[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:58,898]DEBUG 10157[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=7, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 22:36:58,898]DEBUG 10157[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#7, id=14, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#7, order=com.softserveinc.edu.oms.domain.entities.Order#60, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 22:36:58,898]DEBUG 10157[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=59, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,898]DEBUG 10157[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=60, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,899]DEBUG 10158[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=7, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 22:36:58,899]DEBUG 10158[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#7, id=13, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#7, order=com.softserveinc.edu.oms.domain.entities.Order#59, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 22:36:58,899]DEBUG 10158[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,899]DEBUG 10158[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2017-10-14 22:36:58,899]DEBUG 10158[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,899]DEBUG 10158[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:58,900]DEBUG 10159[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:58,900]DEBUG 10159[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:58,900]DEBUG 10159[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:58,900]DEBUG 10159[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:58,900]DEBUG 10159[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=7, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 22:36:58,900]DEBUG 10159[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#7, id=14, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#7, order=com.softserveinc.edu.oms.domain.entities.Order#60, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 22:36:58,900]DEBUG 10159[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=59, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,900]DEBUG 10159[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=60, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,900]DEBUG 10159[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=7, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 22:36:58,901]DEBUG 10160[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#7, id=13, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#7, order=com.softserveinc.edu.oms.domain.entities.Order#59, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 22:36:58,901]DEBUG 10160[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,901]DEBUG 10160[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2017-10-14 22:36:58,901]DEBUG 10160[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,901]DEBUG 10160[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:58,901]DEBUG 10160[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:58,902]DEBUG 10161[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:58,902]DEBUG 10161[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:58,902]DEBUG 10161[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:58,902]DEBUG 10161[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=7, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 22:36:58,902]DEBUG 10161[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#7, id=14, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#7, order=com.softserveinc.edu.oms.domain.entities.Order#60, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 22:36:58,902]DEBUG 10161[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=59, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,902]DEBUG 10161[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=60, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,902]DEBUG 10161[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=7, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 22:36:58,902]DEBUG 10161[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#7, id=13, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#7, order=com.softserveinc.edu.oms.domain.entities.Order#59, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 22:36:58,902]DEBUG 10161[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,902]DEBUG 10161[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2017-10-14 22:36:58,903]DEBUG 10162[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,903]DEBUG 10162[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:58,903]DEBUG 10162[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:58,903]DEBUG 10162[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:58,903]DEBUG 10162[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:58,903]DEBUG 10162[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:58,903]DEBUG 10162[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=7, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 22:36:58,904]DEBUG 10163[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#7, id=14, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#7, order=com.softserveinc.edu.oms.domain.entities.Order#60, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 22:36:58,904]DEBUG 10163[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=59, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,904]DEBUG 10163[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=60, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,904]DEBUG 10163[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=7, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 22:36:58,904]DEBUG 10163[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#7, id=13, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#7, order=com.softserveinc.edu.oms.domain.entities.Order#59, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 22:36:58,904]DEBUG 10163[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,904]DEBUG 10163[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2017-10-14 22:36:58,904]DEBUG 10163[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,904]DEBUG 10163[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:58,905]DEBUG 10164[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:58,905]DEBUG 10164[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:58,905]DEBUG 10164[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:58,905]DEBUG 10164[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:58,905]DEBUG 10164[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=7, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 22:36:58,905]DEBUG 10164[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#7, id=14, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#7, order=com.softserveinc.edu.oms.domain.entities.Order#60, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 22:36:58,905]DEBUG 10164[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=59, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,905]DEBUG 10164[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=60, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,905]DEBUG 10164[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=7, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 22:36:58,905]DEBUG 10164[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#7, id=13, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#7, order=com.softserveinc.edu.oms.domain.entities.Order#59, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 22:36:58,906]DEBUG 10165[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,906]DEBUG 10165[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2017-10-14 22:36:58,906]DEBUG 10165[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,906]DEBUG 10165[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:58,906]DEBUG 10165[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:58,906]DEBUG 10165[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2017-10-14 22:36:58,906]DEBUG 10165[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:58,907]DEBUG 10166[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:58,907]DEBUG 10166[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=7, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2017-10-14 22:36:58,907]DEBUG 10166[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#7, id=14, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#7, order=com.softserveinc.edu.oms.domain.entities.Order#60, quantity=2, itemPrice=1.0, cost=10.0}
[2017-10-14 22:36:58,907]DEBUG 10166[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=59, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,907]DEBUG 10166[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=60, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2017-10-14 22:36:58,907]DEBUG 10166[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=7, dimensionName=dimensionName, numberOfProduct=5}
[2017-10-14 22:36:58,907]DEBUG 10166[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#7, id=13, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#7, order=com.softserveinc.edu.oms.domain.entities.Order#59, quantity=1, itemPrice=1.0, cost=5.0}
[2017-10-14 22:36:58,907]DEBUG 10166[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:58,907]DEBUG 10166[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2017-10-14 22:36:58,908]DEBUG 10167[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:58,908]DEBUG 10167[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@4caabc8c testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@3f2f567b, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2017-10-14 22:36:58,908]DEBUG 10167[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 22:36:58,908]DEBUG 10167[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@247e7abb]
[2017-10-14 22:36:58,908]DEBUG 10167[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 22:36:58,939]DEBUG 10198[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 22:36:58,939]DEBUG 10198[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:58,940]DEBUG 10199[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@247e7abb] after transaction
[2017-10-14 22:36:58,940]DEBUG 10199[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 22:36:58,940]DEBUG 10199[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 22:36:58,940]DEBUG 10199[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:58,941] INFO 10200[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@4caabc8c testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@3f2f567b, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2017-10-14 22:36:58,942]DEBUG 10201[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@4caabc8c testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@3f2f567b, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 22:36:58,942]DEBUG 10201[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestClass(DirtiesContextTestExecutionListener.java:113) - After test class: context [[TestContext@4caabc8c testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = [null], testMethod = [null], testException = [null]]], dirtiesContext [false].
[2017-10-14 22:36:58,945]DEBUG 10204[main] - org.springframework.test.context.junit4.SpringJUnit4ClassRunner.<init>(SpringJUnit4ClassRunner.java:106) - SpringJUnit4ClassRunner constructor called with [class com.softserveinc.edu.oms.persistence.dao.ProductDaoTest].
[2017-10-14 22:36:58,945] INFO 10204[main] - org.springframework.test.context.TestContextManager.retrieveTestExecutionListeners(TestContextManager.java:185) - @TestExecutionListeners is not present for class [class com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]: using defaults.
[2017-10-14 22:36:58,946]DEBUG 10205[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2017-10-14 22:36:58,946]DEBUG 10205[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2017-10-14 22:36:58,950]DEBUG 10209[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2017-10-14 22:36:58,950]DEBUG 10209[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2017-10-14 22:36:58,950]DEBUG 10209[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2017-10-14 22:36:58,950]DEBUG 10209[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2017-10-14 22:36:58,957]DEBUG 10216[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2017-10-14 22:36:58,957]DEBUG 10216[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2017-10-14 22:36:58,957]DEBUG 10216[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@16dfdeda, testMethod = [null], testException = [null]]].
[2017-10-14 22:36:58,969]DEBUG 10228[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 22:36:58,969]DEBUG 10228[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 22:36:58,969]DEBUG 10228[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 22:36:58,969]DEBUG 10228[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 22:36:58,969]DEBUG 10228[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 22:36:58,969]DEBUG 10228[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 22:36:58,969]DEBUG 10228[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 22:36:58,970]DEBUG 10229[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 22:36:58,970]DEBUG 10229[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 22:36:58,970]DEBUG 10229[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]: AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 22:36:58,970]DEBUG 10229[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 22:36:58,970]DEBUG 10229[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 22:36:58,970]DEBUG 10229[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' to bean named 'customerTypeDao'
[2017-10-14 22:36:58,970]DEBUG 10229[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 22:36:58,971]DEBUG 10230[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 22:36:58,971]DEBUG 10230[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' to bean named 'dimensionDao'
[2017-10-14 22:36:58,971]DEBUG 10230[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 22:36:58,971]DEBUG 10230[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 22:36:58,971]DEBUG 10230[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' to bean named 'orderDao'
[2017-10-14 22:36:58,971]DEBUG 10230[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 22:36:58,972]DEBUG 10231[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 22:36:58,972]DEBUG 10231[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' to bean named 'orderItemDao'
[2017-10-14 22:36:58,972]DEBUG 10231[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 22:36:58,972]DEBUG 10231[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 22:36:58,972]DEBUG 10231[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' to bean named 'orderStatusDao'
[2017-10-14 22:36:58,972]DEBUG 10231[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 22:36:58,973]DEBUG 10232[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 22:36:58,973]DEBUG 10232[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' to bean named 'productDao'
[2017-10-14 22:36:58,973]DEBUG 10232[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 22:36:58,973]DEBUG 10232[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 22:36:58,973]DEBUG 10232[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' to bean named 'regionDao'
[2017-10-14 22:36:58,973]DEBUG 10232[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 22:36:58,973]DEBUG 10232[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 22:36:58,973]DEBUG 10232[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' to bean named 'roleDao'
[2017-10-14 22:36:58,974]DEBUG 10233[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 22:36:58,974]DEBUG 10233[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 22:36:58,974]DEBUG 10233[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' to bean named 'userDao'
[2017-10-14 22:36:58,974]DEBUG 10233[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 22:36:58,974]DEBUG 10233[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 22:36:58,974]DEBUG 10233[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' to bean named 'sessionFactory'
[2017-10-14 22:36:58,975]DEBUG 10234[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 22:36:58,975]DEBUG 10234[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'setUp' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:58,975]DEBUG 10234[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 22:36:58,976]DEBUG 10235[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@16dfdeda]
[2017-10-14 22:36:58,976]DEBUG 10235[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.ProductDaoTest.setUp() throws java.lang.Exception
[2017-10-14 22:36:58,976]DEBUG 10235[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'tearDown' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:58,977]DEBUG 10236[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.ProductDaoTest.tearDown() throws java.lang.Exception
[2017-10-14 22:36:58,977]DEBUG 10236[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByCriterions' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:58,977]DEBUG 10236[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.ProductDaoTest.testFindByCriterions()
[2017-10-14 22:36:58,977]DEBUG 10236[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByOneOfCriterions' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:58,977]DEBUG 10236[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.ProductDaoTest.testFindByOneOfCriterions()
[2017-10-14 22:36:58,977]DEBUG 10236[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testInsertOrUpdate' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:58,978]DEBUG 10237[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.ProductDaoTest.testInsertOrUpdate()
[2017-10-14 22:36:58,978]DEBUG 10237[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testDelete' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:58,978]DEBUG 10237[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.ProductDaoTest.testDelete()
[2017-10-14 22:36:58,978]DEBUG 10237[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testfindByName' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:58,978]DEBUG 10237[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.ProductDaoTest.testfindByName()
[2017-10-14 22:36:58,978]DEBUG 10237[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testcontainsProductByName' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:58,978]DEBUG 10237[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.ProductDaoTest.testcontainsProductByName()
[2017-10-14 22:36:58,979]DEBUG 10238[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testnumberOfProductByName' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:58,979]DEBUG 10238[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.ProductDaoTest.testnumberOfProductByName()
[2017-10-14 22:36:58,979]DEBUG 10238[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testfindByDescription' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:58,979]DEBUG 10238[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.ProductDaoTest.testfindByDescription()
[2017-10-14 22:36:58,979]DEBUG 10238[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testcontainsProductByDescription' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:58,979]DEBUG 10238[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.ProductDaoTest.testcontainsProductByDescription()
[2017-10-14 22:36:58,980]DEBUG 10239[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testnumberOfProductByDescription' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:58,980]DEBUG 10239[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.ProductDaoTest.testnumberOfProductByDescription()
[2017-10-14 22:36:58,980]DEBUG 10239[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testfindByPrice' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:58,980]DEBUG 10239[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.ProductDaoTest.testfindByPrice()
[2017-10-14 22:36:58,980]DEBUG 10239[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testfindByPriceFromTo' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:58,980]DEBUG 10239[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.ProductDaoTest.testfindByPriceFromTo()
[2017-10-14 22:36:58,980]DEBUG 10239[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetRowCount' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:58,981]DEBUG 10240[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.ProductDaoTest.testGetRowCount()
[2017-10-14 22:36:58,981]DEBUG 10240[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testfindByID' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:58,981]DEBUG 10240[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.ProductDaoTest.testfindByID()
[2017-10-14 22:36:58,981]DEBUG 10240[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testfindByNameSorting' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:58,981]DEBUG 10240[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.ProductDaoTest.testfindByNameSorting()
[2017-10-14 22:36:58,981]DEBUG 10240[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testfindByDescriptionSorting' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:58,982]DEBUG 10241[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.ProductDaoTest.testfindByDescriptionSorting()
[2017-10-14 22:36:58,982]DEBUG 10241[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testfindByPriceFromToSorting' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:58,982]DEBUG 10241[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.ProductDaoTest.testfindByPriceFromToSorting()
[2017-10-14 22:36:58,982]DEBUG 10241[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanDB()
[2017-10-14 22:36:58,982]DEBUG 10241[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanCustomerType()
[2017-10-14 22:36:58,982]DEBUG 10241[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testContextFile' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:58,982]DEBUG 10241[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.testContextFile()
[2017-10-14 22:36:58,983]DEBUG 10242[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanUser()
[2017-10-14 22:36:58,983]DEBUG 10242[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanRole()
[2017-10-14 22:36:58,983]DEBUG 10242[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanRegion()
[2017-10-14 22:36:58,983]DEBUG 10242[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanProduct()
[2017-10-14 22:36:58,983]DEBUG 10242[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrderStatus()
[2017-10-14 22:36:58,984]DEBUG 10243[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrderItem()
[2017-10-14 22:36:58,984]DEBUG 10243[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrder()
[2017-10-14 22:36:58,984]DEBUG 10243[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanDimension()
[2017-10-14 22:36:58,984]DEBUG 10243[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:749) - Found finalize() method - using NO_OVERRIDE
[2017-10-14 22:36:58,984]DEBUG 10243[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:761) - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
[2017-10-14 22:36:58,984]DEBUG 10243[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
[2017-10-14 22:36:58,984]DEBUG 10243[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:766) - Found 'hashCode' method: public native int java.lang.Object.hashCode()
[2017-10-14 22:36:58,985]DEBUG 10244[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
[2017-10-14 22:36:58,985]DEBUG 10244[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
[2017-10-14 22:36:58,985]DEBUG 10244[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
[2017-10-14 22:36:58,985]DEBUG 10244[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
[2017-10-14 22:36:58,985]DEBUG 10244[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
[2017-10-14 22:36:58,985]DEBUG 10244[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2017-10-14 22:36:58,985]DEBUG 10244[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2017-10-14 22:36:58,985]DEBUG 10244[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
[2017-10-14 22:36:58,985]DEBUG 10244[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
[2017-10-14 22:36:58,985]DEBUG 10244[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
[2017-10-14 22:36:58,986]DEBUG 10245[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
[2017-10-14 22:36:58,986]DEBUG 10245[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
[2017-10-14 22:36:58,986]DEBUG 10245[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
[2017-10-14 22:36:58,986]DEBUG 10245[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
[2017-10-14 22:36:58,986]DEBUG 10245[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
[2017-10-14 22:36:58,986]DEBUG 10245[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
[2017-10-14 22:36:58,986]DEBUG 10245[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
[2017-10-14 22:36:58,986]DEBUG 10245[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
[2017-10-14 22:36:58,986]DEBUG 10245[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
[2017-10-14 22:36:58,986]DEBUG 10245[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2017-10-14 22:36:58,987]DEBUG 10246[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
[2017-10-14 22:36:58,987]DEBUG 10246[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
[2017-10-14 22:36:58,987]DEBUG 10246[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
[2017-10-14 22:36:58,987]DEBUG 10246[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
[2017-10-14 22:36:58,999]DEBUG 10258[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByCriterions' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:58,999]DEBUG 10258[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@16dfdeda, testMethod = testFindByCriterions@ProductDaoTest, testException = [null]]]
[2017-10-14 22:36:58,999]DEBUG 10258[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.retrieveConfigurationAttributes(TransactionalTestExecutionListener.java:466) - Retrieved @TransactionConfiguration [@org.springframework.test.context.transaction.TransactionConfiguration(transactionManager=transactionManager, defaultRollback=true)] for test class [class com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2017-10-14 22:36:58,999]DEBUG 10258[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.retrieveConfigurationAttributes(TransactionalTestExecutionListener.java:483) - Retrieved TransactionConfigurationAttributes [[TransactionConfigurationAttributes@255f252b transactionManagerName = 'transactionManager', defaultRollback = true]] for class [class com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2017-10-14 22:36:58,999]DEBUG 10258[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 22:36:59,000]DEBUG 10259[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByCriterions]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:59,000]DEBUG 10259[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15080098190
[2017-10-14 22:36:59,000]DEBUG 10259[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@1b06ac95] for Hibernate transaction
[2017-10-14 22:36:59,000]DEBUG 10259[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@1b06ac95]
[2017-10-14 22:36:59,000]DEBUG 10259[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 22:36:59,000]DEBUG 10259[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 22:36:59,000]DEBUG 10259[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 22:36:59,001]DEBUG 10260[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@16dfdeda, testMethod = testFindByCriterions@ProductDaoTest, testException = [null]]]
[2017-10-14 22:36:59,001] INFO 10260[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (1): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@598b619b]; rollback [true]
[2017-10-14 22:36:59,001]DEBUG 10260[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:59,001]DEBUG 10260[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,001]DEBUG 10260[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 22:36:59,002]DEBUG 10261[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 8
[2017-10-14 22:36:59,002]DEBUG 10261[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,002]DEBUG 10261[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:59,002]DEBUG 10261[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,002]DEBUG 10261[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 22:36:59,003]DEBUG 10262[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 9
[2017-10-14 22:36:59,003]DEBUG 10262[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,003]DEBUG 10262[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:59,003]DEBUG 10262[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,003]DEBUG 10262[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 22:36:59,004]DEBUG 10263[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 10
[2017-10-14 22:36:59,004]DEBUG 10263[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,005]DEBUG 10264[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:59,005]DEBUG 10264[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:59,005]DEBUG 10264[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 3 updates, 0 deletions to 3 objects
[2017-10-14 22:36:59,005]DEBUG 10264[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:59,005]DEBUG 10264[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:59,005]DEBUG 10264[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=10, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 22:36:59,005]DEBUG 10264[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=8, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 22:36:59,006]DEBUG 10265[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=9, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 22:36:59,006]DEBUG 10265[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Products
[2017-10-14 22:36:59,006]DEBUG 10265[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,006]DEBUG 10265[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 22:36:59,006]DEBUG 10265[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2017-10-14 22:36:59,006]DEBUG 10265[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 22:36:59,006]DEBUG 10265[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2017-10-14 22:36:59,007]DEBUG 10266[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 22:36:59,007]DEBUG 10266[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2017-10-14 22:36:59,007]DEBUG 10266[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,008]DEBUG 10267[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,008]DEBUG 10267[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductName=? and this_.ProductDescription=?
[2017-10-14 22:36:59,008]DEBUG 10267[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:59,008]DEBUG 10267[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#8]
[2017-10-14 22:36:59,008]DEBUG 10267[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:59,009]DEBUG 10268[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,009]DEBUG 10268[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:59,009]DEBUG 10268[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:59,009]DEBUG 10268[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:59,009]DEBUG 10268[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-14 22:36:59,009]DEBUG 10268[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:59,009]DEBUG 10268[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:59,009]DEBUG 10268[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=10, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 22:36:59,009]DEBUG 10268[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=8, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 22:36:59,010]DEBUG 10269[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=9, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 22:36:59,010]DEBUG 10269[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,010]DEBUG 10269[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 22:36:59,010]DEBUG 10269[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,010]DEBUG 10269[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@16dfdeda, testMethod = testFindByCriterions@ProductDaoTest, testException = [null]]]
[2017-10-14 22:36:59,010]DEBUG 10269[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 22:36:59,010]DEBUG 10269[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@1b06ac95]
[2017-10-14 22:36:59,010]DEBUG 10269[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 22:36:59,039]DEBUG 10298[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 22:36:59,040]DEBUG 10299[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:59,040]DEBUG 10299[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@1b06ac95] after transaction
[2017-10-14 22:36:59,040]DEBUG 10299[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 22:36:59,040]DEBUG 10299[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 22:36:59,040]DEBUG 10299[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:59,041] INFO 10300[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@16dfdeda, testMethod = testFindByCriterions@ProductDaoTest, testException = [null]]]
[2017-10-14 22:36:59,042]DEBUG 10301[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@16dfdeda, testMethod = testFindByCriterions@ProductDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 22:36:59,043]DEBUG 10302[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2017-10-14 22:36:59,043]DEBUG 10302[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2017-10-14 22:36:59,043]DEBUG 10302[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@657fcc82, testMethod = [null], testException = [null]]].
[2017-10-14 22:36:59,043]DEBUG 10302[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 22:36:59,044]DEBUG 10303[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 22:36:59,044]DEBUG 10303[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 22:36:59,044]DEBUG 10303[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 22:36:59,044]DEBUG 10303[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 22:36:59,044]DEBUG 10303[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 22:36:59,045]DEBUG 10304[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 22:36:59,045]DEBUG 10304[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 22:36:59,045]DEBUG 10304[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 22:36:59,045]DEBUG 10304[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 22:36:59,045]DEBUG 10304[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 22:36:59,046]DEBUG 10305[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 22:36:59,046]DEBUG 10305[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 22:36:59,046]DEBUG 10305[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 22:36:59,046]DEBUG 10305[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 22:36:59,046]DEBUG 10305[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 22:36:59,047]DEBUG 10306[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 22:36:59,047]DEBUG 10306[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 22:36:59,047]DEBUG 10306[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 22:36:59,047]DEBUG 10306[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 22:36:59,047]DEBUG 10306[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 22:36:59,048]DEBUG 10307[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 22:36:59,048]DEBUG 10307[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@657fcc82]
[2017-10-14 22:36:59,048]DEBUG 10307[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByOneOfCriterions' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:59,049]DEBUG 10308[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@657fcc82, testMethod = testFindByOneOfCriterions@ProductDaoTest, testException = [null]]]
[2017-10-14 22:36:59,049]DEBUG 10308[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 22:36:59,050]DEBUG 10309[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByOneOfCriterions]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:59,051]DEBUG 10310[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15080098190
[2017-10-14 22:36:59,051]DEBUG 10310[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@19339998] for Hibernate transaction
[2017-10-14 22:36:59,051]DEBUG 10310[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@19339998]
[2017-10-14 22:36:59,051]DEBUG 10310[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 22:36:59,051]DEBUG 10310[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 22:36:59,052]DEBUG 10311[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 22:36:59,052]DEBUG 10311[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@657fcc82, testMethod = testFindByOneOfCriterions@ProductDaoTest, testException = [null]]]
[2017-10-14 22:36:59,052] INFO 10311[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (2): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@598b619b]; rollback [true]
[2017-10-14 22:36:59,052]DEBUG 10311[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:59,053]DEBUG 10312[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,053]DEBUG 10312[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 22:36:59,054]DEBUG 10313[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 11
[2017-10-14 22:36:59,054]DEBUG 10313[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,055]DEBUG 10314[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:59,055]DEBUG 10314[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,055]DEBUG 10314[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 22:36:59,056]DEBUG 10315[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 12
[2017-10-14 22:36:59,056]DEBUG 10315[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,057]DEBUG 10316[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:59,057]DEBUG 10316[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,057]DEBUG 10316[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 22:36:59,058]DEBUG 10317[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 13
[2017-10-14 22:36:59,058]DEBUG 10317[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,059]DEBUG 10318[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:59,059]DEBUG 10318[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:59,060]DEBUG 10319[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 3 updates, 0 deletions to 3 objects
[2017-10-14 22:36:59,060]DEBUG 10319[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:59,060]DEBUG 10319[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:59,060]DEBUG 10319[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=12, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 22:36:59,061]DEBUG 10320[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=13, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 22:36:59,061]DEBUG 10320[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=11, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 22:36:59,061]DEBUG 10320[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Products
[2017-10-14 22:36:59,061]DEBUG 10320[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,062]DEBUG 10321[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 22:36:59,062]DEBUG 10321[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2017-10-14 22:36:59,062]DEBUG 10321[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 22:36:59,063]DEBUG 10322[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2017-10-14 22:36:59,063]DEBUG 10322[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 22:36:59,063]DEBUG 10322[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2017-10-14 22:36:59,065]DEBUG 10324[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,065]DEBUG 10324[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,065]DEBUG 10324[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where (this_.ProductName=? or this_.ProductDescription=?)
[2017-10-14 22:36:59,066]DEBUG 10325[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:59,067]DEBUG 10326[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#11]
[2017-10-14 22:36:59,067]DEBUG 10326[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#13]
[2017-10-14 22:36:59,067]DEBUG 10326[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:59,068]DEBUG 10327[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,068]DEBUG 10327[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:59,068]DEBUG 10327[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:59,068]DEBUG 10327[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:59,069]DEBUG 10328[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-14 22:36:59,069]DEBUG 10328[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:59,069]DEBUG 10328[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:59,069]DEBUG 10328[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=12, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 22:36:59,069]DEBUG 10328[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=13, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 22:36:59,069]DEBUG 10328[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=11, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 22:36:59,069]DEBUG 10328[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,069]DEBUG 10328[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 22:36:59,070]DEBUG 10329[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,070]DEBUG 10329[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@657fcc82, testMethod = testFindByOneOfCriterions@ProductDaoTest, testException = [null]]]
[2017-10-14 22:36:59,070]DEBUG 10329[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 22:36:59,070]DEBUG 10329[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@19339998]
[2017-10-14 22:36:59,070]DEBUG 10329[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 22:36:59,098]DEBUG 10357[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 22:36:59,098]DEBUG 10357[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:59,098]DEBUG 10357[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@19339998] after transaction
[2017-10-14 22:36:59,099]DEBUG 10358[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 22:36:59,099]DEBUG 10358[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 22:36:59,099]DEBUG 10358[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:59,099] INFO 10358[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@657fcc82, testMethod = testFindByOneOfCriterions@ProductDaoTest, testException = [null]]]
[2017-10-14 22:36:59,101]DEBUG 10360[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@657fcc82, testMethod = testFindByOneOfCriterions@ProductDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 22:36:59,101]DEBUG 10360[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2017-10-14 22:36:59,101]DEBUG 10360[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2017-10-14 22:36:59,102]DEBUG 10361[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@49507550, testMethod = [null], testException = [null]]].
[2017-10-14 22:36:59,102]DEBUG 10361[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 22:36:59,102]DEBUG 10361[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 22:36:59,102]DEBUG 10361[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 22:36:59,103]DEBUG 10362[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 22:36:59,103]DEBUG 10362[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 22:36:59,103]DEBUG 10362[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 22:36:59,103]DEBUG 10362[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 22:36:59,103]DEBUG 10362[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 22:36:59,104]DEBUG 10363[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 22:36:59,104]DEBUG 10363[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 22:36:59,104]DEBUG 10363[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 22:36:59,104]DEBUG 10363[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 22:36:59,104]DEBUG 10363[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 22:36:59,104]DEBUG 10363[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 22:36:59,105]DEBUG 10364[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 22:36:59,105]DEBUG 10364[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 22:36:59,105]DEBUG 10364[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 22:36:59,105]DEBUG 10364[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 22:36:59,105]DEBUG 10364[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 22:36:59,106]DEBUG 10365[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 22:36:59,106]DEBUG 10365[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 22:36:59,106]DEBUG 10365[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 22:36:59,106]DEBUG 10365[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@49507550]
[2017-10-14 22:36:59,107]DEBUG 10366[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testInsertOrUpdate' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:59,107]DEBUG 10366[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@49507550, testMethod = testInsertOrUpdate@ProductDaoTest, testException = [null]]]
[2017-10-14 22:36:59,107]DEBUG 10366[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 22:36:59,109]DEBUG 10368[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testInsertOrUpdate]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:59,109]DEBUG 10368[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15080098191
[2017-10-14 22:36:59,109]DEBUG 10368[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@3436ae59] for Hibernate transaction
[2017-10-14 22:36:59,109]DEBUG 10368[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@3436ae59]
[2017-10-14 22:36:59,110]DEBUG 10369[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 22:36:59,110]DEBUG 10369[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 22:36:59,110]DEBUG 10369[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 22:36:59,110]DEBUG 10369[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@49507550, testMethod = testInsertOrUpdate@ProductDaoTest, testException = [null]]]
[2017-10-14 22:36:59,110] INFO 10369[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (3): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@598b619b]; rollback [true]
[2017-10-14 22:36:59,111]DEBUG 10370[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:59,111]DEBUG 10370[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,111]DEBUG 10370[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 22:36:59,112]DEBUG 10371[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 14
[2017-10-14 22:36:59,113]DEBUG 10372[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,113]DEBUG 10372[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:59,113]DEBUG 10372[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,114]DEBUG 10373[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 22:36:59,114]DEBUG 10373[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 15
[2017-10-14 22:36:59,115]DEBUG 10374[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,115]DEBUG 10374[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:59,115]DEBUG 10374[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,116]DEBUG 10375[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 22:36:59,116]DEBUG 10375[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 16
[2017-10-14 22:36:59,117]DEBUG 10376[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,118]DEBUG 10377[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:59,118]DEBUG 10377[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,118]DEBUG 10377[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 22:36:59,119]DEBUG 10378[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 17
[2017-10-14 22:36:59,119]DEBUG 10378[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,120]DEBUG 10379[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:59,120]DEBUG 10379[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,120]DEBUG 10379[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 22:36:59,121]DEBUG 10380[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 18
[2017-10-14 22:36:59,121]DEBUG 10380[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,126]DEBUG 10385[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:59,127]DEBUG 10386[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:59,127]DEBUG 10386[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 3 updates, 0 deletions to 5 objects
[2017-10-14 22:36:59,127]DEBUG 10386[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:59,128]DEBUG 10387[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:59,128]DEBUG 10387[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=14, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 22:36:59,128]DEBUG 10387[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=15, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 22:36:59,128]DEBUG 10387[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=18, productDescription=productDescription2, active=true, productPrice=800.0, productName=productName2}
[2017-10-14 22:36:59,128]DEBUG 10387[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=16, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 22:36:59,129]DEBUG 10388[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=17, productDescription=productDescription, active=true, productPrice=400.0, productName=productName}
[2017-10-14 22:36:59,129]DEBUG 10388[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Products
[2017-10-14 22:36:59,129]DEBUG 10388[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,129]DEBUG 10388[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 22:36:59,129]DEBUG 10388[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2017-10-14 22:36:59,129]DEBUG 10388[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 22:36:59,129]DEBUG 10388[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2017-10-14 22:36:59,130]DEBUG 10389[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 22:36:59,130]DEBUG 10389[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2017-10-14 22:36:59,130]DEBUG 10389[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,131]DEBUG 10390[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,131]DEBUG 10390[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 22:36:59,131]DEBUG 10390[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,131]DEBUG 10390[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@49507550, testMethod = testInsertOrUpdate@ProductDaoTest, testException = [null]]]
[2017-10-14 22:36:59,131]DEBUG 10390[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 22:36:59,131]DEBUG 10390[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@3436ae59]
[2017-10-14 22:36:59,131]DEBUG 10390[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 22:36:59,165]DEBUG 10424[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 22:36:59,165]DEBUG 10424[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:59,165]DEBUG 10424[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@3436ae59] after transaction
[2017-10-14 22:36:59,165]DEBUG 10424[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 22:36:59,166]DEBUG 10425[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 22:36:59,166]DEBUG 10425[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:59,166] INFO 10425[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@49507550, testMethod = testInsertOrUpdate@ProductDaoTest, testException = [null]]]
[2017-10-14 22:36:59,168]DEBUG 10427[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@49507550, testMethod = testInsertOrUpdate@ProductDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 22:36:59,168]DEBUG 10427[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2017-10-14 22:36:59,168]DEBUG 10427[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2017-10-14 22:36:59,168]DEBUG 10427[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@523a44ea, testMethod = [null], testException = [null]]].
[2017-10-14 22:36:59,169]DEBUG 10428[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 22:36:59,169]DEBUG 10428[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 22:36:59,169]DEBUG 10428[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 22:36:59,169]DEBUG 10428[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 22:36:59,169]DEBUG 10428[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 22:36:59,169]DEBUG 10428[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 22:36:59,169]DEBUG 10428[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 22:36:59,169]DEBUG 10428[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 22:36:59,169]DEBUG 10428[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 22:36:59,169]DEBUG 10428[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 22:36:59,170]DEBUG 10429[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 22:36:59,170]DEBUG 10429[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 22:36:59,170]DEBUG 10429[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 22:36:59,170]DEBUG 10429[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 22:36:59,170]DEBUG 10429[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 22:36:59,170]DEBUG 10429[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 22:36:59,170]DEBUG 10429[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 22:36:59,170]DEBUG 10429[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 22:36:59,170]DEBUG 10429[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 22:36:59,170]DEBUG 10429[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 22:36:59,170]DEBUG 10429[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 22:36:59,171]DEBUG 10430[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 22:36:59,171]DEBUG 10430[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@523a44ea]
[2017-10-14 22:36:59,171]DEBUG 10430[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testDelete' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:59,171]DEBUG 10430[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@523a44ea, testMethod = testDelete@ProductDaoTest, testException = [null]]]
[2017-10-14 22:36:59,171]DEBUG 10430[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 22:36:59,172]DEBUG 10431[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testDelete]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:59,172]DEBUG 10431[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15080098191
[2017-10-14 22:36:59,172]DEBUG 10431[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@82b177a] for Hibernate transaction
[2017-10-14 22:36:59,172]DEBUG 10431[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@82b177a]
[2017-10-14 22:36:59,172]DEBUG 10431[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 22:36:59,172]DEBUG 10431[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 22:36:59,173]DEBUG 10432[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 22:36:59,173]DEBUG 10432[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@523a44ea, testMethod = testDelete@ProductDaoTest, testException = [null]]]
[2017-10-14 22:36:59,173] INFO 10432[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (4): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@598b619b]; rollback [true]
[2017-10-14 22:36:59,173]DEBUG 10432[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:59,173]DEBUG 10432[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,173]DEBUG 10432[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 22:36:59,174]DEBUG 10433[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 19
[2017-10-14 22:36:59,174]DEBUG 10433[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,174]DEBUG 10433[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:59,174]DEBUG 10433[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,174]DEBUG 10433[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 22:36:59,175]DEBUG 10434[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 20
[2017-10-14 22:36:59,175]DEBUG 10434[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,175]DEBUG 10434[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:59,175]DEBUG 10434[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,175]DEBUG 10434[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 22:36:59,176]DEBUG 10435[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 21
[2017-10-14 22:36:59,176]DEBUG 10435[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,176] INFO 10435[main] - org.hibernate.event.def.DefaultDeleteEventListener.deleteTransientEntity(DefaultDeleteEventListener.java:203) - handling transient entity in delete processing
[2017-10-14 22:36:59,176]DEBUG 10435[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:59,176]DEBUG 10435[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:59,176]DEBUG 10435[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 3 updates, 0 deletions to 3 objects
[2017-10-14 22:36:59,177]DEBUG 10436[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:59,177]DEBUG 10436[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:59,177]DEBUG 10436[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=20, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 22:36:59,177]DEBUG 10436[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=21, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 22:36:59,177]DEBUG 10436[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=19, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 22:36:59,177]DEBUG 10436[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Products
[2017-10-14 22:36:59,177]DEBUG 10436[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,177]DEBUG 10436[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 22:36:59,178]DEBUG 10437[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2017-10-14 22:36:59,178]DEBUG 10437[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 22:36:59,178]DEBUG 10437[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2017-10-14 22:36:59,178]DEBUG 10437[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 22:36:59,178]DEBUG 10437[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2017-10-14 22:36:59,179]DEBUG 10438[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,179]DEBUG 10438[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,179]DEBUG 10438[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_
[2017-10-14 22:36:59,179]DEBUG 10438[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:59,180]DEBUG 10439[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#19]
[2017-10-14 22:36:59,180]DEBUG 10439[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#20]
[2017-10-14 22:36:59,180]DEBUG 10439[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#21]
[2017-10-14 22:36:59,180]DEBUG 10439[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:59,180]DEBUG 10439[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,180]DEBUG 10439[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:59,180]DEBUG 10439[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:59,180]DEBUG 10439[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:59,181]DEBUG 10440[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-14 22:36:59,181]DEBUG 10440[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:59,181]DEBUG 10440[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:59,181]DEBUG 10440[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=20, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 22:36:59,181]DEBUG 10440[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=21, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 22:36:59,181]DEBUG 10440[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=19, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 22:36:59,181]DEBUG 10440[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,181]DEBUG 10440[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 22:36:59,182]DEBUG 10441[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,182]DEBUG 10441[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@523a44ea, testMethod = testDelete@ProductDaoTest, testException = [null]]]
[2017-10-14 22:36:59,182]DEBUG 10441[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 22:36:59,182]DEBUG 10441[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@82b177a]
[2017-10-14 22:36:59,182]DEBUG 10441[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 22:36:59,215]DEBUG 10474[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 22:36:59,215]DEBUG 10474[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:59,215]DEBUG 10474[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@82b177a] after transaction
[2017-10-14 22:36:59,215]DEBUG 10474[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 22:36:59,215]DEBUG 10474[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 22:36:59,216]DEBUG 10475[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:59,216] INFO 10475[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@523a44ea, testMethod = testDelete@ProductDaoTest, testException = [null]]]
[2017-10-14 22:36:59,217]DEBUG 10476[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@523a44ea, testMethod = testDelete@ProductDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 22:36:59,218]DEBUG 10477[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2017-10-14 22:36:59,218]DEBUG 10477[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2017-10-14 22:36:59,218]DEBUG 10477[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@13152127, testMethod = [null], testException = [null]]].
[2017-10-14 22:36:59,219]DEBUG 10478[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 22:36:59,219]DEBUG 10478[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 22:36:59,219]DEBUG 10478[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 22:36:59,219]DEBUG 10478[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 22:36:59,219]DEBUG 10478[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 22:36:59,220]DEBUG 10479[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 22:36:59,220]DEBUG 10479[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 22:36:59,220]DEBUG 10479[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 22:36:59,220]DEBUG 10479[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 22:36:59,220]DEBUG 10479[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 22:36:59,221]DEBUG 10480[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 22:36:59,221]DEBUG 10480[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 22:36:59,221]DEBUG 10480[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 22:36:59,221]DEBUG 10480[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 22:36:59,221]DEBUG 10480[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 22:36:59,222]DEBUG 10481[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 22:36:59,222]DEBUG 10481[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 22:36:59,222]DEBUG 10481[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 22:36:59,222]DEBUG 10481[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 22:36:59,222]DEBUG 10481[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 22:36:59,223]DEBUG 10482[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 22:36:59,223]DEBUG 10482[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 22:36:59,223]DEBUG 10482[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@13152127]
[2017-10-14 22:36:59,224]DEBUG 10483[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testfindByName' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:59,224]DEBUG 10483[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@13152127, testMethod = testfindByName@ProductDaoTest, testException = [null]]]
[2017-10-14 22:36:59,224]DEBUG 10483[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 22:36:59,226]DEBUG 10485[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testfindByName]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:59,226]DEBUG 10485[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15080098192
[2017-10-14 22:36:59,226]DEBUG 10485[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@1f36154e] for Hibernate transaction
[2017-10-14 22:36:59,226]DEBUG 10485[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@1f36154e]
[2017-10-14 22:36:59,227]DEBUG 10486[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 22:36:59,227]DEBUG 10486[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 22:36:59,227]DEBUG 10486[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 22:36:59,227]DEBUG 10486[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@13152127, testMethod = testfindByName@ProductDaoTest, testException = [null]]]
[2017-10-14 22:36:59,227] INFO 10486[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (5): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@598b619b]; rollback [true]
[2017-10-14 22:36:59,228]DEBUG 10487[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:59,228]DEBUG 10487[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,228]DEBUG 10487[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 22:36:59,229]DEBUG 10488[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 22
[2017-10-14 22:36:59,229]DEBUG 10488[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,229]DEBUG 10488[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:59,229]DEBUG 10488[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,229]DEBUG 10488[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 22:36:59,230]DEBUG 10489[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 23
[2017-10-14 22:36:59,230]DEBUG 10489[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,230]DEBUG 10489[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:59,230]DEBUG 10489[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,230]DEBUG 10489[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 22:36:59,231]DEBUG 10490[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 24
[2017-10-14 22:36:59,231]DEBUG 10490[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,231]DEBUG 10490[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:59,231]DEBUG 10490[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:59,232]DEBUG 10491[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 3 updates, 0 deletions to 3 objects
[2017-10-14 22:36:59,232]DEBUG 10491[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:59,232]DEBUG 10491[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:59,232]DEBUG 10491[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=22, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 22:36:59,232]DEBUG 10491[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=23, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 22:36:59,232]DEBUG 10491[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=24, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 22:36:59,233]DEBUG 10492[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Products
[2017-10-14 22:36:59,233]DEBUG 10492[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,233]DEBUG 10492[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 22:36:59,233]DEBUG 10492[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2017-10-14 22:36:59,233]DEBUG 10492[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 22:36:59,233]DEBUG 10492[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2017-10-14 22:36:59,233]DEBUG 10492[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 22:36:59,234]DEBUG 10493[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2017-10-14 22:36:59,234]DEBUG 10493[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,235]DEBUG 10494[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,235]DEBUG 10494[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_
[2017-10-14 22:36:59,235]DEBUG 10494[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:59,235]DEBUG 10494[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#22]
[2017-10-14 22:36:59,235]DEBUG 10494[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#23]
[2017-10-14 22:36:59,236]DEBUG 10495[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#24]
[2017-10-14 22:36:59,236]DEBUG 10495[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:59,236]DEBUG 10495[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,236]DEBUG 10495[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:59,236]DEBUG 10495[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:59,236]DEBUG 10495[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:59,237]DEBUG 10496[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-14 22:36:59,237]DEBUG 10496[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:59,237]DEBUG 10496[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:59,237]DEBUG 10496[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=22, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 22:36:59,237]DEBUG 10496[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=23, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 22:36:59,237]DEBUG 10496[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=24, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 22:36:59,237]DEBUG 10496[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,237]DEBUG 10496[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductName like ? and this_.IsProductActive=?
[2017-10-14 22:36:59,238]DEBUG 10497[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:59,238]DEBUG 10497[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#22]
[2017-10-14 22:36:59,238]DEBUG 10497[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#23]
[2017-10-14 22:36:59,238]DEBUG 10497[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#24]
[2017-10-14 22:36:59,238]DEBUG 10497[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:59,239]DEBUG 10498[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,239]DEBUG 10498[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:59,239]DEBUG 10498[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:59,239]DEBUG 10498[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:59,239]DEBUG 10498[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-14 22:36:59,239]DEBUG 10498[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:59,239]DEBUG 10498[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:59,239]DEBUG 10498[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=22, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 22:36:59,240]DEBUG 10499[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=23, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 22:36:59,240]DEBUG 10499[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=24, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 22:36:59,240]DEBUG 10499[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,240]DEBUG 10499[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductName like ? and this_.IsProductActive=?
[2017-10-14 22:36:59,240]DEBUG 10499[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:59,241]DEBUG 10500[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#22]
[2017-10-14 22:36:59,241]DEBUG 10500[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#23]
[2017-10-14 22:36:59,241]DEBUG 10500[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#24]
[2017-10-14 22:36:59,241]DEBUG 10500[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:59,241]DEBUG 10500[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,241]DEBUG 10500[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:59,241]DEBUG 10500[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:59,242]DEBUG 10501[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:59,242]DEBUG 10501[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-14 22:36:59,242]DEBUG 10501[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:59,242]DEBUG 10501[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:59,242]DEBUG 10501[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=22, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 22:36:59,242]DEBUG 10501[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=23, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 22:36:59,242]DEBUG 10501[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=24, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 22:36:59,242]DEBUG 10501[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,242]DEBUG 10501[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductName like ? and this_.IsProductActive=?
[2017-10-14 22:36:59,243]DEBUG 10502[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:59,243]DEBUG 10502[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#22]
[2017-10-14 22:36:59,243]DEBUG 10502[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#23]
[2017-10-14 22:36:59,243]DEBUG 10502[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#24]
[2017-10-14 22:36:59,243]DEBUG 10502[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:59,244]DEBUG 10503[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,244]DEBUG 10503[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:59,244]DEBUG 10503[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:59,244]DEBUG 10503[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:59,244]DEBUG 10503[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-14 22:36:59,244]DEBUG 10503[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:59,244]DEBUG 10503[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:59,244]DEBUG 10503[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=22, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 22:36:59,244]DEBUG 10503[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=23, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 22:36:59,244]DEBUG 10503[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=24, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 22:36:59,245]DEBUG 10504[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,245]DEBUG 10504[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 22:36:59,245]DEBUG 10504[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,245]DEBUG 10504[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@13152127, testMethod = testfindByName@ProductDaoTest, testException = [null]]]
[2017-10-14 22:36:59,245]DEBUG 10504[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 22:36:59,245]DEBUG 10504[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@1f36154e]
[2017-10-14 22:36:59,245]DEBUG 10504[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 22:36:59,281]DEBUG 10540[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 22:36:59,282]DEBUG 10541[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:59,282]DEBUG 10541[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@1f36154e] after transaction
[2017-10-14 22:36:59,282]DEBUG 10541[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 22:36:59,282]DEBUG 10541[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 22:36:59,283]DEBUG 10542[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:59,283] INFO 10542[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@13152127, testMethod = testfindByName@ProductDaoTest, testException = [null]]]
[2017-10-14 22:36:59,284]DEBUG 10543[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@13152127, testMethod = testfindByName@ProductDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 22:36:59,285]DEBUG 10544[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2017-10-14 22:36:59,285]DEBUG 10544[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2017-10-14 22:36:59,285]DEBUG 10544[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@3b07c566, testMethod = [null], testException = [null]]].
[2017-10-14 22:36:59,285]DEBUG 10544[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 22:36:59,286]DEBUG 10545[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 22:36:59,286]DEBUG 10545[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 22:36:59,286]DEBUG 10545[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 22:36:59,286]DEBUG 10545[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 22:36:59,286]DEBUG 10545[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 22:36:59,287]DEBUG 10546[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 22:36:59,287]DEBUG 10546[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 22:36:59,287]DEBUG 10546[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 22:36:59,287]DEBUG 10546[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 22:36:59,288]DEBUG 10547[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 22:36:59,288]DEBUG 10547[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 22:36:59,288]DEBUG 10547[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 22:36:59,288]DEBUG 10547[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 22:36:59,288]DEBUG 10547[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 22:36:59,289]DEBUG 10548[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 22:36:59,289]DEBUG 10548[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 22:36:59,289]DEBUG 10548[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 22:36:59,289]DEBUG 10548[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 22:36:59,289]DEBUG 10548[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 22:36:59,290]DEBUG 10549[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 22:36:59,290]DEBUG 10549[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 22:36:59,290]DEBUG 10549[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@3b07c566]
[2017-10-14 22:36:59,291]DEBUG 10550[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testcontainsProductByName' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:59,291]DEBUG 10550[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@3b07c566, testMethod = testcontainsProductByName@ProductDaoTest, testException = [null]]]
[2017-10-14 22:36:59,291]DEBUG 10550[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 22:36:59,293]DEBUG 10552[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testcontainsProductByName]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:59,293]DEBUG 10552[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15080098192
[2017-10-14 22:36:59,293]DEBUG 10552[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@4c7b6152] for Hibernate transaction
[2017-10-14 22:36:59,293]DEBUG 10552[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@4c7b6152]
[2017-10-14 22:36:59,293]DEBUG 10552[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 22:36:59,294]DEBUG 10553[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 22:36:59,294]DEBUG 10553[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 22:36:59,294]DEBUG 10553[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@3b07c566, testMethod = testcontainsProductByName@ProductDaoTest, testException = [null]]]
[2017-10-14 22:36:59,294] INFO 10553[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (6): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@598b619b]; rollback [true]
[2017-10-14 22:36:59,294]DEBUG 10553[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:59,295]DEBUG 10554[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,295]DEBUG 10554[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 22:36:59,296]DEBUG 10555[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 25
[2017-10-14 22:36:59,296]DEBUG 10555[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,297]DEBUG 10556[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:59,297]DEBUG 10556[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,297]DEBUG 10556[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 22:36:59,298]DEBUG 10557[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 26
[2017-10-14 22:36:59,298]DEBUG 10557[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,299]DEBUG 10558[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:59,299]DEBUG 10558[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,299]DEBUG 10558[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 22:36:59,300]DEBUG 10559[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 27
[2017-10-14 22:36:59,300]DEBUG 10559[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,301]DEBUG 10560[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:59,301]DEBUG 10560[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:59,302]DEBUG 10561[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 3 updates, 0 deletions to 3 objects
[2017-10-14 22:36:59,302]DEBUG 10561[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:59,302]DEBUG 10561[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:59,302]DEBUG 10561[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=25, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 22:36:59,303]DEBUG 10562[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=27, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 22:36:59,303]DEBUG 10562[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=26, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 22:36:59,303]DEBUG 10562[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Products
[2017-10-14 22:36:59,303]DEBUG 10562[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,304]DEBUG 10563[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 22:36:59,304]DEBUG 10563[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2017-10-14 22:36:59,304]DEBUG 10563[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 22:36:59,305]DEBUG 10564[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2017-10-14 22:36:59,305]DEBUG 10564[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 22:36:59,305]DEBUG 10564[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2017-10-14 22:36:59,307]DEBUG 10566[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,307]DEBUG 10566[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,307]DEBUG 10566[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_
[2017-10-14 22:36:59,308]DEBUG 10567[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:59,309]DEBUG 10568[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#25]
[2017-10-14 22:36:59,309]DEBUG 10568[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#26]
[2017-10-14 22:36:59,309]DEBUG 10568[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#27]
[2017-10-14 22:36:59,309]DEBUG 10568[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:59,309]DEBUG 10568[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,309]DEBUG 10568[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:59,310]DEBUG 10569[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:59,310]DEBUG 10569[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:59,310]DEBUG 10569[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-14 22:36:59,310]DEBUG 10569[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:59,310]DEBUG 10569[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:59,310]DEBUG 10569[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=25, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 22:36:59,310]DEBUG 10569[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=27, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 22:36:59,310]DEBUG 10569[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=26, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 22:36:59,310]DEBUG 10569[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,311]DEBUG 10570[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductName like ?
[2017-10-14 22:36:59,311]DEBUG 10570[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:59,311]DEBUG 10570[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#25]
[2017-10-14 22:36:59,311]DEBUG 10570[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:59,311]DEBUG 10570[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,312]DEBUG 10571[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:59,312]DEBUG 10571[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:59,312]DEBUG 10571[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:59,312]DEBUG 10571[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-14 22:36:59,312]DEBUG 10571[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:59,312]DEBUG 10571[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:59,312]DEBUG 10571[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=25, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 22:36:59,313]DEBUG 10572[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=27, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 22:36:59,313]DEBUG 10572[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=26, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 22:36:59,313]DEBUG 10572[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,313]DEBUG 10572[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductName like ?
[2017-10-14 22:36:59,313]DEBUG 10572[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:59,313]DEBUG 10572[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#26]
[2017-10-14 22:36:59,314]DEBUG 10573[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:59,314]DEBUG 10573[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,314]DEBUG 10573[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:59,314]DEBUG 10573[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:59,314]DEBUG 10573[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:59,314]DEBUG 10573[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-14 22:36:59,314]DEBUG 10573[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:59,314]DEBUG 10573[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:59,315]DEBUG 10574[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=25, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 22:36:59,315]DEBUG 10574[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=27, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 22:36:59,315]DEBUG 10574[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=26, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 22:36:59,315]DEBUG 10574[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,315]DEBUG 10574[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductName like ?
[2017-10-14 22:36:59,315]DEBUG 10574[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:59,316]DEBUG 10575[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#27]
[2017-10-14 22:36:59,316]DEBUG 10575[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:59,316]DEBUG 10575[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,316]DEBUG 10575[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:59,316]DEBUG 10575[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:59,316]DEBUG 10575[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:59,316]DEBUG 10575[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-14 22:36:59,316]DEBUG 10575[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:59,317]DEBUG 10576[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:59,317]DEBUG 10576[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=25, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 22:36:59,317]DEBUG 10576[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=27, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 22:36:59,317]DEBUG 10576[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=26, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 22:36:59,317]DEBUG 10576[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,317]DEBUG 10576[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductName like ?
[2017-10-14 22:36:59,317]DEBUG 10576[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:59,318]DEBUG 10577[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:59,318]DEBUG 10577[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,318]DEBUG 10577[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:59,318]DEBUG 10577[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:59,318]DEBUG 10577[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:59,318]DEBUG 10577[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-14 22:36:59,318]DEBUG 10577[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:59,318]DEBUG 10577[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:59,318]DEBUG 10577[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=25, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 22:36:59,318]DEBUG 10577[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=27, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 22:36:59,319]DEBUG 10578[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=26, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 22:36:59,319]DEBUG 10578[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,319]DEBUG 10578[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 22:36:59,319]DEBUG 10578[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,319]DEBUG 10578[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@3b07c566, testMethod = testcontainsProductByName@ProductDaoTest, testException = [null]]]
[2017-10-14 22:36:59,319]DEBUG 10578[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 22:36:59,319]DEBUG 10578[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@4c7b6152]
[2017-10-14 22:36:59,319]DEBUG 10578[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 22:36:59,348]DEBUG 10607[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 22:36:59,348]DEBUG 10607[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:59,348]DEBUG 10607[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@4c7b6152] after transaction
[2017-10-14 22:36:59,348]DEBUG 10607[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 22:36:59,349]DEBUG 10608[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 22:36:59,349]DEBUG 10608[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:59,349] INFO 10608[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@3b07c566, testMethod = testcontainsProductByName@ProductDaoTest, testException = [null]]]
[2017-10-14 22:36:59,351]DEBUG 10610[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@3b07c566, testMethod = testcontainsProductByName@ProductDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 22:36:59,351]DEBUG 10610[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2017-10-14 22:36:59,351]DEBUG 10610[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2017-10-14 22:36:59,352]DEBUG 10611[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@1d2d739d, testMethod = [null], testException = [null]]].
[2017-10-14 22:36:59,352]DEBUG 10611[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 22:36:59,352]DEBUG 10611[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 22:36:59,352]DEBUG 10611[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 22:36:59,352]DEBUG 10611[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 22:36:59,353]DEBUG 10612[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 22:36:59,353]DEBUG 10612[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 22:36:59,353]DEBUG 10612[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 22:36:59,353]DEBUG 10612[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 22:36:59,353]DEBUG 10612[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 22:36:59,354]DEBUG 10613[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 22:36:59,354]DEBUG 10613[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 22:36:59,354]DEBUG 10613[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 22:36:59,354]DEBUG 10613[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 22:36:59,354]DEBUG 10613[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 22:36:59,354]DEBUG 10613[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 22:36:59,355]DEBUG 10614[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 22:36:59,355]DEBUG 10614[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 22:36:59,355]DEBUG 10614[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 22:36:59,355]DEBUG 10614[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 22:36:59,355]DEBUG 10614[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 22:36:59,356]DEBUG 10615[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 22:36:59,356]DEBUG 10615[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 22:36:59,356]DEBUG 10615[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@1d2d739d]
[2017-10-14 22:36:59,357]DEBUG 10616[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testnumberOfProductByName' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:59,357]DEBUG 10616[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@1d2d739d, testMethod = testnumberOfProductByName@ProductDaoTest, testException = [null]]]
[2017-10-14 22:36:59,357]DEBUG 10616[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 22:36:59,359]DEBUG 10618[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testnumberOfProductByName]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:59,359]DEBUG 10618[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15080098193
[2017-10-14 22:36:59,359]DEBUG 10618[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@7405c4] for Hibernate transaction
[2017-10-14 22:36:59,359]DEBUG 10618[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7405c4]
[2017-10-14 22:36:59,359]DEBUG 10618[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 22:36:59,360]DEBUG 10619[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 22:36:59,360]DEBUG 10619[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 22:36:59,360]DEBUG 10619[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@1d2d739d, testMethod = testnumberOfProductByName@ProductDaoTest, testException = [null]]]
[2017-10-14 22:36:59,360] INFO 10619[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (7): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@598b619b]; rollback [true]
[2017-10-14 22:36:59,360]DEBUG 10619[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:59,361]DEBUG 10620[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,361]DEBUG 10620[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 22:36:59,362]DEBUG 10621[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 28
[2017-10-14 22:36:59,362]DEBUG 10621[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,363]DEBUG 10622[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:59,363]DEBUG 10622[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,363]DEBUG 10622[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 22:36:59,364]DEBUG 10623[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 29
[2017-10-14 22:36:59,364]DEBUG 10623[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,365]DEBUG 10624[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:59,365]DEBUG 10624[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,365]DEBUG 10624[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 22:36:59,366]DEBUG 10625[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 30
[2017-10-14 22:36:59,366]DEBUG 10625[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,367]DEBUG 10626[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:59,367]DEBUG 10626[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:59,368]DEBUG 10627[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 3 updates, 0 deletions to 3 objects
[2017-10-14 22:36:59,368]DEBUG 10627[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:59,368]DEBUG 10627[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:59,368]DEBUG 10627[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=29, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 22:36:59,368]DEBUG 10627[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=28, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 22:36:59,369]DEBUG 10628[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=30, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 22:36:59,369]DEBUG 10628[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Products
[2017-10-14 22:36:59,369]DEBUG 10628[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,369]DEBUG 10628[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 22:36:59,369]DEBUG 10628[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2017-10-14 22:36:59,369]DEBUG 10628[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 22:36:59,369]DEBUG 10628[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2017-10-14 22:36:59,370]DEBUG 10629[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 22:36:59,370]DEBUG 10629[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2017-10-14 22:36:59,370]DEBUG 10629[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,370]DEBUG 10629[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,371]DEBUG 10630[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductName like ?
[2017-10-14 22:36:59,371]DEBUG 10630[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:59,371]DEBUG 10630[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#28]
[2017-10-14 22:36:59,371]DEBUG 10630[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:59,371]DEBUG 10630[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,372]DEBUG 10631[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:59,372]DEBUG 10631[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:59,372]DEBUG 10631[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:59,372]DEBUG 10631[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-14 22:36:59,372]DEBUG 10631[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:59,372]DEBUG 10631[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:59,372]DEBUG 10631[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=29, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 22:36:59,372]DEBUG 10631[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=28, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 22:36:59,372]DEBUG 10631[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=30, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 22:36:59,372]DEBUG 10631[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,373]DEBUG 10632[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 22:36:59,373]DEBUG 10632[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,373]DEBUG 10632[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@1d2d739d, testMethod = testnumberOfProductByName@ProductDaoTest, testException = [null]]]
[2017-10-14 22:36:59,374]DEBUG 10633[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 22:36:59,374]DEBUG 10633[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7405c4]
[2017-10-14 22:36:59,374]DEBUG 10633[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 22:36:59,407]DEBUG 10666[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 22:36:59,407]DEBUG 10666[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:59,407]DEBUG 10666[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@7405c4] after transaction
[2017-10-14 22:36:59,407]DEBUG 10666[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 22:36:59,407]DEBUG 10666[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 22:36:59,408]DEBUG 10667[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:59,408] INFO 10667[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@1d2d739d, testMethod = testnumberOfProductByName@ProductDaoTest, testException = [null]]]
[2017-10-14 22:36:59,409]DEBUG 10668[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@1d2d739d, testMethod = testnumberOfProductByName@ProductDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 22:36:59,409]DEBUG 10668[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2017-10-14 22:36:59,409]DEBUG 10668[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2017-10-14 22:36:59,410]DEBUG 10669[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@8c60399, testMethod = [null], testException = [null]]].
[2017-10-14 22:36:59,410]DEBUG 10669[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 22:36:59,410]DEBUG 10669[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 22:36:59,410]DEBUG 10669[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 22:36:59,410]DEBUG 10669[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 22:36:59,410]DEBUG 10669[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 22:36:59,410]DEBUG 10669[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 22:36:59,410]DEBUG 10669[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 22:36:59,410]DEBUG 10669[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 22:36:59,410]DEBUG 10669[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 22:36:59,410]DEBUG 10669[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 22:36:59,411]DEBUG 10670[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 22:36:59,411]DEBUG 10670[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 22:36:59,411]DEBUG 10670[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 22:36:59,411]DEBUG 10670[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 22:36:59,411]DEBUG 10670[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 22:36:59,411]DEBUG 10670[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 22:36:59,411]DEBUG 10670[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 22:36:59,411]DEBUG 10670[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 22:36:59,411]DEBUG 10670[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 22:36:59,411]DEBUG 10670[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 22:36:59,411]DEBUG 10670[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 22:36:59,412]DEBUG 10671[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 22:36:59,412]DEBUG 10671[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@8c60399]
[2017-10-14 22:36:59,412]DEBUG 10671[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testfindByDescription' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:59,412]DEBUG 10671[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@8c60399, testMethod = testfindByDescription@ProductDaoTest, testException = [null]]]
[2017-10-14 22:36:59,412]DEBUG 10671[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 22:36:59,413]DEBUG 10672[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testfindByDescription]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:59,413]DEBUG 10672[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15080098194
[2017-10-14 22:36:59,413]DEBUG 10672[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@700c7325] for Hibernate transaction
[2017-10-14 22:36:59,413]DEBUG 10672[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@700c7325]
[2017-10-14 22:36:59,414]DEBUG 10673[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 22:36:59,414]DEBUG 10673[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 22:36:59,414]DEBUG 10673[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 22:36:59,414]DEBUG 10673[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@8c60399, testMethod = testfindByDescription@ProductDaoTest, testException = [null]]]
[2017-10-14 22:36:59,414] INFO 10673[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (8): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@598b619b]; rollback [true]
[2017-10-14 22:36:59,414]DEBUG 10673[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:59,414]DEBUG 10673[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,414]DEBUG 10673[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 22:36:59,415]DEBUG 10674[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 31
[2017-10-14 22:36:59,415]DEBUG 10674[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,415]DEBUG 10674[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:59,415]DEBUG 10674[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,416]DEBUG 10675[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 22:36:59,416]DEBUG 10675[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 32
[2017-10-14 22:36:59,416]DEBUG 10675[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,416]DEBUG 10675[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:59,416]DEBUG 10675[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,416]DEBUG 10675[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 22:36:59,417]DEBUG 10676[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 33
[2017-10-14 22:36:59,417]DEBUG 10676[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,417]DEBUG 10676[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:59,417]DEBUG 10676[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:59,418]DEBUG 10677[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 3 updates, 0 deletions to 3 objects
[2017-10-14 22:36:59,418]DEBUG 10677[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:59,418]DEBUG 10677[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:59,418]DEBUG 10677[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=31, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 22:36:59,418]DEBUG 10677[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=33, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 22:36:59,418]DEBUG 10677[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=32, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 22:36:59,418]DEBUG 10677[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Products
[2017-10-14 22:36:59,418]DEBUG 10677[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,419]DEBUG 10678[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 22:36:59,419]DEBUG 10678[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2017-10-14 22:36:59,419]DEBUG 10678[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 22:36:59,419]DEBUG 10678[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2017-10-14 22:36:59,419]DEBUG 10678[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 22:36:59,419]DEBUG 10678[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2017-10-14 22:36:59,420]DEBUG 10679[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,420]DEBUG 10679[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,420]DEBUG 10679[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_
[2017-10-14 22:36:59,421]DEBUG 10680[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:59,421]DEBUG 10680[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#31]
[2017-10-14 22:36:59,421]DEBUG 10680[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#32]
[2017-10-14 22:36:59,421]DEBUG 10680[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#33]
[2017-10-14 22:36:59,421]DEBUG 10680[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:59,421]DEBUG 10680[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,421]DEBUG 10680[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:59,422]DEBUG 10681[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:59,422]DEBUG 10681[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:59,422]DEBUG 10681[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-14 22:36:59,422]DEBUG 10681[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:59,422]DEBUG 10681[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:59,422]DEBUG 10681[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=31, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 22:36:59,422]DEBUG 10681[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=33, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 22:36:59,423]DEBUG 10682[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=32, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 22:36:59,423]DEBUG 10682[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,423]DEBUG 10682[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductDescription like ? and this_.IsProductActive=?
[2017-10-14 22:36:59,423]DEBUG 10682[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:59,424]DEBUG 10683[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#31]
[2017-10-14 22:36:59,424]DEBUG 10683[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#32]
[2017-10-14 22:36:59,424]DEBUG 10683[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#33]
[2017-10-14 22:36:59,424]DEBUG 10683[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:59,424]DEBUG 10683[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,424]DEBUG 10683[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:59,424]DEBUG 10683[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:59,424]DEBUG 10683[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:59,425]DEBUG 10684[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-14 22:36:59,425]DEBUG 10684[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:59,425]DEBUG 10684[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:59,425]DEBUG 10684[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=31, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 22:36:59,425]DEBUG 10684[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=33, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 22:36:59,425]DEBUG 10684[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=32, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 22:36:59,425]DEBUG 10684[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,425]DEBUG 10684[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductDescription like ? and this_.IsProductActive=?
[2017-10-14 22:36:59,426]DEBUG 10685[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:59,426]DEBUG 10685[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#31]
[2017-10-14 22:36:59,426]DEBUG 10685[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#32]
[2017-10-14 22:36:59,426]DEBUG 10685[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#33]
[2017-10-14 22:36:59,426]DEBUG 10685[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:59,426]DEBUG 10685[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,427]DEBUG 10686[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:59,427]DEBUG 10686[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:59,427]DEBUG 10686[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:59,427]DEBUG 10686[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-14 22:36:59,427]DEBUG 10686[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:59,427]DEBUG 10686[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:59,427]DEBUG 10686[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=31, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 22:36:59,427]DEBUG 10686[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=33, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 22:36:59,428]DEBUG 10687[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=32, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 22:36:59,428]DEBUG 10687[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,428]DEBUG 10687[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductDescription like ? and this_.IsProductActive=?
[2017-10-14 22:36:59,428]DEBUG 10687[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:59,429]DEBUG 10688[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#31]
[2017-10-14 22:36:59,429]DEBUG 10688[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#32]
[2017-10-14 22:36:59,429]DEBUG 10688[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#33]
[2017-10-14 22:36:59,429]DEBUG 10688[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:59,429]DEBUG 10688[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,429]DEBUG 10688[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:59,429]DEBUG 10688[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:59,429]DEBUG 10688[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:59,430]DEBUG 10689[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-14 22:36:59,430]DEBUG 10689[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:59,430]DEBUG 10689[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:59,430]DEBUG 10689[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=31, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 22:36:59,430]DEBUG 10689[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=33, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 22:36:59,430]DEBUG 10689[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=32, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 22:36:59,430]DEBUG 10689[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,430]DEBUG 10689[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 22:36:59,430]DEBUG 10689[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,431]DEBUG 10690[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@8c60399, testMethod = testfindByDescription@ProductDaoTest, testException = [null]]]
[2017-10-14 22:36:59,431]DEBUG 10690[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 22:36:59,431]DEBUG 10690[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@700c7325]
[2017-10-14 22:36:59,431]DEBUG 10690[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 22:36:59,465]DEBUG 10724[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 22:36:59,465]DEBUG 10724[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:59,465]DEBUG 10724[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@700c7325] after transaction
[2017-10-14 22:36:59,466]DEBUG 10725[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 22:36:59,466]DEBUG 10725[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 22:36:59,466]DEBUG 10725[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:59,466] INFO 10725[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@8c60399, testMethod = testfindByDescription@ProductDaoTest, testException = [null]]]
[2017-10-14 22:36:59,468]DEBUG 10727[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@8c60399, testMethod = testfindByDescription@ProductDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 22:36:59,468]DEBUG 10727[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2017-10-14 22:36:59,468]DEBUG 10727[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2017-10-14 22:36:59,469]DEBUG 10728[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@44bad6a1, testMethod = [null], testException = [null]]].
[2017-10-14 22:36:59,469]DEBUG 10728[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 22:36:59,469]DEBUG 10728[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 22:36:59,469]DEBUG 10728[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 22:36:59,470]DEBUG 10729[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 22:36:59,470]DEBUG 10729[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 22:36:59,470]DEBUG 10729[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 22:36:59,470]DEBUG 10729[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 22:36:59,470]DEBUG 10729[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 22:36:59,471]DEBUG 10730[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 22:36:59,471]DEBUG 10730[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 22:36:59,471]DEBUG 10730[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 22:36:59,471]DEBUG 10730[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 22:36:59,471]DEBUG 10730[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 22:36:59,471]DEBUG 10730[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 22:36:59,472]DEBUG 10731[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 22:36:59,472]DEBUG 10731[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 22:36:59,472]DEBUG 10731[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 22:36:59,472]DEBUG 10731[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 22:36:59,472]DEBUG 10731[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 22:36:59,473]DEBUG 10732[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 22:36:59,473]DEBUG 10732[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 22:36:59,473]DEBUG 10732[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 22:36:59,473]DEBUG 10732[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@44bad6a1]
[2017-10-14 22:36:59,474]DEBUG 10733[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testcontainsProductByDescription' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:59,474]DEBUG 10733[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@44bad6a1, testMethod = testcontainsProductByDescription@ProductDaoTest, testException = [null]]]
[2017-10-14 22:36:59,474]DEBUG 10733[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 22:36:59,476]DEBUG 10735[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testcontainsProductByDescription]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:59,476]DEBUG 10735[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15080098194
[2017-10-14 22:36:59,476]DEBUG 10735[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@43b71ce2] for Hibernate transaction
[2017-10-14 22:36:59,476]DEBUG 10735[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@43b71ce2]
[2017-10-14 22:36:59,477]DEBUG 10736[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 22:36:59,477]DEBUG 10736[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 22:36:59,477]DEBUG 10736[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 22:36:59,477]DEBUG 10736[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@44bad6a1, testMethod = testcontainsProductByDescription@ProductDaoTest, testException = [null]]]
[2017-10-14 22:36:59,477] INFO 10736[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (9): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@598b619b]; rollback [true]
[2017-10-14 22:36:59,478]DEBUG 10737[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:59,478]DEBUG 10737[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,478]DEBUG 10737[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 22:36:59,479]DEBUG 10738[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 34
[2017-10-14 22:36:59,479]DEBUG 10738[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,480]DEBUG 10739[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:59,480]DEBUG 10739[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,480]DEBUG 10739[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 22:36:59,481]DEBUG 10740[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 35
[2017-10-14 22:36:59,481]DEBUG 10740[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,482]DEBUG 10741[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:59,482]DEBUG 10741[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,482]DEBUG 10741[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 22:36:59,483]DEBUG 10742[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 36
[2017-10-14 22:36:59,483]DEBUG 10742[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,484]DEBUG 10743[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:59,484]DEBUG 10743[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:59,485]DEBUG 10744[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 3 updates, 0 deletions to 3 objects
[2017-10-14 22:36:59,485]DEBUG 10744[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:59,485]DEBUG 10744[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:59,485]DEBUG 10744[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=36, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 22:36:59,486]DEBUG 10745[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=35, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 22:36:59,486]DEBUG 10745[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=34, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 22:36:59,486]DEBUG 10745[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Products
[2017-10-14 22:36:59,486]DEBUG 10745[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,487]DEBUG 10746[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 22:36:59,487]DEBUG 10746[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2017-10-14 22:36:59,487]DEBUG 10746[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 22:36:59,488]DEBUG 10747[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2017-10-14 22:36:59,488]DEBUG 10747[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 22:36:59,488]DEBUG 10747[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2017-10-14 22:36:59,489]DEBUG 10748[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,489]DEBUG 10748[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,489]DEBUG 10748[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_
[2017-10-14 22:36:59,490]DEBUG 10749[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:59,490]DEBUG 10749[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#34]
[2017-10-14 22:36:59,490]DEBUG 10749[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#35]
[2017-10-14 22:36:59,490]DEBUG 10749[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#36]
[2017-10-14 22:36:59,490]DEBUG 10749[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:59,490]DEBUG 10749[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,491]DEBUG 10750[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:59,491]DEBUG 10750[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:59,491]DEBUG 10750[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:59,491]DEBUG 10750[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-14 22:36:59,491]DEBUG 10750[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:59,491]DEBUG 10750[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:59,491]DEBUG 10750[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=36, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 22:36:59,491]DEBUG 10750[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=35, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 22:36:59,492]DEBUG 10751[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=34, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 22:36:59,492]DEBUG 10751[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,492]DEBUG 10751[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductDescription like ?
[2017-10-14 22:36:59,492]DEBUG 10751[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:59,492]DEBUG 10751[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#34]
[2017-10-14 22:36:59,492]DEBUG 10751[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:59,493]DEBUG 10752[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,493]DEBUG 10752[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:59,493]DEBUG 10752[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:59,493]DEBUG 10752[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:59,493]DEBUG 10752[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-14 22:36:59,493]DEBUG 10752[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:59,493]DEBUG 10752[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:59,493]DEBUG 10752[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=36, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 22:36:59,494]DEBUG 10753[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=35, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 22:36:59,494]DEBUG 10753[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=34, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 22:36:59,494]DEBUG 10753[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,494]DEBUG 10753[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductDescription like ?
[2017-10-14 22:36:59,494]DEBUG 10753[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:59,494]DEBUG 10753[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#35]
[2017-10-14 22:36:59,495]DEBUG 10754[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:59,495]DEBUG 10754[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,495]DEBUG 10754[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:59,495]DEBUG 10754[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:59,495]DEBUG 10754[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:59,495]DEBUG 10754[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-14 22:36:59,495]DEBUG 10754[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:59,495]DEBUG 10754[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:59,495]DEBUG 10754[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=36, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 22:36:59,496]DEBUG 10755[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=35, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 22:36:59,496]DEBUG 10755[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=34, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 22:36:59,496]DEBUG 10755[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,496]DEBUG 10755[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductDescription like ?
[2017-10-14 22:36:59,496]DEBUG 10755[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:59,496]DEBUG 10755[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#36]
[2017-10-14 22:36:59,497]DEBUG 10756[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:59,497]DEBUG 10756[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,497]DEBUG 10756[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:59,497]DEBUG 10756[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:59,497]DEBUG 10756[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:59,497]DEBUG 10756[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-14 22:36:59,497]DEBUG 10756[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:59,497]DEBUG 10756[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:59,497]DEBUG 10756[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=36, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 22:36:59,498]DEBUG 10757[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=35, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 22:36:59,498]DEBUG 10757[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=34, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 22:36:59,498]DEBUG 10757[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,498]DEBUG 10757[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductDescription like ?
[2017-10-14 22:36:59,498]DEBUG 10757[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:59,498]DEBUG 10757[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:59,498]DEBUG 10757[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,499]DEBUG 10758[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:59,499]DEBUG 10758[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:59,499]DEBUG 10758[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:59,499]DEBUG 10758[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-14 22:36:59,499]DEBUG 10758[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:59,499]DEBUG 10758[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:59,499]DEBUG 10758[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=36, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 22:36:59,499]DEBUG 10758[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=35, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 22:36:59,499]DEBUG 10758[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=34, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 22:36:59,500]DEBUG 10759[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,500]DEBUG 10759[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 22:36:59,500]DEBUG 10759[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,500]DEBUG 10759[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@44bad6a1, testMethod = testcontainsProductByDescription@ProductDaoTest, testException = [null]]]
[2017-10-14 22:36:59,500]DEBUG 10759[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 22:36:59,500]DEBUG 10759[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@43b71ce2]
[2017-10-14 22:36:59,500]DEBUG 10759[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 22:36:59,532]DEBUG 10791[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 22:36:59,532]DEBUG 10791[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:59,532]DEBUG 10791[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@43b71ce2] after transaction
[2017-10-14 22:36:59,532]DEBUG 10791[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 22:36:59,533]DEBUG 10792[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 22:36:59,533]DEBUG 10792[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:59,533] INFO 10792[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@44bad6a1, testMethod = testcontainsProductByDescription@ProductDaoTest, testException = [null]]]
[2017-10-14 22:36:59,534]DEBUG 10793[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@44bad6a1, testMethod = testcontainsProductByDescription@ProductDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 22:36:59,535]DEBUG 10794[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2017-10-14 22:36:59,535]DEBUG 10794[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2017-10-14 22:36:59,535]DEBUG 10794[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@5cbca0c3, testMethod = [null], testException = [null]]].
[2017-10-14 22:36:59,536]DEBUG 10795[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 22:36:59,536]DEBUG 10795[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 22:36:59,536]DEBUG 10795[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 22:36:59,536]DEBUG 10795[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 22:36:59,536]DEBUG 10795[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 22:36:59,537]DEBUG 10796[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 22:36:59,537]DEBUG 10796[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 22:36:59,537]DEBUG 10796[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 22:36:59,537]DEBUG 10796[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 22:36:59,537]DEBUG 10796[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 22:36:59,538]DEBUG 10797[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 22:36:59,538]DEBUG 10797[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 22:36:59,538]DEBUG 10797[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 22:36:59,538]DEBUG 10797[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 22:36:59,538]DEBUG 10797[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 22:36:59,538]DEBUG 10797[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 22:36:59,539]DEBUG 10798[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 22:36:59,539]DEBUG 10798[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 22:36:59,539]DEBUG 10798[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 22:36:59,539]DEBUG 10798[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 22:36:59,539]DEBUG 10798[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 22:36:59,540]DEBUG 10799[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 22:36:59,540]DEBUG 10799[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@5cbca0c3]
[2017-10-14 22:36:59,541]DEBUG 10800[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testnumberOfProductByDescription' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:59,541]DEBUG 10800[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@5cbca0c3, testMethod = testnumberOfProductByDescription@ProductDaoTest, testException = [null]]]
[2017-10-14 22:36:59,541]DEBUG 10800[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 22:36:59,542]DEBUG 10801[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testnumberOfProductByDescription]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:59,543]DEBUG 10802[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15080098195
[2017-10-14 22:36:59,543]DEBUG 10802[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@5142d71d] for Hibernate transaction
[2017-10-14 22:36:59,543]DEBUG 10802[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@5142d71d]
[2017-10-14 22:36:59,543]DEBUG 10802[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 22:36:59,543]DEBUG 10802[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 22:36:59,544]DEBUG 10803[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 22:36:59,544]DEBUG 10803[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@5cbca0c3, testMethod = testnumberOfProductByDescription@ProductDaoTest, testException = [null]]]
[2017-10-14 22:36:59,544] INFO 10803[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (10): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@598b619b]; rollback [true]
[2017-10-14 22:36:59,544]DEBUG 10803[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:59,545]DEBUG 10804[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,545]DEBUG 10804[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 22:36:59,546]DEBUG 10805[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 37
[2017-10-14 22:36:59,546]DEBUG 10805[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,546]DEBUG 10805[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:59,547]DEBUG 10806[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,547]DEBUG 10806[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 22:36:59,548]DEBUG 10807[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 38
[2017-10-14 22:36:59,548]DEBUG 10807[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,548]DEBUG 10807[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:59,549]DEBUG 10808[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,549]DEBUG 10808[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 22:36:59,549]DEBUG 10808[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 39
[2017-10-14 22:36:59,549]DEBUG 10808[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,550]DEBUG 10809[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:59,550]DEBUG 10809[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:59,550]DEBUG 10809[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 3 updates, 0 deletions to 3 objects
[2017-10-14 22:36:59,550]DEBUG 10809[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:59,550]DEBUG 10809[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:59,550]DEBUG 10809[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=37, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 22:36:59,550]DEBUG 10809[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=39, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 22:36:59,550]DEBUG 10809[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=38, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 22:36:59,550]DEBUG 10809[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Products
[2017-10-14 22:36:59,551]DEBUG 10810[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,551]DEBUG 10810[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 22:36:59,551]DEBUG 10810[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2017-10-14 22:36:59,551]DEBUG 10810[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 22:36:59,551]DEBUG 10810[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2017-10-14 22:36:59,551]DEBUG 10810[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 22:36:59,551]DEBUG 10810[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2017-10-14 22:36:59,552]DEBUG 10811[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,552]DEBUG 10811[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,552]DEBUG 10811[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductDescription like ?
[2017-10-14 22:36:59,553]DEBUG 10812[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:59,553]DEBUG 10812[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#37]
[2017-10-14 22:36:59,553]DEBUG 10812[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:59,553]DEBUG 10812[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,553]DEBUG 10812[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:59,554]DEBUG 10813[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:59,554]DEBUG 10813[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:59,554]DEBUG 10813[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-14 22:36:59,554]DEBUG 10813[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:59,554]DEBUG 10813[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:59,554]DEBUG 10813[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=37, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 22:36:59,554]DEBUG 10813[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=39, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 22:36:59,554]DEBUG 10813[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=38, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 22:36:59,554]DEBUG 10813[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,554]DEBUG 10813[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductDescription like ?
[2017-10-14 22:36:59,555]DEBUG 10814[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:59,555]DEBUG 10814[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:59,555]DEBUG 10814[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,555]DEBUG 10814[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:59,555]DEBUG 10814[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:59,555]DEBUG 10814[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:59,556]DEBUG 10815[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-14 22:36:59,556]DEBUG 10815[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:59,556]DEBUG 10815[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:59,556]DEBUG 10815[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=37, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 22:36:59,556]DEBUG 10815[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=39, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 22:36:59,556]DEBUG 10815[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=38, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 22:36:59,556]DEBUG 10815[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,556]DEBUG 10815[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 22:36:59,556]DEBUG 10815[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,557]DEBUG 10816[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@5cbca0c3, testMethod = testnumberOfProductByDescription@ProductDaoTest, testException = [null]]]
[2017-10-14 22:36:59,557]DEBUG 10816[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 22:36:59,557]DEBUG 10816[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@5142d71d]
[2017-10-14 22:36:59,557]DEBUG 10816[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 22:36:59,590]DEBUG 10849[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 22:36:59,590]DEBUG 10849[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:59,591]DEBUG 10850[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@5142d71d] after transaction
[2017-10-14 22:36:59,591]DEBUG 10850[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 22:36:59,591]DEBUG 10850[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 22:36:59,591]DEBUG 10850[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:59,591] INFO 10850[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@5cbca0c3, testMethod = testnumberOfProductByDescription@ProductDaoTest, testException = [null]]]
[2017-10-14 22:36:59,593]DEBUG 10852[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@5cbca0c3, testMethod = testnumberOfProductByDescription@ProductDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 22:36:59,593]DEBUG 10852[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2017-10-14 22:36:59,593]DEBUG 10852[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2017-10-14 22:36:59,594]DEBUG 10853[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@45d5de28, testMethod = [null], testException = [null]]].
[2017-10-14 22:36:59,594]DEBUG 10853[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 22:36:59,594]DEBUG 10853[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 22:36:59,594]DEBUG 10853[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 22:36:59,595]DEBUG 10854[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 22:36:59,595]DEBUG 10854[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 22:36:59,595]DEBUG 10854[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 22:36:59,595]DEBUG 10854[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 22:36:59,595]DEBUG 10854[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 22:36:59,596]DEBUG 10855[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 22:36:59,596]DEBUG 10855[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 22:36:59,596]DEBUG 10855[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 22:36:59,596]DEBUG 10855[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 22:36:59,596]DEBUG 10855[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 22:36:59,597]DEBUG 10856[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 22:36:59,597]DEBUG 10856[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 22:36:59,597]DEBUG 10856[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 22:36:59,597]DEBUG 10856[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 22:36:59,597]DEBUG 10856[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 22:36:59,597]DEBUG 10856[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 22:36:59,598]DEBUG 10857[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 22:36:59,598]DEBUG 10857[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 22:36:59,598]DEBUG 10857[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 22:36:59,598]DEBUG 10857[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@45d5de28]
[2017-10-14 22:36:59,599]DEBUG 10858[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testfindByPrice' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:59,599]DEBUG 10858[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@45d5de28, testMethod = testfindByPrice@ProductDaoTest, testException = [null]]]
[2017-10-14 22:36:59,599]DEBUG 10858[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 22:36:59,601]DEBUG 10860[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testfindByPrice]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:59,601]DEBUG 10860[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15080098196
[2017-10-14 22:36:59,601]DEBUG 10860[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@11f3fe58] for Hibernate transaction
[2017-10-14 22:36:59,601]DEBUG 10860[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@11f3fe58]
[2017-10-14 22:36:59,602]DEBUG 10861[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 22:36:59,602]DEBUG 10861[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 22:36:59,602]DEBUG 10861[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 22:36:59,602]DEBUG 10861[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@45d5de28, testMethod = testfindByPrice@ProductDaoTest, testException = [null]]]
[2017-10-14 22:36:59,602] INFO 10861[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (11): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@598b619b]; rollback [true]
[2017-10-14 22:36:59,603]DEBUG 10862[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:59,603]DEBUG 10862[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,603]DEBUG 10862[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 22:36:59,604]DEBUG 10863[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 40
[2017-10-14 22:36:59,605]DEBUG 10864[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,605]DEBUG 10864[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:59,605]DEBUG 10864[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,605]DEBUG 10864[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 22:36:59,606]DEBUG 10865[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 41
[2017-10-14 22:36:59,606]DEBUG 10865[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,607]DEBUG 10866[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:59,607]DEBUG 10866[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,607]DEBUG 10866[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 22:36:59,608]DEBUG 10867[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 42
[2017-10-14 22:36:59,608]DEBUG 10867[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,609]DEBUG 10868[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:59,609]DEBUG 10868[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:59,609]DEBUG 10868[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 3 updates, 0 deletions to 3 objects
[2017-10-14 22:36:59,609]DEBUG 10868[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:59,609]DEBUG 10868[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:59,609]DEBUG 10868[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=40, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 22:36:59,610]DEBUG 10869[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=41, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 22:36:59,610]DEBUG 10869[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=42, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 22:36:59,610]DEBUG 10869[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Products
[2017-10-14 22:36:59,610]DEBUG 10869[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,610]DEBUG 10869[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 22:36:59,610]DEBUG 10869[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2017-10-14 22:36:59,610]DEBUG 10869[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 22:36:59,611]DEBUG 10870[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2017-10-14 22:36:59,611]DEBUG 10870[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 22:36:59,611]DEBUG 10870[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2017-10-14 22:36:59,611]DEBUG 10870[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,612]DEBUG 10871[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,612]DEBUG 10871[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductPrice=? and this_.IsProductActive=?
[2017-10-14 22:36:59,612]DEBUG 10871[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:59,612]DEBUG 10871[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#41]
[2017-10-14 22:36:59,612]DEBUG 10871[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:59,613]DEBUG 10872[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,613]DEBUG 10872[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:59,613]DEBUG 10872[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:59,613]DEBUG 10872[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:59,613]DEBUG 10872[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-14 22:36:59,613]DEBUG 10872[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:59,613]DEBUG 10872[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:59,613]DEBUG 10872[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=40, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 22:36:59,613]DEBUG 10872[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=41, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 22:36:59,614]DEBUG 10873[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=42, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 22:36:59,614]DEBUG 10873[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,614]DEBUG 10873[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 22:36:59,614]DEBUG 10873[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,614]DEBUG 10873[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@45d5de28, testMethod = testfindByPrice@ProductDaoTest, testException = [null]]]
[2017-10-14 22:36:59,614]DEBUG 10873[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 22:36:59,614]DEBUG 10873[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@11f3fe58]
[2017-10-14 22:36:59,614]DEBUG 10873[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 22:36:59,648]DEBUG 10907[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 22:36:59,649]DEBUG 10908[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:59,649]DEBUG 10908[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@11f3fe58] after transaction
[2017-10-14 22:36:59,649]DEBUG 10908[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 22:36:59,649]DEBUG 10908[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 22:36:59,650]DEBUG 10909[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:59,650] INFO 10909[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@45d5de28, testMethod = testfindByPrice@ProductDaoTest, testException = [null]]]
[2017-10-14 22:36:59,651]DEBUG 10910[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@45d5de28, testMethod = testfindByPrice@ProductDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 22:36:59,652]DEBUG 10911[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2017-10-14 22:36:59,652]DEBUG 10911[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2017-10-14 22:36:59,652]DEBUG 10911[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@1f54ce2a, testMethod = [null], testException = [null]]].
[2017-10-14 22:36:59,652]DEBUG 10911[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 22:36:59,653]DEBUG 10912[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 22:36:59,653]DEBUG 10912[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 22:36:59,653]DEBUG 10912[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 22:36:59,653]DEBUG 10912[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 22:36:59,653]DEBUG 10912[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 22:36:59,654]DEBUG 10913[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 22:36:59,654]DEBUG 10913[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 22:36:59,654]DEBUG 10913[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 22:36:59,654]DEBUG 10913[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 22:36:59,654]DEBUG 10913[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 22:36:59,654]DEBUG 10913[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 22:36:59,655]DEBUG 10914[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 22:36:59,655]DEBUG 10914[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 22:36:59,655]DEBUG 10914[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 22:36:59,655]DEBUG 10914[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 22:36:59,655]DEBUG 10914[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 22:36:59,656]DEBUG 10915[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 22:36:59,656]DEBUG 10915[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 22:36:59,656]DEBUG 10915[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 22:36:59,656]DEBUG 10915[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 22:36:59,657]DEBUG 10916[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 22:36:59,657]DEBUG 10916[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@1f54ce2a]
[2017-10-14 22:36:59,657]DEBUG 10916[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testfindByPriceFromTo' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:59,658]DEBUG 10917[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@1f54ce2a, testMethod = testfindByPriceFromTo@ProductDaoTest, testException = [null]]]
[2017-10-14 22:36:59,658]DEBUG 10917[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 22:36:59,659]DEBUG 10918[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testfindByPriceFromTo]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:59,659]DEBUG 10918[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15080098196
[2017-10-14 22:36:59,660]DEBUG 10919[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@1a8f20ae] for Hibernate transaction
[2017-10-14 22:36:59,660]DEBUG 10919[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@1a8f20ae]
[2017-10-14 22:36:59,660]DEBUG 10919[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 22:36:59,660]DEBUG 10919[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 22:36:59,660]DEBUG 10919[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 22:36:59,661]DEBUG 10920[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@1f54ce2a, testMethod = testfindByPriceFromTo@ProductDaoTest, testException = [null]]]
[2017-10-14 22:36:59,661] INFO 10920[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (12): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@598b619b]; rollback [true]
[2017-10-14 22:36:59,661]DEBUG 10920[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:59,661]DEBUG 10920[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,662]DEBUG 10921[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 22:36:59,663]DEBUG 10922[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 43
[2017-10-14 22:36:59,663]DEBUG 10922[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,663]DEBUG 10922[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:59,664]DEBUG 10923[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,664]DEBUG 10923[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 22:36:59,665]DEBUG 10924[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 44
[2017-10-14 22:36:59,665]DEBUG 10924[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,665]DEBUG 10924[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:59,666]DEBUG 10925[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,666]DEBUG 10925[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 22:36:59,667]DEBUG 10926[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 45
[2017-10-14 22:36:59,667]DEBUG 10926[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,669]DEBUG 10928[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:59,669]DEBUG 10928[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:59,669]DEBUG 10928[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 3 updates, 0 deletions to 3 objects
[2017-10-14 22:36:59,670]DEBUG 10929[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:59,670]DEBUG 10929[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:59,670]DEBUG 10929[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=44, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 22:36:59,670]DEBUG 10929[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=45, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 22:36:59,670]DEBUG 10929[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=43, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 22:36:59,671]DEBUG 10930[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Products
[2017-10-14 22:36:59,671]DEBUG 10930[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,671]DEBUG 10930[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 22:36:59,672]DEBUG 10931[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2017-10-14 22:36:59,672]DEBUG 10931[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 22:36:59,672]DEBUG 10931[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2017-10-14 22:36:59,673]DEBUG 10932[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 22:36:59,673]DEBUG 10932[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2017-10-14 22:36:59,674]DEBUG 10933[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,675]DEBUG 10934[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,675]DEBUG 10934[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductPrice between ? and ? and this_.IsProductActive=?
[2017-10-14 22:36:59,676]DEBUG 10935[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:59,676]DEBUG 10935[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#43]
[2017-10-14 22:36:59,677]DEBUG 10936[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:59,677]DEBUG 10936[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,677]DEBUG 10936[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:59,678]DEBUG 10937[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:59,678]DEBUG 10937[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:59,678]DEBUG 10937[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-14 22:36:59,678]DEBUG 10937[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:59,678]DEBUG 10937[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:59,679]DEBUG 10938[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=44, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 22:36:59,679]DEBUG 10938[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=45, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 22:36:59,679]DEBUG 10938[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=43, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 22:36:59,679]DEBUG 10938[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,680]DEBUG 10939[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 22:36:59,680]DEBUG 10939[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,681]DEBUG 10940[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@1f54ce2a, testMethod = testfindByPriceFromTo@ProductDaoTest, testException = [null]]]
[2017-10-14 22:36:59,681]DEBUG 10940[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 22:36:59,681]DEBUG 10940[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@1a8f20ae]
[2017-10-14 22:36:59,681]DEBUG 10940[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 22:36:59,715]DEBUG 10974[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 22:36:59,715]DEBUG 10974[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:59,716]DEBUG 10975[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@1a8f20ae] after transaction
[2017-10-14 22:36:59,716]DEBUG 10975[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 22:36:59,716]DEBUG 10975[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 22:36:59,716]DEBUG 10975[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:59,717] INFO 10976[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@1f54ce2a, testMethod = testfindByPriceFromTo@ProductDaoTest, testException = [null]]]
[2017-10-14 22:36:59,718]DEBUG 10977[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@1f54ce2a, testMethod = testfindByPriceFromTo@ProductDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 22:36:59,718]DEBUG 10977[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2017-10-14 22:36:59,719]DEBUG 10978[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2017-10-14 22:36:59,719]DEBUG 10978[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@3b8b7e02, testMethod = [null], testException = [null]]].
[2017-10-14 22:36:59,719]DEBUG 10978[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 22:36:59,719]DEBUG 10978[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 22:36:59,720]DEBUG 10979[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 22:36:59,720]DEBUG 10979[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 22:36:59,720]DEBUG 10979[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 22:36:59,720]DEBUG 10979[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 22:36:59,720]DEBUG 10979[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 22:36:59,721]DEBUG 10980[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 22:36:59,721]DEBUG 10980[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 22:36:59,721]DEBUG 10980[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 22:36:59,721]DEBUG 10980[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 22:36:59,721]DEBUG 10980[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 22:36:59,722]DEBUG 10981[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 22:36:59,722]DEBUG 10981[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 22:36:59,722]DEBUG 10981[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 22:36:59,722]DEBUG 10981[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 22:36:59,722]DEBUG 10981[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 22:36:59,722]DEBUG 10981[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 22:36:59,723]DEBUG 10982[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 22:36:59,723]DEBUG 10982[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 22:36:59,723]DEBUG 10982[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 22:36:59,723]DEBUG 10982[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 22:36:59,724]DEBUG 10983[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@3b8b7e02]
[2017-10-14 22:36:59,724]DEBUG 10983[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetRowCount' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:59,725]DEBUG 10984[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@3b8b7e02, testMethod = testGetRowCount@ProductDaoTest, testException = [null]]]
[2017-10-14 22:36:59,725]DEBUG 10984[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 22:36:59,726]DEBUG 10985[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testGetRowCount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:59,726]DEBUG 10985[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15080098197
[2017-10-14 22:36:59,727]DEBUG 10986[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@28d58f21] for Hibernate transaction
[2017-10-14 22:36:59,727]DEBUG 10986[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@28d58f21]
[2017-10-14 22:36:59,727]DEBUG 10986[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 22:36:59,727]DEBUG 10986[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 22:36:59,727]DEBUG 10986[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 22:36:59,728]DEBUG 10987[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@3b8b7e02, testMethod = testGetRowCount@ProductDaoTest, testException = [null]]]
[2017-10-14 22:36:59,728] INFO 10987[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (13): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@598b619b]; rollback [true]
[2017-10-14 22:36:59,728]DEBUG 10987[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:59,728]DEBUG 10987[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,729]DEBUG 10988[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 22:36:59,730]DEBUG 10989[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 46
[2017-10-14 22:36:59,730]DEBUG 10989[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,730]DEBUG 10989[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:59,731]DEBUG 10990[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,731]DEBUG 10990[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 22:36:59,732]DEBUG 10991[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 47
[2017-10-14 22:36:59,732]DEBUG 10991[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,732]DEBUG 10991[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:59,733]DEBUG 10992[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,733]DEBUG 10992[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 22:36:59,734]DEBUG 10993[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 48
[2017-10-14 22:36:59,734]DEBUG 10993[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,735]DEBUG 10994[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:59,735]DEBUG 10994[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:59,736]DEBUG 10995[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 3 updates, 0 deletions to 3 objects
[2017-10-14 22:36:59,736]DEBUG 10995[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:59,736]DEBUG 10995[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:59,736]DEBUG 10995[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=46, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 22:36:59,737]DEBUG 10996[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=47, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 22:36:59,737]DEBUG 10996[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=48, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 22:36:59,737]DEBUG 10996[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Products
[2017-10-14 22:36:59,737]DEBUG 10996[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,738]DEBUG 10997[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 22:36:59,738]DEBUG 10997[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2017-10-14 22:36:59,738]DEBUG 10997[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 22:36:59,739]DEBUG 10998[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2017-10-14 22:36:59,739]DEBUG 10998[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 22:36:59,739]DEBUG 10998[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2017-10-14 22:36:59,741]DEBUG 11000[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,741]DEBUG 11000[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,742]DEBUG 11001[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select count(*) as y0_ from Products this_ where this_.IsProductActive=?
[2017-10-14 22:36:59,742]DEBUG 11001[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:59,743]DEBUG 11002[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: 
[2017-10-14 22:36:59,743]DEBUG 11002[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:59,743]DEBUG 11002[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,743]DEBUG 11002[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:59,744]DEBUG 11003[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:59,744]DEBUG 11003[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:59,744]DEBUG 11003[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-14 22:36:59,744]DEBUG 11003[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:59,745]DEBUG 11004[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:59,745]DEBUG 11004[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=46, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 22:36:59,745]DEBUG 11004[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=47, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 22:36:59,745]DEBUG 11004[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=48, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 22:36:59,745]DEBUG 11004[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,746]DEBUG 11005[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 22:36:59,746]DEBUG 11005[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,747]DEBUG 11006[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@3b8b7e02, testMethod = testGetRowCount@ProductDaoTest, testException = [null]]]
[2017-10-14 22:36:59,747]DEBUG 11006[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 22:36:59,747]DEBUG 11006[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@28d58f21]
[2017-10-14 22:36:59,747]DEBUG 11006[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 22:36:59,782]DEBUG 11041[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 22:36:59,782]DEBUG 11041[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:59,782]DEBUG 11041[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@28d58f21] after transaction
[2017-10-14 22:36:59,782]DEBUG 11041[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 22:36:59,782]DEBUG 11041[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 22:36:59,782]DEBUG 11041[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:59,783] INFO 11042[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@3b8b7e02, testMethod = testGetRowCount@ProductDaoTest, testException = [null]]]
[2017-10-14 22:36:59,783]DEBUG 11042[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@3b8b7e02, testMethod = testGetRowCount@ProductDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 22:36:59,783]DEBUG 11042[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2017-10-14 22:36:59,784]DEBUG 11043[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2017-10-14 22:36:59,784]DEBUG 11043[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@48bcb478, testMethod = [null], testException = [null]]].
[2017-10-14 22:36:59,784]DEBUG 11043[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 22:36:59,784]DEBUG 11043[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 22:36:59,784]DEBUG 11043[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 22:36:59,784]DEBUG 11043[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 22:36:59,784]DEBUG 11043[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 22:36:59,784]DEBUG 11043[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 22:36:59,784]DEBUG 11043[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 22:36:59,785]DEBUG 11044[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 22:36:59,785]DEBUG 11044[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 22:36:59,785]DEBUG 11044[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 22:36:59,785]DEBUG 11044[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 22:36:59,785]DEBUG 11044[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 22:36:59,785]DEBUG 11044[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 22:36:59,785]DEBUG 11044[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 22:36:59,785]DEBUG 11044[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 22:36:59,785]DEBUG 11044[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 22:36:59,785]DEBUG 11044[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 22:36:59,785]DEBUG 11044[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 22:36:59,785]DEBUG 11044[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 22:36:59,786]DEBUG 11045[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 22:36:59,786]DEBUG 11045[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 22:36:59,786]DEBUG 11045[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 22:36:59,786]DEBUG 11045[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@48bcb478]
[2017-10-14 22:36:59,786]DEBUG 11045[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testfindByID' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:59,786]DEBUG 11045[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@48bcb478, testMethod = testfindByID@ProductDaoTest, testException = [null]]]
[2017-10-14 22:36:59,786]DEBUG 11045[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 22:36:59,787]DEBUG 11046[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testfindByID]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:59,787]DEBUG 11046[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15080098197
[2017-10-14 22:36:59,787]DEBUG 11046[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@13d58c83] for Hibernate transaction
[2017-10-14 22:36:59,787]DEBUG 11046[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@13d58c83]
[2017-10-14 22:36:59,788]DEBUG 11047[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 22:36:59,788]DEBUG 11047[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 22:36:59,788]DEBUG 11047[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 22:36:59,788]DEBUG 11047[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@48bcb478, testMethod = testfindByID@ProductDaoTest, testException = [null]]]
[2017-10-14 22:36:59,788] INFO 11047[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (14): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@598b619b]; rollback [true]
[2017-10-14 22:36:59,788]DEBUG 11047[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:59,788]DEBUG 11047[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,788]DEBUG 11047[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 22:36:59,789]DEBUG 11048[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 49
[2017-10-14 22:36:59,789]DEBUG 11048[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,789]DEBUG 11048[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:59,789]DEBUG 11048[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,790]DEBUG 11049[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 22:36:59,790]DEBUG 11049[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 50
[2017-10-14 22:36:59,790]DEBUG 11049[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,790]DEBUG 11049[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:59,790]DEBUG 11049[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,790]DEBUG 11049[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 22:36:59,791]DEBUG 11050[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 51
[2017-10-14 22:36:59,791]DEBUG 11050[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,791]DEBUG 11050[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:59,791]DEBUG 11050[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:59,792]DEBUG 11051[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 3 updates, 0 deletions to 3 objects
[2017-10-14 22:36:59,792]DEBUG 11051[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:59,792]DEBUG 11051[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:59,792]DEBUG 11051[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=49, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 22:36:59,792]DEBUG 11051[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=50, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 22:36:59,792]DEBUG 11051[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=51, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 22:36:59,792]DEBUG 11051[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Products
[2017-10-14 22:36:59,792]DEBUG 11051[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,792]DEBUG 11051[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 22:36:59,793]DEBUG 11052[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2017-10-14 22:36:59,793]DEBUG 11052[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 22:36:59,793]DEBUG 11052[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2017-10-14 22:36:59,793]DEBUG 11052[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 22:36:59,793]DEBUG 11052[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2017-10-14 22:36:59,794]DEBUG 11053[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,794]DEBUG 11053[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,794]DEBUG 11053[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_
[2017-10-14 22:36:59,795]DEBUG 11054[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:59,795]DEBUG 11054[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#49]
[2017-10-14 22:36:59,795]DEBUG 11054[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#50]
[2017-10-14 22:36:59,795]DEBUG 11054[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#51]
[2017-10-14 22:36:59,795]DEBUG 11054[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:59,795]DEBUG 11054[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,795]DEBUG 11054[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:59,796]DEBUG 11055[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:59,796]DEBUG 11055[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:59,796]DEBUG 11055[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-14 22:36:59,796]DEBUG 11055[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:59,796]DEBUG 11055[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:59,796]DEBUG 11055[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=49, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 22:36:59,796]DEBUG 11055[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=50, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 22:36:59,796]DEBUG 11055[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=51, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 22:36:59,796]DEBUG 11055[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,796]DEBUG 11055[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 22:36:59,797]DEBUG 11056[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,797]DEBUG 11056[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@48bcb478, testMethod = testfindByID@ProductDaoTest, testException = [null]]]
[2017-10-14 22:36:59,797]DEBUG 11056[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 22:36:59,797]DEBUG 11056[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@13d58c83]
[2017-10-14 22:36:59,797]DEBUG 11056[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 22:36:59,832]DEBUG 11091[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 22:36:59,832]DEBUG 11091[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:59,833]DEBUG 11092[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@13d58c83] after transaction
[2017-10-14 22:36:59,833]DEBUG 11092[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 22:36:59,833]DEBUG 11092[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 22:36:59,833]DEBUG 11092[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:59,834] INFO 11093[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@48bcb478, testMethod = testfindByID@ProductDaoTest, testException = [null]]]
[2017-10-14 22:36:59,835]DEBUG 11094[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@48bcb478, testMethod = testfindByID@ProductDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 22:36:59,835]DEBUG 11094[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2017-10-14 22:36:59,836]DEBUG 11095[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2017-10-14 22:36:59,836]DEBUG 11095[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@59d95947, testMethod = [null], testException = [null]]].
[2017-10-14 22:36:59,836]DEBUG 11095[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 22:36:59,836]DEBUG 11095[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 22:36:59,837]DEBUG 11096[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 22:36:59,837]DEBUG 11096[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 22:36:59,837]DEBUG 11096[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 22:36:59,837]DEBUG 11096[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 22:36:59,837]DEBUG 11096[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 22:36:59,838]DEBUG 11097[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 22:36:59,838]DEBUG 11097[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 22:36:59,838]DEBUG 11097[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 22:36:59,838]DEBUG 11097[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 22:36:59,838]DEBUG 11097[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 22:36:59,838]DEBUG 11097[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 22:36:59,839]DEBUG 11098[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 22:36:59,839]DEBUG 11098[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 22:36:59,839]DEBUG 11098[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 22:36:59,839]DEBUG 11098[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 22:36:59,839]DEBUG 11098[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 22:36:59,840]DEBUG 11099[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 22:36:59,840]DEBUG 11099[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 22:36:59,840]DEBUG 11099[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 22:36:59,840]DEBUG 11099[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 22:36:59,841]DEBUG 11100[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@59d95947]
[2017-10-14 22:36:59,841]DEBUG 11100[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testfindByNameSorting' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:59,841]DEBUG 11100[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@59d95947, testMethod = testfindByNameSorting@ProductDaoTest, testException = [null]]]
[2017-10-14 22:36:59,842]DEBUG 11101[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 22:36:59,843]DEBUG 11102[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testfindByNameSorting]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:59,843]DEBUG 11102[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15080098198
[2017-10-14 22:36:59,843]DEBUG 11102[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@7973b2cb] for Hibernate transaction
[2017-10-14 22:36:59,844]DEBUG 11103[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7973b2cb]
[2017-10-14 22:36:59,844]DEBUG 11103[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 22:36:59,844]DEBUG 11103[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 22:36:59,844]DEBUG 11103[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 22:36:59,844]DEBUG 11103[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@59d95947, testMethod = testfindByNameSorting@ProductDaoTest, testException = [null]]]
[2017-10-14 22:36:59,845] INFO 11104[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (15): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@598b619b]; rollback [true]
[2017-10-14 22:36:59,845]DEBUG 11104[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:59,845]DEBUG 11104[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,845]DEBUG 11104[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 22:36:59,846]DEBUG 11105[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 52
[2017-10-14 22:36:59,847]DEBUG 11106[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,847]DEBUG 11106[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:59,848]DEBUG 11107[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,848]DEBUG 11107[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 22:36:59,849]DEBUG 11108[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 53
[2017-10-14 22:36:59,849]DEBUG 11108[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,849]DEBUG 11108[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:59,849]DEBUG 11108[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,849]DEBUG 11108[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 22:36:59,849]DEBUG 11108[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 54
[2017-10-14 22:36:59,850]DEBUG 11109[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,850]DEBUG 11109[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:59,850]DEBUG 11109[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:59,850]DEBUG 11109[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 3 updates, 0 deletions to 3 objects
[2017-10-14 22:36:59,850]DEBUG 11109[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:59,850]DEBUG 11109[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:59,851]DEBUG 11110[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=52, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 22:36:59,851]DEBUG 11110[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=53, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 22:36:59,851]DEBUG 11110[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=54, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 22:36:59,851]DEBUG 11110[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Products
[2017-10-14 22:36:59,851]DEBUG 11110[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,851]DEBUG 11110[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 22:36:59,851]DEBUG 11110[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2017-10-14 22:36:59,851]DEBUG 11110[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 22:36:59,852]DEBUG 11111[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2017-10-14 22:36:59,852]DEBUG 11111[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 22:36:59,852]DEBUG 11111[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2017-10-14 22:36:59,853]DEBUG 11112[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,853]DEBUG 11112[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,853]DEBUG 11112[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductName like ? and this_.IsProductActive=? order by this_.ProductName asc
[2017-10-14 22:36:59,853]DEBUG 11112[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:59,854]DEBUG 11113[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#52]
[2017-10-14 22:36:59,854]DEBUG 11113[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#53]
[2017-10-14 22:36:59,854]DEBUG 11113[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#54]
[2017-10-14 22:36:59,854]DEBUG 11113[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:59,854]DEBUG 11113[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,854]DEBUG 11113[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:59,854]DEBUG 11113[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:59,855]DEBUG 11114[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:59,855]DEBUG 11114[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-14 22:36:59,855]DEBUG 11114[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:59,855]DEBUG 11114[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:59,855]DEBUG 11114[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=52, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 22:36:59,855]DEBUG 11114[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=53, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 22:36:59,855]DEBUG 11114[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=54, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 22:36:59,855]DEBUG 11114[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,855]DEBUG 11114[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductName like ? and this_.IsProductActive=? order by this_.ProductName desc
[2017-10-14 22:36:59,856]DEBUG 11115[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:59,856]DEBUG 11115[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#54]
[2017-10-14 22:36:59,856]DEBUG 11115[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#53]
[2017-10-14 22:36:59,856]DEBUG 11115[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#52]
[2017-10-14 22:36:59,857]DEBUG 11116[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:59,857]DEBUG 11116[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,857]DEBUG 11116[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:59,857]DEBUG 11116[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:59,857]DEBUG 11116[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:59,857]DEBUG 11116[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-14 22:36:59,857]DEBUG 11116[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:59,857]DEBUG 11116[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:59,858]DEBUG 11117[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=52, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 22:36:59,858]DEBUG 11117[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=53, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 22:36:59,858]DEBUG 11117[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=54, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 22:36:59,858]DEBUG 11117[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,858]DEBUG 11117[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 22:36:59,858]DEBUG 11117[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,859]DEBUG 11118[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@59d95947, testMethod = testfindByNameSorting@ProductDaoTest, testException = [null]]]
[2017-10-14 22:36:59,859]DEBUG 11118[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 22:36:59,859]DEBUG 11118[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7973b2cb]
[2017-10-14 22:36:59,859]DEBUG 11118[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 22:36:59,892]DEBUG 11151[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 22:36:59,892]DEBUG 11151[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:59,892]DEBUG 11151[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@7973b2cb] after transaction
[2017-10-14 22:36:59,893]DEBUG 11152[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 22:36:59,893]DEBUG 11152[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 22:36:59,893]DEBUG 11152[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:59,893] INFO 11152[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@59d95947, testMethod = testfindByNameSorting@ProductDaoTest, testException = [null]]]
[2017-10-14 22:36:59,895]DEBUG 11154[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@59d95947, testMethod = testfindByNameSorting@ProductDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 22:36:59,895]DEBUG 11154[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2017-10-14 22:36:59,895]DEBUG 11154[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2017-10-14 22:36:59,896]DEBUG 11155[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@1df81d61, testMethod = [null], testException = [null]]].
[2017-10-14 22:36:59,896]DEBUG 11155[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 22:36:59,897]DEBUG 11156[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 22:36:59,897]DEBUG 11156[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 22:36:59,897]DEBUG 11156[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 22:36:59,897]DEBUG 11156[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 22:36:59,897]DEBUG 11156[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 22:36:59,898]DEBUG 11157[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 22:36:59,898]DEBUG 11157[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 22:36:59,898]DEBUG 11157[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 22:36:59,898]DEBUG 11157[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 22:36:59,898]DEBUG 11157[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 22:36:59,899]DEBUG 11158[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 22:36:59,899]DEBUG 11158[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 22:36:59,899]DEBUG 11158[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 22:36:59,899]DEBUG 11158[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 22:36:59,899]DEBUG 11158[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 22:36:59,900]DEBUG 11159[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 22:36:59,900]DEBUG 11159[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 22:36:59,900]DEBUG 11159[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 22:36:59,900]DEBUG 11159[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 22:36:59,900]DEBUG 11159[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 22:36:59,901]DEBUG 11160[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 22:36:59,901]DEBUG 11160[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@1df81d61]
[2017-10-14 22:36:59,902]DEBUG 11161[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testfindByDescriptionSorting' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:59,902]DEBUG 11161[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@1df81d61, testMethod = testfindByDescriptionSorting@ProductDaoTest, testException = [null]]]
[2017-10-14 22:36:59,902]DEBUG 11161[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 22:36:59,904]DEBUG 11163[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testfindByDescriptionSorting]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:59,904]DEBUG 11163[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15080098199
[2017-10-14 22:36:59,904]DEBUG 11163[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@71f68411] for Hibernate transaction
[2017-10-14 22:36:59,904]DEBUG 11163[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@71f68411]
[2017-10-14 22:36:59,905]DEBUG 11164[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 22:36:59,905]DEBUG 11164[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 22:36:59,905]DEBUG 11164[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 22:36:59,905]DEBUG 11164[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@1df81d61, testMethod = testfindByDescriptionSorting@ProductDaoTest, testException = [null]]]
[2017-10-14 22:36:59,905] INFO 11164[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (16): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@598b619b]; rollback [true]
[2017-10-14 22:36:59,906]DEBUG 11165[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:59,906]DEBUG 11165[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,907]DEBUG 11166[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 22:36:59,908]DEBUG 11167[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 55
[2017-10-14 22:36:59,908]DEBUG 11167[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,908]DEBUG 11167[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:59,909]DEBUG 11168[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,909]DEBUG 11168[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 22:36:59,909]DEBUG 11168[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 56
[2017-10-14 22:36:59,909]DEBUG 11168[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,909]DEBUG 11168[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:59,910]DEBUG 11169[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,910]DEBUG 11169[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 22:36:59,910]DEBUG 11169[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 57
[2017-10-14 22:36:59,910]DEBUG 11169[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,911]DEBUG 11170[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:59,911]DEBUG 11170[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:59,911]DEBUG 11170[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 3 updates, 0 deletions to 3 objects
[2017-10-14 22:36:59,911]DEBUG 11170[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:59,911]DEBUG 11170[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:59,911]DEBUG 11170[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=56, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 22:36:59,911]DEBUG 11170[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=57, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 22:36:59,911]DEBUG 11170[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=55, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 22:36:59,912]DEBUG 11171[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Products
[2017-10-14 22:36:59,912]DEBUG 11171[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,912]DEBUG 11171[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 22:36:59,912]DEBUG 11171[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2017-10-14 22:36:59,912]DEBUG 11171[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 22:36:59,912]DEBUG 11171[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2017-10-14 22:36:59,912]DEBUG 11171[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 22:36:59,913]DEBUG 11172[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2017-10-14 22:36:59,913]DEBUG 11172[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,913]DEBUG 11172[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,914]DEBUG 11173[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductDescription like ? and this_.IsProductActive=? order by this_.ProductDescription asc
[2017-10-14 22:36:59,914]DEBUG 11173[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:59,914]DEBUG 11173[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#55]
[2017-10-14 22:36:59,914]DEBUG 11173[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#56]
[2017-10-14 22:36:59,914]DEBUG 11173[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#57]
[2017-10-14 22:36:59,915]DEBUG 11174[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:59,915]DEBUG 11174[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,915]DEBUG 11174[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:59,915]DEBUG 11174[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:59,915]DEBUG 11174[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:59,915]DEBUG 11174[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-14 22:36:59,915]DEBUG 11174[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:59,916]DEBUG 11175[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:59,916]DEBUG 11175[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=56, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 22:36:59,916]DEBUG 11175[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=57, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 22:36:59,916]DEBUG 11175[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=55, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 22:36:59,916]DEBUG 11175[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,916]DEBUG 11175[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductDescription like ? and this_.IsProductActive=? order by this_.ProductDescription desc
[2017-10-14 22:36:59,916]DEBUG 11175[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:59,917]DEBUG 11176[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#57]
[2017-10-14 22:36:59,917]DEBUG 11176[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#56]
[2017-10-14 22:36:59,917]DEBUG 11176[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#55]
[2017-10-14 22:36:59,917]DEBUG 11176[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:59,917]DEBUG 11176[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,917]DEBUG 11176[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:59,918]DEBUG 11177[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:59,918]DEBUG 11177[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:59,918]DEBUG 11177[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-14 22:36:59,918]DEBUG 11177[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:59,918]DEBUG 11177[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:59,918]DEBUG 11177[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=56, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 22:36:59,918]DEBUG 11177[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=57, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 22:36:59,918]DEBUG 11177[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=55, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 22:36:59,918]DEBUG 11177[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,919]DEBUG 11178[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 22:36:59,919]DEBUG 11178[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,919]DEBUG 11178[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@1df81d61, testMethod = testfindByDescriptionSorting@ProductDaoTest, testException = [null]]]
[2017-10-14 22:36:59,919]DEBUG 11178[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 22:36:59,919]DEBUG 11178[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@71f68411]
[2017-10-14 22:36:59,919]DEBUG 11178[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2017-10-14 22:36:59,950]DEBUG 11209[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2017-10-14 22:36:59,950]DEBUG 11209[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:59,951]DEBUG 11210[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@71f68411] after transaction
[2017-10-14 22:36:59,951]DEBUG 11210[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2017-10-14 22:36:59,951]DEBUG 11210[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2017-10-14 22:36:59,951]DEBUG 11210[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2017-10-14 22:36:59,952] INFO 11211[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@1df81d61, testMethod = testfindByDescriptionSorting@ProductDaoTest, testException = [null]]]
[2017-10-14 22:36:59,953]DEBUG 11212[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@1df81d61, testMethod = testfindByDescriptionSorting@ProductDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2017-10-14 22:36:59,954]DEBUG 11213[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2017-10-14 22:36:59,954]DEBUG 11213[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest]
[2017-10-14 22:36:59,954]DEBUG 11213[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@4d7c5890, testMethod = [null], testException = [null]]].
[2017-10-14 22:36:59,955]DEBUG 11214[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2017-10-14 22:36:59,955]DEBUG 11214[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2017-10-14 22:36:59,955]DEBUG 11214[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2017-10-14 22:36:59,955]DEBUG 11214[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2017-10-14 22:36:59,955]DEBUG 11214[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2017-10-14 22:36:59,956]DEBUG 11215[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2017-10-14 22:36:59,956]DEBUG 11215[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2017-10-14 22:36:59,956]DEBUG 11215[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2017-10-14 22:36:59,956]DEBUG 11215[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2017-10-14 22:36:59,956]DEBUG 11215[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2017-10-14 22:36:59,957]DEBUG 11216[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2017-10-14 22:36:59,957]DEBUG 11216[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2017-10-14 22:36:59,957]DEBUG 11216[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2017-10-14 22:36:59,957]DEBUG 11216[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2017-10-14 22:36:59,957]DEBUG 11216[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2017-10-14 22:36:59,958]DEBUG 11217[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2017-10-14 22:36:59,958]DEBUG 11217[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2017-10-14 22:36:59,958]DEBUG 11217[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2017-10-14 22:36:59,958]DEBUG 11217[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2017-10-14 22:36:59,958]DEBUG 11217[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2017-10-14 22:36:59,958]DEBUG 11217[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2017-10-14 22:36:59,959]DEBUG 11218[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.ProductDaoTest' with 0 common interceptors and 1 specific interceptors
[2017-10-14 22:36:59,959]DEBUG 11218[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@4d7c5890]
[2017-10-14 22:36:59,960]DEBUG 11219[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testfindByPriceFromToSorting' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:59,960]DEBUG 11219[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@4d7c5890, testMethod = testfindByPriceFromToSorting@ProductDaoTest, testException = [null]]]
[2017-10-14 22:36:59,960]DEBUG 11219[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2017-10-14 22:36:59,961]DEBUG 11220[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testfindByPriceFromToSorting]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2017-10-14 22:36:59,962]DEBUG 11221[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15080098199
[2017-10-14 22:36:59,962]DEBUG 11221[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@6b429e6c] for Hibernate transaction
[2017-10-14 22:36:59,962]DEBUG 11221[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@6b429e6c]
[2017-10-14 22:36:59,962]DEBUG 11221[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2017-10-14 22:36:59,962]DEBUG 11221[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2017-10-14 22:36:59,963]DEBUG 11222[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2017-10-14 22:36:59,963]DEBUG 11222[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@4d7c5890, testMethod = testfindByPriceFromToSorting@ProductDaoTest, testException = [null]]]
[2017-10-14 22:36:59,963] INFO 11222[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (17): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@598b619b]; rollback [true]
[2017-10-14 22:36:59,963]DEBUG 11222[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:59,964]DEBUG 11223[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,964]DEBUG 11223[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 22:36:59,965]DEBUG 11224[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 58
[2017-10-14 22:36:59,966]DEBUG 11225[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,966]DEBUG 11225[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:59,966]DEBUG 11225[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,967]DEBUG 11226[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 22:36:59,968]DEBUG 11227[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 59
[2017-10-14 22:36:59,968]DEBUG 11227[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,968]DEBUG 11227[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2017-10-14 22:36:59,969]DEBUG 11228[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,969]DEBUG 11228[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2017-10-14 22:36:59,969]DEBUG 11228[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 60
[2017-10-14 22:36:59,969]DEBUG 11228[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,970]DEBUG 11229[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:59,970]DEBUG 11229[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:59,970]DEBUG 11229[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 3 updates, 0 deletions to 3 objects
[2017-10-14 22:36:59,970]DEBUG 11229[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:59,970]DEBUG 11229[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:59,970]DEBUG 11229[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=58, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 22:36:59,971]DEBUG 11230[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=59, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 22:36:59,971]DEBUG 11230[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=60, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 22:36:59,971]DEBUG 11230[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Products
[2017-10-14 22:36:59,971]DEBUG 11230[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,971]DEBUG 11230[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 22:36:59,971]DEBUG 11230[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2017-10-14 22:36:59,972]DEBUG 11231[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 22:36:59,972]DEBUG 11231[main] - org.hibernate.jdbc.AbstractBatcher.prepareBatchStatement(AbstractBatcher.java:248) - reusing prepared statement
[2017-10-14 22:36:59,972]DEBUG 11231[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2017-10-14 22:36:59,972]DEBUG 11231[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 3
[2017-10-14 22:36:59,973]DEBUG 11232[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,973]DEBUG 11232[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,973]DEBUG 11232[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductPrice between ? and ? and this_.IsProductActive=? order by this_.ProductPrice asc
[2017-10-14 22:36:59,974]DEBUG 11233[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:59,974]DEBUG 11233[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#58]
[2017-10-14 22:36:59,974]DEBUG 11233[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#59]
[2017-10-14 22:36:59,974]DEBUG 11233[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#60]
[2017-10-14 22:36:59,974]DEBUG 11233[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:59,974]DEBUG 11233[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,974]DEBUG 11233[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:59,975]DEBUG 11234[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:59,975]DEBUG 11234[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:59,975]DEBUG 11234[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-14 22:36:59,975]DEBUG 11234[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:59,975]DEBUG 11234[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:59,975]DEBUG 11234[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=58, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 22:36:59,976]DEBUG 11235[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=59, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 22:36:59,976]DEBUG 11235[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=60, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 22:36:59,976]DEBUG 11235[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,976]DEBUG 11235[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID6_0_, this_.IsProductActive as IsProduc2_6_0_, this_.ProductDescription as ProductD3_6_0_, this_.ProductName as ProductN4_6_0_, this_.ProductPrice as ProductP5_6_0_ from Products this_ where this_.ProductPrice between ? and ? and this_.IsProductActive=? order by this_.ProductPrice desc
[2017-10-14 22:36:59,976]DEBUG 11235[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2017-10-14 22:36:59,977]DEBUG 11236[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#60]
[2017-10-14 22:36:59,977]DEBUG 11236[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#59]
[2017-10-14 22:36:59,977]DEBUG 11236[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Product#58]
[2017-10-14 22:36:59,977]DEBUG 11236[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2017-10-14 22:36:59,977]DEBUG 11236[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,977]DEBUG 11236[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2017-10-14 22:36:59,978]DEBUG 11237[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2017-10-14 22:36:59,978]DEBUG 11237[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2017-10-14 22:36:59,978]DEBUG 11237[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2017-10-14 22:36:59,978]DEBUG 11237[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2017-10-14 22:36:59,978]DEBUG 11237[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2017-10-14 22:36:59,978]DEBUG 11237[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=58, productDescription=description1, active=true, productPrice=100.0, productName=name1}
[2017-10-14 22:36:59,978]DEBUG 11237[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=59, productDescription=description2, active=true, productPrice=200.0, productName=name2}
[2017-10-14 22:36:59,978]DEBUG 11237[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=60, productDescription=description3, active=true, productPrice=300.0, productName=name3}
[2017-10-14 22:36:59,979]DEBUG 11238[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2017-10-14 22:36:59,979]DEBUG 11238[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2017-10-14 22:36:59,979]DEBUG 11238[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2017-10-14 22:36:59,979]DEBUG 11238[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@73e84841 testClass = ProductDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.ProductDaoTest@4d7c5890, testMethod = testfindByPriceFromToSorting@ProductDaoTest, testException = [null]]]
[2017-10-14 22:36:59,979]DEBUG 11238[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2017-10-14 22:36:59,979]DEBUG 11238[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@6b429e6c]
[2017-10-14 22:36:59,979]DEBUG 11238[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
